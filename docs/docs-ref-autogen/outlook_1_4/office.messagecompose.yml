### YamlMime:UniversalReference
items:
  - uid: Outlook_1_4.Office.MessageCompose
    summary: |-
      O modo de redação de mensagem de [Office. Context. Mailbox. Item](xref:Outlook_1_4.Office.Item)<!-- -->.

      **Importante**: Este é um objeto interno do Outlook, não diretamente exposto por meio de interfaces existentes. Você deve tratá-lo como um modo de Office. Context. Mailbox. Item. Consulte a página [modelo de objeto](https://docs.microsoft.com/office/dev/add-ins/reference/objectmodel/requirement-set-1.4/office.context.mailbox.item) para obter mais informações.
    name: Office.MessageCompose
    fullName: Office.MessageCompose
    langs:
      - typeScript
    type: interface
    extends:
      - Message
      - 'ItemCompose '
    package: Outlook_1_4
    children:
      - Outlook_1_4.Office.MessageCompose.addFileAttachmentAsync
      - Outlook_1_4.Office.MessageCompose.addFileAttachmentAsync_1
      - Outlook_1_4.Office.MessageCompose.addItemAttachmentAsync
      - Outlook_1_4.Office.MessageCompose.addItemAttachmentAsync_1
      - Outlook_1_4.Office.MessageCompose.close
      - Outlook_1_4.Office.MessageCompose.getSelectedDataAsync
      - Outlook_1_4.Office.MessageCompose.getSelectedDataAsync_1
      - Outlook_1_4.Office.MessageCompose.loadCustomPropertiesAsync
      - Outlook_1_4.Office.MessageCompose.removeAttachmentAsync
      - Outlook_1_4.Office.MessageCompose.removeAttachmentAsync_1
      - Outlook_1_4.Office.MessageCompose.saveAsync
      - Outlook_1_4.Office.MessageCompose.saveAsync_1
      - Outlook_1_4.Office.MessageCompose.setSelectedDataAsync
      - Outlook_1_4.Office.MessageCompose.setSelectedDataAsync_1
      - Outlook_1_4.Office.MessageCompose.bcc
      - Outlook_1_4.Office.MessageCompose.body
      - Outlook_1_4.Office.MessageCompose.cc
      - Outlook_1_4.Office.MessageCompose.conversationId
      - Outlook_1_4.Office.MessageCompose.itemType
      - Outlook_1_4.Office.MessageCompose.notificationMessages
      - Outlook_1_4.Office.MessageCompose.subject
      - Outlook_1_4.Office.MessageCompose.to
  - uid: Outlook_1_4.Office.MessageCompose.addFileAttachmentAsync
    summary: |-
      Adiciona um arquivo a uma mensagem ou um compromisso como um anexo.

      O método addFileAttachmentAsync carrega o arquivo no URI especificado e anexa-o ao item no formulário de composição.

      Em seguida, você pode usar o identificador com o método removeAttachmentAsync para remover o anexo na mesma sessão.

      \[[Conjunto de APIs: caixa de correio 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **<!-- --> [Nível de permissão mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)**: ReadWriteItem

      **<!-- --> [Modo do Outlook aplicável](https://docs.microsoft.com/outlook/add-ins/#extension-points)**: composição de mensagem

      **Erros**:

      - AttachmentSizeExceeded: o anexo é maior do que o permitido.

      - FileTypeNotSupported: o anexo tem uma extensão que não é permitida.

      - NumberOfAttachmentsExceeded: a mensagem ou o compromisso possui muitos anexos.

      #### <a name="examples"></a>Exemplos

      ```javascript
      function callback(result) {
          if (result.error) {
              console.log(result.error);
          } else {
              console.log("Attachment added");
          }
      }

      function addAttachment() {
          // The values in asyncContext can be accessed in the callback.
          var options = { 'asyncContext': { var1: 1, var2: 2 } };

          var attachmentURL = "https://contoso.com/rtm/icon.png";
          Office.context.mailbox.item.addFileAttachmentAsync(attachmentURL, attachmentURL, options, callback);
      }
      ```
      ```javascript
      // The following example adds an image file as an inline attachment and
      // references the attachment in the message body.
      Office.context.mailbox.item.addFileAttachmentAsync(
          "http://i.imgur.com/WJXklif.png",
          "cute_bird.png",
          {
              isInline: true
          },
          function (asyncResult) {
              Office.context.mailbox.item.body.setAsync(
                  "<p>Here's a cute bird!</p><img src='cid:cute_bird.png'>",
                  {
                      "coercionType": "html"
                  },
                  function (asyncResult) {
                      // Do something here.
                  });
          });
      ```
    name: 'addFileAttachmentAsync(uri, attachmentName, options, callback)'
    fullName: 'addFileAttachmentAsync(uri, attachmentName, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addFileAttachmentAsync(uri: string, attachmentName: string, options?: Office.AsyncContextOptions & { isInline: boolean }, callback?: (asyncResult: Office.AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: uri
          description: O URI que fornece o local do arquivo anexado à mensagem ou compromisso. O comprimento máximo é de 2048 caracteres.
          type:
            - string
        - id: attachmentName
          description: O nome do anexo que é mostrado enquanto o anexo está sendo carregado. O tamanho máximo é de 255 caracteres.
          type:
            - string
        - id: options
          description: 'Opcional. Um objeto literal que contém uma ou mais das propriedades a seguir. asyncContext: os desenvolvedores podem fornecer qualquer objeto que desejarem acessar no método de retorno de chamada. IsInline: se true, indica que o anexo será mostrado embutido no corpo da mensagem e não deverá ser exibido na lista de anexos.'
          type:
            - 'Office.AsyncContextOptions & { isInline: boolean }'
        - id: callback
          description: 'Opcional. Quando o método for concluído, a função passada ao parâmetro callback será chamada com um único parâmetro do tipo Office. AsyncResult. Em caso de sucesso, o identificador do anexo será fornecido na propriedade asyncResult. Value. Se o carregamento do anexo falhar, o objeto asyncResult conterá um objeto Error que fornece uma descrição do erro.'
          type:
            - '(asyncResult: Office.AsyncResult<string>) => void'
  - uid: Outlook_1_4.Office.MessageCompose.addFileAttachmentAsync_1
    summary: |-
      Adiciona um arquivo a uma mensagem ou um compromisso como um anexo.

      O método addFileAttachmentAsync carrega o arquivo no URI especificado e anexa-o ao item no formulário de composição.

      Em seguida, você pode usar o identificador com o método removeAttachmentAsync para remover o anexo na mesma sessão.

      \[[Conjunto de APIs: caixa de correio 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **<!-- --> [Nível de permissão mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)**: ReadWriteItem

      **<!-- --> [Modo do Outlook aplicável](https://docs.microsoft.com/outlook/add-ins/#extension-points)**: composição de mensagem

      **Erros**:

      - AttachmentSizeExceeded: o anexo é maior do que o permitido.

      - FileTypeNotSupported: o anexo tem uma extensão que não é permitida.

      - NumberOfAttachmentsExceeded: a mensagem ou o compromisso possui muitos anexos.
    name: 'addFileAttachmentAsync(uri, attachmentName, callback)'
    fullName: 'addFileAttachmentAsync(uri, attachmentName, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addFileAttachmentAsync(uri: string, attachmentName: string, callback?: (asyncResult: Office.AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: uri
          description: O URI que fornece o local do arquivo anexado à mensagem ou compromisso. O comprimento máximo é de 2048 caracteres.
          type:
            - string
        - id: attachmentName
          description: O nome do anexo que é mostrado enquanto o anexo está sendo carregado. O tamanho máximo é de 255 caracteres.
          type:
            - string
        - id: callback
          description: 'Opcional. Quando o método for concluído, a função passada ao parâmetro callback será chamada com um único parâmetro do tipo Office. AsyncResult. Em caso de sucesso, o identificador do anexo será fornecido na propriedade asyncResult. Value. Se o carregamento do anexo falhar, o objeto asyncResult conterá um objeto Error que fornece uma descrição do erro.'
          type:
            - '(asyncResult: Office.AsyncResult<string>) => void'
  - uid: Outlook_1_4.Office.MessageCompose.addItemAttachmentAsync
    summary: |-
      Adiciona um item do Exchange, como uma mensagem, como anexo na mensagem ou no compromisso.

      O método addItemAttachmentAsync anexa o item com o identificador do Exchange especificado ao item no formulário de composição. Se você especificar um método de retorno de chamada, o método será chamado com um parâmetro, asyncResult, que contém o identificador de anexo ou um código que indica qualquer erro que ocorreu ao anexar o item. Você pode usar o parâmetro options para passar informações de estado para o método de retorno de chamada, se necessário.

      Em seguida, você pode usar o identificador com o método removeAttachmentAsync para remover o anexo na mesma sessão.

      Se o suplemento do Office estiver em execução no Outlook Web App, o método addItemAttachmentAsync poderá anexar itens a itens que não sejam do item que você está editando; no entanto, isso não é suportado e não é recomendado.

      \[[Conjunto de APIs: caixa de correio 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **<!-- --> [Nível de permissão mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)**: ReadWriteItem

      **<!-- --> [Modo do Outlook aplicável](https://docs.microsoft.com/outlook/add-ins/#extension-points)**: composição de mensagem

      **Erros**:

      - NumberOfAttachmentsExceeded: a mensagem ou o compromisso possui muitos anexos.

      #### <a name="examples"></a>Exemplos

      ```javascript
      // The following example adds an existing Outlook item as an attachment
      // with the name `My Attachment`.
      function callback(result) {
          if (result.error) {
              console.log(result.error);
          } else {
              console.log("Attachment added");
          }
      }

      function addAttachment() {
          // EWS ID of item to attach (shortened for readability).
          var itemId = "AAMkADI1...AAA=";

          // The values in asyncContext can be accessed in the callback.
          var options = { 'asyncContext': { var1: 1, var2: 2 } };

          Office.context.mailbox.item.addItemAttachmentAsync(itemId, "My Attachment", options, callback);
      }
      ```
    name: 'addItemAttachmentAsync(itemId, attachmentName, options, callback)'
    fullName: 'addItemAttachmentAsync(itemId, attachmentName, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addItemAttachmentAsync(itemId: any, attachmentName: string, options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: itemId
          description: O identificador do Exchange do item a anexar. O comprimento máximo é de 100 caracteres.
          type:
            - any
        - id: attachmentName
          description: O nome do anexo que é mostrado enquanto o anexo está sendo carregado. O tamanho máximo é de 255 caracteres.
          type:
            - string
        - id: options
          description: 'Opcional. Um objeto literal que contém uma ou mais das propriedades a seguir. asyncContext: os desenvolvedores podem fornecer qualquer objeto que desejarem acessar no método de retorno de chamada.'
          type:
            - Office.AsyncContextOptions
        - id: callback
          description: 'Opcional. Quando o método for concluído, a função passada ao parâmetro callback será chamada com um único parâmetro do tipo Office. AsyncResult. Em caso de sucesso, o identificador do anexo será fornecido na propriedade asyncResult. Value. Se a adição do anexo falhar, o objeto asyncResult conterá um objeto Error que fornece uma descrição do erro.'
          type:
            - '(asyncResult: Office.AsyncResult<string>) => void'
  - uid: Outlook_1_4.Office.MessageCompose.addItemAttachmentAsync_1
    summary: |-
      Adiciona um item do Exchange, como uma mensagem, como anexo na mensagem ou no compromisso.

      O método addItemAttachmentAsync anexa o item com o identificador do Exchange especificado ao item no formulário de composição. Se você especificar um método de retorno de chamada, o método será chamado com um parâmetro, asyncResult, que contém o identificador de anexo ou um código que indica qualquer erro que ocorreu ao anexar o item. Você pode usar o parâmetro options para passar informações de estado para o método de retorno de chamada, se necessário.

      Em seguida, você pode usar o identificador com o método removeAttachmentAsync para remover o anexo na mesma sessão.

      Se o suplemento do Office estiver em execução no Outlook Web App, o método addItemAttachmentAsync poderá anexar itens a itens que não sejam do item que você está editando; no entanto, isso não é suportado e não é recomendado.

      \[[Conjunto de APIs: caixa de correio 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **<!-- --> [Nível de permissão mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)**: ReadWriteItem

      **<!-- --> [Modo do Outlook aplicável](https://docs.microsoft.com/outlook/add-ins/#extension-points)**: composição de mensagem

      **Erros**:

      - NumberOfAttachmentsExceeded: a mensagem ou o compromisso possui muitos anexos.
    name: 'addItemAttachmentAsync(itemId, attachmentName, callback)'
    fullName: 'addItemAttachmentAsync(itemId, attachmentName, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addItemAttachmentAsync(itemId: any, attachmentName: string, callback?: (asyncResult: Office.AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: itemId
          description: O identificador do Exchange do item a anexar. O comprimento máximo é de 100 caracteres.
          type:
            - any
        - id: attachmentName
          description: O nome do anexo que é mostrado enquanto o anexo está sendo carregado. O tamanho máximo é de 255 caracteres.
          type:
            - string
        - id: callback
          description: 'Opcional. Quando o método for concluído, a função passada ao parâmetro callback será chamada com um único parâmetro do tipo Office. AsyncResult. Em caso de sucesso, o identificador do anexo será fornecido na propriedade asyncResult. Value. Se a adição do anexo falhar, o objeto asyncResult conterá um objeto Error que fornece uma descrição do erro.'
          type:
            - '(asyncResult: Office.AsyncResult<string>) => void'
  - uid: Outlook_1_4.Office.MessageCompose.close
    summary: |-
      Fecha o item atual que está sendo composto

      Os comportamentos do método Close dependem do estado atual do item que está sendo composto. Se o item tiver alterações não salvas, o cliente solicitará que o usuário salve, descarte ou feche a ação.

      No cliente da área de trabalho do Outlook, se a mensagem for uma resposta embutida, o método Close não terá efeito.

      **Observação**: no Outlook na Web, se o item for um compromisso e tiver sido salvo anteriormente usando o saveAsync, o usuário será solicitado a salvar, descartar ou cancelar, mesmo que nenhuma alteração tenha ocorrido desde que o item foi salvo pela última vez.

      \[[Conjunto de APIs: caixa de correio 1,3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **<!-- --> [Nível de permissão mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)**: restrito

      **<!-- --> [Modo do Outlook aplicável](https://docs.microsoft.com/outlook/add-ins/#extension-points)**: composição de mensagem
    name: close()
    fullName: close()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'close(): void;'
      return:
        type:
          - void
        description: ''
  - uid: Outlook_1_4.Office.MessageCompose.getSelectedDataAsync
    summary: |-
      Retorna de forma assíncrona os dados selecionados do assunto ou do corpo de uma mensagem.

      Se não houver seleção, mas o cursor estiver no corpo ou no assunto, o método retorna nulo para os dados selecionados. Se um campo que não seja o corpo ou o assunto for selecionado, o método retornará o erro InvalidSelection.

      Para acessar os dados selecionados do método de retorno de chamada, chame asyncResult. Value. Data. Para acessar a propriedade de origem proveniente da seleção, chame asyncResult. Value. SourceProperty, que será o corpo ou o assunto.

      \[[Conjunto de APIs: caixa de correio 1,2](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **<!-- --> [Nível de permissão mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)**: ReadWriteItem

      **<!-- --> [Modo do Outlook aplicável](https://docs.microsoft.com/outlook/add-ins/#extension-points)**: composição de mensagem

      #### <a name="examples"></a>Exemplos

      ```javascript
      // Get selected data.
      Office.initialize = function () {
          Office.context.mailbox.item.getSelectedDataAsync(Office.CoercionType.Text, {}, getCallback);
      };

      function getCallback(asyncResult) {
          var text = asyncResult.value.data;
          var prop = asyncResult.value.sourceProperty;

          Office.context.mailbox.item.setSelectedDataAsync('Setting ' + prop + ': ' + text, {}, setCallback);
      }

      function setCallback(asyncResult) {
          // Check for errors.
      }
      ```
    name: 'getSelectedDataAsync(coercionType, options, callback)'
    fullName: 'getSelectedDataAsync(coercionType, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getSelectedDataAsync(coercionType: Office.CoercionType | string, options: Office.AsyncContextOptions, callback: (asyncResult: Office.AsyncResult<any>) => void): void;'
      return:
        type:
          - void
        description: Os dados selecionados como uma cadeia de caracteres com formato determinado por coercionType.
      parameters:
        - id: coercionType
          description: 'Solicita um formato para os dados. Se Text, o método retornará o texto sem formatação como uma cadeia de caracteres, removendo todas as marcas HTML presentes. Se HTML, o método retorna o texto selecionado, seja ele texto sem formatação ou HTML.'
          type:
            - Office.CoercionType | string
        - id: options
          description: 'Um objeto literal que contém uma ou mais das propriedades a seguir. asyncContext: os desenvolvedores podem fornecer qualquer objeto que desejarem acessar no método de retorno de chamada.'
          type:
            - Office.AsyncContextOptions
        - id: callback
          description: 'Quando o método for concluído, a função passada ao parâmetro callback será chamada com um único parâmetro do tipo Office. AsyncResult.'
          type:
            - '(asyncResult: Office.AsyncResult<any>) => void'
  - uid: Outlook_1_4.Office.MessageCompose.getSelectedDataAsync_1
    summary: |-
      Retorna de forma assíncrona os dados selecionados do assunto ou do corpo de uma mensagem.

      Se não houver seleção, mas o cursor estiver no corpo ou no assunto, o método retorna nulo para os dados selecionados. Se um campo que não seja o corpo ou o assunto for selecionado, o método retornará o erro InvalidSelection.

      Para acessar os dados selecionados do método de retorno de chamada, chame asyncResult. Value. Data. Para acessar a propriedade de origem proveniente da seleção, chame asyncResult. Value. SourceProperty, que será o corpo ou o assunto.

      \[[Conjunto de APIs: caixa de correio 1,2](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **<!-- --> [Nível de permissão mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)**: ReadWriteItem

      **<!-- --> [Modo do Outlook aplicável](https://docs.microsoft.com/outlook/add-ins/#extension-points)**: composição de mensagem
    name: 'getSelectedDataAsync(coercionType, callback)'
    fullName: 'getSelectedDataAsync(coercionType, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getSelectedDataAsync(coercionType: Office.CoercionType | string, callback: (asyncResult: Office.AsyncResult<any>) => void): void;'
      return:
        type:
          - void
        description: Os dados selecionados como uma cadeia de caracteres com formato determinado por coercionType.
      parameters:
        - id: coercionType
          description: 'Solicita um formato para os dados. Se Text, o método retornará o texto sem formatação como uma cadeia de caracteres, removendo todas as marcas HTML presentes. Se HTML, o método retorna o texto selecionado, seja ele texto sem formatação ou HTML.'
          type:
            - Office.CoercionType | string
        - id: callback
          description: 'Quando o método for concluído, a função passada ao parâmetro callback será chamada com um único parâmetro do tipo Office. AsyncResult.'
          type:
            - '(asyncResult: Office.AsyncResult<any>) => void'
  - uid: Outlook_1_4.Office.MessageCompose.loadCustomPropertiesAsync
    summary: |-
      Carrega de forma assíncrona as propriedades personalizadas para esse suplemento no item selecionado.

      Propriedades personalizadas são armazenadas como pares chave/valor de acordo com o aplicativo e o item. Esse método retorna um objeto CustomProperties no retorno de chamada, que fornece métodos para acessar as propriedades personalizadas específicas para o item atual e o suplemento atual. Propriedades personalizadas não são criptografadas no item, portanto não devem ser usadas como armazenamento seguro.

      As propriedades personalizadas são fornecidas como um objeto CustomProperties na propriedade asyncResult. Value. Esse objeto pode ser usado para obter, definir e remover as propriedades personalizadas do item e salvar as alterações na propriedade personalizada definida de volta no servidor.

      \[[Conjunto de APIs: caixa de correio 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **<!-- --> [Nível de permissão mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)**: ReadItem

      **<!-- --> [Modo do Outlook aplicável](https://docs.microsoft.com/outlook/add-ins/#extension-points)**: composição de mensagem
    name: 'loadCustomPropertiesAsync(callback, userContext)'
    fullName: 'loadCustomPropertiesAsync(callback, userContext)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'loadCustomPropertiesAsync(callback: (asyncResult: Office.AsyncResult<CustomProperties>) => void, userContext?: any): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: 'Quando o método for concluído, a função passada ao parâmetro callback será chamada com um único parâmetro do tipo Office. AsyncResult.'
          type:
            - '(asyncResult: Office.AsyncResult<CustomProperties>) => void'
        - id: userContext
          description: Opcional. Os desenvolvedores podem fornecer qualquer objeto que desejarem acessar na função de retorno de chamada. Esse objeto pode ser acessado pela propriedade asyncResult. asyncContext na função de retorno de chamada.
          type:
            - any
  - uid: Outlook_1_4.Office.MessageCompose.removeAttachmentAsync
    summary: |-
      Remove um anexo de uma mensagem ou de um compromisso.

      O método removeAttachmentAsync remove o anexo com o identificador especificado do item. Como prática recomendada, deve-se usar o identificador do anexo para remover um anexo somente se o mesmo aplicativo de email tiver adicionado esse anexo na mesma sessão. No Outlook Web App e no OWA para Dispositivos, o identificador do anexo é válido apenas dentro da mesma sessão. Uma sessão termina quando o usuário fecha o aplicativo, ou se o usuário começa a redigir um formulário embutido e, em seguida, abre o formulário para continuar em uma janela separada.

      \[[Conjunto de APIs: caixa de correio 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **<!-- --> [Nível de permissão mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)**: ReadWriteItem

      **<!-- --> [Modo do Outlook aplicável](https://docs.microsoft.com/outlook/add-ins/#extension-points)**: composição de mensagem

      **Erros**:

      - InvalidAttachmentId: o identificador de anexo não existe.

      #### <a name="examples"></a>Exemplos

      ```javascript
      // The following code removes an attachment with an identifier of '0'.
      Office.context.mailbox.item.removeAttachmentAsync(
          '0',
          { asyncContext : null },
          function (asyncResult)
          {
              console.log(asyncResult.status);
          }
      );
      ```
    name: 'removeAttachmentAsync(attachmentId, options, callback)'
    fullName: 'removeAttachmentAsync(attachmentId, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removeAttachmentAsync(attachmentId: string, options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: attachmentId
          description: O identificador do anexo a remover.
          type:
            - string
        - id: options
          description: 'Opcional. Um objeto literal que contém uma ou mais das propriedades a seguir. asyncContext: os desenvolvedores podem fornecer qualquer objeto que desejarem acessar no método de retorno de chamada.'
          type:
            - Office.AsyncContextOptions
        - id: callback
          description: 'Opcional. Quando o método for concluído, a função passada ao parâmetro callback será chamada com um único parâmetro do tipo Office. AsyncResult. Se a remoção do anexo falhar, a propriedade asyncResult. Error conterá um código de erro com o motivo da falha.'
          type:
            - '(asyncResult: Office.AsyncResult<void>) => void'
  - uid: Outlook_1_4.Office.MessageCompose.removeAttachmentAsync_1
    summary: |-
      Remove um anexo de uma mensagem ou de um compromisso.

      O método removeAttachmentAsync remove o anexo com o identificador especificado do item. Como prática recomendada, deve-se usar o identificador do anexo para remover um anexo somente se o mesmo aplicativo de email tiver adicionado esse anexo na mesma sessão. No Outlook Web App e no OWA para Dispositivos, o identificador do anexo é válido apenas dentro da mesma sessão. Uma sessão termina quando o usuário fecha o aplicativo, ou se o usuário começa a redigir um formulário embutido e, em seguida, abre o formulário para continuar em uma janela separada.

      \[[Conjunto de APIs: caixa de correio 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **<!-- --> [Nível de permissão mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)**: ReadWriteItem

      **<!-- --> [Modo do Outlook aplicável](https://docs.microsoft.com/outlook/add-ins/#extension-points)**: composição de mensagem

      **Erros**:

      - InvalidAttachmentId: o identificador de anexo não existe.
    name: 'removeAttachmentAsync(attachmentId, callback)'
    fullName: 'removeAttachmentAsync(attachmentId, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removeAttachmentAsync(attachmentId: string, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: attachmentId
          description: O identificador do anexo a remover.
          type:
            - string
        - id: callback
          description: 'Opcional. Quando o método for concluído, a função passada ao parâmetro callback será chamada com um único parâmetro do tipo Office. AsyncResult. Se a remoção do anexo falhar, a propriedade asyncResult. Error conterá um código de erro com o motivo da falha.'
          type:
            - '(asyncResult: Office.AsyncResult<void>) => void'
  - uid: Outlook_1_4.Office.MessageCompose.saveAsync
    summary: |-
      Salva um item de forma assíncrona.

      Quando chamado, este método salva a mensagem atual como um rascunho e retorna a identificação do item por meio do método de retorno de chamada. No Outlook Web App ou no Outlook no modo online, o item é salvo no servidor. No Outlook no modo cache, o item é salvo no cache local.

      Como os compromissos não têm estado de rascunho, se saveAsync for chamado em um compromisso no modo de redação, o item será salvo como um compromisso normal no calendário do usuário. Para novos compromissos que não foram salvos antes, nenhum convite será enviado. Salvar um compromisso existente enviará uma atualização para os participantes adicionados ou removidos.

      **Observação**: se seu suplemento chamar saveAsync em um item no modo de redação para obter uma ItemId para usar com o EWS ou a API REST, lembre-se de que, quando o Outlook estiver no modo em cache, pode levar algum tempo antes de o item ser sincronizado com o servidor. Até que o item seja sincronizado, usar itemId retornará um erro.

      **Observação**: os clientes a seguir têm diferentes comportamentos de saveAsync em compromissos no modo de redação:

      - O Outlook para Mac não dá suporte à gravação de uma reunião. O método saveAsync falha quando chamado de uma reunião no modo de composição. Consulte [não é possível salvar uma reunião como rascunho no Outlook para Mac usando a API do Office js](https://support.microsoft.com/help/4505745) para obter uma solução alternativa.

      - O Outlook na Web sempre envia um convite ou uma atualização quando saveAsync é chamado em um compromisso no modo de composição.

      \[[Conjunto de APIs: caixa de correio 1,3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **<!-- --> [Nível de permissão mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)**: ReadWriteItem

      **<!-- --> [Modo do Outlook aplicável](https://docs.microsoft.com/outlook/add-ins/#extension-points)**: composição de mensagem

      **Erros**:

      - InvalidAttachmentId: o identificador de anexo não existe.
    name: 'saveAsync(options, callback)'
    fullName: 'saveAsync(options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'saveAsync(options: Office.AsyncContextOptions, callback: (asyncResult: Office.AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: 'Um objeto literal que contém uma ou mais das propriedades a seguir. asyncContext: os desenvolvedores podem fornecer qualquer objeto que desejarem acessar no método de retorno de chamada.'
          type:
            - Office.AsyncContextOptions
        - id: callback
          description: 'Quando o método for concluído, a função passada ao parâmetro callback será chamada com um único parâmetro do tipo Office. AsyncResult.'
          type:
            - '(asyncResult: Office.AsyncResult<string>) => void'
  - uid: Outlook_1_4.Office.MessageCompose.saveAsync_1
    summary: |-
      Salva um item de forma assíncrona.

      Quando chamado, este método salva a mensagem atual como um rascunho e retorna a identificação do item por meio do método de retorno de chamada. No Outlook Web App ou no Outlook no modo online, o item é salvo no servidor. No Outlook no modo cache, o item é salvo no cache local.

      Como os compromissos não têm estado de rascunho, se saveAsync for chamado em um compromisso no modo de redação, o item será salvo como um compromisso normal no calendário do usuário. Para novos compromissos que não foram salvos antes, nenhum convite será enviado. Salvar um compromisso existente enviará uma atualização para os participantes adicionados ou removidos.

      **Observação**: se seu suplemento chamar saveAsync em um item no modo de redação para obter uma ItemId para usar com o EWS ou a API REST, lembre-se de que, quando o Outlook estiver no modo em cache, pode levar algum tempo antes de o item ser sincronizado com o servidor. Até que o item seja sincronizado, usar itemId retornará um erro.

      **Observação**: os clientes a seguir têm diferentes comportamentos de saveAsync em compromissos no modo de redação:

      - O Outlook para Mac não dá suporte à gravação de uma reunião. O método saveAsync falha quando chamado de uma reunião no modo de composição. Consulte [não é possível salvar uma reunião como rascunho no Outlook para Mac usando a API do Office js](https://support.microsoft.com/help/4505745) para obter uma solução alternativa.

      - O Outlook na Web sempre envia um convite ou uma atualização quando saveAsync é chamado em um compromisso no modo de composição.

      \[[Conjunto de APIs: caixa de correio 1,3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **<!-- --> [Nível de permissão mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)**: ReadWriteItem

      **<!-- --> [Modo do Outlook aplicável](https://docs.microsoft.com/outlook/add-ins/#extension-points)**: composição de mensagem

      **Erros**:

      - InvalidAttachmentId: o identificador de anexo não existe.

      #### <a name="examples"></a>Exemplos

      ```javascript
      Office.context.mailbox.item.saveAsync(
          function callback(result) {
              // Process the result.
          });

      // The following is an example of the
      // `result` parameter passed to the
      // callback function. The `value`
      // property contains the item ID of
      // the item.
      {
          "value": "AAMkADI5...AAA=",
          "status": "succeeded"
      }
      ```
    name: saveAsync(callback)
    fullName: saveAsync(callback)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'saveAsync(callback: (asyncResult: Office.AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: 'Quando o método for concluído, a função passada ao parâmetro callback será chamada com um único parâmetro do tipo Office. AsyncResult.'
          type:
            - '(asyncResult: Office.AsyncResult<string>) => void'
  - uid: Outlook_1_4.Office.MessageCompose.setSelectedDataAsync
    summary: |-
      Insere de forma assíncrona os dados no corpo ou no assunto de uma mensagem.

      O método setSelectedDataAsync insere a cadeia de caracteres especificada no local do cursor no assunto ou no corpo do item ou, se o texto estiver selecionado no editor, substitui o texto selecionado. Se o cursor não estiver no campo Body ou subject, um erro será retornado. Após a inserção, o cursor é colocado no final do conteúdo inserido.

      \[[Conjunto de APIs: caixa de correio 1,2](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **<!-- --> [Nível de permissão mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)**: ReadWriteItem

      **<!-- --> [Modo do Outlook aplicável](https://docs.microsoft.com/outlook/add-ins/#extension-points)**: composição de mensagem

      **Erros**:

      - InvalidAttachmentId: o identificador de anexo não existe.

      #### <a name="examples"></a>Exemplos

      ```javascript
      Office.context.mailbox.item.setSelectedDataAsync("<b>Hello World!</b>", { coercionType : "html" });
      ```
    name: 'setSelectedDataAsync(data, options, callback)'
    fullName: 'setSelectedDataAsync(data, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setSelectedDataAsync(data: string, options?: Office.AsyncContextOptions & CoercionTypeOptions, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: data
          description: 'Os dados a serem inseridos. Os dados não devem exceder 1.000.000 de caracteres. Se mais de 1 milhão caracteres forem passados, uma exceção ArgumentOutOfRange é lançada.'
          type:
            - string
        - id: options
          description: 'Opcional. Um objeto literal que contém uma ou mais das propriedades a seguir. asyncContext: os desenvolvedores podem fornecer qualquer objeto que desejarem acessar no método de retorno de chamada. coercionType: se Text, o estilo atual é aplicado no Outlook Web App e no Outlook. Se o campo for um editor de HTML, apenas os dados de texto são inseridos, mesmo se os dados forem HTML. Se HTML e o campo suportar HTML (o assunto não), o estilo atual é aplicado no Outlook Web App e o estilo padrão é aplicado no Outlook. Se o campo for um campo de texto, um erro InvalidDataFormat será retornado. Se coercionType não for definido, o resultado dependerá do campo: se o campo for HTML, o HTML será usado; Se o campo for texto, o texto sem formatação será usado.'
          type:
            - Office.AsyncContextOptions & CoercionTypeOptions
        - id: callback
          description: 'Opcional. Quando o método for concluído, a função passada ao parâmetro callback será chamada com um único parâmetro do tipo Office. AsyncResult.'
          type:
            - '(asyncResult: Office.AsyncResult<void>) => void'
  - uid: Outlook_1_4.Office.MessageCompose.setSelectedDataAsync_1
    summary: |-
      Insere de forma assíncrona os dados no corpo ou no assunto de uma mensagem.

      O método setSelectedDataAsync insere a cadeia de caracteres especificada no local do cursor no assunto ou no corpo do item ou, se o texto estiver selecionado no editor, substitui o texto selecionado. Se o cursor não estiver no campo Body ou subject, um erro será retornado. Após a inserção, o cursor é colocado no final do conteúdo inserido.

      \[[Conjunto de APIs: caixa de correio 1,2](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **<!-- --> [Nível de permissão mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)**: ReadWriteItem

      **<!-- --> [Modo do Outlook aplicável](https://docs.microsoft.com/outlook/add-ins/#extension-points)**: composição de mensagem

      **Erros**:

      - InvalidAttachmentId: o identificador de anexo não existe.

      #### <a name="examples"></a>Exemplos

      ```javascript
      Office.context.mailbox.item.setSelectedDataAsync("Hello World!");
      ```
    name: 'setSelectedDataAsync(data, callback)'
    fullName: 'setSelectedDataAsync(data, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setSelectedDataAsync(data: string, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: data
          description: 'Os dados a serem inseridos. Os dados não devem exceder 1.000.000 de caracteres. Se mais de 1 milhão caracteres forem passados, uma exceção ArgumentOutOfRange é lançada.'
          type:
            - string
        - id: callback
          description: 'Opcional. Quando o método for concluído, a função passada ao parâmetro callback será chamada com um único parâmetro do tipo Office. AsyncResult.'
          type:
            - '(asyncResult: Office.AsyncResult<void>) => void'
  - uid: Outlook_1_4.Office.MessageCompose.bcc
    summary: |-
      Obtém um objeto que fornece métodos para acessar ou atualizar os destinatários na linha Cco (com cópia oculta) de uma mensagem.

      \[[Conjunto de APIs: caixa de correio 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **<!-- --> [Nível de permissão mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)**: ReadItem

      **<!-- --> [Modo do Outlook aplicável](https://docs.microsoft.com/outlook/add-ins/#extension-points)**: composição de mensagem

      #### <a name="examples"></a>Exemplos

      ```javascript
      Office.context.mailbox.item.bcc.setAsync( ['alice@contoso.com', 'bob@contoso.com'] );
      Office.context.mailbox.item.bcc.addAsync( ['jason@contoso.com'] );
      Office.context.mailbox.item.bcc.getAsync(callback);

      function callback(asyncResult) {
          var arrayOfBccRecipients = asyncResult.value;
      }
      ```
    name: bcc
    fullName: bcc
    langs:
      - typeScript
    type: property
    syntax:
      content: 'bcc: Recipients;'
      return:
        type:
          - Recipients
  - uid: Outlook_1_4.Office.MessageCompose.body
    summary: |-
      Obtém um objeto que fornece métodos para manipular o corpo de um item.

      \[[Conjunto de APIs: caixa de correio 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **<!-- --> [Nível de permissão mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)**: ReadItem

      **<!-- --> [Modo do Outlook aplicável](https://docs.microsoft.com/outlook/add-ins/#extension-points)**: composição de mensagem

      #### <a name="examples"></a>Exemplos

      ```javascript
      // This example gets the body of the item as plain text.
      Office.context.mailbox.item.body.getAsync(
          "text",
          { asyncContext: "This is passed to the callback" },
          function callback(result) {
              // Do something with the result.
          });

      // The following is an example of the result parameter passed to the callback function.
      {
          "value": "TEXT of whole body (including threads below)",
          "status": "succeeded",
          "asyncContext": "This is passed to the callback"
      }
      ```
    name: body
    fullName: body
    langs:
      - typeScript
    type: property
    syntax:
      content: 'body: Body;'
      return:
        type:
          - Body
  - uid: Outlook_1_4.Office.MessageCompose.cc
    summary: |-
      Fornece acesso aos destinatários na linha Cc (com cópia) de uma mensagem. O tipo de objeto e o nível de acesso dependem do modo do item atual.

      A propriedade CC retorna um objeto [Office. Recipients](xref:Outlook_1_4.Office.Recipients) que fornece métodos para obter ou atualizar os destinatários na linha CC da mensagem.

      \[[Conjunto de APIs: caixa de correio 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **<!-- --> [Nível de permissão mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)**: ReadItem

      **<!-- --> [Modo do Outlook aplicável](https://docs.microsoft.com/outlook/add-ins/#extension-points)**: composição de mensagem

      #### <a name="examples"></a>Exemplos

      ```javascript
      Office.context.mailbox.item.cc.setAsync( ['alice@contoso.com', 'bob@contoso.com'] );
      Office.context.mailbox.item.cc.addAsync( ['jason@contoso.com'] );
      Office.context.mailbox.item.cc.getAsync(callback);

      function callback(asyncResult) {
          var arrayOfCcRecipients = asyncResult.value;
      }
      ```
    name: cc
    fullName: cc
    langs:
      - typeScript
    type: property
    syntax:
      content: 'cc: Recipients;'
      return:
        type:
          - Recipients
  - uid: Outlook_1_4.Office.MessageCompose.conversationId
    summary: |-
      Obtém um identificador da conversa de email que contém uma mensagem específica.

      Você pode obter um número inteiro para esta propriedade se o aplicativo de email estiver ativado nos formulários de leitura ou nas respostas em formulários de composição. Se, posteriormente, o usuário alterar o assunto da mensagem de resposta, ao enviar a resposta, a ID da conversa daquela mensagem será alterada e o valor obtido anteriormente não mais se aplicará.

      Você obtém nulo para esta propriedade para um novo item em um formulário de composição. Se o usuário define um assunto e salva o item, a propriedade Conversation retornará um valor.

      \[[Conjunto de APIs: caixa de correio 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **<!-- --> [Nível de permissão mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)**: ReadItem

      **<!-- --> [Modo do Outlook aplicável](https://docs.microsoft.com/outlook/add-ins/#extension-points)**: composição de mensagem

      #### <a name="examples"></a>Exemplos

      ```javascript
      var conversationId = Office.context.mailbox.item.conversationId;
      console.log("conversationId: " + conversationId);
      ```
    name: conversationId
    fullName: conversationId
    langs:
      - typeScript
    type: property
    syntax:
      content: 'conversationId: string;'
      return:
        type:
          - string
  - uid: Outlook_1_4.Office.MessageCompose.itemType
    summary: |-
      Obtém o tipo de item que representa uma instância.

      A propriedade itemType retorna um dos valores de enumeração ItemType, indicando se a instância do objeto item é uma mensagem ou um compromisso.

      \[[Conjunto de APIs: caixa de correio 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **<!-- --> [Nível de permissão mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)**: ReadItem

      **<!-- --> [Modo do Outlook aplicável](https://docs.microsoft.com/outlook/add-ins/#extension-points)**: composição de mensagem

      #### <a name="examples"></a>Exemplos

      ```javascript
      if (Office.context.mailbox.item.itemType === Office.MailboxEnums.ItemType.Message) {
          // Do something.
      } else {
          // Do something else.
      }
      ```
    name: itemType
    fullName: itemType
    langs:
      - typeScript
    type: property
    syntax:
      content: 'itemType: MailboxEnums.ItemType | string;'
      return:
        type:
          - MailboxEnums.ItemType | string
  - uid: Outlook_1_4.Office.MessageCompose.notificationMessages
    summary: |-
      Obtém as mensagens de notificação de um item.

      \[[Conjunto de APIs: caixa de correio 1,3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **<!-- --> [Nível de permissão mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)**: ReadItem

      **<!-- --> [Modo do Outlook aplicável](https://docs.microsoft.com/outlook/add-ins/#extension-points)**: composição de mensagem

      #### <a name="examples"></a>Exemplos

      ```javascript
      // Get all notifications.
      Office.context.mailbox.item.notificationMessages.getAllAsync(
          function (asyncResult) {
              console.log(JSON.stringify(asyncResult));
          }
      );
      ```
    name: notificationMessages
    fullName: notificationMessages
    langs:
      - typeScript
    type: property
    syntax:
      content: 'notificationMessages: NotificationMessages;'
      return:
        type:
          - NotificationMessages
  - uid: Outlook_1_4.Office.MessageCompose.subject
    summary: |-
      Obtém ou define a descrição que aparece no campo de assunto de um item.

      A propriedade Subject Obtém ou define o assunto completo do item, conforme enviado pelo servidor de email.

      A propriedade Subject retorna um objeto Subject que fornece métodos para obter e definir o assunto.

      \[[Conjunto de APIs: caixa de correio 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **<!-- --> [Nível de permissão mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)**: ReadItem

      **<!-- --> [Modo do Outlook aplicável](https://docs.microsoft.com/outlook/add-ins/#extension-points)**: composição de mensagem

      #### <a name="examples"></a>Exemplos

      ```javascript
      Office.context.mailbox.item.subject.getAsync(callback);

      function callback(asyncResult) {
          var subject = asyncResult.value;
      }
      ```
    name: subject
    fullName: subject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'subject: Subject;'
      return:
        type:
          - Subject
  - uid: Outlook_1_4.Office.MessageCompose.to
    summary: |-
      Fornece acesso aos destinatários na linha Para de uma mensagem. O tipo de objeto e o nível de acesso dependem do modo do item atual.

      A propriedade to retorna um objeto Recipients que fornece métodos para obter ou atualizar os destinatários na linha para da mensagem.

      \[[Conjunto de APIs: caixa de correio 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **<!-- --> [Nível de permissão mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)**: ReadItem

      **<!-- --> [Modo do Outlook aplicável](https://docs.microsoft.com/outlook/add-ins/#extension-points)**: composição de mensagem

      #### <a name="examples"></a>Exemplos

      ```javascript
      Office.context.mailbox.item.to.setAsync( ['alice@contoso.com', 'bob@contoso.com'] );
      Office.context.mailbox.item.to.addAsync( ['jason@contoso.com'] );
      Office.context.mailbox.item.to.getAsync(callback);

      function callback(asyncResult) {
          var arrayOfToRecipients = asyncResult.value;
      }
      ```
    name: to
    fullName: to
    langs:
      - typeScript
    type: property
    syntax:
      content: 'to: Recipients;'
      return:
        type:
          - Recipients