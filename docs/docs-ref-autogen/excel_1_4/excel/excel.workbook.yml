### YamlMime:TSType
name: Excel.Workbook
uid: excel!Excel.Workbook:class
package: excel!
fullName: Excel.Workbook
summary: >-
  Pasta de trabalho é o objeto de nível superior que contém objetos de pasta de trabalho relacionados, como planilhas, tabelas, intervalos, etc. Para saber mais sobre o modelo de objeto de planilha, leia [Trabalhar com planilhas usando a API JavaScript do Excel](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-workbooks)<!-- -->.


  \[[Conjunto de APIs: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
- name: application
  uid: excel!Excel.Workbook#application:member
  package: excel!
  fullName: application
  summary: >-
    Representa a instância de aplicativo do Excel que contém essa planilha de trabalho.


    \[[Conjunto de APIs: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly application: Excel.Application;'
    return:
      type: <xref uid="excel!Excel.Application:class" />
- name: bindings
  uid: excel!Excel.Workbook#bindings:member
  package: excel!
  fullName: bindings
  summary: >-
    Representa uma coleção de ligações que fazem parte da pasta de trabalho.


    \[[Conjunto de APIs: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly bindings: Excel.BindingCollection;'
    return:
      type: <xref uid="excel!Excel.BindingCollection:class" />
- name: context
  uid: excel!Excel.Workbook#context:member
  package: excel!
  fullName: context
  summary: O contexto de solicitação associado ao objeto. Isso conecta o processo do complemento ao processo do aplicativo host do Office.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'context: RequestContext;'
    return:
      type: <xref uid="excel!Excel.RequestContext:class" />
- name: functions
  uid: excel!Excel.Workbook#functions:member
  package: excel!
  fullName: functions
  summary: >-
    Representa uma coleção de funções de planilha que podem ser usadas para computação.


    \[[Conjunto de APIs: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly functions: Excel.Functions;'
    return:
      type: <xref uid="excel!Excel.Functions:class" />
- name: names
  uid: excel!Excel.Workbook#names:member
  package: excel!
  fullName: names
  summary: >-
    Representa uma coleção de itens denominados de escopo da pasta de trabalho (chamados intervalos e constantes).


    \[[Conjunto de APIs: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly names: Excel.NamedItemCollection;'
    return:
      type: <xref uid="excel!Excel.NamedItemCollection:class" />
- name: onSelectionChanged
  uid: excel!Excel.Workbook#onSelectionChanged:member
  package: excel!
  fullName: onSelectionChanged
  summary: >-
    Ocorre quando a seleção no documento é alterada.


    \[[Conjunto de APIs: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly onSelectionChanged: OfficeExtension.EventHandlers<Excel.SelectionChangedEventArgs>;'
    return:
      type: <xref uid="office!OfficeExtension.EventHandlers:class" />&lt;<xref uid="excel!Excel.SelectionChangedEventArgs:interface" />&gt;
- name: pivotTables
  uid: excel!Excel.Workbook#pivotTables:member
  package: excel!
  fullName: pivotTables
  summary: >-
    Representa uma coleção de Tabelas Dinâmicas associadas à pasta de trabalho.


    \[[Conjunto de APIs: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly pivotTables: Excel.PivotTableCollection;'
    return:
      type: <xref uid="excel!Excel.PivotTableCollection:class" />
      description: "\n\n#### <a name=\"examples\"></a>Exemplos\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/excel/38-pivottable/pivottable-get-pivottables.yaml\nawait Excel.run(async (context) => {\n  // Get the names of all the PivotTables in the workbook.\n  const pivotTables = context.workbook.pivotTables;\n  pivotTables.load(\"name\");\n  await context.sync();\n\n  // Display the names in the console.\n  console.log(\"PivotTables in the workbook:\")\n  pivotTables.items.forEach((pivotTable) => {\n    console.log(`\\t${pivotTable.name}`);\n  });\n});\n```"
- name: settings
  uid: excel!Excel.Workbook#settings:member
  package: excel!
  fullName: settings
  summary: >-
    Representa uma coleção de configurações associada à pasta de trabalho.


    \[[Conjunto de APIs: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly settings: Excel.SettingCollection;'
    return:
      type: <xref uid="excel!Excel.SettingCollection:class" />
- name: tables
  uid: excel!Excel.Workbook#tables:member
  package: excel!
  fullName: tables
  summary: >-
    Representa uma coleção de tabelas associadas à pasta de trabalho.


    \[[Conjunto de APIs: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly tables: Excel.TableCollection;'
    return:
      type: <xref uid="excel!Excel.TableCollection:class" />
- name: worksheets
  uid: excel!Excel.Workbook#worksheets:member
  package: excel!
  fullName: worksheets
  summary: >-
    Representa uma coleção de planilhas associadas à pasta de trabalho.


    \[[Conjunto de APIs: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly worksheets: Excel.WorksheetCollection;'
    return:
      type: <xref uid="excel!Excel.WorksheetCollection:class" />
methods:
- name: getSelectedRange()
  uid: excel!Excel.Workbook#getSelectedRange:member(1)
  package: excel!
  fullName: getSelectedRange()
  summary: >-
    Obtém o intervalo único selecionado no momento da guia de trabalho. Se houver vários intervalos selecionados, esse método lançará um erro.


    \[[Conjunto de APIs: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getSelectedRange(): Excel.Range;'
    return:
      type: <xref uid="excel!Excel.Range:class" />
      description: "\n\n#### <a name=\"examples\"></a>Exemplos\n\n```javascript\nExcel.run(function (ctx) { \n    var selectedRange = ctx.workbook.getSelectedRange();\n    selectedRange.load('address');\n    return ctx.sync().then(function() {\n            console.log(selectedRange.address);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: load(options)
  uid: excel!Excel.Workbook#load:member(1)
  package: excel!
  fullName: load(options)
  summary: Coloca um comando na fila para carregar as propriedades especificadas do objeto. Você deve chamar `context.sync()` antes de ler as propriedades.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(options?: Excel.Interfaces.WorkbookLoadOptions): Excel.Workbook;'
    parameters:
    - id: options
      description: Fornece opções para quais propriedades do objeto carregar.
      type: <xref uid="excel!Excel.Interfaces.WorkbookLoadOptions:interface" />
    return:
      type: <xref uid="excel!Excel.Workbook:class" />
      description: ''
- name: load(propertyNames)
  uid: excel!Excel.Workbook#load:member(2)
  package: excel!
  fullName: load(propertyNames)
  summary: Coloca um comando na fila para carregar as propriedades especificadas do objeto. Você deve chamar `context.sync()` antes de ler as propriedades.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.Workbook;'
    parameters:
    - id: propertyNames
      description: Uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a carregar.
      type: string | string[]
    return:
      type: <xref uid="excel!Excel.Workbook:class" />
      description: ''
- name: load(propertyNamesAndPaths)
  uid: excel!Excel.Workbook#load:member(3)
  package: excel!
  fullName: load(propertyNamesAndPaths)
  summary: Coloca um comando na fila para carregar as propriedades especificadas do objeto. Você deve chamar `context.sync()` antes de ler as propriedades.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      load(propertyNamesAndPaths?: {
                  select?: string;
                  expand?: string;
              }): Excel.Workbook;
    parameters:
    - id: propertyNamesAndPaths
      description: '`propertyNamesAndPaths.select` é uma cadeia de caracteres delimitada por vírgulas que especifica as propriedades a carregar e é uma cadeia de caracteres delimitada por vírgulas que especifica as propriedades de navegação `propertyNamesAndPaths.expand` a carregar.'
      type: >-
        {
                    select?: string;
                    expand?: string;
                }
    return:
      type: <xref uid="excel!Excel.Workbook:class" />
      description: ''
- name: set(properties, options)
  uid: excel!Excel.Workbook#set:member(1)
  package: excel!
  fullName: set(properties, options)
  summary: Define várias propriedades de um objeto ao mesmo tempo. Você pode passar um objeto simples com as propriedades apropriadas ou outro objeto de API do mesmo tipo.
  remarks: >-
    Esse método tem a seguinte assinatura adicional:


    `set(properties: Excel.Workbook): void`
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(properties: Interfaces.WorkbookUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    parameters:
    - id: properties
      description: Um objeto JavaScript com propriedades estruturadas isomorficamente para as propriedades do objeto no qual o método é chamado.
      type: <xref uid="excel!Excel.Interfaces.WorkbookUpdateData:interface" />
    - id: options
      description: Fornece uma opção para suprimir erros se o objeto de propriedades tentar definir qualquer propriedade somente leitura.
      type: <xref uid="office!OfficeExtension.UpdateOptions:interface" />
    return:
      type: void
      description: ''
- name: set(properties)
  uid: excel!Excel.Workbook#set:member(2)
  package: excel!
  fullName: set(properties)
  summary: Define várias propriedades no objeto ao mesmo tempo, com base em um objeto carregado existente.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(properties: Excel.Workbook): void;'
    parameters:
    - id: properties
      description: ''
      type: <xref uid="excel!Excel.Workbook:class" />
    return:
      type: void
      description: ''
- name: toJSON()
  uid: excel!Excel.Workbook#toJSON:member(1)
  package: excel!
  fullName: toJSON()
  summary: Substitui o método JavaScript para fornecer uma saída mais útil quando um objeto `toJSON()` de API é passado para `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, por sua vez, chama `toJSON` o método do objeto que é passado para ele.) Enquanto o objeto Excel.Workbook original é um objeto API, o método retorna um objeto `toJSON` JavaScript simples (digitado como `Excel.Interfaces.WorkbookData`<!-- -->) que contém cópias rasas de qualquer propriedade filho carregada do objeto original.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'toJSON(): Excel.Interfaces.WorkbookData;'
    return:
      type: <xref uid="excel!Excel.Interfaces.WorkbookData:interface" />
      description: ''
extends: <xref uid="office!OfficeExtension.ClientObject:class" />
metadata:
  ms.openlocfilehash: 1264a6f24a633809eb08bf1e95dbc0f41d9cd8d6
  ms.sourcegitcommit: d14ccd5d21286fdad1d3451f3ac745c603d9400d
  ms.translationtype: MT
  ms.contentlocale: pt-BR
  ms.lasthandoff: 01/13/2021
  ms.locfileid: "49857000"
