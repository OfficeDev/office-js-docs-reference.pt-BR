### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.RangeBorderCollection:class'
    summary: |-
      Representa os objetos border que compõem a borda do intervalo.

      \[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: Excel.RangeBorderCollection
    fullName: Excel.RangeBorderCollection
    langs:
      - typeScript
    type: class
    extends:
      - 'office!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.RangeBorderCollection#context:member'
      - 'excel!Excel.RangeBorderCollection#count:member'
      - 'excel!Excel.RangeBorderCollection#getItem:member(1)'
      - 'excel!Excel.RangeBorderCollection#getItem:member(2)'
      - 'excel!Excel.RangeBorderCollection#getItemAt:member(1)'
      - 'excel!Excel.RangeBorderCollection#items:member'
      - 'excel!Excel.RangeBorderCollection#load:member(1)'
      - 'excel!Excel.RangeBorderCollection#load:member(2)'
      - 'excel!Excel.RangeBorderCollection#load:member(3)'
      - 'excel!Excel.RangeBorderCollection#toJSON:member(1)'
  - uid: 'excel!Excel.RangeBorderCollection#context:member'
    summary: O contexto de solicitação associado ao objeto. Isso conecta o processo do suplemento ao processo do aplicativo host do Office.
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.RangeBorderCollection#count:member'
    summary: |-
      Número de objetos de borda da coleção.

      \[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: count
    fullName: count
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly count: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.RangeBorderCollection#getItem:member(1)'
    summary: |-
      Obtém um objeto Border usando o respectivo nome.

      \[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getItem(index)
    fullName: getItem(index)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(index: Excel.BorderIndex): Excel.RangeBorder;'
      return:
        type:
          - 'excel!Excel.RangeBorder:class'
        description: |-


          #### <a name="examples"></a>Exemplos

          ```javascript
          Excel.run(function (ctx) { 
              var sheetName = "Sheet1";
              var rangeAddress = "A1:F8";
              var worksheet = ctx.workbook.worksheets.getItem(sheetName);
              var range = worksheet.getRange(rangeAddress);
              var borderName = 'EdgeTop';
              var border = range.format.borders.getItem(borderName);
              border.load('style');
              return ctx.sync().then(function() {
                      console.log(border.style);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: index
          description: Valor de índice do objeto Border a ser recuperado. Consulte Excel. BorderIndex para obter detalhes.
          type:
            - 'excel!Excel.BorderIndex:enum'
  - uid: 'excel!Excel.RangeBorderCollection#getItem:member(2)'
    summary: |-
      Obtém um objeto Border usando o respectivo nome.

      \[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getItem(indexString)
    fullName: getItem(indexString)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(indexString: "EdgeTop" | "EdgeBottom" | "EdgeLeft" | "EdgeRight" | "InsideVertical" | "InsideHorizontal" | "DiagonalDown" | "DiagonalUp"): Excel.RangeBorder;'
      return:
        type:
          - 'excel!Excel.RangeBorder:class'
        description: ''
      parameters:
        - id: indexString
          description: Valor de índice do objeto Border a ser recuperado. Consulte Excel. BorderIndex para obter detalhes.
          type:
            - '"EdgeTop" | "EdgeBottom" | "EdgeLeft" | "EdgeRight" | "InsideVertical" | "InsideHorizontal" | "DiagonalDown" | "DiagonalUp"'
  - uid: 'excel!Excel.RangeBorderCollection#getItemAt:member(1)'
    summary: |-
      Obtém um objeto Border usando o respectivo índice.

      \[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getItemAt(index)
    fullName: getItemAt(index)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemAt(index: number): Excel.RangeBorder;'
      return:
        type:
          - 'excel!Excel.RangeBorder:class'
        description: |-


          #### <a name="examples"></a>Exemplos

          ```javascript
          Excel.run(function (ctx) { 
              var sheetName = "Sheet1";
              var rangeAddress = "A1:F8";
              var worksheet = ctx.workbook.worksheets.getItem(sheetName);
              var range = worksheet.getRange(rangeAddress);
              var border = range.format.borders.getItemAt(0);
              border.load('sideIndex');
              return ctx.sync().then(function() {
                  console.log(border.sideIndex);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: index
          description: Valor de índice do objeto a ser recuperado. Indexados com zero.
          type:
            - number
  - uid: 'excel!Excel.RangeBorderCollection#items:member'
    summary: Obtém os itens filhos carregados nesta coleção.
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.RangeBorder[];'
      return:
        type:
          - 'excel!Excel.RangeBorderCollection#items~0:complex'
  - uid: 'excel!Excel.RangeBorderCollection#load:member(1)'
    summary: Coloca um comando na fila para carregar as propriedades especificadas do objeto. Você deve chamar `context.sync()` antes de ler as propriedades.
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.RangeBorderCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.RangeBorderCollection;'
      return:
        type:
          - 'excel!Excel.RangeBorderCollection:class'
        description: ''
      parameters:
        - id: options
          description: Fornece opções para as propriedades do objeto a ser carregado.
          type:
            - 'excel!Excel.RangeBorderCollection#load~0:complex'
  - uid: 'excel!Excel.RangeBorderCollection#load:member(2)'
    summary: Coloca um comando na fila para carregar as propriedades especificadas do objeto. Você deve chamar `context.sync()` antes de ler as propriedades.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.RangeBorderCollection;'
      return:
        type:
          - 'excel!Excel.RangeBorderCollection:class'
        description: |-


          #### <a name="examples"></a>Exemplos

          ```javascript
          Excel.run(function (ctx) { 
              var sheetName = "Sheet1";
              var rangeAddress = "A1:F8";
              var worksheet = ctx.workbook.worksheets.getItem(sheetName);
              var range = worksheet.getRange(rangeAddress);
              var borders = range.format.borders;
              border.load('items');
              return ctx.sync().then(function() {
                  console.log(borders.count);
                  for (var i = 0; i < borders.items.length; i++) {
                      console.log(borders.items[i].sideIndex);
                  }
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: Uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.RangeBorderCollection#load:member(3)'
    summary: Coloca um comando na fila para carregar as propriedades especificadas do objeto. Você deve chamar `context.sync()` antes de ler as propriedades.
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: OfficeExtension.LoadOption): Excel.RangeBorderCollection;'
      return:
        type:
          - 'excel!Excel.RangeBorderCollection:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '`propertyNamesAndPaths.select`é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades a serem `propertyNamesAndPaths.expand` carregadas e é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades de navegação a serem carregadas.'
          type:
            - 'office!OfficeExtension.LoadOption:interface'
  - uid: 'excel!Excel.RangeBorderCollection#toJSON:member(1)'
    summary: 'Substitui o método `toJSON()` JavaScript para fornecer uma saída mais útil quando um objeto API é passado para`JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, por sua vez, chama `toJSON` o método do objeto que é passado para ele.) Enquanto o objeto `Excel.RangeBorderCollection` original é um objeto API, o `toJSON` método retorna um objeto JavaScript simples (digitado como`Excel.Interfaces.RangeBorderCollectionData`<!-- -->) que contém uma matriz de "itens" com cópias superficiais de qualquer propriedade carregada dos itens da coleção.'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.RangeBorderCollectionData;'
      return:
        type:
          - 'excel!Excel.Interfaces.RangeBorderCollectionData:interface'
        description: ''
references:
  - uid: 'office!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.RangeBorder:class'
    name: Excel.RangeBorder
  - uid: 'excel!Excel.BorderIndex:enum'
    name: Excel.BorderIndex
  - uid: 'excel!Excel.RangeBorderCollection#items~0:complex'
    name: 'Excel.RangeBorder[]'
    fullName: 'Excel.RangeBorder[]'
    spec.typeScript:
      - uid: 'excel!Excel.RangeBorder:class'
        name: Excel.RangeBorder
        fullName: Excel.RangeBorder
      - name: '[]'
        fullName: '[]'
  - uid: 'excel!Excel.RangeBorderCollection:class'
    name: Excel.RangeBorderCollection
  - uid: 'excel!Excel.RangeBorderCollection#load~0:complex'
    name: Excel.Interfaces.RangeBorderCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    fullName: Excel.Interfaces.RangeBorderCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    spec.typeScript:
      - uid: 'excel!Excel.Interfaces.RangeBorderCollectionLoadOptions:interface'
        name: Excel.Interfaces.RangeBorderCollectionLoadOptions
        fullName: Excel.Interfaces.RangeBorderCollectionLoadOptions
      - name: ' & '
        fullName: ' & '
      - uid: 'excel!Excel.Interfaces.CollectionLoadOptions:interface'
        name: Excel.Interfaces.CollectionLoadOptions
        fullName: Excel.Interfaces.CollectionLoadOptions
  - uid: 'office!OfficeExtension.LoadOption:interface'
    name: OfficeExtension.LoadOption
  - uid: 'excel!Excel.Interfaces.RangeBorderCollectionData:interface'
    name: Excel.Interfaces.RangeBorderCollectionData