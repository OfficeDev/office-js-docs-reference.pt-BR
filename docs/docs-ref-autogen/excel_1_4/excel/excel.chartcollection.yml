### YamlMime:UniversalReference
items:
  - uid: excel.Excel.ChartCollection
    summary: |-
      <span data-ttu-id="e6129-101">Uma coleção de todos os objetos Chart de uma planilha.</span><span class="sxs-lookup"><span data-stu-id="e6129-101">A collection of all the chart objects on a worksheet.</span></span>

      <span data-ttu-id="e6129-102">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e6129-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.ChartCollection
    fullName: Excel.ChartCollection
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: excel
    children:
      - excel.Excel.ChartCollection.add
      - excel.Excel.ChartCollection.add_1
      - excel.Excel.ChartCollection.context
      - excel.Excel.ChartCollection.count
      - excel.Excel.ChartCollection.getCount
      - excel.Excel.ChartCollection.getItem
      - excel.Excel.ChartCollection.getItemAt
      - excel.Excel.ChartCollection.getItemOrNullObject
      - excel.Excel.ChartCollection.items
      - excel.Excel.ChartCollection.load
      - excel.Excel.ChartCollection.load_1
      - excel.Excel.ChartCollection.load_2
      - excel.Excel.ChartCollection.toJSON
  - uid: excel.Excel.ChartCollection.add
    summary: |-
      <span data-ttu-id="e6129-103">Cria um novo gráfico.</span><span class="sxs-lookup"><span data-stu-id="e6129-103">Creates a new chart.</span></span>

      <span data-ttu-id="e6129-104">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e6129-104">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'add(type, sourceData, seriesBy)'
    fullName: 'add(type, sourceData, seriesBy)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(type: Excel.ChartType, sourceData: Range, seriesBy?: Excel.ChartSeriesBy): Excel.Chart;'
      return:
        type:
          - excel.Excel.Chart
        description: ''
      parameters:
        - id: type
          description: <span data-ttu-id="e6129-105">Representa o tipo de um gráfico.</span><span class="sxs-lookup"><span data-stu-id="e6129-105">Represents the type of a chart.</span></span> <span data-ttu-id="e6129-106">Confira Excel. ChartType para obter detalhes.</span><span class="sxs-lookup"><span data-stu-id="e6129-106">See Excel.ChartType for details.</span></span>
          type:
            - excel.Excel.ChartType
        - id: sourceData
          description: <span data-ttu-id="e6129-107">O objeto Range correspondente aos dados de origem.</span><span class="sxs-lookup"><span data-stu-id="e6129-107">The Range object corresponding to the source data.</span></span>
          type:
            - excel.Excel.Range
        - id: seriesBy
          description: <span data-ttu-id="e6129-108">Opcional.</span><span class="sxs-lookup"><span data-stu-id="e6129-108">Optional.</span></span> <span data-ttu-id="e6129-109">Especifica a forma como as colunas ou linhas são usadas como série de dados no gráfico.</span><span class="sxs-lookup"><span data-stu-id="e6129-109">Specifies the way columns or rows are used as data series on the chart.</span></span> <span data-ttu-id="e6129-110">Consulte Excel. ChartSeriesBy para obter detalhes.</span><span class="sxs-lookup"><span data-stu-id="e6129-110">See Excel.ChartSeriesBy for details.</span></span>
          type:
            - excel.Excel.ChartSeriesBy
  - uid: excel.Excel.ChartCollection.add_1
    summary: |-
      <span data-ttu-id="e6129-111">Cria um novo gráfico.</span><span class="sxs-lookup"><span data-stu-id="e6129-111">Creates a new chart.</span></span>

      <span data-ttu-id="e6129-112">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e6129-112">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'add(typeString, sourceData, seriesBy)'
    fullName: 'add(typeString, sourceData, seriesBy)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(typeString: "Invalid" | "ColumnClustered" | "ColumnStacked" | "ColumnStacked100" | "3DColumnClustered" | "3DColumnStacked" | "3DColumnStacked100" | "BarClustered" | "BarStacked" | "BarStacked100" | "3DBarClustered" | "3DBarStacked" | "3DBarStacked100" | "LineStacked" | "LineStacked100" | "LineMarkers" | "LineMarkersStacked" | "LineMarkersStacked100" | "PieOfPie" | "PieExploded" | "3DPieExploded" | "BarOfPie" | "XYScatterSmooth" | "XYScatterSmoothNoMarkers" | "XYScatterLines" | "XYScatterLinesNoMarkers" | "AreaStacked" | "AreaStacked100" | "3DAreaStacked" | "3DAreaStacked100" | "DoughnutExploded" | "RadarMarkers" | "RadarFilled" | "Surface" | "SurfaceWireframe" | "SurfaceTopView" | "SurfaceTopViewWireframe" | "Bubble" | "Bubble3DEffect" | "StockHLC" | "StockOHLC" | "StockVHLC" | "StockVOHLC" | "CylinderColClustered" | "CylinderColStacked" | "CylinderColStacked100" | "CylinderBarClustered" | "CylinderBarStacked" | "CylinderBarStacked100" | "CylinderCol" | "ConeColClustered" | "ConeColStacked" | "ConeColStacked100" | "ConeBarClustered" | "ConeBarStacked" | "ConeBarStacked100" | "ConeCol" | "PyramidColClustered" | "PyramidColStacked" | "PyramidColStacked100" | "PyramidBarClustered" | "PyramidBarStacked" | "PyramidBarStacked100" | "PyramidCol" | "3DColumn" | "Line" | "3DLine" | "3DPie" | "Pie" | "XYScatter" | "3DArea" | "Area" | "Doughnut" | "Radar" | "Histogram" | "Boxwhisker" | "Pareto" | "RegionMap" | "Treemap" | "Waterfall" | "Sunburst" | "Funnel", sourceData: Range, seriesBy?: "Auto" | "Columns" | "Rows"): Excel.Chart;'
      return:
        type:
          - excel.Excel.Chart
        description: |-


          #### <a name="examples"></a><span data-ttu-id="e6129-113">Exemplos</span><span class="sxs-lookup"><span data-stu-id="e6129-113">Examples</span></span>

          ```javascript
          // Add a chart of chartType "ColumnClustered" on worksheet "Charts" 
          // with sourceData from Range "A1:B4" and seriresBy is set to be "auto".
          Excel.run(function (ctx) { 
              var rangeSelection = "A1:B4";
              var range = ctx.workbook.worksheets.getItem(sheetName)
                  .getRange(rangeSelection);
              var chart = ctx.workbook.worksheets.getItem(sheetName)
                  .charts.add("ColumnClustered", range, "auto");    return ctx.sync().then(function() {
                      console.log("New Chart Added");
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: typeString
          description: <span data-ttu-id="e6129-114">Representa o tipo de um gráfico.</span><span class="sxs-lookup"><span data-stu-id="e6129-114">Represents the type of a chart.</span></span> <span data-ttu-id="e6129-115">Confira Excel. ChartType para obter detalhes.</span><span class="sxs-lookup"><span data-stu-id="e6129-115">See Excel.ChartType for details.</span></span>
          type:
            - '"Invalid" | "ColumnClustered" | "ColumnStacked" | "ColumnStacked100" | "3DColumnClustered" | "3DColumnStacked" | "3DColumnStacked100" | "BarClustered" | "BarStacked" | "BarStacked100" | "3DBarClustered" | "3DBarStacked" | "3DBarStacked100" | "LineStacked" | "LineStacked100" | "LineMarkers" | "LineMarkersStacked" | "LineMarkersStacked100" | "PieOfPie" | "PieExploded" | "3DPieExploded" | "BarOfPie" | "XYScatterSmooth" | "XYScatterSmoothNoMarkers" | "XYScatterLines" | "XYScatterLinesNoMarkers" | "AreaStacked" | "AreaStacked100" | "3DAreaStacked" | "3DAreaStacked100" | "DoughnutExploded" | "RadarMarkers" | "RadarFilled" | "Surface" | "SurfaceWireframe" | "SurfaceTopView" | "SurfaceTopViewWireframe" | "Bubble" | "Bubble3DEffect" | "StockHLC" | "StockOHLC" | "StockVHLC" | "StockVOHLC" | "CylinderColClustered" | "CylinderColStacked" | "CylinderColStacked100" | "CylinderBarClustered" | "CylinderBarStacked" | "CylinderBarStacked100" | "CylinderCol" | "ConeColClustered" | "ConeColStacked" | "ConeColStacked100" | "ConeBarClustered" | "ConeBarStacked" | "ConeBarStacked100" | "ConeCol" | "PyramidColClustered" | "PyramidColStacked" | "PyramidColStacked100" | "PyramidBarClustered" | "PyramidBarStacked" | "PyramidBarStacked100" | "PyramidCol" | "3DColumn" | "Line" | "3DLine" | "3DPie" | "Pie" | "XYScatter" | "3DArea" | "Area" | "Doughnut" | "Radar" | "Histogram" | "Boxwhisker" | "Pareto" | "RegionMap" | "Treemap" | "Waterfall" | "Sunburst" | "Funnel"'
        - id: sourceData
          description: <span data-ttu-id="e6129-116">O objeto Range correspondente aos dados de origem.</span><span class="sxs-lookup"><span data-stu-id="e6129-116">The Range object corresponding to the source data.</span></span>
          type:
            - excel.Excel.Range
        - id: seriesBy
          description: <span data-ttu-id="e6129-117">Opcional.</span><span class="sxs-lookup"><span data-stu-id="e6129-117">Optional.</span></span> <span data-ttu-id="e6129-118">Especifica a forma como as colunas ou linhas são usadas como série de dados no gráfico.</span><span class="sxs-lookup"><span data-stu-id="e6129-118">Specifies the way columns or rows are used as data series on the chart.</span></span> <span data-ttu-id="e6129-119">Consulte Excel. ChartSeriesBy para obter detalhes.</span><span class="sxs-lookup"><span data-stu-id="e6129-119">See Excel.ChartSeriesBy for details.</span></span>
          type:
            - '"Auto" | "Columns" | "Rows"'
  - uid: excel.Excel.ChartCollection.context
    summary: <span data-ttu-id="e6129-120">O contexto de solicitação associado ao objeto.</span><span class="sxs-lookup"><span data-stu-id="e6129-120">The request context associated with the object.</span></span> <span data-ttu-id="e6129-121">Isso conecta o processo do suplemento ao processo do aplicativo host do Office.</span><span class="sxs-lookup"><span data-stu-id="e6129-121">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - excel.Excel.RequestContext
  - uid: excel.Excel.ChartCollection.count
    summary: |-
      <span data-ttu-id="e6129-122">Retorna o número de gráficos da planilha.</span><span class="sxs-lookup"><span data-stu-id="e6129-122">Returns the number of charts in the worksheet.</span></span> <span data-ttu-id="e6129-123">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="e6129-123">Read-only.</span></span>

      <span data-ttu-id="e6129-124">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e6129-124">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: count
    fullName: count
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly count: number;'
      return:
        type:
          - number
  - uid: excel.Excel.ChartCollection.getCount
    summary: |-
      <span data-ttu-id="e6129-125">Retorna o número de gráficos da planilha.</span><span class="sxs-lookup"><span data-stu-id="e6129-125">Returns the number of charts in the worksheet.</span></span>

      <span data-ttu-id="e6129-126">\[[Conjunto de APIs: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e6129-126">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - OfficeExtension.ClientResult<number>
        description: ''
  - uid: excel.Excel.ChartCollection.getItem
    summary: |-
      <span data-ttu-id="e6129-127">Obtém um gráfico usando o respectivo nome.</span><span class="sxs-lookup"><span data-stu-id="e6129-127">Gets a chart using its name.</span></span> <span data-ttu-id="e6129-128">Quando houver vários gráficos com o mesmo nome, o sistema retornará o primeiro deles.</span><span class="sxs-lookup"><span data-stu-id="e6129-128">If there are multiple charts with the same name, the first one will be returned.</span></span>

      <span data-ttu-id="e6129-129">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e6129-129">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItem(name)
    fullName: getItem(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(name: string): Excel.Chart;'
      return:
        type:
          - excel.Excel.Chart
        description: |-


          #### <a name="examples"></a><span data-ttu-id="e6129-130">Exemplos</span><span class="sxs-lookup"><span data-stu-id="e6129-130">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var chartname = 'Chart1';
              var chart = ctx.workbook.worksheets.getItem("Sheet1").charts.getItem(chartname);
              return ctx.sync().then(function() {
                      console.log(chart.height);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          Excel.run(function (ctx) { 
              var chartId = 'SampleChartId';
              var chart = ctx.workbook.worksheets.getItem("Sheet1").charts.getItem(chartId);
              return ctx.sync().then(function() {
                      console.log(chart.height);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          Excel.run(function (ctx) { 
              var lastPosition = ctx.workbook.worksheets.getItem("Sheet1").charts.count - 1;
              var chart = ctx.workbook.worksheets.getItem("Sheet1").charts.getItemAt(lastPosition);
              return ctx.sync().then(function() {
                      console.log(chart.name);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: name
          description: <span data-ttu-id="e6129-131">Nome do gráfico a recuperar.</span><span class="sxs-lookup"><span data-stu-id="e6129-131">Name of the chart to be retrieved.</span></span>
          type:
            - string
  - uid: excel.Excel.ChartCollection.getItemAt
    summary: |-
      <span data-ttu-id="e6129-132">Obtém um gráfico com base em sua posição no conjunto.</span><span class="sxs-lookup"><span data-stu-id="e6129-132">Gets a chart based on its position in the collection.</span></span>

      <span data-ttu-id="e6129-133">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e6129-133">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItemAt(index)
    fullName: getItemAt(index)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemAt(index: number): Excel.Chart;'
      return:
        type:
          - excel.Excel.Chart
        description: |-


          #### <a name="examples"></a><span data-ttu-id="e6129-134">Exemplos</span><span class="sxs-lookup"><span data-stu-id="e6129-134">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var lastPosition = ctx.workbook.worksheets.getItem("Sheet1").charts.count - 1;
              var chart = ctx.workbook.worksheets.getItem("Sheet1").charts.getItemAt(lastPosition);
              return ctx.sync().then(function() {
                      console.log(chart.name);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: index
          description: <span data-ttu-id="e6129-135">Valor de índice do objeto a ser recuperado.</span><span class="sxs-lookup"><span data-stu-id="e6129-135">Index value of the object to be retrieved.</span></span> <span data-ttu-id="e6129-136">Indexados com zero.</span><span class="sxs-lookup"><span data-stu-id="e6129-136">Zero-indexed.</span></span>
          type:
            - number
  - uid: excel.Excel.ChartCollection.getItemOrNullObject
    summary: |-
      <span data-ttu-id="e6129-137">Obtém um gráfico usando o respectivo nome.</span><span class="sxs-lookup"><span data-stu-id="e6129-137">Gets a chart using its name.</span></span> <span data-ttu-id="e6129-138">Quando houver vários gráficos com o mesmo nome, o sistema retornará o primeiro deles.</span><span class="sxs-lookup"><span data-stu-id="e6129-138">If there are multiple charts with the same name, the first one will be returned.</span></span> <span data-ttu-id="e6129-139">Se o gráfico não existir, retornará um objeto NULL.</span><span class="sxs-lookup"><span data-stu-id="e6129-139">If the chart does not exist, will return a null object.</span></span>

      <span data-ttu-id="e6129-140">\[[Conjunto de APIs: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e6129-140">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItemOrNullObject(name)
    fullName: getItemOrNullObject(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemOrNullObject(name: string): Excel.Chart;'
      return:
        type:
          - excel.Excel.Chart
        description: ''
      parameters:
        - id: name
          description: <span data-ttu-id="e6129-141">Nome do gráfico a recuperar.</span><span class="sxs-lookup"><span data-stu-id="e6129-141">Name of the chart to be retrieved.</span></span>
          type:
            - string
  - uid: excel.Excel.ChartCollection.items
    summary: <span data-ttu-id="e6129-142">Obtém os itens filhos carregados nesta coleção.</span><span class="sxs-lookup"><span data-stu-id="e6129-142">Gets the loaded child items in this collection.</span></span>
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.Chart[];'
      return:
        type:
          - 'Excel.Chart[]'
  - uid: excel.Excel.ChartCollection.load
    summary: <span data-ttu-id="e6129-143">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="e6129-143">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="e6129-144">Você deve chamar "context.sync()" antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="e6129-144">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="e6129-145">Além dessa assinatura, este método tem as seguintes assinaturas:</span><span class="sxs-lookup"><span data-stu-id="e6129-145">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="e6129-146">`load(option?: string | string[]): Excel.ChartCollection`-Where Option é uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="e6129-146">`load(option?: string | string[]): Excel.ChartCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="e6129-147">`load(option?: { select?: string; expand?: string; }): Excel.ChartCollection`-Onde Option. Select é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades a serem carregadas, e Options. Expand é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades de navegação a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="e6129-147">`load(option?: { select?: string; expand?: string; }): Excel.ChartCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="e6129-148">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ChartCollection`– Disponível somente nos tipos de coleção.</span><span class="sxs-lookup"><span data-stu-id="e6129-148">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ChartCollection` - Only available on collection types.</span></span> <span data-ttu-id="e6129-149">É semelhante à assinatura anterior.</span><span class="sxs-lookup"><span data-stu-id="e6129-149">It is similar to the preceding signature.</span></span> <span data-ttu-id="e6129-150">Option. Top especifica o número máximo de itens de coleta que podem ser incluídos no resultado.</span><span class="sxs-lookup"><span data-stu-id="e6129-150">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="e6129-151">Option. Skip especifica o número de itens que devem ser ignorados e não incluídos no resultado.</span><span class="sxs-lookup"><span data-stu-id="e6129-151">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="e6129-152">Se Option. Top for especificado, o conjunto de resultados será iniciado depois de ignorar o número de itens especificado.</span><span class="sxs-lookup"><span data-stu-id="e6129-152">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.ChartCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.ChartCollection;'
      return:
        type:
          - excel.Excel.ChartCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - Excel.Interfaces.ChartCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
  - uid: excel.Excel.ChartCollection.load_1
    summary: <span data-ttu-id="e6129-153">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="e6129-153">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="e6129-154">Você deve chamar `context.sync()` antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="e6129-154">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.ChartCollection;'
      return:
        type:
          - excel.Excel.ChartCollection
        description: |-


          #### <a name="examples"></a><span data-ttu-id="e6129-155">Exemplos</span><span class="sxs-lookup"><span data-stu-id="e6129-155">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var charts = ctx.workbook.worksheets.getItem("Sheet1").charts;
              charts.load('items');
              return ctx.sync().then(function() {
                  for (var i = 0; i < charts.items.length; i++)
                  {
                      console.log(charts.items[i].name);
                  }
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          // Get the number of charts
          Excel.run(function (ctx) { 
              var charts = ctx.workbook.worksheets.getItem("Sheet1").charts;
              charts.load('count');
              return ctx.sync().then(function() {
                  console.log("charts: Count= " + charts.count);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="e6129-156">Uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="e6129-156">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: excel.Excel.ChartCollection.load_2
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): Excel.ChartCollection;'
      return:
        type:
          - excel.Excel.ChartCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - OfficeExtension.LoadOption
  - uid: excel.Excel.ChartCollection.toJSON
    summary: '<span data-ttu-id="e6129-157">Substitui o método `toJSON()` JavaScript para fornecer uma saída mais útil quando um objeto API é passado para`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="e6129-157">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="e6129-158">.</span><span class="sxs-lookup"><span data-stu-id="e6129-158"></span></span> <span data-ttu-id="e6129-159">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="e6129-159"></span></span><!-- --><span data-ttu-id="e6129-160">, por sua vez, chama `toJSON` o método do objeto que é passado para ele.) Enquanto o objeto `Excel.ChartCollection` original é um objeto API, o `toJSON` método retorna um objeto JavaScript simples (digitado como`Excel.Interfaces.ChartCollectionData`</span><span class="sxs-lookup"><span data-stu-id="e6129-160">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.ChartCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ChartCollectionData`</span></span><!-- --><span data-ttu-id="e6129-161">) que contém uma matriz de "itens" com cópias superficiais de qualquer propriedade carregada dos itens da coleção.</span><span class="sxs-lookup"><span data-stu-id="e6129-161">) that contains an "items" array with shallow copies of any loaded properties from the collection''s items.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.ChartCollectionData;'
      return:
        type:
          - excel.Excel.Interfaces.ChartCollectionData
        description: ''