### YamlMime:UniversalReference
ms.openlocfilehash: af2372ddf4ed57209e55207a28b88bf2babbec7e
ms.sourcegitcommit: 6c48441b8be51d3a9d7dc836e386230a155feceb
ms.translationtype: MT
ms.contentlocale: pt-BR
ms.lasthandoff: 02/22/2019
ms.locfileid: "30199394"
items:
- uid: Outlook_1_5.Office.Mailbox
  summary: >-
    Fornece acesso ao modelo de objeto de Suplemento do Outlook para o Microsoft Outlook e o Microsoft Outlook na Web.


    Namespaces


    - diagnostics: Fornece informações de diagnóstico para um suplemento do Outlook.


    - item: Fornece propriedades e métodos para acessar uma mensagem ou um compromisso em um suplemento do Outlook.


    - userProfile: Fornece informações sobre o usuário em um suplemento do Outlook.


    \[[Conjunto de APIs: caixa de correio 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: <table> <tr><td>[Nível de permissão mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>Restrito</td></tr> <tr><td>[Modo do Outlook aplicável](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Escrever ou Ler</td></tr> </table>
  name: Office.Mailbox
  fullName: Office.Mailbox
  langs:
  - typeScript
  type: interface
  package: Outlook_1_5
  children:
  - Outlook_1_5.Office.Mailbox.addHandlerAsync
  - Outlook_1_5.Office.Mailbox.addHandlerAsync_1
  - Outlook_1_5.Office.Mailbox.convertToEwsId
  - Outlook_1_5.Office.Mailbox.convertToLocalClientTime
  - Outlook_1_5.Office.Mailbox.convertToRestId
  - Outlook_1_5.Office.Mailbox.convertToUtcClientTime
  - Outlook_1_5.Office.Mailbox.displayAppointmentForm
  - Outlook_1_5.Office.Mailbox.displayMessageForm
  - Outlook_1_5.Office.Mailbox.displayNewAppointmentForm
  - Outlook_1_5.Office.Mailbox.getCallbackTokenAsync
  - Outlook_1_5.Office.Mailbox.getCallbackTokenAsync_1
  - Outlook_1_5.Office.Mailbox.getUserIdentityTokenAsync
  - Outlook_1_5.Office.Mailbox.makeEwsRequestAsync
  - Outlook_1_5.Office.Mailbox.removeHandlerAsync
  - Outlook_1_5.Office.Mailbox.removeHandlerAsync_1
  - Outlook_1_5.Office.Mailbox.diagnostics
  - Outlook_1_5.Office.Mailbox.ewsUrl
  - Outlook_1_5.Office.Mailbox.item
  - Outlook_1_5.Office.Mailbox.restUrl
  - Outlook_1_5.Office.Mailbox.userProfile
- uid: Outlook_1_5.Office.Mailbox.addHandlerAsync
  summary: >-
    Adiciona um manipulador de eventos a um evento com suporte.


    No momento, o único tipo de evento `Office.EventType.ItemChanged` <!-- -->suportado é.


    \[[Conjunto de APIs: caixa de correio 1,5](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: <table> <tr><td>[Nível de permissão mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr> <tr><td>[Modo Aplicável do Outlook](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Escrever ou Ler</td></tr> </table>
  name: addHandlerAsync(eventType, handler, options, callback)
  fullName: addHandlerAsync(eventType, handler, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addHandlerAsync(eventType: Office.EventType, handler: (type: Office.EventType) => void, options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: eventType
      description: O evento que deve invocar o manipulador.
      type:
      - Office.EventType
    - id: handler
      description: A função para manipular o evento. A função deve aceitar um único parâmetro, que é um literal de objeto. A propriedade Type no parâmetro corresponderá ao parâmetro eventType passado para addHandlerAsync.
      type:
      - '(type: Office.EventType) => void'
    - id: options
      description: Opcional. Fornece uma opção para preservar dados de contexto de qualquer tipo, inalterados, para uso em um retorno de chamada.
      type:
      - Office.AsyncContextOptions
    - id: callback
      description: Opcional. Quando o método for concluído, a função passada ao parâmetro callback será chamada com um único parâmetro do tipo Office. AsyncResult.
      type:
      - '(asyncResult: Office.AsyncResult<void>) => void'
- uid: Outlook_1_5.Office.Mailbox.addHandlerAsync_1
  summary: >-
    Adiciona um manipulador de eventos a um evento com suporte.


    No momento, o único tipo de evento `Office.EventType.ItemChanged` <!-- -->suportado é.


    \[[Conjunto de APIs: caixa de correio 1,5](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table> <tr><td>[Nível de permissão mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr> <tr><td>[Modo Aplicável do Outlook](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Escrever ou Ler</td></tr> </table>

    ####Veja


    ```javascript

    Office.initialize = function (reason) {
        $(document).ready(function () {
            Office.context.mailbox.addHandlerAsync(Office.EventType.ItemChanged, loadNewItem, function (result) {
            if (result.status === Office.AsyncResultStatus.Failed) {
                    // Handle error.
                }
            });
        });
    };


    function loadNewItem(eventArgs) {
        // Load the properties of the newly selected item.
        loadProps(Office.context.mailbox.item);
    }

    ```
  name: addHandlerAsync(eventType, handler, callback)
  fullName: addHandlerAsync(eventType, handler, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addHandlerAsync(eventType: Office.EventType, handler: (type: Office.EventType) => void, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: eventType
      description: O evento que deve invocar o manipulador.
      type:
      - Office.EventType
    - id: handler
      description: A função para manipular o evento. A função deve aceitar um único parâmetro, que é um literal de objeto. A propriedade Type no parâmetro corresponderá ao parâmetro eventType passado para addHandlerAsync.
      type:
      - '(type: Office.EventType) => void'
    - id: callback
      description: Opcional. Quando o método for concluído, a função passada ao parâmetro callback será chamada com um único parâmetro do tipo Office. AsyncResult.
      type:
      - '(asyncResult: Office.AsyncResult<void>) => void'
- uid: Outlook_1_5.Office.Mailbox.convertToEwsId
  summary: >-
    Converte uma ID de item formatada para REST no formato EWS.


    IDs de itens recuperadas por meio de uma API REST (como a API do Email do Outlook ou o Microsoft Graph) usam um formato diferente daquele usado pelos Serviços Web do Exchange (EWS). O método convertToEwsId converte uma ID formatada em REST no formato adequado para EWS.


    **Observação**: não há suporte para esse método no Outlook para Ios ou no Outlook para Android.


    \[[Conjunto de APIs: caixa de correio 1,3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table> <tr><td>[Nível de permissão mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>Restrito</td></tr> <tr><td>[Modo do Outlook aplicável](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Escrever ou Ler</td></tr> </table>

    ####Veja


    ```javascript

    // Get an item's ID from a REST API.

    var restId = 'AAMkAGVlOTZjNTM3LW...';


    // Treat restId as coming from the v2.0 version of the Outlook Mail API.

    var ewsId = Office.context.mailbox.convertToEwsId(restId, Office.MailboxEnums.RestVersion.v2_0);

    ```
  name: convertToEwsId(itemId, restVersion)
  fullName: convertToEwsId(itemId, restVersion)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'convertToEwsId(itemId: string, restVersion: MailboxEnums.RestVersion): string;'
    return:
      type:
      - string
      description: ''
    parameters:
    - id: itemId
      description: Uma ID de item formatada para as APIs REST do Outlook.
      type:
      - string
    - id: restVersion
      description: Um valor que indica a versão da API REST do Outlook usada para recuperar a ID do item.
      type:
      - MailboxEnums.RestVersion
- uid: Outlook_1_5.Office.Mailbox.convertToLocalClientTime
  summary: >-
    Obtém um dicionário contendo informações de hora em tempo local do cliente.


    As datas e horas usadas por um aplicativo de email para o Outlook ou o Outlook Web App podem usar fusos horários diferentes. O Outlook usa o fuso horário do computador cliente; o Outlook Web App usa o fuso horário definido na Centro de administração do Exchange (EAC). Você deve lidar com valores de data e hora para que os valores exibidos na interface do usuário sejam sempre consistentes com o fuso horário que o usuário espera.


    Se o aplicativo de email estiver sendo executado no Outlook, o método convertToLocalClientTime retornará um objeto de dicionário com os valores definidos para o fuso horário do computador do cliente. Se o aplicativo de email estiver sendo executado no Outlook Web App, o método convertToLocalClientTime retornará um objeto de dicionário com os valores definidos para o fuso horário especificado no EAC.


    \[[Conjunto de APIs: caixa de correio 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: <table> <tr><td>[Nível de permissão mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr> <tr><td>[Modo Aplicável do Outlook](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Escrever ou Ler</td></tr> </table>
  name: convertToLocalClientTime(timeValue)
  fullName: convertToLocalClientTime(timeValue)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'convertToLocalClientTime(timeValue: Date): LocalClientTime;'
    return:
      type:
      - LocalClientTime
      description: ''
    parameters:
    - id: timeValue
      description: Um objeto Date.
      type:
      - Date
- uid: Outlook_1_5.Office.Mailbox.convertToRestId
  summary: >-
    Converte uma ID de item formatada para EWS no formato REST.


    **Observação**: não há suporte para esse método no Outlook para Ios ou no Outlook para Android.


    \[[Conjunto de APIs: caixa de correio 1,3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table> <tr><td>[Nível de permissão mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>Restrito</td></tr> <tr><td>[Modo do Outlook aplicável](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Escrever ou Ler</td></tr> </table>


    IDs de item recuperadas por meio do EWS ou pela propriedade itemId usam um formato diferente do formato usado por APIs REST (como a [API de email do Outlook](https://docs.microsoft.com/previous-versions/office/office-365-api/api/version-2.0/mail-rest-operations) ou o [Microsoft Graph](https://graph.microsoft.io/)<!-- -->. O método convertToRestId converte uma ID formatada do EWS no formato apropriado para REST.

    #### <a name="examples"></a>Exemplos


    ```javascript

    // Get the currently selected item's ID.

    var ewsId = Office.context.mailbox.item.itemId;


    // Convert to a REST ID for the v2.0 version of the Outlook Mail API.

    var restId = Office.context.mailbox.convertToRestId(ewsId, Office.MailboxEnums.RestVersion.v2_0);

    ```
  name: convertToRestId(itemId, restVersion)
  fullName: convertToRestId(itemId, restVersion)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'convertToRestId(itemId: string, restVersion: MailboxEnums.RestVersion): string;'
    return:
      type:
      - string
      description: ''
    parameters:
    - id: itemId
      description: Uma ID de item formatada para os Serviços Web do Exchange (EWS)
      type:
      - string
    - id: restVersion
      description: Um valor que indica a versão da API REST do Outlook com a qual a ID convertida será usada.
      type:
      - MailboxEnums.RestVersion
- uid: Outlook_1_5.Office.Mailbox.convertToUtcClientTime
  summary: >-
    Obtém um objeto Date de um dicionário contendo as informações de hora.


    O método convertToUtcClientTime converte um dicionário que contém uma data e hora locais para um objeto Date com os valores corretos para a data e hora locais.


    \[[Conjunto de APIs: caixa de correio 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: <table> <tr><td>[Nível de permissão mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr> <tr><td>[Modo Aplicável do Outlook](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Escrever ou Ler</td></tr> </table>
  name: convertToUtcClientTime(input)
  fullName: convertToUtcClientTime(input)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'convertToUtcClientTime(input: LocalClientTime): Date;'
    return:
      type:
      - Date
      description: Um objeto Date com a hora expressa em UTC.
    parameters:
    - id: input
      description: O valor de hora local a converter.
      type:
      - LocalClientTime
- uid: Outlook_1_5.Office.Mailbox.displayAppointmentForm
  summary: >-
    Exibe um compromisso de calendário existente.


    O método displayAppointmentForm abre um compromisso de calendário existente em uma nova janela na área de trabalho ou em uma caixa de diálogo em dispositivos móveis.


    No Outlook para Mac, você pode usar esse método para exibir um único compromisso que não faz parte de uma série recorrente, ou o compromisso mestre de uma série recorrente, mas não pode exibir uma instância da série. Isso ocorre porque no Outlook para Mac você não pode acessar as propriedades (incluindo a ID do item) das instâncias de uma série recorrente.


    No Outlook Web App, este método abre o formulário especificado somente se o corpo do formulário for menor que ou igual ao número de caracteres de 32 KB.


    Se o identificador do item especificado não identificar um compromisso existente, um painel em branco abre no dispositivo ou no computador cliente e nenhuma mensagem de erro será exibida.


    **Observação**: não há suporte para esse método no Outlook para Ios ou no Outlook para Android.


    \[[Conjunto de APIs: caixa de correio 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table> <tr><td>[Nível de permissão mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr> <tr><td>[Modo Aplicável do Outlook](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Escrever ou Ler</td></tr> </table>

    ####Veja


    ```javascript

    Office.context.mailbox.displayAppointmentForm(appointmentId);

    ```
  name: displayAppointmentForm(itemId)
  fullName: displayAppointmentForm(itemId)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'displayAppointmentForm(itemId: string): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: itemId
      description: O identificador dos Serviços Web do Exchange (EWS) para um compromisso de calendário existente.
      type:
      - string
- uid: Outlook_1_5.Office.Mailbox.displayMessageForm
  summary: >-
    Exibe uma mensagem existente.


    O método displayMessageForm abre uma mensagem existente em uma nova janela na área de trabalho ou em uma caixa de diálogo em dispositivos móveis.


    No Outlook Web App, este método abre o formulário especificado somente se o corpo do formulário for menor que ou igual ao número de caracteres de 32 KB.


    Se o identificador do item especificado não identificar uma mensagem existente, não será exibida mensagem no computador cliente e nenhuma mensagem de erro será retornada.


    Não use o método displayMessageForm com um itemId que representa um compromisso. Use o método displayAppointmentForm para exibir um compromisso existente e displayNewAppointmentForm para exibir um formulário para criar um novo compromisso.


    **Observação**: não há suporte para esse método no Outlook para Ios ou no Outlook para Android.


    \[[Conjunto de APIs: caixa de correio 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table> <tr><td>[Nível de permissão mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr> <tr><td>[Modo Aplicável do Outlook](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Escrever ou Ler</td></tr> </table>

    ####Veja


    ```javascript

    Office.context.mailbox.displayMessageForm(messageId);

    ```
  name: displayMessageForm(itemId)
  fullName: displayMessageForm(itemId)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'displayMessageForm(itemId: string): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: itemId
      description: O identificador dos Serviços Web do Exchange (EWS) para uma mensagem existente.
      type:
      - string
- uid: Outlook_1_5.Office.Mailbox.displayNewAppointmentForm
  summary: >-
    Exibe um formulário para criar um compromisso no calendário.


    O método displayNewAppointmentForm abre um formulário que permite ao usuário criar um novo compromisso ou reunião. Se o parâmetro for especificado, os campos de formulário do compromisso serão preenchidos automaticamente com o conteúdo dos parâmetros.


    No Outlook Web App e no OWA para Dispositivos, este método sempre exibe um formulário com um campo de participantes. Se você não especificar quaisquer participantes como argumentos de entrada, o método exibe um formulário com um botão Salvar. Se você especificar participantes, o formulário inclui os participantes e um botão Enviar.


    No cliente avançado do Outlook e no Outlook RT, se você especificar qualquer participante ou recurso no parâmetro requiredAttendees, optionalAttendees ou Resources, este método exibirá um formulário de reunião com um botão enviar. Se você não especificar nenhum destinatário, este método exibirá um formulário de compromisso com &amp; um botão salvar fechar.


    Se qualquer dos parâmetros exceder os limites de tamanho especificados, ou se um nome de parâmetro desconhecido for especificado, ocorre uma exceção.


    **Observação**: não há suporte para esse método no Outlook para Ios ou no Outlook para Android.


    \[[Conjunto de APIs: caixa de correio 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table> <tr><td>[Nível de permissão mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr> <tr><td>[Modo Aplicável do Outlook](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Read</td></tr> </table>

    ####Veja


    ```javascript

    var start = new Date();

    var end = new Date();

    end.setHours(start.getHours() + 1);


    Office.context.mailbox.displayNewAppointmentForm(

    {
        requiredAttendees: ['bob@contoso.com'],
        optionalAttendees: ['sam@contoso.com'],
        start: start,
        end: end,
        location: 'Home',
        resources: ['projector@contoso.com'],
        subject: 'meeting',
        body: 'Hello World!'
    });

    ```
  name: displayNewAppointmentForm(parameters)
  fullName: displayNewAppointmentForm(parameters)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'displayNewAppointmentForm(parameters: AppointmentForm): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: parameters
      description: Um AppointmentForm que descreve o novo compromisso. Todas as propriedades são opcionais.
      type:
      - AppointmentForm
- uid: Outlook_1_5.Office.Mailbox.getCallbackTokenAsync
  summary: >-
    Obtém uma cadeia de caracteres que contém um token usado para chamar APIs REST ou Serviços Web do Exchange.


    O método getCallbackTokenAsync faz uma chamada assíncrona para obter um token opaco do Exchange Server que hospeda a caixa de correio do usuário. A vida útil do token de retorno de chamada é de 5 minutos.


    *Tokens REST*


    Quando um token REST é solicitado (Options. isRest = true), o token resultante não funcionará para autenticar chamadas de serviços Web do Exchange. O token será limitado no escopo para acesso somente leitura ao item atual e seus anexos, a menos que o suplemento tenha especificado a permissão ReadWriteMailbox em seu manifesto. Se a permissão ReadWriteMailbox for especificada, o token resultante concederá acesso de leitura/gravação a emails, calendário e contatos, incluindo a capacidade de enviar emails.


    O suplemento deve usar a propriedade restUrl para determinar a URL correta a ser usada ao fazer chamadas da API REST.


    *Tokens EWS*


    Quando um token do EWS é solicitado (Options. isRest = false), o token resultante não funcionará para autenticar chamadas à API REST. O token será limitado no escopo para acessar o item atual.


    O suplemento deve usar a propriedade ewsUrl para determinar a URL correta a ser usada ao fazer chamadas de EWS.


    **Observação**: é recomendável que os suplementos usem as APIs REST em vez de serviços Web do Exchange sempre que possível.


    \[[Conjunto de APIs: caixa de correio 1,5](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table> <tr><td>[Nível de permissão mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr> <tr><td>[Modo Aplicável do Outlook](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Escrever ou Ler</td></tr> </table>

    ####Veja


    ```javascript

    function getCallbackToken() {
        var options = {
            isRest: true,
            asyncContext: { message: 'Hello World!' }
        };

        Office.context.mailbox.getCallbackTokenAsync(options, cb);
    }


    function cb(asyncResult) {
        var token = asyncResult.value;
    }

    ```
  name: getCallbackTokenAsync(options, callback)
  fullName: getCallbackTokenAsync(options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getCallbackTokenAsync(options: Office.AsyncContextOptions & { isRest?: boolean }, callback: (asyncResult: Office.AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: options
      description: 'Um objeto literal que contém uma ou mais das propriedades a seguir. isRest: determina se o token fornecido será usado para as APIs REST do Outlook ou serviços Web do Exchange. O valor padrão é false. asyncContext: quaisquer dados de estado que são passados para o método assíncrono.'
      type:
      - 'Office.AsyncContextOptions & { isRest?: boolean }'
    - id: callback
      description: Quando o método for concluído, a função passada ao parâmetro callback será chamada com um único parâmetro do tipo Office. AsyncResult. O token é fornecido como uma cadeia de caracteres na propriedade `asyncResult.value`. Se houve um erro, as `asyncResult.error` Propriedades e `asyncResult.diagnostics` podem fornecer informações adicionais.
      type:
      - '(asyncResult: Office.AsyncResult<string>) => void'
- uid: Outlook_1_5.Office.Mailbox.getCallbackTokenAsync_1
  summary: >-
    Obtém uma cadeia de caracteres que contém um token usado para obter um anexo ou um item de um Exchange Server.


    O método getCallbackTokenAsync faz uma chamada assíncrona para obter um token opaco do Exchange Server que hospeda a caixa de correio do usuário. A vida útil do token de retorno de chamada é de 5 minutos.


    Você pode passar o token e um identificador de anexo ou um identificador de item a um sistema de terceiros. O sistema de terceiros usa o token como portador da autorização para chamar as operações GetAttachment ou GetItem dos Serviços Web do Exchange (EWS) para retornar um anexo ou item. Por exemplo, você pode criar um serviço remoto para obter anexos do item selecionado.


    Seu aplicativo deve ter a permissão ReadItem especificada em seu manifesto para chamar o método getCallbackTokenAsync em modo de leitura.


    No modo de redação, você deve chamar o método saveAsync para obter um identificador do item para passar para o método getCallbackTokenAsync. Seu aplicativo deve ter permissões de ReadWriteItem para chamar o método saveAsync.


    \[[Conjunto de APIs: caixa de correio 1,3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table> <tr><td>[Nível de permissão mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr> <tr><td>[Modo Aplicável do Outlook](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Escrever ou Ler</td></tr> </table>

    ####Veja


    ```javascript

    function getCallbackToken() {
        Office.context.mailbox.getCallbackTokenAsync(cb);
    }


    function cb(asyncResult) {
        var token = asyncResult.value;
    }

    ```
  name: getCallbackTokenAsync(callback, userContext)
  fullName: getCallbackTokenAsync(callback, userContext)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getCallbackTokenAsync(callback: (asyncResult: Office.AsyncResult<string>) => void, userContext?: any): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: callback
      description: Quando o método for concluído, a função passada ao parâmetro callback será chamada com um único parâmetro do tipo Office. AsyncResult. O token é fornecido como uma cadeia de caracteres na propriedade `asyncResult.value`. Se houve um erro, as `asyncResult.error` Propriedades e `asyncResult.diagnostics` podem fornecer informações adicionais.
      type:
      - '(asyncResult: Office.AsyncResult<string>) => void'
    - id: userContext
      description: Opcional. Quaisquer dados de estado que são passados ao método assíncrono.
      type:
      - any
- uid: Outlook_1_5.Office.Mailbox.getUserIdentityTokenAsync
  summary: >-
    Obtém um símbolo que identifica o usuário e o suplemento do Office.


    O token é fornecido como uma cadeia de caracteres na propriedade asyncResult.value.


    \[[Conjunto de APIs: caixa de correio 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table> <tr><td>[Nível de permissão mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr> <tr><td>[Modo Aplicável do Outlook](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Escrever ou Ler</td></tr> </table>


    O método getUserIdentityTokenAsync retorna um token que você pode usar para identificar e [autenticar o suplemento e o usuário com um sistema](https://docs.microsoft.com/outlook/add-ins/authentication)<!-- -->de terceiros.

    #### <a name="examples"></a>Exemplos


    ```javascript

    function getIdentityToken() {
        Office.context.mailbox.getUserIdentityTokenAsync(cb);
    }


    function cb(asyncResult) {
        var token = asyncResult.value;
    }

    ```
  name: getUserIdentityTokenAsync(callback, userContext)
  fullName: getUserIdentityTokenAsync(callback, userContext)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getUserIdentityTokenAsync(callback: (asyncResult: Office.AsyncResult<string>) => void, userContext?: any): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: callback
      description: Quando o método for concluído, a função passada ao parâmetro callback será chamada com um único parâmetro do tipo Office. AsyncResult. O token é fornecido como uma cadeia de caracteres na propriedade `asyncResult.value`. Se houve um erro, as `asyncResult.error` Propriedades e `asyncResult.diagnostics` podem fornecer informações adicionais.
      type:
      - '(asyncResult: Office.AsyncResult<string>) => void'
    - id: userContext
      description: Opcional. Quaisquer dados de estado que são passados ao método assíncrono.\|
      type:
      - any
- uid: Outlook_1_5.Office.Mailbox.makeEwsRequestAsync
  summary: >-
    Faz uma solicitação assíncrona para um serviço de serviços Web do Exchange (EWS) no servidor Exchange que hospeda a caixa de correio do usuário.


    Nesses casos, os suplementos devem usar as APIs REST para acessar a caixa de correio do usuário.


    O método makeEwsRequestAsync envia uma solicitação do EWS em nome do suplemento ao Exchange.


    Não é possível solicitar Itens associados da pasta com o método makeEwsRequestAsync.


    A solicitação XML deve especificar a codificação UTF-8. &lt;<!-- -->?xml Version = "1.0" Encoding = "UTF-8"?<!-- -->&gt;


    Seu suplemento deve ter a permissão ReadWriteMailbox para usar o método makeEwsRequestAsync. Para obter informações sobre como usar a permissão ReadWriteMailbox e as operações do EWS que você pode chamar com o método makeEwsRequestAsync, consulte<!-- --> [especificar permissões para o acesso do suplemento de email à caixa de correio do usuário](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions).


    O resultado XML da chamada do EWS é fornecido como uma cadeia de caracteres na propriedade asyncResult.value. Se o resultado exceder 1 MB de tamanho, uma mensagem de erro será retornada.


    **Observação**: esse método não tem suporte nos seguintes cenários:


    - No Outlook para iOS ou no Outlook para Android.


    - Quando o suplemento é carregado em uma caixa de correio do gmail.


    **Observação**: o administrador do servidor deve definir OAuthAuthentication como true no diretório EWS do servidor de acesso para cliente para permitir que o método makeEwsRequestAsync faça solicitações do EWS.


    *Diferenças de versão*


    Ao usar o método makeEwsRequestAsync nos aplicativos de email em execução em versões do Outlook anteriores à 15.0.4535.1004, é preciso definir o valor de codificação como ISO-8859-1.


    `<?xml version="1.0" encoding="iso-8859-1"?>`


    Não é necessário definir o valor de codificação quando o aplicativo de email estiver em execução no Outlook na Web. Você pode determinar se o aplicativo de email está em execução no Outlook ou no Outlook na Web usando a propriedade mailbox.diagnostics.hostName. Você pode determinar que versão do Outlook está em execução usando a propriedade mailbox.diagnostics.hostVersion.


    \[[Conjunto de APIs: caixa de correio 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table> <tr><td>[Nível de permissão mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteMailbox</td></tr> <tr><td>[Modo do Outlook aplicável](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Escrever ou Ler</td></tr> </table>

    ####Veja


    ```javascript

    function getSubjectRequest(id) {
        // Return a GetItem operation request for the subject of the specified item.
        var request =
            '<?xml version="1.0" encoding="utf-8"?>' +
            '<soap:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"' +
            '               xmlns:xsd="http://www.w3.org/2001/XMLSchema"' +
            '               xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"' +
            '               xmlns:t="http://schemas.microsoft.com/exchange/services/2006/types">' +
            '  <soap:Header>' +
            '    <RequestServerVersion Version="Exchange2013" xmlns="http://schemas.microsoft.com/exchange/services/2006/types" soap:mustUnderstand="0" />' +
            '  </soap:Header>' +
            '  <soap:Body>' +
            '    <GetItem xmlns="http://schemas.microsoft.com/exchange/services/2006/messages">' +
            '      <ItemShape>' +
            '        <t:BaseShape>IdOnly</t:BaseShape>' +
            '        <t:AdditionalProperties>' +
            '            <t:FieldURI FieldURI="item:Subject"/>' +
            '        </t:AdditionalProperties>' +
            '      </ItemShape>' +
            '      <ItemIds><t:ItemId Id="' + id + '"/></ItemIds>' +
            '    </GetItem>' +
            '  </soap:Body>' +
            '</soap:Envelope>';

        return request;
    }


    function sendRequest() {
        // Create a local variable that contains the mailbox.
        Office.context.mailbox.makeEwsRequestAsync(
            getSubjectRequest(mailbox.item.itemId), callback);
    }


    function callback(asyncResult)  {
        var result = asyncResult.value;
        var context = asyncResult.asyncContext;

        // Process the returned response here.
    }

    ```
  name: makeEwsRequestAsync(data, callback, userContext)
  fullName: makeEwsRequestAsync(data, callback, userContext)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'makeEwsRequestAsync(data: any, callback: (asyncResult: Office.AsyncResult<string>) => void, userContext?: any): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: data
      description: A solicitação do EWS.
      type:
      - any
    - id: callback
      description: Quando o método for concluído, a função passada ao parâmetro callback será chamada com um único parâmetro do tipo Office. AsyncResult. A `value` Propriedade do resultado é o XML da solicitação EWS fornecido como uma cadeia de caracteres. Se o resultado exceder 1 MB de tamanho, será exibida uma mensagem de erro.
      type:
      - '(asyncResult: Office.AsyncResult<string>) => void'
    - id: userContext
      description: Opcional. Quaisquer dados de estado que são passados ao método assíncrono.
      type:
      - any
- uid: Outlook_1_5.Office.Mailbox.removeHandlerAsync
  summary: >-
    Remove um manipulador de eventos para um tipo de evento com suporte.


    No momento, o único tipo de evento `Office.EventType.ItemChanged` <!-- -->suportado é.


    \[[Conjunto de APIs: caixa de correio 1,5](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: <table> <tr><td>[Nível de permissão mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr> <tr><td>[Modo Aplicável do Outlook](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Escrever ou Ler</td></tr> </table>
  name: removeHandlerAsync(eventType, options, callback)
  fullName: removeHandlerAsync(eventType, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'removeHandlerAsync(eventType: Office.EventType, options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: eventType
      description: O evento que deve revogar o manipulador.
      type:
      - Office.EventType
    - id: options
      description: Opcional. Fornece uma opção para preservar dados de contexto de qualquer tipo, inalterados, para uso em um retorno de chamada.
      type:
      - Office.AsyncContextOptions
    - id: callback
      description: Opcional. Quando o método for concluído, a função passada ao parâmetro callback será chamada com um único parâmetro do tipo Office. AsyncResult.
      type:
      - '(asyncResult: Office.AsyncResult<void>) => void'
- uid: Outlook_1_5.Office.Mailbox.removeHandlerAsync_1
  summary: >-
    Remove um manipulador de eventos para um tipo de evento com suporte.


    No momento, o único tipo de evento `Office.EventType.ItemChanged` <!-- -->suportado é.


    \[[Conjunto de APIs: caixa de correio 1,5](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: <table> <tr><td>[Nível de permissão mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr> <tr><td>[Modo do Outlook aplicável](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Escrever ou Ler</td></tr> </table>
  name: removeHandlerAsync(eventType, callback)
  fullName: removeHandlerAsync(eventType, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'removeHandlerAsync(eventType: Office.EventType, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: eventType
      description: O evento que deve revogar o manipulador.
      type:
      - Office.EventType
    - id: callback
      description: Opcional. Quando o método for concluído, a função passada ao parâmetro callback será chamada com um único parâmetro do tipo Office. AsyncResult.
      type:
      - '(asyncResult: Office.AsyncResult<void>) => void'
- uid: Outlook_1_5.Office.Mailbox.diagnostics
  summary: >-
    Fornece informações de diagnóstico para um suplemento do Outlook.


    Contém os seguintes membros:


    - hostName (cadeia de caracteres): uma cadeia de caracteres que representa o nome do aplicativo host. Ele é um dos seguintes valores: Outlook, Mac Outlook, OutlookIOS ou Protocoloutlookwebapp.


    - hostVersion (cadeia de caracteres): uma cadeia de caracteres que representa a versão do aplicativo host ou do servidor Exchange. Se o suplemento de email estiver em execução no cliente da área de trabalho do Outlook ou no Outlook para iOS, a propriedade hostVersion retornará a versão do aplicativo host, o Outlook. No Outlook Web App, a propriedade retorna a versão do servidor Exchange. Um exemplo é a cadeia de caracteres 15.0.468.0.


    - OWAView (MailboxEnums. OWAView ou cadeia de caracteres): uma enumeração (ou literal de cadeia de caracteres) que representa o modo de exibição atual do Outlook Web App. Se o aplicativo host não for Outlook Web App, acessar essa propriedade resultará em undefined. O Outlook Web App tem três modos de exibição (OneColumn-exibidos quando a tela é estreita, TwoColumns-exibido quando a tela é mais larga e ThreeColumns-exibido quando a tela é larga) que corresponde à largura da tela e à janela e ao número de colunas que podem ser exibidos.


    Há mais informações em [Office. Diagnostics](xref:Outlook_1_5.Office.Diagnostics)<!-- -->.


    \[[Conjunto de APIs: caixa de correio 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: <table> <tr><td>[Nível de permissão mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr> <tr><td>[Modo do Outlook aplicável](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Escrever ou Ler</td></tr> </table>
  name: diagnostics
  fullName: diagnostics
  langs:
  - typeScript
  type: property
  syntax:
    content: 'diagnostics: Diagnostics;'
    return:
      type:
      - Diagnostics
- uid: Outlook_1_5.Office.Mailbox.ewsUrl
  summary: >-
    Obtém a URL do ponto de extremidade dos EWS (Serviços Web do Exchange) para esta conta de email. Somente modo de Leitura.


    Seu aplicativo deve ter a permissão ReadItem especificada em seu manifesto para chamar o membro ewsUrl no modo de leitura.


    No modo de composição, você deve chamar o método saveAsync antes de poder usar o membro ewsUrl. Seu aplicativo deve ter permissões ReadWriteItem para chamar o método saveAsync.


    \[[Conjunto de APIs: caixa de correio 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table> <tr><td>[Nível de permissão mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr> <tr><td>[Modo do Outlook aplicável](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Escrever ou Ler</td></tr> </table>


    O valor ewsUrl pode ser usado por um serviço remoto para fazer chamadas de EWS para a caixa de correio do usuário. Por exemplo, você pode criar um serviço remoto para [obter anexos do item](https://docs.microsoft.com/outlook/add-ins/get-attachments-of-an-outlook-item)<!-- -->selecionado.


    **Observação**: não há suporte para esse membro no Outlook para Ios ou no Outlook para Android.
  name: ewsUrl
  fullName: ewsUrl
  langs:
  - typeScript
  type: property
  syntax:
    content: 'ewsUrl: string;'
    return:
      type:
      - string
- uid: Outlook_1_5.Office.Mailbox.item
  summary: 'O item da caixa de correio. Dependendo do contexto no qual o suplemento foi aberto, o item pode ser de qualquer número de tipos. Se você quiser ver o IntelliSense somente para um tipo específico, você deve converter este item em um dos seguintes: `ItemCompose` <!-- -->, `ItemRead` <!-- -->, `MessageCompose` <!-- --> `MessageRead` <!-- --> `AppointmentCompose` <!-- -->,,,`AppointmentRead`'
  name: item
  fullName: item
  langs:
  - typeScript
  type: property
  syntax:
    content: 'item: Item & ItemCompose & ItemRead & MessageRead & MessageCompose & AppointmentRead & AppointmentCompose;'
    return:
      type:
      - Item & ItemCompose & ItemRead & MessageRead & MessageCompose & AppointmentRead & AppointmentCompose
- uid: Outlook_1_5.Office.Mailbox.restUrl
  summary: >-
    Obtém a URL do ponto de extremidade de REST para esta conta de email.


    Seu aplicativo deve ter a permissão ReadItem especificada em seu manifesto para chamar o membro restUrl no modo de leitura.


    No modo de composição, você deve chamar o método saveAsync antes de poder usar o membro restUrl. Seu aplicativo deve ter permissões ReadWriteItem para chamar o método saveAsync.


    \[[Conjunto de APIs: caixa de correio 1,5](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table> <tr><td>[Nível de permissão mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr> <tr><td>[Modo do Outlook aplicável](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Escrever ou Ler</td></tr> </table>


    O valor restUrl pode ser usado para fazer chamadas da [API REST](https://docs.microsoft.com/outlook/rest/) para a caixa de correio do usuário.
  name: restUrl
  fullName: restUrl
  langs:
  - typeScript
  type: property
  syntax:
    content: 'restUrl: string;'
    return:
      type:
      - string
- uid: Outlook_1_5.Office.Mailbox.userProfile
  summary: >-
    Informações sobre o usuário associado à caixa de correio. Isso inclui o tipo de conta, o nome para exibição, o endereço de email e o fuso horário.


    Há mais informações em [Office. UserProfile](xref:Outlook_1_5.Office.UserProfile)
  name: userProfile
  fullName: userProfile
  langs:
  - typeScript
  type: property
  syntax:
    content: 'userProfile: UserProfile;'
    return:
      type:
      - UserProfile
