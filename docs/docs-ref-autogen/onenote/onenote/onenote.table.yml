### YamlMime:UniversalReference
items:
  - uid: 'onenote!OneNote.Table:class'
    summary: |-
      <span data-ttu-id="48b02-101">Representa uma tabela em uma página do OneNote.</span><span class="sxs-lookup"><span data-stu-id="48b02-101">Represents a table in a OneNote page.</span></span>

      <span data-ttu-id="48b02-102">\[[Conjunto de APIs: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="48b02-102">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: OneNote.Table
    fullName: OneNote.Table
    langs:
      - typeScript
    type: class
    extends:
      - 'onenote!OfficeExtension.ClientObject:class'
    package: onenote!
    children:
      - 'onenote!OneNote.Table#appendColumn:member(1)'
      - 'onenote!OneNote.Table#appendRow:member(1)'
      - 'onenote!OneNote.Table#borderVisible:member'
      - 'onenote!OneNote.Table#clear:member(1)'
      - 'onenote!OneNote.Table#columnCount:member'
      - 'onenote!OneNote.Table#context:member'
      - 'onenote!OneNote.Table#getCell:member(1)'
      - 'onenote!OneNote.Table#id:member'
      - 'onenote!OneNote.Table#insertColumn:member(1)'
      - 'onenote!OneNote.Table#insertRow:member(1)'
      - 'onenote!OneNote.Table#load:member(1)'
      - 'onenote!OneNote.Table#load:member(2)'
      - 'onenote!OneNote.Table#load:member(3)'
      - 'onenote!OneNote.Table#paragraph:member'
      - 'onenote!OneNote.Table#rowCount:member'
      - 'onenote!OneNote.Table#rows:member'
      - 'onenote!OneNote.Table#set:member(1)'
      - 'onenote!OneNote.Table#set:member(2)'
      - 'onenote!OneNote.Table#setShadingColor:member(1)'
      - 'onenote!OneNote.Table#toJSON:member(1)'
      - 'onenote!OneNote.Table#track:member(1)'
      - 'onenote!OneNote.Table#untrack:member(1)'
  - uid: 'onenote!OneNote.Table#appendColumn:member(1)'
    summary: |-
      <span data-ttu-id="48b02-103">Adiciona uma coluna ao final da tabela.</span><span class="sxs-lookup"><span data-stu-id="48b02-103">Adds a column to the end of the table.</span></span> <span data-ttu-id="48b02-104">Valores, se especificados, são definidos na nova coluna.</span><span class="sxs-lookup"><span data-stu-id="48b02-104">Values, if specified, are set in the new column.</span></span> <span data-ttu-id="48b02-105">Caso contrário, a coluna fica vazia.</span><span class="sxs-lookup"><span data-stu-id="48b02-105">Otherwise the column is empty.</span></span>

      <span data-ttu-id="48b02-106">\[[Conjunto de APIs: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="48b02-106">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: appendColumn(values)
    fullName: appendColumn(values)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'appendColumn(values?: string[]): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="48b02-107">Exemplos</span><span class="sxs-lookup"><span data-stu-id="48b02-107">Examples</span></span>

          ```javascript
          OneNote.run(function(ctx) {
              var app = ctx.application;
              var outline = app.getActiveOutline();
              
              // Queue a command to load outline.paragraphs and their types.
              ctx.load(outline, "paragraphs, paragraphs/type");
              
              // Run the queued commands, and return a promise to indicate task completion.
              return ctx.sync().then(function () {
                  var paragraphs = outline.paragraphs;
                  
                  // for each table, append a column.
                  for (var i = 0; i < paragraphs.items.length; i++) {
                      var paragraph = paragraphs.items[i];
                      if (paragraph.type == "Table") {
                          var table = paragraph.table;
                          table.appendColumn(["cell0", "cell1"]);
                      }
                  }
                  return ctx.sync();
              })
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: values
          description: '<span data-ttu-id="48b02-108">Opcional.</span><span class="sxs-lookup"><span data-stu-id="48b02-108">Optional.</span></span> <span data-ttu-id="48b02-109">Cadeias de caracteres a inserir na nova coluna, especificada como uma matriz.</span><span class="sxs-lookup"><span data-stu-id="48b02-109">Strings to insert in the new column, specified as an array.</span></span> <span data-ttu-id="48b02-110">Não pode ter mais valores que linhas na tabela.</span><span class="sxs-lookup"><span data-stu-id="48b02-110">Must not have more values than rows in the table.</span></span>'
          type:
            - 'string[]'
  - uid: 'onenote!OneNote.Table#appendRow:member(1)'
    summary: |-
      <span data-ttu-id="48b02-111">Adiciona uma linha ao final da tabela.</span><span class="sxs-lookup"><span data-stu-id="48b02-111">Adds a row to the end of the table.</span></span> <span data-ttu-id="48b02-112">Valores, se especificados, são definidos na nova linha.</span><span class="sxs-lookup"><span data-stu-id="48b02-112">Values, if specified, are set in the new row.</span></span> <span data-ttu-id="48b02-113">Caso contrário, a linha fica vazia.</span><span class="sxs-lookup"><span data-stu-id="48b02-113">Otherwise the row is empty.</span></span>

      <span data-ttu-id="48b02-114">\[[Conjunto de APIs: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="48b02-114">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: appendRow(values)
    fullName: appendRow(values)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'appendRow(values?: string[]): OneNote.TableRow;'
      return:
        type:
          - 'onenote!OneNote.TableRow:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="48b02-115">Exemplos</span><span class="sxs-lookup"><span data-stu-id="48b02-115">Examples</span></span>

          ```javascript
          OneNote.run(function(ctx) {
              var app = ctx.application;
              var outline = app.getActiveOutline();
              
              // Queue a command to load outline.paragraphs and their types.
              ctx.load(outline, "paragraphs, paragraphs/type");
              
              // Run the queued commands, and return a promise to indicate task completion.
              return ctx.sync().then(function () {
                  var paragraphs = outline.paragraphs;
                  
                  // for each table, append a column.
                  for (var i = 0; i < paragraphs.items.length; i++) {
                      var paragraph = paragraphs.items[i];
                      if (paragraph.type == "Table") {
                          var table = paragraph.table;
                          var row = table.appendRow(["cell0", "cell1"]);
                      }
                  }
                  return ctx.sync();
              })
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: values
          description: '<span data-ttu-id="48b02-116">Opcional.</span><span class="sxs-lookup"><span data-stu-id="48b02-116">Optional.</span></span> <span data-ttu-id="48b02-117">Cadeias de caracteres a inserir na nova linha, especificadas como uma matriz.</span><span class="sxs-lookup"><span data-stu-id="48b02-117">Strings to insert in the new row, specified as an array.</span></span> <span data-ttu-id="48b02-118">Não pode ter mais valores que colunas na tabela.</span><span class="sxs-lookup"><span data-stu-id="48b02-118">Must not have more values than columns in the table.</span></span>'
          type:
            - 'string[]'
  - uid: 'onenote!OneNote.Table#borderVisible:member'
    summary: |-
      <span data-ttu-id="48b02-119">Obtém ou define se as bordas estão visíveis ou não.</span><span class="sxs-lookup"><span data-stu-id="48b02-119">Gets or sets whether the borders are visible or not.</span></span> <span data-ttu-id="48b02-120">True se forem visíveis, false se forem ocultas.</span><span class="sxs-lookup"><span data-stu-id="48b02-120">True if they are visible, false if they are hidden.</span></span>

      <span data-ttu-id="48b02-121">\[[Conjunto de APIs: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="48b02-121">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: borderVisible
    fullName: borderVisible
    langs:
      - typeScript
    type: property
    syntax:
      content: 'borderVisible: boolean;'
      return:
        type:
          - boolean
  - uid: 'onenote!OneNote.Table#clear:member(1)'
    summary: |-
      <span data-ttu-id="48b02-122">Limpa o conteúdo da tabela.</span><span class="sxs-lookup"><span data-stu-id="48b02-122">Clears the contents of the table.</span></span>

      <span data-ttu-id="48b02-123">\[[Conjunto de APIs: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="48b02-123">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: clear()
    fullName: clear()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clear(): void;'
      return:
        type:
          - void
        description: ''
  - uid: 'onenote!OneNote.Table#columnCount:member'
    summary: |-
      <span data-ttu-id="48b02-124">Obtém a quantidade de colunas na tabela.</span><span class="sxs-lookup"><span data-stu-id="48b02-124">Gets the number of columns in the table.</span></span>

      <span data-ttu-id="48b02-125">\[[Conjunto de APIs: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="48b02-125">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: columnCount
    fullName: columnCount
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly columnCount: number;'
      return:
        type:
          - number
  - uid: 'onenote!OneNote.Table#context:member'
    summary: <span data-ttu-id="48b02-126">O contexto de solicitação associado ao objeto.</span><span class="sxs-lookup"><span data-stu-id="48b02-126">The request context associated with the object.</span></span> <span data-ttu-id="48b02-127">Isso conecta o processo do suplemento ao processo do aplicativo host do Office.</span><span class="sxs-lookup"><span data-stu-id="48b02-127">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'onenote!OneNote.RequestContext:class'
  - uid: 'onenote!OneNote.Table#getCell:member(1)'
    summary: |-
      <span data-ttu-id="48b02-128">Obtém a célula da tabela em uma linha e coluna especificada.</span><span class="sxs-lookup"><span data-stu-id="48b02-128">Gets the table cell at a specified row and column.</span></span>

      <span data-ttu-id="48b02-129">\[[Conjunto de APIs: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="48b02-129">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: 'getCell(rowIndex, cellIndex)'
    fullName: 'getCell(rowIndex, cellIndex)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCell(rowIndex: number, cellIndex: number): OneNote.TableCell;'
      return:
        type:
          - 'onenote!OneNote.TableCell:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="48b02-130">Exemplos</span><span class="sxs-lookup"><span data-stu-id="48b02-130">Examples</span></span>

          ```javascript
          OneNote.run(function(ctx) {
              var app = ctx.application;
              var outline = app.getActiveOutline();
              
              // Queue a command to load outline.paragraphs and their types.
              ctx.load(outline, "paragraphs, paragraphs/type");
              
              // Run the queued commands, and return a promise to indicate task completion.
              return ctx.sync().then(function () {
                  var paragraphs = outline.paragraphs;
                  
                  // for each table, get a cell in the second row and third column.
                  for (var i = 0; i < paragraphs.items.length; i++) {
                      var paragraph = paragraphs.items[i];
                      if (paragraph.type == "Table") {
                          var table = paragraph.table;
                          var cell = table.getCell(2 /*Row Index*/, 3 /*Column Index*/);
                      }
                  }
                  return ctx.sync();
              })
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: rowIndex
          description: <span data-ttu-id="48b02-131">O índice da linha.</span><span class="sxs-lookup"><span data-stu-id="48b02-131">The index of the row.</span></span>
          type:
            - number
        - id: cellIndex
          description: <span data-ttu-id="48b02-132">O índice da célula na linha.</span><span class="sxs-lookup"><span data-stu-id="48b02-132">The index of the cell in the row.</span></span>
          type:
            - number
  - uid: 'onenote!OneNote.Table#id:member'
    summary: |-
      <span data-ttu-id="48b02-133">Obtém a ID da tabela.</span><span class="sxs-lookup"><span data-stu-id="48b02-133">Gets the ID of the table.</span></span> <span data-ttu-id="48b02-134">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="48b02-134">Read-only.</span></span>

      <span data-ttu-id="48b02-135">\[[Conjunto de APIs: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="48b02-135">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: string;'
      return:
        type:
          - string
  - uid: 'onenote!OneNote.Table#insertColumn:member(1)'
    summary: |-
      <span data-ttu-id="48b02-p108">Insere uma coluna no índice fornecido na tabela. Valores, se especificados, são definidos na nova coluna. Caso contrário, a coluna fica vazia.</span><span class="sxs-lookup"><span data-stu-id="48b02-p108">Inserts a column at the given index in the table. Values, if specified, are set in the new column. Otherwise the column is empty.</span></span>

      <span data-ttu-id="48b02-139">\[[Conjunto de APIs: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="48b02-139">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: 'insertColumn(index, values)'
    fullName: 'insertColumn(index, values)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertColumn(index: number, values?: string[]): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="48b02-140">Exemplos</span><span class="sxs-lookup"><span data-stu-id="48b02-140">Examples</span></span>

          ```javascript
          OneNote.run(function(ctx) {
              var app = ctx.application;
              var outline = app.getActiveOutline();
              
              // Queue a command to load outline.paragraphs and their types.
              ctx.load(outline, "paragraphs, paragraphs/type");
              
              // Run the queued commands, and return a promise to indicate task completion.
              return ctx.sync().then(function () {
                  var paragraphs = outline.paragraphs;
                  
                  // for each table, insert a column at index two.
                  for (var i = 0; i < paragraphs.items.length; i++) {
                      var paragraph = paragraphs.items[i];
                      if (paragraph.type == "Table") {
                          var table = paragraph.table;
                          table.insertColumn(2, ["cell0", "cell1"]);
                      }
                  }
                  return ctx.sync();
              })
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: index
          description: <span data-ttu-id="48b02-141">Índice em que a coluna será inserida na tabela.</span><span class="sxs-lookup"><span data-stu-id="48b02-141">Index where the column will be inserted in the table.</span></span>
          type:
            - number
        - id: values
          description: '<span data-ttu-id="48b02-142">Opcional.</span><span class="sxs-lookup"><span data-stu-id="48b02-142">Optional.</span></span> <span data-ttu-id="48b02-143">Cadeias de caracteres a inserir na nova coluna, especificada como uma matriz.</span><span class="sxs-lookup"><span data-stu-id="48b02-143">Strings to insert in the new column, specified as an array.</span></span> <span data-ttu-id="48b02-144">Não pode ter mais valores que linhas na tabela.</span><span class="sxs-lookup"><span data-stu-id="48b02-144">Must not have more values than rows in the table.</span></span>'
          type:
            - 'string[]'
  - uid: 'onenote!OneNote.Table#insertRow:member(1)'
    summary: |-
      <span data-ttu-id="48b02-p110">Insere uma linha no índice fornecido na tabela. Valores, se especificados, são definidos na nova linha. Caso contrário, a linha fica vazia.</span><span class="sxs-lookup"><span data-stu-id="48b02-p110">Inserts a row at the given index in the table. Values, if specified, are set in the new row. Otherwise the row is empty.</span></span>

      <span data-ttu-id="48b02-148">\[[Conjunto de APIs: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="48b02-148">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: 'insertRow(index, values)'
    fullName: 'insertRow(index, values)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertRow(index: number, values?: string[]): OneNote.TableRow;'
      return:
        type:
          - 'onenote!OneNote.TableRow:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="48b02-149">Exemplos</span><span class="sxs-lookup"><span data-stu-id="48b02-149">Examples</span></span>

          ```javascript
          OneNote.run(function(ctx) {
              var app = ctx.application;
              var outline = app.getActiveOutline();
              
              // Queue a command to load outline.paragraphs and their types.
              ctx.load(outline, "paragraphs, paragraphs/type");
              
              // Run the queued commands, and return a promise to indicate task completion.
              return ctx.sync().then(function () {
                  var paragraphs = outline.paragraphs;
                  
                  // for each table, insert a row at index two.
                  for (var i = 0; i < paragraphs.items.length; i++) {
                      var paragraph = paragraphs.items[i];
                      if (paragraph.type == "Table") {
                          var table = paragraph.table;
                          var row = table.insertRow(2, ["cell0", "cell1"]);
                      }
                  }
                  return ctx.sync();
              })
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: index
          description: <span data-ttu-id="48b02-150">Índice em que a linha será inserida na tabela.</span><span class="sxs-lookup"><span data-stu-id="48b02-150">Index where the row will be inserted in the table.</span></span>
          type:
            - number
        - id: values
          description: '<span data-ttu-id="48b02-151">Opcional.</span><span class="sxs-lookup"><span data-stu-id="48b02-151">Optional.</span></span> <span data-ttu-id="48b02-152">Cadeias de caracteres a inserir na nova linha, especificadas como uma matriz.</span><span class="sxs-lookup"><span data-stu-id="48b02-152">Strings to insert in the new row, specified as an array.</span></span> <span data-ttu-id="48b02-153">Não pode ter mais valores que colunas na tabela.</span><span class="sxs-lookup"><span data-stu-id="48b02-153">Must not have more values than columns in the table.</span></span>'
          type:
            - 'string[]'
  - uid: 'onenote!OneNote.Table#load:member(1)'
    summary: <span data-ttu-id="48b02-154">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="48b02-154">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="48b02-155">Você deve chamar "context.sync()" antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="48b02-155">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="48b02-156">Além dessa assinatura, este método tem as seguintes assinaturas:</span><span class="sxs-lookup"><span data-stu-id="48b02-156">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="48b02-157">`load(option?: string | string[]): OneNote.Table`-Where Option é uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="48b02-157">`load(option?: string | string[]): OneNote.Table` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="48b02-158">`load(option?: { select?: string; expand?: string; }): OneNote.Table`-Onde Option. Select é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades a serem carregadas, e Options. Expand é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades de navegação a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="48b02-158">`load(option?: { select?: string; expand?: string; }): OneNote.Table` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="48b02-159">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.Table`– Disponível somente nos tipos de coleção.</span><span class="sxs-lookup"><span data-stu-id="48b02-159">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.Table` - Only available on collection types.</span></span> <span data-ttu-id="48b02-160">É semelhante à assinatura anterior.</span><span class="sxs-lookup"><span data-stu-id="48b02-160">It is similar to the preceding signature.</span></span> <span data-ttu-id="48b02-161">Option. Top especifica o número máximo de itens de coleta que podem ser incluídos no resultado.</span><span class="sxs-lookup"><span data-stu-id="48b02-161">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="48b02-162">Option. Skip especifica o número de itens que devem ser ignorados e não incluídos no resultado.</span><span class="sxs-lookup"><span data-stu-id="48b02-162">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="48b02-163">Se Option. Top for especificado, o conjunto de resultados será iniciado depois de ignorar o número de itens especificado.</span><span class="sxs-lookup"><span data-stu-id="48b02-163">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OneNote.Interfaces.TableLoadOptions): OneNote.Table;'
      return:
        type:
          - 'onenote!OneNote.Table:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'onenote!OneNote.Interfaces.TableLoadOptions:interface'
  - uid: 'onenote!OneNote.Table#load:member(2)'
    summary: <span data-ttu-id="48b02-164">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="48b02-164">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="48b02-165">Você deve chamar `context.sync()` antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="48b02-165">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): OneNote.Table;'
      return:
        type:
          - 'onenote!OneNote.Table:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="48b02-166">Exemplos</span><span class="sxs-lookup"><span data-stu-id="48b02-166">Examples</span></span>

          ```javascript
          OneNote.run(function(ctx) {
              var app = ctx.application;
              var outline = app.getActiveOutline();
              
              // Queue a command to load outline.paragraphs and their types.
              ctx.load(outline, "paragraphs/type");
              
              // Run the queued commands, and return a promise to indicate task completion.
              return ctx.sync().then(function () {
                  var paragraphs = outline.paragraphs;
                  
                  // For each table, log properties.
                  for (var i = 0; i < paragraphs.items.length; i++) {
                      var paragraph = paragraphs.items[i];
                      if (paragraph.type == "Table") {
                          var table = paragraph.table;
                          ctx.load(table);
                          return ctx.sync().then(function() {
                              console.log("Table Id: " + table.id);
                              console.log("Row Count: " + table.rowCount);
                              console.log("Column Count: " + table.columnCount);
                              return ctx.sync();
                          });
                      }
                  }
              });
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          OneNote.run(function(ctx) {
              var app = ctx.application;
              var outline = app.getActiveOutline();
              
              // Queue a command to load outline.paragraphs and their types.
              ctx.load(outline, "paragraphs, paragraphs/type");
              
              // Run the queued commands, and return a promise to indicate task completion.
              return ctx.sync().then(function () {
                  var paragraphs = outline.paragraphs;
                  
                  // for each table, log its paragraph id.
                  for (var i = 0; i < paragraphs.items.length; i++) {
                      var paragraph = paragraphs.items[i];
                      if (paragraph.type == "Table") {
                          var table = paragraph.table;
                          ctx.load(table, "paragraph/id, rows/id");
                          return ctx.sync().then(function() {
                              console.log("Paragraph Id: " + table.paragraph.id);
                              var rows = table.rows;
                              
                              // for each rows in the table, log row index and id.
                              for (var i = 0; i < rows.items.length; i++) {
                                  console.log("Row " + i + " Id: " + rows.items[i].id);
                              }
                              return ctx.sync();
                          });
                      }
                  }
              })
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="48b02-167">Uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="48b02-167">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'onenote!OneNote.Table#load:member(3)'
    summary: <span data-ttu-id="48b02-168">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="48b02-168">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="48b02-169">Você deve chamar `context.sync()` antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="48b02-169">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): OneNote.Table;'
      return:
        type:
          - 'onenote!OneNote.Table:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="48b02-170">Onde propertyNamesAndPaths. Select é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades a serem carregadas e propertyNamesAndPaths. Expand é uma sequência de caracteres delimitada por vírgula que especifica as propriedades de navegação a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="48b02-170">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: 'onenote!OneNote.Table#paragraph:member'
    summary: |-
      <span data-ttu-id="48b02-171">Obtém o objeto Paragraph que contém o objeto Table.</span><span class="sxs-lookup"><span data-stu-id="48b02-171">Gets the Paragraph object that contains the Table object.</span></span> <span data-ttu-id="48b02-172">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="48b02-172">Read-only.</span></span>

      <span data-ttu-id="48b02-173">\[[Conjunto de APIs: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="48b02-173">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: paragraph
    fullName: paragraph
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly paragraph: OneNote.Paragraph;'
      return:
        type:
          - 'onenote!OneNote.Paragraph:class'
  - uid: 'onenote!OneNote.Table#rowCount:member'
    summary: |-
      <span data-ttu-id="48b02-174">Obtém a quantidade de linhas na tabela.</span><span class="sxs-lookup"><span data-stu-id="48b02-174">Gets the number of rows in the table.</span></span>

      <span data-ttu-id="48b02-175">\[[Conjunto de APIs: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="48b02-175">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: rowCount
    fullName: rowCount
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly rowCount: number;'
      return:
        type:
          - number
  - uid: 'onenote!OneNote.Table#rows:member'
    summary: |-
      <span data-ttu-id="48b02-176">Obtém todas as linhas da tabela.</span><span class="sxs-lookup"><span data-stu-id="48b02-176">Gets all of the table rows.</span></span> <span data-ttu-id="48b02-177">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="48b02-177">Read-only.</span></span>

      <span data-ttu-id="48b02-178">\[[Conjunto de APIs: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="48b02-178">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: rows
    fullName: rows
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly rows: OneNote.TableRowCollection;'
      return:
        type:
          - 'onenote!OneNote.TableRowCollection:class'
  - uid: 'onenote!OneNote.Table#set:member(1)'
    summary: '<span data-ttu-id="48b02-179">Define várias propriedades de um objeto ao mesmo tempo.</span><span class="sxs-lookup"><span data-stu-id="48b02-179">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="48b02-180">Você pode passar um objeto simples com as propriedades apropriadas ou outro objeto API do mesmo tipo.</span><span class="sxs-lookup"><span data-stu-id="48b02-180">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="48b02-181">Este método tem a seguinte assinatura adicional:</span><span class="sxs-lookup"><span data-stu-id="48b02-181">This method has the following additional signature:</span></span>

      `set(properties: OneNote.Table): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.TableUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="48b02-182">Um objeto JavaScript com propriedades que são estruturadas isomorphically para as propriedades do objeto no qual o método é chamado.</span><span class="sxs-lookup"><span data-stu-id="48b02-182">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - 'onenote!OneNote.Interfaces.TableUpdateData:interface'
        - id: options
          description: <span data-ttu-id="48b02-183">Fornece uma opção para suprimir erros se o objeto Properties tentar definir qualquer propriedade somente leitura.</span><span class="sxs-lookup"><span data-stu-id="48b02-183">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - 'onenote!OfficeExtension.UpdateOptions:interface'
  - uid: 'onenote!OneNote.Table#set:member(2)'
    summary: '<span data-ttu-id="48b02-184">Define várias propriedades no objeto ao mesmo tempo, com base em um objeto carregado existente.</span><span class="sxs-lookup"><span data-stu-id="48b02-184">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: OneNote.Table): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'onenote!OneNote.Table:class'
  - uid: 'onenote!OneNote.Table#setShadingColor:member(1)'
    summary: |-
      <span data-ttu-id="48b02-185">Define a cor de sombreamento de todas as células na tabela.</span><span class="sxs-lookup"><span data-stu-id="48b02-185">Sets the shading color of all cells in the table.</span></span> <span data-ttu-id="48b02-186">O código de cor para o qual definir as células.</span><span class="sxs-lookup"><span data-stu-id="48b02-186">The color code to set the cells to.</span></span>

      <span data-ttu-id="48b02-187">\[[Conjunto de APIs: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="48b02-187">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: setShadingColor(colorCode)
    fullName: setShadingColor(colorCode)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setShadingColor(colorCode: string): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: colorCode
          description: ''
          type:
            - string
  - uid: 'onenote!OneNote.Table#toJSON:member(1)'
    summary: '<span data-ttu-id="48b02-188">Substitui o método `toJSON()` JavaScript para fornecer uma saída mais útil quando um objeto API é passado para`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="48b02-188">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="48b02-189">.</span><span class="sxs-lookup"><span data-stu-id="48b02-189"></span></span> <span data-ttu-id="48b02-190">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="48b02-190"></span></span><!-- --><span data-ttu-id="48b02-191">, por sua vez, chama `toJSON` o método do objeto que é passado para ele.) Enquanto o objeto OneNote. Table original é um objeto API, o `toJSON` método retorna um objeto JavaScript simples (digitado como`OneNote.Interfaces.TableData`</span><span class="sxs-lookup"><span data-stu-id="48b02-191">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original OneNote.Table object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `OneNote.Interfaces.TableData`</span></span><!-- --><span data-ttu-id="48b02-192">) que contém cópias superficiais de qualquer propriedade filho carregada do objeto original.</span><span class="sxs-lookup"><span data-stu-id="48b02-192">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): OneNote.Interfaces.TableData;'
      return:
        type:
          - 'onenote!OneNote.Interfaces.TableData:interface'
        description: ''
  - uid: 'onenote!OneNote.Table#track:member(1)'
    summary: '<span data-ttu-id="48b02-193">Acompanha o objeto para ajuste automático com base nas alterações adjacentes no documento.</span><span class="sxs-lookup"><span data-stu-id="48b02-193">Track the object for automatic adjustment based on surrounding changes in the document.</span></span> <span data-ttu-id="48b02-194">Essa chamada é uma abreviação de context.trackedObjects.add(thisObject).</span><span class="sxs-lookup"><span data-stu-id="48b02-194">This call is a shorthand for context.trackedObjects.add(thisObject).</span></span> <span data-ttu-id="48b02-195">Se você estiver usando esse objeto em chamadas ".sync" e fora da execução sequencial de um lote ".run" e receber um erro "InvalidObjectPath" ao definir uma propriedade ou invocar um método no objeto, era necessário ter adicionado o objeto à coleção de objetos rastreados quando o objeto foi criado pela primeira vez.</span><span class="sxs-lookup"><span data-stu-id="48b02-195">If you are using this object across ".sync" calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you needed to have added the object to the tracked object collection when the object was first created.</span></span>'
    name: track()
    fullName: track()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'track(): OneNote.Table;'
      return:
        type:
          - 'onenote!OneNote.Table:class'
        description: ''
  - uid: 'onenote!OneNote.Table#untrack:member(1)'
    summary: '<span data-ttu-id="48b02-196">Libere a memória associada a este objeto, se ele já tiver sido rastreado anteriormente.</span><span class="sxs-lookup"><span data-stu-id="48b02-196">Release the memory associated with this object, if it has previously been tracked.</span></span> <span data-ttu-id="48b02-197">Essa chamada é uma abreviação de context.trackedObjects.remove(thisObject).</span><span class="sxs-lookup"><span data-stu-id="48b02-197">This call is shorthand for context.trackedObjects.remove(thisObject).</span></span> <span data-ttu-id="48b02-198">Ter muitos objetos rastreados desacelera o aplicativo host, por isso, lembre-se de liberar todos os objetos adicionados após usá-los.</span><span class="sxs-lookup"><span data-stu-id="48b02-198">Having many tracked objects slows down the host application, so please remember to free any objects you add, once you''re done using them.</span></span> <span data-ttu-id="48b02-199">Você precisa chamar "context.sync()" antes da liberação da memória entrar em vigor.</span><span class="sxs-lookup"><span data-stu-id="48b02-199">You will need to call "context.sync()" before the memory release takes effect.</span></span>'
    name: untrack()
    fullName: untrack()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'untrack(): OneNote.Table;'
      return:
        type:
          - 'onenote!OneNote.Table:class'
        description: ''
references:
  - uid: 'onenote!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'onenote!OneNote.TableRow:class'
    name: OneNote.TableRow
  - uid: 'onenote!OneNote.RequestContext:class'
    name: RequestContext
  - uid: 'onenote!OneNote.TableCell:class'
    name: OneNote.TableCell
  - uid: 'onenote!OneNote.Table:class'
    name: OneNote.Table
  - uid: 'onenote!OneNote.Interfaces.TableLoadOptions:interface'
    name: OneNote.Interfaces.TableLoadOptions
  - uid: 'onenote!OneNote.Paragraph:class'
    name: OneNote.Paragraph
  - uid: 'onenote!OneNote.TableRowCollection:class'
    name: OneNote.TableRowCollection
  - uid: 'onenote!OneNote.Interfaces.TableUpdateData:interface'
    name: Interfaces.TableUpdateData
  - uid: 'onenote!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'onenote!OneNote.Interfaces.TableData:interface'
    name: OneNote.Interfaces.TableData