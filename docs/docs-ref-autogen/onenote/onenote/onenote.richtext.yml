### YamlMime:UniversalReference
items:
  - uid: 'onenote!OneNote.RichText:class'
    summary: |-
      Representa um objeto RichText em um Paragraph.

      \[[Conjunto de APIs: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: OneNote.RichText
    fullName: OneNote.RichText
    langs:
      - typeScript
    type: class
    extends:
      - 'office!OfficeExtension.ClientObject:class'
    package: onenote!
    children:
      - 'onenote!OneNote.RichText#context:member'
      - 'onenote!OneNote.RichText#getHtml:member(1)'
      - 'onenote!OneNote.RichText#id:member'
      - 'onenote!OneNote.RichText#languageId:member'
      - 'onenote!OneNote.RichText#load:member(1)'
      - 'onenote!OneNote.RichText#load:member(2)'
      - 'onenote!OneNote.RichText#load:member(3)'
      - 'onenote!OneNote.RichText#paragraph:member'
      - 'onenote!OneNote.RichText#text:member'
      - 'onenote!OneNote.RichText#toJSON:member(1)'
      - 'onenote!OneNote.RichText#track:member(1)'
      - 'onenote!OneNote.RichText#untrack:member(1)'
  - uid: 'onenote!OneNote.RichText#context:member'
    summary: O contexto de solicitação associado ao objeto. Isso conecta o processo do suplemento ao processo do aplicativo host do Office.
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'onenote!OneNote.RequestContext:class'
  - uid: 'onenote!OneNote.RichText#getHtml:member(1)'
    summary: |-
      Obter o HTML de rich text

      \[[Conjunto de APIs: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: getHtml()
    fullName: getHtml()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getHtml(): OfficeExtension.ClientResult<string>;'
      return:
        type:
          - 'onenote!OneNote.RichText#getHtml~0:complex'
        description: O HTML do Rich Text
  - uid: 'onenote!OneNote.RichText#id:member'
    summary: |-
      Obtém a ID do objeto RichText. Somente leitura.

      \[[Conjunto de APIs: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: string;'
      return:
        type:
          - string
  - uid: 'onenote!OneNote.RichText#languageId:member'
    summary: |-
      A id de idioma do texto. Somente leitura.

      \[[Conjunto de APIs: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: languageId
    fullName: languageId
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly languageId: string;'
      return:
        type:
          - string
  - uid: 'onenote!OneNote.RichText#load:member(1)'
    summary: Coloca um comando na fila para carregar as propriedades especificadas do objeto. Você deve chamar "context.sync()" antes de ler as propriedades.
    remarks: |-
      Além dessa assinatura, este método tem as seguintes assinaturas:

      `load(option?: string | string[]): OneNote.RichText`-Where Option é uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.

      `load(option?: { select?: string; expand?: string; }): OneNote.RichText`-Onde Option. Select é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades a serem carregadas, e Options. Expand é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades de navegação a serem carregadas.

      `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.RichText`– Disponível somente nos tipos de coleção. É semelhante à assinatura anterior. Option. Top especifica o número máximo de itens de coleta que podem ser incluídos no resultado. Option. Skip especifica o número de itens que devem ser ignorados e não incluídos no resultado. Se Option. Top for especificado, o conjunto de resultados será iniciado depois de ignorar o número de itens especificado.
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OneNote.Interfaces.RichTextLoadOptions): OneNote.RichText;'
      return:
        type:
          - 'onenote!OneNote.RichText:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'onenote!OneNote.Interfaces.RichTextLoadOptions:interface'
  - uid: 'onenote!OneNote.RichText#load:member(2)'
    summary: Coloca um comando na fila para carregar as propriedades especificadas do objeto. Você deve chamar `context.sync()` antes de ler as propriedades.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): OneNote.RichText;'
      return:
        type:
          - 'onenote!OneNote.RichText:class'
        description: |-


          #### <a name="examples"></a>Exemplos

          ```javascript
          OneNote.run(function (context) {

              // Get the collection of pageContent items from the page.
              var pageContents = context.application.getActivePage().contents;

              // Get the first PageContent on the page, and then get its outline's paragraphs.
              var outlinePageContents = ;
              var paragraphs = ;
              var richTextParagraphs = ;
              // Queue a command to load the id and type of each page content in the outline.
              pageContents.load("id,type");

              // Run the queued commands, and return a promise to indicate task completion.
              return context.sync()
                  .then(function () {
                      // Load all page contents of type Outline
                      $.each(pageContents.items, function(index, pageContent) {
                          if(pageContent.type == 'Outline')
                          {
                              pageContent.load('outline,outline/paragraphs,outline/paragraphs/type');
                              outlinePageContents.push(pageContent);
                          }
                      });
                      return context.sync();
                  })
                  .then(function () {
                      // Load all rich text paragraphs across outlines
                      $.each(outlinePageContents, function(index, outlinePageContent) {
                          var outline = outlinePageContent.outline;
                          paragraphs = paragraphs.concat(outline.paragraphs.items);
                      });
                      $.each(paragraphs, function(index, paragraph) {
                          if(paragraph.type == 'RichText')
                          {
                              richTextParagraphs.push(paragraph);
                              paragraph.load("id,richText/text");
                          }
                      });
                      return context.sync();
                  })
                  .then(function () {
                      // Display all rich text paragraphs to the console
                      $.each(richTextParagraphs, function(index, richTextParagraph) {
                          var richText = richTextParagraph.richText;
                          console.log(
                              "Paragraph found with richtext content : " + 
                              richText.text + " and richtext id : " + richText.id);
                      });
                      return context.sync();
                  });
          });
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          }); 
          ```
      parameters:
        - id: propertyNames
          description: Uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.
          type:
            - 'string | string[]'
  - uid: 'onenote!OneNote.RichText#load:member(3)'
    summary: Coloca um comando na fila para carregar as propriedades especificadas do objeto. Você deve chamar `context.sync()` antes de ler as propriedades.
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): OneNote.RichText;'
      return:
        type:
          - 'onenote!OneNote.RichText:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: Onde propertyNamesAndPaths. Select é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades a serem carregadas e propertyNamesAndPaths. Expand é uma sequência de caracteres delimitada por vírgula que especifica as propriedades de navegação a serem carregadas.
          type:
            - '{ select?: string; expand?: string; }'
  - uid: 'onenote!OneNote.RichText#paragraph:member'
    summary: |-
      Obtém o objeto Paragraph que contém o objeto RichText. Somente leitura.

      \[[Conjunto de APIs: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: paragraph
    fullName: paragraph
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly paragraph: OneNote.Paragraph;'
      return:
        type:
          - 'onenote!OneNote.Paragraph:class'
  - uid: 'onenote!OneNote.RichText#text:member'
    summary: |-
      Obtém o conteúdo de texto do objeto RichText. Somente leitura.

      \[[Conjunto de APIs: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: text
    fullName: text
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly text: string;'
      return:
        type:
          - string
  - uid: 'onenote!OneNote.RichText#toJSON:member(1)'
    summary: 'Substitui o `toJSON()` método JavaScript para fornecer uma saída mais útil quando um objeto API é passado para`JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, por sua vez, chama o `toJSON` método do objeto que é passado para ele.) Enquanto o objeto OneNote. RichText original é um objeto API, o `toJSON` método retorna um objeto JavaScript simples (digitado como`OneNote.Interfaces.RichTextData`<!-- -->) que contém cópias superficiais de qualquer propriedade filho carregada do objeto original.'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): OneNote.Interfaces.RichTextData;'
      return:
        type:
          - 'onenote!OneNote.Interfaces.RichTextData:interface'
        description: ''
  - uid: 'onenote!OneNote.RichText#track:member(1)'
    summary: 'Acompanha o objeto para ajuste automático com base nas alterações adjacentes no documento. Essa chamada é uma abreviação de context.trackedObjects.add(thisObject). Se você estiver usando esse objeto em chamadas ".sync" e fora da execução sequencial de um lote ".run" e receber um erro "InvalidObjectPath" ao definir uma propriedade ou invocar um método no objeto, era necessário ter adicionado o objeto à coleção de objetos rastreados quando o objeto foi criado pela primeira vez.'
    name: track()
    fullName: track()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'track(): OneNote.RichText;'
      return:
        type:
          - 'onenote!OneNote.RichText:class'
        description: ''
  - uid: 'onenote!OneNote.RichText#untrack:member(1)'
    summary: 'Libere a memória associada a este objeto, se ele já tiver sido rastreado anteriormente. Essa chamada é uma abreviação de context.trackedObjects.remove(thisObject). Ter muitos objetos rastreados desacelera o aplicativo host, por isso, lembre-se de liberar todos os objetos adicionados após usá-los. Você precisa chamar "context.sync()" antes da liberação da memória entrar em vigor.'
    name: untrack()
    fullName: untrack()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'untrack(): OneNote.RichText;'
      return:
        type:
          - 'onenote!OneNote.RichText:class'
        description: ''
references:
  - uid: 'office!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'onenote!OneNote.RequestContext:class'
    name: RequestContext
  - uid: 'onenote!OneNote.RichText#getHtml~0:complex'
    name: OfficeExtension.ClientResult<string>
    fullName: OfficeExtension.ClientResult<string>
    spec.typeScript:
      - uid: 'office!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <string>
        fullName: <string>
  - uid: 'onenote!OneNote.RichText:class'
    name: OneNote.RichText
  - uid: 'onenote!OneNote.Interfaces.RichTextLoadOptions:interface'
    name: OneNote.Interfaces.RichTextLoadOptions
  - uid: 'onenote!OneNote.Paragraph:class'
    name: OneNote.Paragraph
  - uid: 'onenote!OneNote.Interfaces.RichTextData:interface'
    name: OneNote.Interfaces.RichTextData