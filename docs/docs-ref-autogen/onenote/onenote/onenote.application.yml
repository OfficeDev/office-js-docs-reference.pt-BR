### YamlMime:UniversalReference
items:
  - uid: 'onenote!OneNote.Application:class'
    summary: |-
      <span data-ttu-id="082d1-101">Representa o objeto de nível superior que contém todos os objetos do OneNote globalmente endereçados como blocos de anotações, o bloco de anotações ativo e a sessão ativa.</span><span class="sxs-lookup"><span data-stu-id="082d1-101">Represents the top-level object that contains all globally addressable OneNote objects such as notebooks, the active notebook, and the active section.</span></span>

      <span data-ttu-id="082d1-102">\[[Conjunto de APIs: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="082d1-102">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: OneNote.Application
    fullName: OneNote.Application
    langs:
      - typeScript
    type: class
    extends:
      - 'onenote!OfficeExtension.ClientObject:class'
    package: onenote!
    children:
      - 'onenote!OneNote.Application#context:member'
      - 'onenote!OneNote.Application#getActiveNotebook:member(1)'
      - 'onenote!OneNote.Application#getActiveNotebookOrNull:member(1)'
      - 'onenote!OneNote.Application#getActiveOutline:member(1)'
      - 'onenote!OneNote.Application#getActiveOutlineOrNull:member(1)'
      - 'onenote!OneNote.Application#getActivePage:member(1)'
      - 'onenote!OneNote.Application#getActivePageOrNull:member(1)'
      - 'onenote!OneNote.Application#getActiveParagraph:member(1)'
      - 'onenote!OneNote.Application#getActiveParagraphOrNull:member(1)'
      - 'onenote!OneNote.Application#getActiveSection:member(1)'
      - 'onenote!OneNote.Application#getActiveSectionOrNull:member(1)'
      - 'onenote!OneNote.Application#getWindowSize:member(1)'
      - 'onenote!OneNote.Application#insertHtmlAtCurrentPosition:member(1)'
      - 'onenote!OneNote.Application#isViewingDeletedNotes:member(1)'
      - 'onenote!OneNote.Application#load:member(1)'
      - 'onenote!OneNote.Application#load:member(2)'
      - 'onenote!OneNote.Application#load:member(3)'
      - 'onenote!OneNote.Application#navigateToPage:member(1)'
      - 'onenote!OneNote.Application#navigateToPageWithClientUrl:member(1)'
      - 'onenote!OneNote.Application#notebooks:member'
      - 'onenote!OneNote.Application#toJSON:member(1)'
  - uid: 'onenote!OneNote.Application#context:member'
    summary: <span data-ttu-id="082d1-103">O contexto de solicitação associado ao objeto.</span><span class="sxs-lookup"><span data-stu-id="082d1-103">The request context associated with the object.</span></span> <span data-ttu-id="082d1-104">Isso conecta o processo do suplemento ao processo do aplicativo host do Office.</span><span class="sxs-lookup"><span data-stu-id="082d1-104">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'onenote!OneNote.RequestContext:class'
  - uid: 'onenote!OneNote.Application#getActiveNotebook:member(1)'
    summary: |-
      <span data-ttu-id="082d1-105">Obtém o bloco de anotações ativo, se houver um.</span><span class="sxs-lookup"><span data-stu-id="082d1-105">Gets the active notebook if one exists.</span></span> <span data-ttu-id="082d1-106">Se não houver nenhum bloco de anotações ativo, gera ItemNotFound.</span><span class="sxs-lookup"><span data-stu-id="082d1-106">If no notebook is active, throws ItemNotFound.</span></span>

      <span data-ttu-id="082d1-107">\[[Conjunto de APIs: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="082d1-107">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: getActiveNotebook()
    fullName: getActiveNotebook()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getActiveNotebook(): OneNote.Notebook;'
      return:
        type:
          - 'onenote!OneNote.Notebook:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="082d1-108">Exemplos</span><span class="sxs-lookup"><span data-stu-id="082d1-108">Examples</span></span>

          ```javascript
          OneNote.run(function (context) {
                  
              // Get the active notebook.
              var notebook = context.application.getActiveNotebook();
                      
              // Queue a command to load the notebook. 
              // For best performance, request specific properties.           
              notebook.load('id,name');
                      
              // Run the queued commands, and return a promise to indicate task completion.
              return context.sync()
                  .then(function () {
                              
                      // Show some properties.
                      console.log("Notebook name: " + notebook.name);
                      console.log("Notebook ID: " + notebook.id);
                      
                  });
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'onenote!OneNote.Application#getActiveNotebookOrNull:member(1)'
    summary: |-
      <span data-ttu-id="082d1-109">Obtém o bloco de anotações ativo, se houver um.</span><span class="sxs-lookup"><span data-stu-id="082d1-109">Gets the active notebook if one exists.</span></span> <span data-ttu-id="082d1-110">Se não houver nenhum bloco de anotações ativo, retorna nulo.</span><span class="sxs-lookup"><span data-stu-id="082d1-110">If no notebook is active, returns null.</span></span>

      <span data-ttu-id="082d1-111">\[[Conjunto de APIs: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="082d1-111">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: getActiveNotebookOrNull()
    fullName: getActiveNotebookOrNull()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getActiveNotebookOrNull(): OneNote.Notebook;'
      return:
        type:
          - 'onenote!OneNote.Notebook:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="082d1-112">Exemplos</span><span class="sxs-lookup"><span data-stu-id="082d1-112">Examples</span></span>

          ```javascript
          OneNote.run(function (context) {

              // Get the active notebook.
              var notebook = context.application.getActiveNotebookOrNull();

              // Queue a command to load the notebook. 
              // For best performance, request specific properties.           
              notebook.load('id,name');

              // Run the queued commands, and return a promise to indicate task completion.
              return context.sync()
                  .then(function () {

                      // check if active notebook is set.
                      if (!notebook.isNull) {
                          console.log("Notebook name: " + notebook.name);
                          console.log("Notebook ID: " + notebook.id);
                      }
                  });
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'onenote!OneNote.Application#getActiveOutline:member(1)'
    summary: |-
      <span data-ttu-id="082d1-113">Obtém a estrutura de tópicos ativa, se houver uma. Caso contrário, gera ItemNotFound.</span><span class="sxs-lookup"><span data-stu-id="082d1-113">Gets the active outline if one exists, If no outline is active, throws ItemNotFound.</span></span>

      <span data-ttu-id="082d1-114">\[[Conjunto de APIs: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="082d1-114">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: getActiveOutline()
    fullName: getActiveOutline()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getActiveOutline(): OneNote.Outline;'
      return:
        type:
          - 'onenote!OneNote.Outline:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="082d1-115">Exemplos</span><span class="sxs-lookup"><span data-stu-id="082d1-115">Examples</span></span>

          ```javascript
          OneNote.run(function (context) {

              // get active outline.
              var outline = context.application.getActiveOutline();

              // Queue a command to load the id of the outline.         
              outline.load('id');

              // Run the queued commands, and return a promise to indicate task completion.
              return context.sync()
                  .then(function () {

                      // Show some properties.
                      console.log("outline id: " + outline.id);
                  });
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'onenote!OneNote.Application#getActiveOutlineOrNull:member(1)'
    summary: |-
      <span data-ttu-id="082d1-116">Obtém a estrutura de tópicos ativa, se houver uma; caso contrário, retorna nulo.</span><span class="sxs-lookup"><span data-stu-id="082d1-116">Gets the active outline if one exists, otherwise returns null.</span></span>

      <span data-ttu-id="082d1-117">\[[Conjunto de APIs: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="082d1-117">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: getActiveOutlineOrNull()
    fullName: getActiveOutlineOrNull()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getActiveOutlineOrNull(): OneNote.Outline;'
      return:
        type:
          - 'onenote!OneNote.Outline:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="082d1-118">Exemplos</span><span class="sxs-lookup"><span data-stu-id="082d1-118">Examples</span></span>

          ```javascript
          OneNote.run(function (context) {

              // get active outline.
              var outline = context.application.getActiveOutlineOrNull();

              // Queue a command to load the id of the outline.         
              outline.load('id');

              // Run the queued commands, and return a promise to indicate task completion.
              return context.sync()
                  .then(function () {

                      if (!outline.isNull) {
                          console.log("outline id: " + outline.id);
                      }
                  });
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'onenote!OneNote.Application#getActivePage:member(1)'
    summary: |-
      <span data-ttu-id="082d1-119">Obtém a página ativa, se houver uma.</span><span class="sxs-lookup"><span data-stu-id="082d1-119">Gets the active page if one exists.</span></span> <span data-ttu-id="082d1-120">Se não houver nenhuma página ativa, gera ItemNotFound.</span><span class="sxs-lookup"><span data-stu-id="082d1-120">If no page is active, throws ItemNotFound.</span></span>

      <span data-ttu-id="082d1-121">\[[Conjunto de APIs: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="082d1-121">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: getActivePage()
    fullName: getActivePage()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getActivePage(): OneNote.Page;'
      return:
        type:
          - 'onenote!OneNote.Page:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="082d1-122">Exemplos</span><span class="sxs-lookup"><span data-stu-id="082d1-122">Examples</span></span>

          ```javascript
          OneNote.run(function (context) {
                  
              // Get the active page.
              var page = context.application.getActivePage();
                      
              // Queue a command to load the page. 
              // For best performance, request specific properties.           
              page.load('id,title');
                      
              // Run the queued commands, and return a promise to indicate task completion.
              return context.sync()
                  .then(function () {
                              
                      // Show some properties.
                      console.log("Page title: " + page.title);
                      console.log("Page ID: " + page.id);
                      
                  });
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'onenote!OneNote.Application#getActivePageOrNull:member(1)'
    summary: |-
      <span data-ttu-id="082d1-123">Obtém a página ativa, se houver uma.</span><span class="sxs-lookup"><span data-stu-id="082d1-123">Gets the active page if one exists.</span></span> <span data-ttu-id="082d1-124">Se não houver nenhuma página ativa, retorna nulo.</span><span class="sxs-lookup"><span data-stu-id="082d1-124">If no page is active, returns null.</span></span>

      <span data-ttu-id="082d1-125">\[[Conjunto de APIs: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="082d1-125">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: getActivePageOrNull()
    fullName: getActivePageOrNull()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getActivePageOrNull(): OneNote.Page;'
      return:
        type:
          - 'onenote!OneNote.Page:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="082d1-126">Exemplos</span><span class="sxs-lookup"><span data-stu-id="082d1-126">Examples</span></span>

          ```javascript
          OneNote.run(function (context) {

              // Get the active page.
              var page = context.application.getActivePageOrNull();

              // Queue a command to load the page. 
              // For best performance, request specific properties.           
              page.load('id,title');

              // Run the queued commands, and return a promise to indicate task completion.
              return context.sync()
                  .then(function () {
                      
                      if (!page.isNull) {
                          // Show some properties.
                          console.log("Page title: " + page.title);
                          console.log("Page ID: " + page.id);
                      }
                  });
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'onenote!OneNote.Application#getActiveParagraph:member(1)'
    summary: |-
      <span data-ttu-id="082d1-127">Obtém o parágrafo ativo, se houver um, se nenhum parágrafo estiver ativo, lança ItemNotFound.</span><span class="sxs-lookup"><span data-stu-id="082d1-127">Gets the active Paragraph if one exists, If no Paragraph is active, throws ItemNotFound.</span></span>

      <span data-ttu-id="082d1-128">\[[Conjunto de APIs: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="082d1-128">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: getActiveParagraph()
    fullName: getActiveParagraph()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getActiveParagraph(): OneNote.Paragraph;'
      return:
        type:
          - 'onenote!OneNote.Paragraph:class'
        description: ''
  - uid: 'onenote!OneNote.Application#getActiveParagraphOrNull:member(1)'
    summary: |-
      <span data-ttu-id="082d1-129">Obtém o parágrafo ativo, se houver um, caso contrário, retorna nulo.</span><span class="sxs-lookup"><span data-stu-id="082d1-129">Gets the active Paragraph if one exists, otherwise returns null.</span></span>

      <span data-ttu-id="082d1-130">\[[Conjunto de APIs: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="082d1-130">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: getActiveParagraphOrNull()
    fullName: getActiveParagraphOrNull()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getActiveParagraphOrNull(): OneNote.Paragraph;'
      return:
        type:
          - 'onenote!OneNote.Paragraph:class'
        description: ''
  - uid: 'onenote!OneNote.Application#getActiveSection:member(1)'
    summary: |-
      <span data-ttu-id="082d1-131">Obtém a seção ativa, se houver uma.</span><span class="sxs-lookup"><span data-stu-id="082d1-131">Gets the active section if one exists.</span></span> <span data-ttu-id="082d1-132">Se não houver nenhuma seção ativa, gera ItemNotFound.</span><span class="sxs-lookup"><span data-stu-id="082d1-132">If no section is active, throws ItemNotFound.</span></span>

      <span data-ttu-id="082d1-133">\[[Conjunto de APIs: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="082d1-133">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: getActiveSection()
    fullName: getActiveSection()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getActiveSection(): OneNote.Section;'
      return:
        type:
          - 'onenote!OneNote.Section:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="082d1-134">Exemplos</span><span class="sxs-lookup"><span data-stu-id="082d1-134">Examples</span></span>

          ```javascript
          OneNote.run(function (context) {
                  
              // Get the active section.
              var section = context.application.getActiveSection();
                      
              // Queue a command to load the section. 
              // For best performance, request specific properties.           
              section.load('id,name');
                      
              // Run the queued commands, and return a promise to indicate task completion.
              return context.sync()
                  .then(function () {
                              
                      // Show some properties.
                      console.log("Section name: " + section.name);
                      console.log("Section ID: " + section.id);
                      
                  });
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'onenote!OneNote.Application#getActiveSectionOrNull:member(1)'
    summary: |-
      <span data-ttu-id="082d1-135">Obtém a seção ativa, se houver uma.</span><span class="sxs-lookup"><span data-stu-id="082d1-135">Gets the active section if one exists.</span></span> <span data-ttu-id="082d1-136">Se não houver nenhuma seção ativa, retorna nulo.</span><span class="sxs-lookup"><span data-stu-id="082d1-136">If no section is active, returns null.</span></span>

      <span data-ttu-id="082d1-137">\[[Conjunto de APIs: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="082d1-137">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: getActiveSectionOrNull()
    fullName: getActiveSectionOrNull()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getActiveSectionOrNull(): OneNote.Section;'
      return:
        type:
          - 'onenote!OneNote.Section:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="082d1-138">Exemplos</span><span class="sxs-lookup"><span data-stu-id="082d1-138">Examples</span></span>

          ```javascript
          OneNote.run(function (context) {

              // Get the active section.
              var section = context.application.getActiveSectionOrNull();

              // Queue a command to load the section. 
              // For best performance, request specific properties.           
              section.load('id,name');

              // Run the queued commands, and return a promise to indicate task completion.
              return context.sync()
                  .then(function () {
                      if (!section.isNull) {
                          // Show some properties.
                          console.log("Section name: " + section.name);
                          console.log("Section ID: " + section.id);
                      }
                  });
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'onenote!OneNote.Application#getWindowSize:member(1)'
    name: getWindowSize()
    fullName: getWindowSize()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getWindowSize(): OfficeExtension.ClientResult<number[]>;'
      return:
        type:
          - 'onenote!OneNote.Application#getWindowSize~0:complex'
        description: ''
  - uid: 'onenote!OneNote.Application#insertHtmlAtCurrentPosition:member(1)'
    name: insertHtmlAtCurrentPosition(html)
    fullName: insertHtmlAtCurrentPosition(html)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertHtmlAtCurrentPosition(html: string): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: html
          description: ''
          type:
            - string
  - uid: 'onenote!OneNote.Application#isViewingDeletedNotes:member(1)'
    name: isViewingDeletedNotes()
    fullName: isViewingDeletedNotes()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'isViewingDeletedNotes(): OfficeExtension.ClientResult<boolean>;'
      return:
        type:
          - 'onenote!OneNote.Application#isViewingDeletedNotes~0:complex'
        description: ''
  - uid: 'onenote!OneNote.Application#load:member(1)'
    summary: <span data-ttu-id="082d1-139">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="082d1-139">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="082d1-140">Você deve chamar "context.sync()" antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="082d1-140">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="082d1-141">Além dessa assinatura, este método tem as seguintes assinaturas:</span><span class="sxs-lookup"><span data-stu-id="082d1-141">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="082d1-142">`load(option?: string | string[]): OneNote.Application`-Where Option é uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="082d1-142">`load(option?: string | string[]): OneNote.Application` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="082d1-143">`load(option?: { select?: string; expand?: string; }): OneNote.Application`-Onde Option. Select é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades a serem carregadas, e Options. Expand é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades de navegação a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="082d1-143">`load(option?: { select?: string; expand?: string; }): OneNote.Application` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="082d1-144">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.Application`– Disponível somente nos tipos de coleção.</span><span class="sxs-lookup"><span data-stu-id="082d1-144">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.Application` - Only available on collection types.</span></span> <span data-ttu-id="082d1-145">É semelhante à assinatura anterior.</span><span class="sxs-lookup"><span data-stu-id="082d1-145">It is similar to the preceding signature.</span></span> <span data-ttu-id="082d1-146">Option. Top especifica o número máximo de itens de coleta que podem ser incluídos no resultado.</span><span class="sxs-lookup"><span data-stu-id="082d1-146">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="082d1-147">Option. Skip especifica o número de itens que devem ser ignorados e não incluídos no resultado.</span><span class="sxs-lookup"><span data-stu-id="082d1-147">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="082d1-148">Se Option. Top for especificado, o conjunto de resultados será iniciado depois de ignorar o número de itens especificado.</span><span class="sxs-lookup"><span data-stu-id="082d1-148">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OneNote.Interfaces.ApplicationLoadOptions): OneNote.Application;'
      return:
        type:
          - 'onenote!OneNote.Application:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'onenote!OneNote.Interfaces.ApplicationLoadOptions:interface'
  - uid: 'onenote!OneNote.Application#load:member(2)'
    summary: <span data-ttu-id="082d1-149">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="082d1-149">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="082d1-150">Você deve chamar `context.sync()` antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="082d1-150">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): OneNote.Application;'
      return:
        type:
          - 'onenote!OneNote.Application:class'
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="082d1-151">Uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="082d1-151">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'onenote!OneNote.Application#load:member(3)'
    summary: <span data-ttu-id="082d1-152">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="082d1-152">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="082d1-153">Você deve chamar `context.sync()` antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="082d1-153">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): OneNote.Application;'
      return:
        type:
          - 'onenote!OneNote.Application:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="082d1-154">Onde propertyNamesAndPaths. Select é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades a serem carregadas e propertyNamesAndPaths. Expand é uma sequência de caracteres delimitada por vírgula que especifica as propriedades de navegação a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="082d1-154">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: 'onenote!OneNote.Application#navigateToPage:member(1)'
    summary: |-
      <span data-ttu-id="082d1-155">Abre a página especificada na instância do aplicativo.</span><span class="sxs-lookup"><span data-stu-id="082d1-155">Opens the specified page in the application instance.</span></span>

      <span data-ttu-id="082d1-156">\[[Conjunto de APIs: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="082d1-156">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: navigateToPage(page)
    fullName: navigateToPage(page)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'navigateToPage(page: OneNote.Page): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="082d1-157">Exemplos</span><span class="sxs-lookup"><span data-stu-id="082d1-157">Examples</span></span>

          ```javascript
          OneNote.run(function (context) {
                  
              // Get the pages in the current section.
              var pages = context.application.getActiveSection().pages;
                      
              // Queue a command to load the pages. 
              // For best performance, request specific properties.           
              pages.load('id');
                      
              // Run the queued commands, and return a promise to indicate task completion.
              return context.sync()
                  .then(function () {
                              
                      // This example loads the first page in the section.
                      var page = pages.items[0];
                                  
                      // Open the page in the application.                    
                      context.application.navigateToPage(page);
                              
                      // Run the queued command.
                      return context.sync();
                  });
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: page
          description: <span data-ttu-id="082d1-158">A página a ser aberta.</span><span class="sxs-lookup"><span data-stu-id="082d1-158">The page to open.</span></span>
          type:
            - 'onenote!OneNote.Page:class'
  - uid: 'onenote!OneNote.Application#navigateToPageWithClientUrl:member(1)'
    summary: |-
      <span data-ttu-id="082d1-159">Obtém a página especificada e a abre na instância do aplicativo.</span><span class="sxs-lookup"><span data-stu-id="082d1-159">Gets the specified page, and opens it in the application instance.</span></span>

      <span data-ttu-id="082d1-160">\[[Conjunto de APIs: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="082d1-160">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: navigateToPageWithClientUrl(url)
    fullName: navigateToPageWithClientUrl(url)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'navigateToPageWithClientUrl(url: string): OneNote.Page;'
      return:
        type:
          - 'onenote!OneNote.Page:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="082d1-161">Exemplos</span><span class="sxs-lookup"><span data-stu-id="082d1-161">Examples</span></span>

          ```javascript
          OneNote.run(function (context) {

              // Get the pages in the current section.
              var pages = context.application.getActiveSection().pages;

              // Queue a command to load the pages. 
              // For best performance, request specific properties.           
              pages.load('clientUrl');

              // Run the queued commands, and return a promise to indicate task completion.
              return context.sync()
                  .then(function () {

                      // This example loads the first page in the section.
                      var page = pages.items[0];

                      // Open the page in the application.                    
                      context.application.navigateToPageWithClientUrl(page.clientUrl);

                      // Run the queued command.
                      return context.sync();
                  });
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: url
          description: <span data-ttu-id="082d1-162">A URL do cliente da página a ser aberta.</span><span class="sxs-lookup"><span data-stu-id="082d1-162">The client url of the page to open.</span></span>
          type:
            - string
  - uid: 'onenote!OneNote.Application#notebooks:member'
    summary: |-
      <span data-ttu-id="082d1-163">Obtém a coleção de blocos de notas abertos na instância do aplicativo OneNote.</span><span class="sxs-lookup"><span data-stu-id="082d1-163">Gets the collection of notebooks that are open in the OneNote application instance.</span></span> <span data-ttu-id="082d1-164">No OneNote na Web, somente um bloco de anotações por vez é aberto na instância do aplicativo.</span><span class="sxs-lookup"><span data-stu-id="082d1-164">In OneNote on the web, only one notebook at a time is open in the application instance.</span></span> <span data-ttu-id="082d1-165">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="082d1-165">Read-only.</span></span>

      <span data-ttu-id="082d1-166">\[[Conjunto de APIs: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="082d1-166">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: notebooks
    fullName: notebooks
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly notebooks: OneNote.NotebookCollection;'
      return:
        type:
          - 'onenote!OneNote.NotebookCollection:class'
  - uid: 'onenote!OneNote.Application#toJSON:member(1)'
    summary: '<span data-ttu-id="082d1-167">Substitui o método `toJSON()` JavaScript para fornecer uma saída mais útil quando um objeto API é passado para`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="082d1-167">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="082d1-168">.</span><span class="sxs-lookup"><span data-stu-id="082d1-168"></span></span> <span data-ttu-id="082d1-169">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="082d1-169"></span></span><!-- --><span data-ttu-id="082d1-170">, por sua vez, chama `toJSON` o método do objeto que é passado para ele.) Enquanto o objeto OneNote. Application original é um objeto API, o `toJSON` método retorna um objeto JavaScript simples (digitado como`OneNote.Interfaces.ApplicationData`</span><span class="sxs-lookup"><span data-stu-id="082d1-170">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original OneNote.Application object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `OneNote.Interfaces.ApplicationData`</span></span><!-- --><span data-ttu-id="082d1-171">) que contém cópias superficiais de qualquer propriedade filho carregada do objeto original.</span><span class="sxs-lookup"><span data-stu-id="082d1-171">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): OneNote.Interfaces.ApplicationData;'
      return:
        type:
          - 'onenote!OneNote.Interfaces.ApplicationData:interface'
        description: ''
references:
  - uid: 'onenote!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'onenote!OneNote.RequestContext:class'
    name: RequestContext
  - uid: 'onenote!OneNote.Notebook:class'
    name: OneNote.Notebook
  - uid: 'onenote!OneNote.Outline:class'
    name: OneNote.Outline
  - uid: 'onenote!OneNote.Page:class'
    name: OneNote.Page
  - uid: 'onenote!OneNote.Paragraph:class'
    name: OneNote.Paragraph
  - uid: 'onenote!OneNote.Section:class'
    name: OneNote.Section
  - uid: 'onenote!OneNote.Application#getWindowSize~0:complex'
    name: 'OfficeExtension.ClientResult<number[]>'
    fullName: 'OfficeExtension.ClientResult<number[]>'
    spec.typeScript:
      - uid: 'onenote!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: '<number[]>'
        fullName: '<number[]>'
  - uid: 'onenote!OneNote.Application#isViewingDeletedNotes~0:complex'
    name: OfficeExtension.ClientResult<boolean>
    fullName: OfficeExtension.ClientResult<boolean>
    spec.typeScript:
      - uid: 'onenote!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <boolean>
        fullName: <boolean>
  - uid: 'onenote!OneNote.Application:class'
    name: OneNote.Application
  - uid: 'onenote!OneNote.Interfaces.ApplicationLoadOptions:interface'
    name: OneNote.Interfaces.ApplicationLoadOptions
  - uid: 'onenote!OneNote.NotebookCollection:class'
    name: OneNote.NotebookCollection
  - uid: 'onenote!OneNote.Interfaces.ApplicationData:interface'
    name: OneNote.Interfaces.ApplicationData