### YamlMime:TSType
name: OneNote.SectionGroup
uid: onenote!OneNote.SectionGroup:class
package: onenote!
fullName: OneNote.SectionGroup
summary: >-
  Representa um grupo de seção do OneNote. Grupos de seções podem conter seções e outros grupos de seções.


  \[[Conjunto de API: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
- name: clientUrl
  uid: onenote!OneNote.SectionGroup#clientUrl:member
  package: onenote!
  fullName: clientUrl
  summary: >-
    A URL do cliente do grupo de seções. Somente leitura


    \[[Conjunto de API: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly clientUrl: string;'
    return:
      type: string
- name: context
  uid: onenote!OneNote.SectionGroup#context:member
  package: onenote!
  fullName: context
  summary: O contexto de solicitação associado ao objeto. Isso conecta o processo do complemento ao processo do aplicativo host do Office.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'context: RequestContext;'
    return:
      type: <xref uid="onenote!OneNote.RequestContext:class" />
- name: id
  uid: onenote!OneNote.SectionGroup#id:member
  package: onenote!
  fullName: id
  summary: >-
    Obtém o ID do grupo de seção. Somente leitura.


    \[[Conjunto de API: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly id: string;'
    return:
      type: string
- name: name
  uid: onenote!OneNote.SectionGroup#name:member
  package: onenote!
  fullName: name
  summary: >-
    Obtém o nome do grupo da seção. Somente leitura.


    \[[Conjunto de API: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly name: string;'
    return:
      type: string
- name: notebook
  uid: onenote!OneNote.SectionGroup#notebook:member
  package: onenote!
  fullName: notebook
  summary: >-
    Obtém o bloco de anotações que contém o grupo da seção. Somente leitura.


    \[[Conjunto de API: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly notebook: OneNote.Notebook;'
    return:
      type: <xref uid="onenote!OneNote.Notebook:class" />
- name: parentSectionGroup
  uid: onenote!OneNote.SectionGroup#parentSectionGroup:member
  package: onenote!
  fullName: parentSectionGroup
  summary: >-
    Obtém o grupo da seção que contém o grupo da seção. Retorna ItemNotFound se o grupo da seção é um filho direto do bloco de anotações. Somente leitura.


    \[[Conjunto de API: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly parentSectionGroup: OneNote.SectionGroup;'
    return:
      type: <xref uid="onenote!OneNote.SectionGroup:class" />
- name: parentSectionGroupOrNull
  uid: onenote!OneNote.SectionGroup#parentSectionGroupOrNull:member
  package: onenote!
  fullName: parentSectionGroupOrNull
  summary: >-
    Obtém o grupo da seção que contém o grupo da seção. Retorna nulo se a seção de grupo for um filho direto do bloco de anotações. Somente leitura.


    \[[Conjunto de API: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly parentSectionGroupOrNull: OneNote.SectionGroup;'
    return:
      type: <xref uid="onenote!OneNote.SectionGroup:class" />
- name: sectionGroups
  uid: onenote!OneNote.SectionGroup#sectionGroups:member
  package: onenote!
  fullName: sectionGroups
  summary: >-
    O conjunto de grupos de seção no grupo da seção. Somente leitura


    \[[Conjunto de API: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly sectionGroups: OneNote.SectionGroupCollection;'
    return:
      type: <xref uid="onenote!OneNote.SectionGroupCollection:class" />
- name: sections
  uid: onenote!OneNote.SectionGroup#sections:member
  package: onenote!
  fullName: sections
  summary: >-
    O conjunto de seções no grupo da seção. Somente leitura


    \[[Conjunto de API: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly sections: OneNote.SectionCollection;'
    return:
      type: <xref uid="onenote!OneNote.SectionCollection:class" />
methods:
- name: addSection(title)
  uid: onenote!OneNote.SectionGroup#addSection:member(1)
  package: onenote!
  fullName: addSection(title)
  summary: >-
    Adiciona uma nova seção ao final do grupo de seção.


    \[[Conjunto de API: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'addSection(title: string): OneNote.Section;'
    parameters:
    - id: title
      description: O nome da nova seção.
      type: string
    return:
      type: <xref uid="onenote!OneNote.Section:class" />
      description: "\n\n#### <a name=\"examples\"></a>Exemplos\n\n```javascript\nOneNote.run(function (context) {\n\n    // Get the section groups that are direct children of the current notebook.\n    var sectionGroups = context.application.getActiveNotebook().sectionGroups;\n    \n    // Queue a command to load the section groups.\n    // For best performance, request specific properties.\n    sectionGroups.load(\"id\");\n\n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function() {\n            \n            // Add a section to each section group.\n            $.each(sectionGroups.items, function(index, sectionGroup) {\n                sectionGroup.addSection(\"Agenda\");\n            });\n            \n            // Run the queued commands.\n            return context.sync();\n        });\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: addSectionGroup(name)
  uid: onenote!OneNote.SectionGroup#addSectionGroup:member(1)
  package: onenote!
  fullName: addSectionGroup(name)
  summary: >-
    Adiciona um novo grupo de seção ao final deste sectionGroup.


    \[[Conjunto de API: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'addSectionGroup(name: string): OneNote.SectionGroup;'
    parameters:
    - id: name
      description: O nome da nova seção.
      type: string
    return:
      type: <xref uid="onenote!OneNote.SectionGroup:class" />
      description: "\n\n#### <a name=\"examples\"></a>Exemplos\n\n```javascript\nOneNote.run(function (context) {\n    var sectionGroup;\n    var nestedSectionGroup;\n\n    // Gets the active notebook.\n    var notebook = context.application.getActiveNotebook();\n\n    // Queue a command to add a new section group.\n    var sectionGroups = notebook.sectionGroups;\n\n    // Queue a command to load the new section group.\n    sectionGroups.load();\n\n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function(){\n            sectionGroup = sectionGroups.items[0];\n            sectionGroup.load();\n            return context.sync();\n        })\n        .then(function(){\n            nestedSectionGroup = sectionGroup.addSectionGroup(\"Sample nested section group\");\n            nestedSectionGroup.load();\n            return context.sync();\n        })\n        .then(function() {\n            console.log(\"New nested section group name is \" + nestedSectionGroup.name);\n        });\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n}); \n```"
- name: getRestApiId()
  uid: onenote!OneNote.SectionGroup#getRestApiId:member(1)
  package: onenote!
  fullName: getRestApiId()
  summary: >-
    Obtém a ID da API REST.


    \[[Conjunto de API: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getRestApiId(): OfficeExtension.ClientResult<string>;'
    return:
      type: <xref uid="office!OfficeExtension.ClientResult:class" />&lt;string&gt;
      description: ''
- name: load(option)
  uid: onenote!OneNote.SectionGroup#load:member(1)
  package: onenote!
  fullName: load(option)
  summary: Coloca um comando na fila para carregar as propriedades especificadas do objeto. Você deve chamar "context.sync()" antes de ler as propriedades.
  remarks: >-
    Além dessa assinatura, este método tem as seguintes assinaturas:


    `load(option?: string | string[]): OneNote.SectionGroup` - Onde a opção é uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a ser carregadas.


    `load(option?: { select?: string; expand?: string; }): OneNote.SectionGroup` - Onde option.select é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades a carregar e options.expand é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades de navegação a ser carregadas.


    `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.SectionGroup` - Disponível somente em tipos de coleção. É semelhante à assinatura anterior. Option.top especifica o número máximo de itens de coleção que podem ser incluídos no resultado. Option.skip especifica o número de itens que devem ser ignorados e não incluídos no resultado. Se option.top for especificado, o conjunto de resultados começará depois de ignorar o número especificado de itens.
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(option?: OneNote.Interfaces.SectionGroupLoadOptions): OneNote.SectionGroup;'
    parameters:
    - id: option
      description: ''
      type: <xref uid="onenote!OneNote.Interfaces.SectionGroupLoadOptions:interface" />
    return:
      type: <xref uid="onenote!OneNote.SectionGroup:class" />
      description: ''
- name: load(propertyNames)
  uid: onenote!OneNote.SectionGroup#load:member(2)
  package: onenote!
  fullName: load(propertyNames)
  summary: Coloca um comando na fila para carregar as propriedades especificadas do objeto. Você deve chamar `context.sync()` antes de ler as propriedades.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): OneNote.SectionGroup;'
    parameters:
    - id: propertyNames
      description: Uma cadeia de caracteres delimitada por vírgulas ou uma matriz de cadeias de caracteres que especificam as propriedades a ser carregadas.
      type: string | string[]
    return:
      type: <xref uid="onenote!OneNote.SectionGroup:class" />
      description: "\n\n#### <a name=\"examples\"></a>Exemplos\n\n```javascript\nOneNote.run(function (context) {\n        \n    // Get the parent section group that contains the current section.\n    var sectionGroup = context.application.getActiveSection().parentSectionGroup;\n            \n    // Queue a command to load the section group. \n    // For best performance, request specific properties.           \n    sectionGroup.load(\"id,name\");\n            \n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n            \n            // Write the properties.\n            console.log(\"Section group name: \" + sectionGroup.name);\n            console.log(\"Section group ID: \" + sectionGroup.id);\n            \n        });\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\nOneNote.run(function (context) {\n        \n    // Get the parent section group that contains the current section.\n    var sectionGroup = context.application.getActiveSection().parentSectionGroup;\n            \n    // Queue a command to load the section group with the specified properties.           \n    sectionGroup.load(\"name,notebook/name\"); \n            \n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n\n            // Write the properties.\n            console.log(\"Section group name: \" + sectionGroup.name);\n            console.log(\"Parent notebook name: \" + sectionGroup.notebook.name);\n        });\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\nOneNote.run(function (context) {\n\n    // Get the section groups that are direct children of the current notebook.\n    var sectionGroups = context.application.getActiveNotebook().sectionGroups;\n\n    // Queue a command to load the section groups.\n    // For best performance, request specific properties.\n    sectionGroups.load(\"name\");\n    \n    // Get the child section groups of the first section group in the notebook.\n    var nestedSectionGroups = sectionGroups._GetItem(0).sectionGroups;\n    \n    // Queue a command to load the ID and name properties of the child section groups.\n    nestedSectionGroups.load(\"id,name\");\n    \n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function() {\n            \n            // Write the properties for each child section group.\n            $.each(nestedSectionGroups.items, function(index, sectionGroup) {\n                console.log(\"Section group name: \" + sectionGroup.name);  \n                console.log(\"Section group ID: \" + sectionGroup.id);  \n            });\n        });\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\nOneNote.run(function (context) {\n\n    // Get the sections that are siblings of the current section.\n    var sections = context.application.getActiveSection().parentSectionGroup.sections;\n\n    // Queue a command to load the section groups.\n    // For best performance, request specific properties.\n    sections.load(\"id,name\");\n    \n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function() {\n            \n            // Write the properties for each section.\n            $.each(sections.items, function(index, section) {\n                console.log(\"Section name: \" + section.name);  \n                console.log(\"Section ID: \" + section.id);  \n            });\n        });\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: load(option)
  uid: onenote!OneNote.SectionGroup#load:member(3)
  package: onenote!
  fullName: load(option)
  summary: ''
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      load(option?: {
                  select?: string;
                  expand?: string;
              }): OneNote.SectionGroup;
    parameters:
    - id: option
      description: ''
      type: >-
        {
                    select?: string;
                    expand?: string;
                }
    return:
      type: <xref uid="onenote!OneNote.SectionGroup:class" />
      description: ''
- name: toJSON()
  uid: onenote!OneNote.SectionGroup#toJSON:member(1)
  package: onenote!
  fullName: toJSON()
  summary: Substitui o método JavaScript `toJSON()` para fornecer uma saída mais útil quando um objeto API é passado para `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, por sua vez, chama `toJSON` o método do objeto que é passado a ele.) Enquanto o objeto OneNote.SectionGroup original é um objeto API, o método `toJSON` retorna um objeto JavaScript simples (digitado como `OneNote.Interfaces.SectionGroupData`<!-- -->) que contém cópias rasas de quaisquer propriedades filho carregadas do objeto original.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'toJSON(): OneNote.Interfaces.SectionGroupData;'
    return:
      type: <xref uid="onenote!OneNote.Interfaces.SectionGroupData:interface" />
      description: ''
- name: track()
  uid: onenote!OneNote.SectionGroup#track:member(1)
  package: onenote!
  fullName: track()
  summary: Acompanha o objeto para ajuste automático com base nas alterações adjacentes no documento. Essa chamada é uma abreviação de context.trackedObjects.add(thisObject). Se você estiver usando esse objeto em chamadas ".sync" e fora da execução sequencial de um lote ".run" e receber um erro "InvalidObjectPath" ao definir uma propriedade ou invocar um método no objeto, era necessário ter adicionado o objeto à coleção de objetos rastreados quando o objeto foi criado pela primeira vez.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'track(): OneNote.SectionGroup;'
    return:
      type: <xref uid="onenote!OneNote.SectionGroup:class" />
      description: ''
- name: untrack()
  uid: onenote!OneNote.SectionGroup#untrack:member(1)
  package: onenote!
  fullName: untrack()
  summary: Libere a memória associada a este objeto, se ele já tiver sido rastreado anteriormente. Essa chamada é uma abreviação de context.trackedObjects.remove(thisObject). Ter muitos objetos rastreados desacelera o aplicativo host, por isso, lembre-se de liberar todos os objetos adicionados após usá-los. Você precisa chamar "context.sync()" antes da liberação da memória entrar em vigor.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'untrack(): OneNote.SectionGroup;'
    return:
      type: <xref uid="onenote!OneNote.SectionGroup:class" />
      description: ''
extends: <xref uid="office!OfficeExtension.ClientObject:class" />
metadata:
  ms.openlocfilehash: 64f93e2ad4eb04183c26a8cf4d092df290290671
  ms.sourcegitcommit: 276e655472f82435a4b1227fbbb2feb687b659c0
  ms.translationtype: MT
  ms.contentlocale: pt-BR
  ms.lasthandoff: 03/08/2021
  ms.locfileid: "50542122"
