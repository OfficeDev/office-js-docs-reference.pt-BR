### YamlMime:UniversalReference
items:
  - uid: 'onenote!OneNote.Section:class'
    summary: |-
      Representa uma seção do OneNote. As seções podem conter páginas.

      \[[Conjunto de APIs: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: OneNote.Section
    fullName: OneNote.Section
    langs:
      - typeScript
    type: class
    extends:
      - 'office!OfficeExtension.ClientObject:class'
    package: onenote!
    children:
      - 'onenote!OneNote.Section#addPage:member(1)'
      - 'onenote!OneNote.Section#clientUrl:member'
      - 'onenote!OneNote.Section#context:member'
      - 'onenote!OneNote.Section#copyToNotebook:member(1)'
      - 'onenote!OneNote.Section#copyToSectionGroup:member(1)'
      - 'onenote!OneNote.Section#getRestApiId:member(1)'
      - 'onenote!OneNote.Section#id:member'
      - 'onenote!OneNote.Section#insertSectionAsSibling:member(1)'
      - 'onenote!OneNote.Section#insertSectionAsSibling:member(2)'
      - 'onenote!OneNote.Section#isEncrypted:member'
      - 'onenote!OneNote.Section#isLocked:member'
      - 'onenote!OneNote.Section#load:member(1)'
      - 'onenote!OneNote.Section#load:member(2)'
      - 'onenote!OneNote.Section#load:member(3)'
      - 'onenote!OneNote.Section#name:member'
      - 'onenote!OneNote.Section#notebook:member'
      - 'onenote!OneNote.Section#pages:member'
      - 'onenote!OneNote.Section#parentSectionGroup:member'
      - 'onenote!OneNote.Section#parentSectionGroupOrNull:member'
      - 'onenote!OneNote.Section#toJSON:member(1)'
      - 'onenote!OneNote.Section#track:member(1)'
      - 'onenote!OneNote.Section#untrack:member(1)'
      - 'onenote!OneNote.Section#webUrl:member'
  - uid: 'onenote!OneNote.Section#addPage:member(1)'
    summary: |-
      Adiciona uma nova página ao final da seção.

      \[[Conjunto de APIs: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: addPage(title)
    fullName: addPage(title)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addPage(title: string): OneNote.Page;'
      return:
        type:
          - 'onenote!OneNote.Page:class'
        description: |-


          #### <a name="examples"></a>Exemplos

          ```javascript
          OneNote.run(function (context) {
                      
              // Queue a command to add a page to the current section.
              var page = context.application.getActiveSection().addPage("Wish list");
                      
              // Queue a command to load the id and title of the new page. 
              // This example loads the new page so it can read its properties later.           
              page.load('id,title');
                      
              // Run the queued commands, and return a promise to indicate task completion.
              return context.sync()
                  .then(function () {
                       
                      // Display the properties.       
                      console.log("Page name: " + page.title);
                      console.log("Page ID: " + page.id);

                  });
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: title
          description: O título de uma nova página.
          type:
            - string
  - uid: 'onenote!OneNote.Section#clientUrl:member'
    summary: |-
      A URL do cliente da seção. Somente leitura

      \[[Conjunto de APIs: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: clientUrl
    fullName: clientUrl
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly clientUrl: string;'
      return:
        type:
          - string
  - uid: 'onenote!OneNote.Section#context:member'
    summary: O contexto de solicitação associado ao objeto. Isso conecta o processo do suplemento ao processo do aplicativo host do Office.
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'onenote!OneNote.RequestContext:class'
  - uid: 'onenote!OneNote.Section#copyToNotebook:member(1)'
    summary: |-
      Copia esta seção para o bloco de anotações especificado.

      \[[Conjunto de APIs: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: copyToNotebook(destinationNotebook)
    fullName: copyToNotebook(destinationNotebook)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'copyToNotebook(destinationNotebook: OneNote.Notebook): OneNote.Section;'
      return:
        type:
          - 'onenote!OneNote.Section:class'
        description: |-


          #### <a name="examples"></a>Exemplos

          ```javascript
          OneNote.run(function (context) {
              var app = context.application;
              
              // Gets the active Notebook.
              var notebook = app.getActiveNotebook();
              
              // Gets the active Section.
              var section = app.getActiveSection();
              
              var newSection;
              
              return context.sync()
                  .then(function() {
                      newSection = section.copyToNotebook(notebook);
                      newSection.load('id');
                      return context.sync();
                  })
                  .then(function() {
                      console.log(newSection.id);
                  });
          })
          .catch(function (error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: destinationNotebook
          description: O bloco de anotações para o qual copiar esta seção.
          type:
            - 'onenote!OneNote.Notebook:class'
  - uid: 'onenote!OneNote.Section#copyToSectionGroup:member(1)'
    summary: |-
      Copia esta seção para o grupo de seção especificado.

      \[[Conjunto de APIs: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: copyToSectionGroup(destinationSectionGroup)
    fullName: copyToSectionGroup(destinationSectionGroup)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'copyToSectionGroup(destinationSectionGroup: OneNote.SectionGroup): OneNote.Section;'
      return:
        type:
          - 'onenote!OneNote.Section:class'
        description: |-


          #### <a name="examples"></a>Exemplos

          ```javascript
          OneNote.run(function (ctx) {
              var app = ctx.application;
              
              // Gets the active Notebook.
              var notebook = app.getActiveNotebook();
              
              // Gets the active Section.
              var section = app.getActiveSection();
              
              var newSection;
              
              return ctx.sync()
                  .then(function() {
                      var firstSectionGroup = notebook.sectionGroups.items[0];
                      newSection = section.copyToSectionGroup(firstSectionGroup);
                      newSection.load('id');
                      return ctx.sync();
                  })
                  .then(function() {
                      console.log(newSection.id);
                  });
          })
          .catch(function (error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: destinationSectionGroup
          description: O grupo de seção para o qual copiar esta seção.
          type:
            - 'onenote!OneNote.SectionGroup:class'
  - uid: 'onenote!OneNote.Section#getRestApiId:member(1)'
    summary: |-
      Obtém a ID da API REST.

      \[[Conjunto de APIs: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: getRestApiId()
    fullName: getRestApiId()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRestApiId(): OfficeExtension.ClientResult<string>;'
      return:
        type:
          - 'onenote!OneNote.Section#getRestApiId~0:complex'
        description: |-


          #### <a name="examples"></a>Exemplos

          ```javascript
          OneNote.run(function(ctx){
              // Get the current section.         
              var section = ctx.application.getActiveSection();
              var restApiId = section.getRestApiId();

              return ctx.sync().
                  then(function(){
                      console.log("The REST API ID is " + restApiId.value);
                      // Note that the REST API ID isn't all you need to interact with the OneNote REST API. 
                      // This is only required for SharePoint notebooks. baseUrl will be null for OneDrive notebooks.
                      // For SharePoint notebooks, the notebook baseUrl should be used to talk to the 
                      // OneNote REST API according to the OneNote Development Blog.
                      // https://blogs.msdn.microsoft.com/onenotedev/2015/06/11/and-sharepoint-makes-three/
                  });
          });
          ```
  - uid: 'onenote!OneNote.Section#id:member'
    summary: |-
      Obtém a ID da seção. Somente leitura.

      \[[Conjunto de APIs: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: string;'
      return:
        type:
          - string
  - uid: 'onenote!OneNote.Section#insertSectionAsSibling:member(1)'
    summary: |-
      Insere uma nova seção antes ou depois da seção atual.

      \[[Conjunto de APIs: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: 'insertSectionAsSibling(location, title)'
    fullName: 'insertSectionAsSibling(location, title)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertSectionAsSibling(location: OneNote.InsertLocation, title: string): OneNote.Section;'
      return:
        type:
          - 'onenote!OneNote.Section:class'
        description: ''
      parameters:
        - id: location
          description: O local da nova seção em relação à seção atual.
          type:
            - 'onenote!OneNote.InsertLocation:enum'
        - id: title
          description: O nome da nova seção.
          type:
            - string
  - uid: 'onenote!OneNote.Section#insertSectionAsSibling:member(2)'
    summary: |-
      Insere uma nova seção antes ou depois da seção atual.

      \[[Conjunto de APIs: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: 'insertSectionAsSibling(locationString, title)'
    fullName: 'insertSectionAsSibling(locationString, title)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertSectionAsSibling(locationString: "Before" | "After", title: string): OneNote.Section;'
      return:
        type:
          - 'onenote!OneNote.Section:class'
        description: |-


          #### <a name="examples"></a>Exemplos

          ```javascript
          OneNote.run(function (context) {
                      
              // Queue a command to insert a section after the current section.
              var section = context.application.getActiveSection().insertSectionAsSibling("After", "New section");
                      
              // Queue a command to load the id and name of the new section. 
              // This example loads the new section so it can read its properties later.           
              section.load('id,name');
                      
              // Run the queued commands, and return a promise to indicate task completion.
              return context.sync()
                  .then(function () {
                       
                      // Display the properties.       
                      console.log("Section name: " + section.name);
                      console.log("Section ID: " + section.id);
                  });
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: locationString
          description: O local da nova seção em relação à seção atual.
          type:
            - '"Before" | "After"'
        - id: title
          description: O nome da nova seção.
          type:
            - string
  - uid: 'onenote!OneNote.Section#isEncrypted:member'
    summary: |-
      True se esta seção é criptografada com uma senha. Somente leitura

      \[[Conjunto de APIs: OneNoteApi 1,2](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: isEncrypted
    fullName: isEncrypted
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly isEncrypted: boolean;'
      return:
        type:
          - boolean
  - uid: 'onenote!OneNote.Section#isLocked:member'
    summary: |-
      True se esta seção estiver bloqueada. Somente leitura

      \[[Conjunto de APIs: OneNoteApi 1,2](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: isLocked
    fullName: isLocked
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly isLocked: boolean;'
      return:
        type:
          - boolean
  - uid: 'onenote!OneNote.Section#load:member(1)'
    summary: Coloca um comando na fila para carregar as propriedades especificadas do objeto. Você deve chamar "context.sync()" antes de ler as propriedades.
    remarks: |-
      Além dessa assinatura, este método tem as seguintes assinaturas:

      `load(option?: string | string[]): OneNote.Section`-Where Option é uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.

      `load(option?: { select?: string; expand?: string; }): OneNote.Section`-Onde Option. Select é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades a serem carregadas, e Options. Expand é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades de navegação a serem carregadas.

      `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.Section`– Disponível somente nos tipos de coleção. É semelhante à assinatura anterior. Option. Top especifica o número máximo de itens de coleta que podem ser incluídos no resultado. Option. Skip especifica o número de itens que devem ser ignorados e não incluídos no resultado. Se Option. Top for especificado, o conjunto de resultados será iniciado depois de ignorar o número de itens especificado.
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OneNote.Interfaces.SectionLoadOptions): OneNote.Section;'
      return:
        type:
          - 'onenote!OneNote.Section:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'onenote!OneNote.Interfaces.SectionLoadOptions:interface'
  - uid: 'onenote!OneNote.Section#load:member(2)'
    summary: Coloca um comando na fila para carregar as propriedades especificadas do objeto. Você deve chamar `context.sync()` antes de ler as propriedades.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): OneNote.Section;'
      return:
        type:
          - 'onenote!OneNote.Section:class'
        description: |-


          #### <a name="examples"></a>Exemplos

          ```javascript
          OneNote.run(function (context) {
                  
              // Get the current section.
              var section = context.application.getActiveSection();
                      
              // Queue a command to load the section. 
              // For best performance, request specific properties.           
              section.load("id");
                      
              // Run the queued commands, and return a promise to indicate task completion.
              return context.sync()
                  .then(function () {
                      console.log("Section ID: " + section.id);
                  });
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          OneNote.run(function (context) {
                  
              // Get the current section.
              var section = context.application.getActiveSection();
                      
              // Queue a command to load the section with the specified properties. 
              section.load("name,notebook/name");
                      
              // Run the queued commands, and return a promise to indicate task completion.
              return context.sync()
                  .then(function () {
                      console.log("Section name: " + section.name);
                      console.log("Parent notebook name: " + section.notebook.name);
                  });
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          OneNote.run(function (context) {
              // Queue a command to add a page to the current section.
              var section = context.application.getActiveSection();
              section.load('clientUrl,notebook');
              var sectionGroup = section.parentSectionGroupOrNull;
              
              // Run the queued commands, and return a promise to indicate task completion.
              return context.sync()
                  .then(function () {
                      if(sectionGroup.isNull === false)
                      {
                          // If a parent section group exists, queue a command to add a section in it!
                          sectionGroup.addSection("NewSectionInSectionGroup");
                      }
                      return context.sync();
                  });
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: Uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.
          type:
            - 'string | string[]'
  - uid: 'onenote!OneNote.Section#load:member(3)'
    summary: Coloca um comando na fila para carregar as propriedades especificadas do objeto. Você deve chamar `context.sync()` antes de ler as propriedades.
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): OneNote.Section;'
      return:
        type:
          - 'onenote!OneNote.Section:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: Onde propertyNamesAndPaths. Select é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades a serem carregadas e propertyNamesAndPaths. Expand é uma sequência de caracteres delimitada por vírgula que especifica as propriedades de navegação a serem carregadas.
          type:
            - '{ select?: string; expand?: string; }'
  - uid: 'onenote!OneNote.Section#name:member'
    summary: |-
      Obtém o nome da seção. Somente leitura.

      \[[Conjunto de APIs: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: name
    fullName: name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly name: string;'
      return:
        type:
          - string
  - uid: 'onenote!OneNote.Section#notebook:member'
    summary: |-
      Obtém o bloco de anotações que contém a seção. Somente leitura.

      \[[Conjunto de APIs: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: notebook
    fullName: notebook
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly notebook: OneNote.Notebook;'
      return:
        type:
          - 'onenote!OneNote.Notebook:class'
  - uid: 'onenote!OneNote.Section#pages:member'
    summary: |-
      Obtém o conjunto de páginas da seção. Somente leitura

      \[[Conjunto de APIs: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: pages
    fullName: pages
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly pages: OneNote.PageCollection;'
      return:
        type:
          - 'onenote!OneNote.PageCollection:class'
  - uid: 'onenote!OneNote.Section#parentSectionGroup:member'
    summary: |-
      Obtém o grupo de seções que contém a seção. Retorna ItemNotFound se a seção é um filho direto do bloco de anotações. Somente leitura.

      \[[Conjunto de APIs: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: parentSectionGroup
    fullName: parentSectionGroup
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentSectionGroup: OneNote.SectionGroup;'
      return:
        type:
          - 'onenote!OneNote.SectionGroup:class'
  - uid: 'onenote!OneNote.Section#parentSectionGroupOrNull:member'
    summary: |-
      Obtém o grupo de seção que contém a seção. Retorna null se a seção for um filho direto do bloco de anotações. Somente leitura.

      \[[Conjunto de APIs: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: parentSectionGroupOrNull
    fullName: parentSectionGroupOrNull
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentSectionGroupOrNull: OneNote.SectionGroup;'
      return:
        type:
          - 'onenote!OneNote.SectionGroup:class'
  - uid: 'onenote!OneNote.Section#toJSON:member(1)'
    summary: 'Substitui o método `toJSON()` JavaScript para fornecer uma saída mais útil quando um objeto API é passado para`JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, por sua vez, chama `toJSON` o método do objeto que é passado para ele.) Enquanto o objeto OneNote. Section original é um objeto API, o `toJSON` método retorna um objeto JavaScript simples (digitado como`OneNote.Interfaces.SectionData`<!-- -->) que contém cópias superficiais de qualquer propriedade filho carregada do objeto original.'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): OneNote.Interfaces.SectionData;'
      return:
        type:
          - 'onenote!OneNote.Interfaces.SectionData:interface'
        description: ''
  - uid: 'onenote!OneNote.Section#track:member(1)'
    summary: 'Acompanha o objeto para ajuste automático com base nas alterações adjacentes no documento. Essa chamada é uma abreviação de context.trackedObjects.add(thisObject). Se você estiver usando esse objeto em chamadas ".sync" e fora da execução sequencial de um lote ".run" e receber um erro "InvalidObjectPath" ao definir uma propriedade ou invocar um método no objeto, era necessário ter adicionado o objeto à coleção de objetos rastreados quando o objeto foi criado pela primeira vez.'
    name: track()
    fullName: track()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'track(): OneNote.Section;'
      return:
        type:
          - 'onenote!OneNote.Section:class'
        description: ''
  - uid: 'onenote!OneNote.Section#untrack:member(1)'
    summary: 'Libere a memória associada a este objeto, se ele já tiver sido rastreado anteriormente. Essa chamada é uma abreviação de context.trackedObjects.remove(thisObject). Ter muitos objetos rastreados desacelera o aplicativo host, por isso, lembre-se de liberar todos os objetos adicionados após usá-los. Você precisa chamar "context.sync()" antes da liberação da memória entrar em vigor.'
    name: untrack()
    fullName: untrack()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'untrack(): OneNote.Section;'
      return:
        type:
          - 'onenote!OneNote.Section:class'
        description: ''
  - uid: 'onenote!OneNote.Section#webUrl:member'
    summary: |-
      A URL da Web da página. Somente leitura

      \[[Conjunto de APIs: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: webUrl
    fullName: webUrl
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly webUrl: string;'
      return:
        type:
          - string
references:
  - uid: 'office!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'onenote!OneNote.Page:class'
    name: OneNote.Page
  - uid: 'onenote!OneNote.RequestContext:class'
    name: RequestContext
  - uid: 'onenote!OneNote.Section:class'
    name: OneNote.Section
  - uid: 'onenote!OneNote.Notebook:class'
    name: OneNote.Notebook
  - uid: 'onenote!OneNote.SectionGroup:class'
    name: OneNote.SectionGroup
  - uid: 'onenote!OneNote.Section#getRestApiId~0:complex'
    name: OfficeExtension.ClientResult<string>
    fullName: OfficeExtension.ClientResult<string>
    spec.typeScript:
      - uid: 'office!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <string>
        fullName: <string>
  - uid: 'onenote!OneNote.InsertLocation:enum'
    name: OneNote.InsertLocation
  - uid: 'onenote!OneNote.Interfaces.SectionLoadOptions:interface'
    name: OneNote.Interfaces.SectionLoadOptions
  - uid: 'onenote!OneNote.PageCollection:class'
    name: OneNote.PageCollection
  - uid: 'onenote!OneNote.Interfaces.SectionData:interface'
    name: OneNote.Interfaces.SectionData