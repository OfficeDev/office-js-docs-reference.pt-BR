### YamlMime:UniversalReference
ms.openlocfilehash: 1077f04ac5e9c2aad9e8486c9291da742d949b08
ms.sourcegitcommit: 3f4a320fa860d05d348c8bdec2295e046a45a34f
ms.translationtype: MT
ms.contentlocale: pt-BR
ms.lasthandoff: 02/07/2019
ms.locfileid: "29769726"
items:
- uid: onenote.OneNote.Table
  summary: >-
    <span data-ttu-id="6572d-101">Representa uma tabela em uma página do OneNote.</span><span class="sxs-lookup"><span data-stu-id="6572d-101">Represents a table in a OneNote page.</span></span>


    <span data-ttu-id="6572d-102">\[[Conjunto de APIs: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6572d-102">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: OneNote.Table
  fullName: OneNote.Table
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: onenote
  children:
  - onenote.OneNote.Table.appendColumn
  - onenote.OneNote.Table.appendRow
  - onenote.OneNote.Table.borderVisible
  - onenote.OneNote.Table.clear
  - onenote.OneNote.Table.columnCount
  - onenote.OneNote.Table.context
  - onenote.OneNote.Table.getCell
  - onenote.OneNote.Table.id
  - onenote.OneNote.Table.insertColumn
  - onenote.OneNote.Table.insertRow
  - onenote.OneNote.Table.load
  - onenote.OneNote.Table.paragraph
  - onenote.OneNote.Table.rowCount
  - onenote.OneNote.Table.rows
  - onenote.OneNote.Table.set
  - onenote.OneNote.Table.setShadingColor
  - onenote.OneNote.Table.toJSON
  - onenote.OneNote.Table.track
  - onenote.OneNote.Table.untrack
- uid: onenote.OneNote.Table.appendColumn
  summary: >-
    <span data-ttu-id="6572d-p101">Adiciona uma coluna ao final da tabela. Valores, se especificados, são definidos na nova coluna. Caso contrário, a coluna fica vazia.</span><span class="sxs-lookup"><span data-stu-id="6572d-p101">Adds a column to the end of the table. Values, if specified, are set in the new column. Otherwise the column is empty.</span></span>


    <span data-ttu-id="6572d-106">\[[Conjunto de APIs: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6572d-106">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: appendColumn(values)
  fullName: appendColumn
  langs:
  - typeScript
  type: method
  syntax:
    content: 'appendColumn(values?: string[]): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"6572d-107\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"6572d-107\">Examples</span></span>\n\n```javascript\nOneNote.run(function(ctx) {\n    var app = ctx.application;\n    var outline = app.getActiveOutline();\n    \n    // Queue a command to load outline.paragraphs and their types.\n    ctx.load(outline, \"paragraphs, paragraphs/type\");\n    \n    // Run the queued commands, and return a promise to indicate task completion.\n    return ctx.sync().then(function () {\n        var paragraphs = outline.paragraphs;\n        \n        // for each table, append a column.\n        for (var i = 0; i < paragraphs.items.length; i++) {\n            var paragraph = paragraphs.items[i];\n            if (paragraph.type == \"Table\") {\n                var table = paragraph.table;\n                table.appendColumn([\"cell0\", \"cell1\"]);\n            }\n        }\n        return ctx.sync();\n    })\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: values
      description: <span data-ttu-id="6572d-108">Opcional.</span><span class="sxs-lookup"><span data-stu-id="6572d-108">Optional.</span></span> <span data-ttu-id="6572d-109">Cadeias de caracteres a inserir na nova coluna, especificada como uma matriz.</span><span class="sxs-lookup"><span data-stu-id="6572d-109">Strings to insert in the new column, specified as an array.</span></span> <span data-ttu-id="6572d-110">Não pode ter mais valores que linhas na tabela.</span><span class="sxs-lookup"><span data-stu-id="6572d-110">Must not have more values than rows in the table.</span></span>
      type:
      - string[]
- uid: onenote.OneNote.Table.appendRow
  summary: >-
    <span data-ttu-id="6572d-p103">Adiciona uma linha ao final da tabela. Valores, se especificados, são definidos na nova linha. Caso contrário, a linha fica vazia.</span><span class="sxs-lookup"><span data-stu-id="6572d-p103">Adds a row to the end of the table. Values, if specified, are set in the new row. Otherwise the row is empty.</span></span>


    <span data-ttu-id="6572d-114">\[[Conjunto de APIs: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6572d-114">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: appendRow(values)
  fullName: appendRow
  langs:
  - typeScript
  type: method
  syntax:
    content: 'appendRow(values?: string[]): OneNote.TableRow;'
    return:
      type:
      - OneNote.TableRow
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"6572d-115\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"6572d-115\">Examples</span></span>\n\n```javascript\nOneNote.run(function(ctx) {\n    var app = ctx.application;\n    var outline = app.getActiveOutline();\n    \n    // Queue a command to load outline.paragraphs and their types.\n    ctx.load(outline, \"paragraphs, paragraphs/type\");\n    \n    // Run the queued commands, and return a promise to indicate task completion.\n    return ctx.sync().then(function () {\n        var paragraphs = outline.paragraphs;\n        \n        // for each table, append a column.\n        for (var i = 0; i < paragraphs.items.length; i++) {\n            var paragraph = paragraphs.items[i];\n            if (paragraph.type == \"Table\") {\n                var table = paragraph.table;\n                var row = table.appendRow([\"cell0\", \"cell1\"]);\n            }\n        }\n        return ctx.sync();\n    })\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: values
      description: <span data-ttu-id="6572d-116">Opcional.</span><span class="sxs-lookup"><span data-stu-id="6572d-116">Optional.</span></span> <span data-ttu-id="6572d-117">Cadeias de caracteres a inserir na nova linha, especificadas como uma matriz.</span><span class="sxs-lookup"><span data-stu-id="6572d-117">Strings to insert in the new row, specified as an array.</span></span> <span data-ttu-id="6572d-118">Não pode ter mais valores que colunas na tabela.</span><span class="sxs-lookup"><span data-stu-id="6572d-118">Must not have more values than columns in the table.</span></span>
      type:
      - string[]
- uid: onenote.OneNote.Table.borderVisible
  summary: >-
    <span data-ttu-id="6572d-p105">Obtém ou define se as bordas estão visíveis ou não. True se forem visíveis, false se forem ocultas.</span><span class="sxs-lookup"><span data-stu-id="6572d-p105">Gets or sets whether the borders are visible or not. True if they are visible, false if they are hidden.</span></span>


    <span data-ttu-id="6572d-121">\[[Conjunto de APIs: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6572d-121">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: borderVisible
  fullName: borderVisible
  langs:
  - typeScript
  type: property
  syntax:
    content: 'borderVisible: boolean;'
    return:
      type:
      - boolean
- uid: onenote.OneNote.Table.clear
  summary: >-
    <span data-ttu-id="6572d-122">Limpa o conteúdo da tabela.</span><span class="sxs-lookup"><span data-stu-id="6572d-122">Clears the contents of the table.</span></span>


    <span data-ttu-id="6572d-123">\[[Conjunto de APIs: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6572d-123">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: clear()
  fullName: clear
  langs:
  - typeScript
  type: method
  syntax:
    content: 'clear(): void;'
    return:
      type:
      - void
      description: ''
- uid: onenote.OneNote.Table.columnCount
  summary: >-
    <span data-ttu-id="6572d-124">Obtém a quantidade de colunas na tabela.</span><span class="sxs-lookup"><span data-stu-id="6572d-124">Gets the number of columns in the table.</span></span>


    <span data-ttu-id="6572d-125">\[[Conjunto de APIs: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6572d-125">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: columnCount
  fullName: columnCount
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly columnCount: number;'
    return:
      type:
      - number
- uid: onenote.OneNote.Table.context
  summary: <span data-ttu-id="6572d-126">O contexto de solicitação associado ao objeto.</span><span class="sxs-lookup"><span data-stu-id="6572d-126">The request context associated with the object.</span></span> <span data-ttu-id="6572d-127">Esse procedimento fará processo do suplemento de processo do aplicativo host do Office.</span><span class="sxs-lookup"><span data-stu-id="6572d-127">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: onenote.OneNote.Table.getCell
  summary: >-
    <span data-ttu-id="6572d-128">Obtém a célula da tabela em uma linha e coluna especificada.</span><span class="sxs-lookup"><span data-stu-id="6572d-128">Gets the table cell at a specified row and column.</span></span>


    <span data-ttu-id="6572d-129">\[[Conjunto de APIs: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6572d-129">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: getCell(rowIndex, cellIndex)
  fullName: getCell
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getCell(rowIndex: number, cellIndex: number): OneNote.TableCell;'
    return:
      type:
      - onenote.OneNote.TableCell
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"6572d-130\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"6572d-130\">Examples</span></span>\n\n```javascript\nOneNote.run(function(ctx) {\n    var app = ctx.application;\n    var outline = app.getActiveOutline();\n    \n    // Queue a command to load outline.paragraphs and their types.\n    ctx.load(outline, \"paragraphs, paragraphs/type\");\n    \n    // Run the queued commands, and return a promise to indicate task completion.\n    return ctx.sync().then(function () {\n        var paragraphs = outline.paragraphs;\n        \n        // for each table, get a cell in the second row and third column.\n        for (var i = 0; i < paragraphs.items.length; i++) {\n            var paragraph = paragraphs.items[i];\n            if (paragraph.type == \"Table\") {\n                var table = paragraph.table;\n                var cell = table.getCell(2 /*Row Index*/, 3 /*Column Index*/);\n            }\n        }\n        return ctx.sync();\n    })\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: rowIndex
      description: <span data-ttu-id="6572d-131">O índice da linha.</span><span class="sxs-lookup"><span data-stu-id="6572d-131">The index of the row.</span></span>
      type:
      - number
    - id: cellIndex
      description: <span data-ttu-id="6572d-132">O índice da célula na linha.</span><span class="sxs-lookup"><span data-stu-id="6572d-132">The index of the cell in the row.</span></span>
      type:
      - number
- uid: onenote.OneNote.Table.id
  summary: >-
    <span data-ttu-id="6572d-p107">Obtém a ID da tabela. Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="6572d-p107">Gets the ID of the table. Read-only.</span></span>


    <span data-ttu-id="6572d-135">\[[Conjunto de APIs: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6572d-135">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: id
  fullName: id
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly id: string;'
    return:
      type:
      - string
- uid: onenote.OneNote.Table.insertColumn
  summary: >-
    <span data-ttu-id="6572d-p108">Insere uma coluna no índice fornecido na tabela. Valores, se especificados, são definidos na nova coluna. Caso contrário, a coluna fica vazia.</span><span class="sxs-lookup"><span data-stu-id="6572d-p108">Inserts a column at the given index in the table. Values, if specified, are set in the new column. Otherwise the column is empty.</span></span>


    <span data-ttu-id="6572d-139">\[[Conjunto de APIs: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6572d-139">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: insertColumn(index, values)
  fullName: insertColumn
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertColumn(index: number, values?: string[]): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"6572d-140\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"6572d-140\">Examples</span></span>\n\n```javascript\nOneNote.run(function(ctx) {\n    var app = ctx.application;\n    var outline = app.getActiveOutline();\n    \n    // Queue a command to load outline.paragraphs and their types.\n    ctx.load(outline, \"paragraphs, paragraphs/type\");\n    \n    // Run the queued commands, and return a promise to indicate task completion.\n    return ctx.sync().then(function () {\n        var paragraphs = outline.paragraphs;\n        \n        // for each table, insert a column at index two.\n        for (var i = 0; i < paragraphs.items.length; i++) {\n            var paragraph = paragraphs.items[i];\n            if (paragraph.type == \"Table\") {\n                var table = paragraph.table;\n                table.insertColumn(2, [\"cell0\", \"cell1\"]);\n            }\n        }\n        return ctx.sync();\n    })\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: index
      description: <span data-ttu-id="6572d-141">Índice em que a coluna será inserida na tabela.</span><span class="sxs-lookup"><span data-stu-id="6572d-141">Index where the column will be inserted in the table.</span></span>
      type:
      - number
    - id: values
      description: <span data-ttu-id="6572d-142">Opcional.</span><span class="sxs-lookup"><span data-stu-id="6572d-142">Optional.</span></span> <span data-ttu-id="6572d-143">Cadeias de caracteres a inserir na nova coluna, especificada como uma matriz.</span><span class="sxs-lookup"><span data-stu-id="6572d-143">Strings to insert in the new column, specified as an array.</span></span> <span data-ttu-id="6572d-144">Não pode ter mais valores que linhas na tabela.</span><span class="sxs-lookup"><span data-stu-id="6572d-144">Must not have more values than rows in the table.</span></span>
      type:
      - string[]
- uid: onenote.OneNote.Table.insertRow
  summary: >-
    <span data-ttu-id="6572d-p110">Insere uma linha no índice fornecido na tabela. Valores, se especificados, são definidos na nova linha. Caso contrário, a linha fica vazia.</span><span class="sxs-lookup"><span data-stu-id="6572d-p110">Inserts a row at the given index in the table. Values, if specified, are set in the new row. Otherwise the row is empty.</span></span>


    <span data-ttu-id="6572d-148">\[[Conjunto de APIs: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6572d-148">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: insertRow(index, values)
  fullName: insertRow
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertRow(index: number, values?: string[]): OneNote.TableRow;'
    return:
      type:
      - OneNote.TableRow
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"6572d-149\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"6572d-149\">Examples</span></span>\n\n```javascript\nOneNote.run(function(ctx) {\n    var app = ctx.application;\n    var outline = app.getActiveOutline();\n    \n    // Queue a command to load outline.paragraphs and their types.\n    ctx.load(outline, \"paragraphs, paragraphs/type\");\n    \n    // Run the queued commands, and return a promise to indicate task completion.\n    return ctx.sync().then(function () {\n        var paragraphs = outline.paragraphs;\n        \n        // for each table, insert a row at index two.\n        for (var i = 0; i < paragraphs.items.length; i++) {\n            var paragraph = paragraphs.items[i];\n            if (paragraph.type == \"Table\") {\n                var table = paragraph.table;\n                var row = table.insertRow(2, [\"cell0\", \"cell1\"]);\n            }\n        }\n        return ctx.sync();\n    })\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: index
      description: <span data-ttu-id="6572d-150">Índice em que a linha será inserida na tabela.</span><span class="sxs-lookup"><span data-stu-id="6572d-150">Index where the row will be inserted in the table.</span></span>
      type:
      - number
    - id: values
      description: <span data-ttu-id="6572d-151">Opcional.</span><span class="sxs-lookup"><span data-stu-id="6572d-151">Optional.</span></span> <span data-ttu-id="6572d-152">Cadeias de caracteres a inserir na nova linha, especificadas como uma matriz.</span><span class="sxs-lookup"><span data-stu-id="6572d-152">Strings to insert in the new row, specified as an array.</span></span> <span data-ttu-id="6572d-153">Não pode ter mais valores que colunas na tabela.</span><span class="sxs-lookup"><span data-stu-id="6572d-153">Must not have more values than columns in the table.</span></span>
      type:
      - string[]
- uid: onenote.OneNote.Table.load
  summary: <span data-ttu-id="6572d-154">Filas de backup de um comando para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="6572d-154">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="6572d-155">Você deve chamar "context.sync()" antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="6572d-155">You must call "context.sync()" before reading the properties.</span></span>
  remarks: "<span data-ttu-id=\"6572d-156\">Além dessa assinatura, esse método tem as seguintes assinaturas:</span><span class=\"sxs-lookup\"><span data-stu-id=\"6572d-156\">In addition to this signature, this method has the following signatures:</span></span>\n\n<span data-ttu-id=\"6572d-157\">`load(option?: { select?: string; expand?: string; }): OneNote.Table`-Onde option.select é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades para carregar e options.expand é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades de navegação para carregar.</span><span class=\"sxs-lookup\"><span data-stu-id=\"6572d-157\">`load(option?: { select?: string; expand?: string; }): OneNote.Table` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>\n\n<span data-ttu-id=\"6572d-158\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.Table`-Só está disponível em tipos de coleção.</span><span class=\"sxs-lookup\"><span data-stu-id=\"6572d-158\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.Table` - Only available on collection types.</span></span> <span data-ttu-id=\"6572d-159\">Ele é semelhante à assinatura anterior.</span><span class=\"sxs-lookup\"><span data-stu-id=\"6572d-159\">It is similar to the preceding signature.</span></span> <span data-ttu-id=\"6572d-160\">Option.Top Especifica o número máximo de itens que podem ser incluídos no resultado da coleção.</span><span class=\"sxs-lookup\"><span data-stu-id=\"6572d-160\">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id=\"6572d-161\">Option.Skip Especifica o número de itens que devem ser ignorados e não são incluídos no resultado.</span><span class=\"sxs-lookup\"><span data-stu-id=\"6572d-161\">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id=\"6572d-162\">Se option.top for especificado, o conjunto de resultados será iniciado depois de ignorar o número de itens especificado.</span><span class=\"sxs-lookup\"><span data-stu-id=\"6572d-162\">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>\n#### <a name=\"examples\"></a><span data-ttu-id=\"6572d-163\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"6572d-163\">Examples</span></span>\n\n```javascript\nOneNote.run(function(ctx) {\n    var app = ctx.application;\n    var outline = app.getActiveOutline();\n    \n    // Queue a command to load outline.paragraphs and their types.\n    ctx.load(outline, \"paragraphs/type\");\n    \n    // Run the queued commands, and return a promise to indicate task completion.\n    return ctx.sync().then(function () {\n        var paragraphs = outline.paragraphs;\n        \n        // For each table, log properties.\n        for (var i = 0; i < paragraphs.items.length; i++) {\n            var paragraph = paragraphs.items[i];\n            if (paragraph.type == \"Table\") {\n                var table = paragraph.table;\n                ctx.load(table);\n                return ctx.sync().then(function() {\n                    console.log(\"Table Id: \" + table.id);\n                    console.log(\"Row Count: \" + table.rowCount);\n                    console.log(\"Column Count: \" + table.columnCount);\n                    return ctx.sync();\n                });\n            }\n        }\n    });\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\nOneNote.run(function(ctx) {\n    var app = ctx.application;\n    var outline = app.getActiveOutline();\n    \n    // Queue a command to load outline.paragraphs and their types.\n    ctx.load(outline, \"paragraphs, paragraphs/type\");\n    \n    // Run the queued commands, and return a promise to indicate task completion.\n    return ctx.sync().then(function () {\n        var paragraphs = outline.paragraphs;\n        \n        // for each table, log its paragraph id.\n        for (var i = 0; i < paragraphs.items.length; i++) {\n            var paragraph = paragraphs.items[i];\n            if (paragraph.type == \"Table\") {\n                var table = paragraph.table;\n                ctx.load(table, \"paragraph/id, rows/id\");\n                return ctx.sync().then(function() {\n                    console.log(\"Paragraph Id: \" + table.paragraph.id);\n                    var rows = table.rows;\n                    \n                    // for each rows in the table, log row index and id.\n                    for (var i = 0; i < rows.items.length; i++) {\n                        console.log(\"Row \" + i + \" Id: \" + rows.items[i].id);\n                    }\n                    return ctx.sync();\n                });\n            }\n        }\n    })\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
  name: load(option)
  fullName: load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): OneNote.Table;'
    return:
      type:
      - OneNote.Table
      description: ''
    parameters:
    - id: option
      description: <span data-ttu-id="6572d-164">Uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades de carga.</span><span class="sxs-lookup"><span data-stu-id="6572d-164">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: onenote.OneNote.Table.paragraph
  summary: >-
    <span data-ttu-id="6572d-p114">Obtém o objeto Paragraph que contém o objeto Table. Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="6572d-p114">Gets the Paragraph object that contains the Table object. Read-only.</span></span>


    <span data-ttu-id="6572d-167">\[[Conjunto de APIs: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6572d-167">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: paragraph
  fullName: paragraph
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly paragraph: OneNote.Paragraph;'
    return:
      type:
      - onenote.OneNote.Paragraph
- uid: onenote.OneNote.Table.rowCount
  summary: >-
    <span data-ttu-id="6572d-168">Obtém a quantidade de linhas na tabela.</span><span class="sxs-lookup"><span data-stu-id="6572d-168">Gets the number of rows in the table.</span></span>


    <span data-ttu-id="6572d-169">\[[Conjunto de APIs: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6572d-169">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: rowCount
  fullName: rowCount
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly rowCount: number;'
    return:
      type:
      - number
- uid: onenote.OneNote.Table.rows
  summary: >-
    <span data-ttu-id="6572d-p115">Obtém todas as linhas da tabela. Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="6572d-p115">Gets all of the table rows. Read-only.</span></span>


    <span data-ttu-id="6572d-172">\[[Conjunto de APIs: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6572d-172">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: rows
  fullName: rows
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly rows: OneNote.TableRowCollection;'
    return:
      type:
      - OneNote.TableRowCollection
- uid: onenote.OneNote.Table.set
  summary: <span data-ttu-id="6572d-173">Define várias propriedades de um objeto ao mesmo tempo.</span><span class="sxs-lookup"><span data-stu-id="6572d-173">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="6572d-174">Você pode passar um objeto sem formatação com as propriedades adequadas ou outro objeto API do mesmo tipo.</span><span class="sxs-lookup"><span data-stu-id="6572d-174">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>
  remarks: >-
    <span data-ttu-id="6572d-175">Esse método tem a seguinte assinatura adicional:</span><span class="sxs-lookup"><span data-stu-id="6572d-175">This method has the following additional signature:</span></span>


    `set(properties: OneNote.Table): void`
  name: set(properties, options)
  fullName: set
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Interfaces.TableUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: <span data-ttu-id="6572d-176">Um objeto de JavaScript com propriedades que são estruturadas isomorphically às propriedades do objeto no qual o método é chamado.</span><span class="sxs-lookup"><span data-stu-id="6572d-176">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
      type:
      - Interfaces.TableUpdateData
    - id: options
      description: <span data-ttu-id="6572d-177">Fornece uma opção para suprimir erros se o objeto properties tenta definir todas as propriedades somente leitura.</span><span class="sxs-lookup"><span data-stu-id="6572d-177">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
      type:
      - office.OfficeExtension.UpdateOptions
- uid: onenote.OneNote.Table.setShadingColor
  summary: >-
    <span data-ttu-id="6572d-178">Define a cor de sombreamento de todas as células na tabela.</span><span class="sxs-lookup"><span data-stu-id="6572d-178">Sets the shading color of all cells in the table.</span></span> <span data-ttu-id="6572d-179">O código de cor para o qual definir as células.</span><span class="sxs-lookup"><span data-stu-id="6572d-179">The color code to set the cells to.</span></span>


    <span data-ttu-id="6572d-180">\[[Conjunto de APIs: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6572d-180">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: setShadingColor(colorCode)
  fullName: setShadingColor
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setShadingColor(colorCode: string): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: colorCode
      description: ''
      type:
      - string
- uid: onenote.OneNote.Table.toJSON
  summary: <span data-ttu-id="6572d-181">Substitui o JavaScript `toJSON()` método para fornecer a saída mais úteis quando um objeto API é passado para `JSON.stringify()` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="6572d-181">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="6572d-182">(`JSON.stringify`<!-- -->, em seguida, chama o `toJSON` método do objeto que é passado para ele.) Enquanto o objeto OneNote.Table original é um objeto de API, o `toJSON` método retorna um objeto de JavaScript simples (digitado como `OneNote.Interfaces.TableData` <!-- -->) que contém superficiais cópias de todas as propriedades do objeto original filho carregado.</span><span class="sxs-lookup"><span data-stu-id="6572d-182">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original OneNote.Table object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `OneNote.Interfaces.TableData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): OneNote.Interfaces.TableData;'
    return:
      type:
      - OneNote.Interfaces.TableData
      description: ''
- uid: onenote.OneNote.Table.track
  summary: <span data-ttu-id="6572d-183">Rastrear o objeto para ajuste automático, com base em torno de alterações no documento.</span><span class="sxs-lookup"><span data-stu-id="6572d-183">Track the object for automatic adjustment based on surrounding changes in the document.</span></span> <span data-ttu-id="6572d-184">Essa chamada é uma forma abreviada de context.trackedObjects.add(thisObject).</span><span class="sxs-lookup"><span data-stu-id="6572d-184">This call is a shorthand for context.trackedObjects.add(thisObject).</span></span> <span data-ttu-id="6572d-185">Se você estiver usando este objeto nas chamadas ". Sync" e fora a execução sequencial de um lote de ".run" e get um erro "InvalidObjectPath" ao definir uma propriedade ou um método no objeto de invocação, você precisava adicionou o objeto ao objeto controlado coleção quando o objeto foi criado pela primeira vez.</span><span class="sxs-lookup"><span data-stu-id="6572d-185">If you are using this object across ".sync" calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you needed to have added the object to the tracked object collection when the object was first created.</span></span>
  name: track()
  fullName: track
  langs:
  - typeScript
  type: method
  syntax:
    content: 'track(): OneNote.Table;'
    return:
      type:
      - OneNote.Table
      description: ''
- uid: onenote.OneNote.Table.untrack
  summary: <span data-ttu-id="6572d-186">Versão a memória associada a este objeto, se tiver sido rastreado anteriormente.</span><span class="sxs-lookup"><span data-stu-id="6572d-186">Release the memory associated with this object, if it has previously been tracked.</span></span> <span data-ttu-id="6572d-187">Essa chamada é um atalho para context.trackedObjects.remove(thisObject).</span><span class="sxs-lookup"><span data-stu-id="6572d-187">This call is shorthand for context.trackedObjects.remove(thisObject).</span></span> <span data-ttu-id="6572d-188">Ter vários objetos controlados fica mais lenta do aplicativo host, portanto Lembre-se liberar todos os objetos adicionar, depois que terminar usá-los.</span><span class="sxs-lookup"><span data-stu-id="6572d-188">Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them.</span></span> <span data-ttu-id="6572d-189">Você precisará chamar "context.sync()" antes do lançamento de memória entrará em vigor.</span><span class="sxs-lookup"><span data-stu-id="6572d-189">You will need to call "context.sync()" before the memory release takes effect.</span></span>
  name: untrack()
  fullName: untrack
  langs:
  - typeScript
  type: method
  syntax:
    content: 'untrack(): OneNote.Table;'
    return:
      type:
      - OneNote.Table
      description: ''
