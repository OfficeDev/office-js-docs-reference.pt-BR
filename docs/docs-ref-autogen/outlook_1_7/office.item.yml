### YamlMime:UniversalReference
ms.openlocfilehash: 7b421111950086a76e0465bfd6317f4fb9ee0b39
ms.sourcegitcommit: 6c48441b8be51d3a9d7dc836e386230a155feceb
ms.translationtype: MT
ms.contentlocale: pt-BR
ms.lasthandoff: 02/22/2019
ms.locfileid: "30198876"
items:
- uid: Outlook_1_7.Office.Item
  summary: >-
    <span data-ttu-id="817f2-101">O namespace do item é usado para acessar a mensagem, solicitação de reunião ou compromisso atualmente selecionado.</span><span class="sxs-lookup"><span data-stu-id="817f2-101">The item namespace is used to access the currently selected message, meeting request, or appointment.</span></span> <span data-ttu-id="817f2-102">Você pode determinar o tipo do item usando a `itemType` propriedade.</span><span class="sxs-lookup"><span data-stu-id="817f2-102">You can determine the type of the item by using the `itemType` property.</span></span>


    <span data-ttu-id="817f2-103">\[[Conjunto de APIs: caixa de correio 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="817f2-103">\[ [API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: <table> <tr><td>[<span data-ttu-id="817f2-104">Nível de permissão mínimo</span><span class="sxs-lookup"><span data-stu-id="817f2-104">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="817f2-105">Restrito</span><span class="sxs-lookup"><span data-stu-id="817f2-105">Restricted</span></span></td></tr> <tr><td>[<span data-ttu-id="817f2-106">Modo do Outlook aplicável</span><span class="sxs-lookup"><span data-stu-id="817f2-106">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="817f2-107">Escrever ou Ler</span><span class="sxs-lookup"><span data-stu-id="817f2-107">Compose or Read</span></span></td></tr> </table>
  name: Office.Item
  fullName: Office.Item
  langs:
  - typeScript
  type: interface
  package: Outlook_1_7
  children:
  - Outlook_1_7.Office.Item.addHandlerAsync
  - Outlook_1_7.Office.Item.addHandlerAsync_1
  - Outlook_1_7.Office.Item.loadCustomPropertiesAsync
  - Outlook_1_7.Office.Item.removeHandlerAsync
  - Outlook_1_7.Office.Item.removeHandlerAsync_1
  - Outlook_1_7.Office.Item.body
  - Outlook_1_7.Office.Item.itemType
  - Outlook_1_7.Office.Item.notificationMessages
  - Outlook_1_7.Office.Item.seriesId
- uid: Outlook_1_7.Office.Item.addHandlerAsync
  summary: >-
    <span data-ttu-id="817f2-108">Adiciona um manipulador de eventos a um evento com suporte.</span><span class="sxs-lookup"><span data-stu-id="817f2-108">Adds an event handler for a supported event.</span></span>


    <span data-ttu-id="817f2-109">Atualmente, os tipos de eventos `Office.EventType.AppointmentTimeChanged` <!-- -->suportados `Office.EventType.RecipientsChanged` <!-- -->são, `Office.EventType.RecurrenceChanged` <!-- -->e.</span><span class="sxs-lookup"><span data-stu-id="817f2-109">Currently the supported event types are `Office.EventType.AppointmentTimeChanged`<!-- -->, `Office.EventType.RecipientsChanged`<!-- -->, and `Office.EventType.RecurrenceChanged`<!-- -->.</span></span>


    <span data-ttu-id="817f2-110">\[[Conjunto de APIs: caixa de correio 1,7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="817f2-110">\[ [API set: Mailbox 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: <table> <tr><td>[<span data-ttu-id="817f2-111">Nível de permissão mínimo</span><span class="sxs-lookup"><span data-stu-id="817f2-111">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="817f2-112">ReadItem</span><span class="sxs-lookup"><span data-stu-id="817f2-112">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="817f2-113">Modo Aplicável do Outlook</span><span class="sxs-lookup"><span data-stu-id="817f2-113">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="817f2-114">Escrever ou Ler</span><span class="sxs-lookup"><span data-stu-id="817f2-114">Compose or Read</span></span></td></tr> </table>
  name: addHandlerAsync(eventType, handler, options, callback)
  fullName: addHandlerAsync(eventType, handler, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addHandlerAsync(eventType: Office.EventType, handler: any, options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: eventType
      description: <span data-ttu-id="817f2-115">O evento que deve invocar o manipulador.</span><span class="sxs-lookup"><span data-stu-id="817f2-115">The event that should invoke the handler.</span></span>
      type:
      - Office.EventType
    - id: handler
      description: <span data-ttu-id="817f2-116">A função para manipular o evento.</span><span class="sxs-lookup"><span data-stu-id="817f2-116">The function to handle the event.</span></span> <span data-ttu-id="817f2-117">A função deve aceitar um parâmetro exclusivo, que é um objeto literal.</span><span class="sxs-lookup"><span data-stu-id="817f2-117">The function must accept a single parameter, which is an object literal.</span></span> <span data-ttu-id="817f2-118">A propriedade Type no parâmetro corresponderá ao parâmetro eventType passado para addHandlerAsync.</span><span class="sxs-lookup"><span data-stu-id="817f2-118">The type property on the parameter will match the eventType parameter passed to addHandlerAsync.</span></span>
      type:
      - any
    - id: options
      description: '<span data-ttu-id="817f2-119">Opcional.</span><span class="sxs-lookup"><span data-stu-id="817f2-119">Optional.</span></span> <span data-ttu-id="817f2-120">Um objeto literal que contém uma ou mais das propriedades a seguir.</span><span class="sxs-lookup"><span data-stu-id="817f2-120">An object literal that contains one or more of the following properties.</span></span> <span data-ttu-id="817f2-121">asyncContext: os desenvolvedores podem fornecer qualquer objeto que desejarem acessar no método de retorno de chamada.</span><span class="sxs-lookup"><span data-stu-id="817f2-121">asyncContext: Developers can provide any object they wish to access in the callback method.</span></span>'
      type:
      - Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="817f2-122">Opcional.</span><span class="sxs-lookup"><span data-stu-id="817f2-122">Optional.</span></span> <span data-ttu-id="817f2-123">Quando o método é concluído, a função passada no parâmetro callback é chamada com um único parâmetro, asyncResult, que é um objeto Office. AsyncResult.</span><span class="sxs-lookup"><span data-stu-id="817f2-123">When the method completes, the function passed in the callback parameter is called with a single parameter, asyncResult, which is an Office.AsyncResult object.</span></span>
      type:
      - '(asyncResult: Office.AsyncResult<void>) => void'
- uid: Outlook_1_7.Office.Item.addHandlerAsync_1
  summary: >-
    <span data-ttu-id="817f2-124">Adiciona um manipulador de eventos a um evento com suporte.</span><span class="sxs-lookup"><span data-stu-id="817f2-124">Adds an event handler for a supported event.</span></span>


    <span data-ttu-id="817f2-125">Atualmente, os tipos de eventos `Office.EventType.AppointmentTimeChanged` <!-- -->suportados `Office.EventType.RecipientsChanged` <!-- -->são, `Office.EventType.RecurrenceChanged` <!-- -->e.</span><span class="sxs-lookup"><span data-stu-id="817f2-125">Currently the supported event types are `Office.EventType.AppointmentTimeChanged`<!-- -->, `Office.EventType.RecipientsChanged`<!-- -->, and `Office.EventType.RecurrenceChanged`<!-- -->.</span></span>


    <span data-ttu-id="817f2-126">\[[Conjunto de APIs: caixa de correio 1,7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="817f2-126">\[ [API set: Mailbox 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table> <tr><td>[<span data-ttu-id="817f2-127">Nível de permissão mínimo</span><span class="sxs-lookup"><span data-stu-id="817f2-127">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="817f2-128">ReadItem</span><span class="sxs-lookup"><span data-stu-id="817f2-128">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="817f2-129">Modo Aplicável do Outlook</span><span class="sxs-lookup"><span data-stu-id="817f2-129">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="817f2-130">Escrever ou Ler</span><span class="sxs-lookup"><span data-stu-id="817f2-130">Compose or Read</span></span></td></tr> </table><span data-ttu-id="817f2-131">

    ####Veja</span><span class="sxs-lookup"><span data-stu-id="817f2-131">

    #### Examples</span></span>


    ```javascript

    function myHandlerFunction(eventarg) {
        if (eventarg.attachmentStatus === Office.MailboxEnums.AttachmentStatus.Added) {
            var attachment = eventarg.attachmentDetails;
            console.log("Event Fired and Attachment Added!");
            getAttachmentContentAsync(attachment.id, options, callback);
        }
    }


    Office.context.mailbox.item.addHandlerAsync(Office.EventType.AttachmentsChanged, myHandlerFunction, myCallback);

    ```
  name: addHandlerAsync(eventType, handler, callback)
  fullName: addHandlerAsync(eventType, handler, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addHandlerAsync(eventType: Office.EventType, handler: any, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: eventType
      description: <span data-ttu-id="817f2-132">O evento que deve invocar o manipulador.</span><span class="sxs-lookup"><span data-stu-id="817f2-132">The event that should invoke the handler.</span></span>
      type:
      - Office.EventType
    - id: handler
      description: <span data-ttu-id="817f2-133">A função para manipular o evento.</span><span class="sxs-lookup"><span data-stu-id="817f2-133">The function to handle the event.</span></span> <span data-ttu-id="817f2-134">A função deve aceitar um parâmetro exclusivo, que é um objeto literal.</span><span class="sxs-lookup"><span data-stu-id="817f2-134">The function must accept a single parameter, which is an object literal.</span></span> <span data-ttu-id="817f2-135">A propriedade Type no parâmetro corresponderá ao parâmetro eventType passado para addHandlerAsync.</span><span class="sxs-lookup"><span data-stu-id="817f2-135">The type property on the parameter will match the eventType parameter passed to addHandlerAsync.</span></span>
      type:
      - any
    - id: callback
      description: <span data-ttu-id="817f2-136">Opcional.</span><span class="sxs-lookup"><span data-stu-id="817f2-136">Optional.</span></span> <span data-ttu-id="817f2-137">Quando o método é concluído, a função passada no parâmetro callback é chamada com um único parâmetro, asyncResult, que é um objeto Office. AsyncResult.</span><span class="sxs-lookup"><span data-stu-id="817f2-137">When the method completes, the function passed in the callback parameter is called with a single parameter, asyncResult, which is an Office.AsyncResult object.</span></span>
      type:
      - '(asyncResult: Office.AsyncResult<void>) => void'
- uid: Outlook_1_7.Office.Item.loadCustomPropertiesAsync
  summary: >-
    <span data-ttu-id="817f2-138">Carrega de forma assíncrona as propriedades personalizadas para esse suplemento no item selecionado.</span><span class="sxs-lookup"><span data-stu-id="817f2-138">Asynchronously loads custom properties for this add-in on the selected item.</span></span>


    <span data-ttu-id="817f2-139">Propriedades personalizadas são armazenadas como pares chave/valor de acordo com o aplicativo e o item.</span><span class="sxs-lookup"><span data-stu-id="817f2-139">Custom properties are stored as key/value pairs on a per-app, per-item basis.</span></span> <span data-ttu-id="817f2-140">Esse método retorna um objeto CustomProperties no retorno de chamada, que fornece métodos para acessar as propriedades personalizadas específicas para o item atual e o suplemento atual.</span><span class="sxs-lookup"><span data-stu-id="817f2-140">This method returns a CustomProperties object in the callback, which provides methods to access the custom properties specific to the current item and the current add-in.</span></span> <span data-ttu-id="817f2-141">Propriedades personalizadas não são criptografadas no item, portanto não devem ser usadas como armazenamento seguro.</span><span class="sxs-lookup"><span data-stu-id="817f2-141">Custom properties are not encrypted on the item, so this should not be used as secure storage.</span></span>


    <span data-ttu-id="817f2-142">As propriedades personalizadas são fornecidas como um objeto CustomProperties na propriedade asyncResult. Value.</span><span class="sxs-lookup"><span data-stu-id="817f2-142">The custom properties are provided as a CustomProperties object in the asyncResult.value property.</span></span> <span data-ttu-id="817f2-143">Esse objeto pode ser usado para obter, definir e remover as propriedades personalizadas do item e salvar as alterações na propriedade personalizada definida de volta no servidor.</span><span class="sxs-lookup"><span data-stu-id="817f2-143">This object can be used to get, set, and remove custom properties from the item and save changes to the custom property set back to the server.</span></span>


    <span data-ttu-id="817f2-144">\[[Conjunto de APIs: caixa de correio 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="817f2-144">\[ [API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table> <tr><td>[<span data-ttu-id="817f2-145">Nível de permissão mínimo</span><span class="sxs-lookup"><span data-stu-id="817f2-145">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="817f2-146">ReadItem</span><span class="sxs-lookup"><span data-stu-id="817f2-146">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="817f2-147">Modo Aplicável do Outlook</span><span class="sxs-lookup"><span data-stu-id="817f2-147">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="817f2-148">Escrever ou Ler</span><span class="sxs-lookup"><span data-stu-id="817f2-148">Compose or Read</span></span></td></tr> </table><span data-ttu-id="817f2-149">

    ####Veja</span><span class="sxs-lookup"><span data-stu-id="817f2-149">

    #### Examples</span></span>


    ```javascript

    // The following example shows how to use the loadCustomPropertiesAsync method

    // to asynchronously load custom properties that are specific to the current item.

    // The example also shows how to use the saveAsync method to save these properties

    // back to the server. After loading the custom properties, the example uses the

    // get method to read the custom property myProp, the set method to write the

    // custom property otherProp, and then finally calls the saveAsync method to save

    // the custom properties.

    Office.initialize = function () {
        // Checks for the DOM to load using the jQuery ready function.
        $(document).ready(function () {
            // After the DOM is loaded, add-in-specific code can run.
            var mailbox = Office.context.mailbox;
            mailbox.item.loadCustomPropertiesAsync(customPropsCallback);
        });
    };


    function customPropsCallback(asyncResult) {
        var customProps = asyncResult.value;
        var myProp = customProps.get("myProp");

        customProps.set("otherProp", "value");
        customProps.saveAsync(saveCallback);
    }


    function saveCallback(asyncResult) {

    }

    ```
  name: loadCustomPropertiesAsync(callback, userContext)
  fullName: loadCustomPropertiesAsync(callback, userContext)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'loadCustomPropertiesAsync(callback: (asyncResult: Office.AsyncResult<CustomProperties>) => void, userContext?: any): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: callback
      description: <span data-ttu-id="817f2-150">Quando o método for concluído, a função passada ao parâmetro callback será chamada com um único parâmetro do tipo Office. AsyncResult.</span><span class="sxs-lookup"><span data-stu-id="817f2-150">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span>
      type:
      - '(asyncResult: Office.AsyncResult<CustomProperties>) => void'
    - id: userContext
      description: <span data-ttu-id="817f2-151">Opcional.</span><span class="sxs-lookup"><span data-stu-id="817f2-151">Optional.</span></span> <span data-ttu-id="817f2-152">Os desenvolvedores podem fornecer qualquer objeto que desejarem acessar na função de retorno de chamada.</span><span class="sxs-lookup"><span data-stu-id="817f2-152">Developers can provide any object they wish to access in the callback function.</span></span> <span data-ttu-id="817f2-153">Esse objeto pode ser acessado pela propriedade asyncResult. asyncContext na função de retorno de chamada.</span><span class="sxs-lookup"><span data-stu-id="817f2-153">This object can be accessed by the asyncResult.asyncContext property in the callback function.</span></span>
      type:
      - any
- uid: Outlook_1_7.Office.Item.removeHandlerAsync
  summary: >-
    <span data-ttu-id="817f2-154">Remove um manipulador de eventos para um tipo de evento com suporte.</span><span class="sxs-lookup"><span data-stu-id="817f2-154">Removes the event handlers for a supported event type.</span></span>


    <span data-ttu-id="817f2-155">Atualmente, os tipos de eventos `Office.EventType.AppointmentTimeChanged` <!-- -->suportados `Office.EventType.RecipientsChanged` <!-- -->são, `Office.EventType.RecurrenceChanged` <!-- -->e.</span><span class="sxs-lookup"><span data-stu-id="817f2-155">Currently the supported event types are `Office.EventType.AppointmentTimeChanged`<!-- -->, `Office.EventType.RecipientsChanged`<!-- -->, and `Office.EventType.RecurrenceChanged`<!-- -->.</span></span>


    <span data-ttu-id="817f2-156">\[[Conjunto de APIs: caixa de correio 1,7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="817f2-156">\[ [API set: Mailbox 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: <table> <tr><td>[<span data-ttu-id="817f2-157">Nível de permissão mínimo</span><span class="sxs-lookup"><span data-stu-id="817f2-157">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="817f2-158">ReadItem</span><span class="sxs-lookup"><span data-stu-id="817f2-158">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="817f2-159">Modo Aplicável do Outlook</span><span class="sxs-lookup"><span data-stu-id="817f2-159">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="817f2-160">Escrever ou Ler</span><span class="sxs-lookup"><span data-stu-id="817f2-160">Compose or Read</span></span></td></tr> </table>
  name: removeHandlerAsync(eventType, options, callback)
  fullName: removeHandlerAsync(eventType, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'removeHandlerAsync(eventType: Office.EventType, options?: any, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: eventType
      description: <span data-ttu-id="817f2-161">O evento que deve revogar o manipulador.</span><span class="sxs-lookup"><span data-stu-id="817f2-161">The event that should revoke the handler.</span></span>
      type:
      - Office.EventType
    - id: options
      description: '<span data-ttu-id="817f2-162">Opcional.</span><span class="sxs-lookup"><span data-stu-id="817f2-162">Optional.</span></span> <span data-ttu-id="817f2-163">Um objeto literal que contém uma ou mais das propriedades a seguir.</span><span class="sxs-lookup"><span data-stu-id="817f2-163">An object literal that contains one or more of the following properties.</span></span> <span data-ttu-id="817f2-164">asyncContext: os desenvolvedores podem fornecer qualquer objeto que desejarem acessar no método de retorno de chamada.</span><span class="sxs-lookup"><span data-stu-id="817f2-164">asyncContext: Developers can provide any object they wish to access in the callback method.</span></span>'
      type:
      - any
    - id: callback
      description: <span data-ttu-id="817f2-165">Opcional.</span><span class="sxs-lookup"><span data-stu-id="817f2-165">Optional.</span></span> <span data-ttu-id="817f2-166">Quando o método é concluído, a função passada no parâmetro callback é chamada com um único parâmetro, asyncResult, que é um objeto Office. AsyncResult.</span><span class="sxs-lookup"><span data-stu-id="817f2-166">When the method completes, the function passed in the callback parameter is called with a single parameter, asyncResult, which is an Office.AsyncResult object.</span></span>
      type:
      - '(asyncResult: Office.AsyncResult<void>) => void'
- uid: Outlook_1_7.Office.Item.removeHandlerAsync_1
  summary: >-
    <span data-ttu-id="817f2-167">Remove um manipulador de eventos para um tipo de evento com suporte.</span><span class="sxs-lookup"><span data-stu-id="817f2-167">Removes the event handlers for a supported event type.</span></span>


    <span data-ttu-id="817f2-168">Atualmente, os tipos de eventos `Office.EventType.AppointmentTimeChanged` <!-- -->suportados `Office.EventType.RecipientsChanged` <!-- -->são, `Office.EventType.RecurrenceChanged` <!-- -->e.</span><span class="sxs-lookup"><span data-stu-id="817f2-168">Currently the supported event types are `Office.EventType.AppointmentTimeChanged`<!-- -->, `Office.EventType.RecipientsChanged`<!-- -->, and `Office.EventType.RecurrenceChanged`<!-- -->.</span></span>


    <span data-ttu-id="817f2-169">\[[Conjunto de APIs: caixa de correio 1,7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="817f2-169">\[ [API set: Mailbox 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: <table> <tr><td>[<span data-ttu-id="817f2-170">Nível de permissão mínimo</span><span class="sxs-lookup"><span data-stu-id="817f2-170">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="817f2-171">ReadItem</span><span class="sxs-lookup"><span data-stu-id="817f2-171">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="817f2-172">Modo Aplicável do Outlook</span><span class="sxs-lookup"><span data-stu-id="817f2-172">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="817f2-173">Escrever ou Ler</span><span class="sxs-lookup"><span data-stu-id="817f2-173">Compose or Read</span></span></td></tr> </table>
  name: removeHandlerAsync(eventType, callback)
  fullName: removeHandlerAsync(eventType, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'removeHandlerAsync(eventType: Office.EventType, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: eventType
      description: <span data-ttu-id="817f2-174">O evento que deve revogar o manipulador.</span><span class="sxs-lookup"><span data-stu-id="817f2-174">The event that should revoke the handler.</span></span>
      type:
      - Office.EventType
    - id: callback
      description: <span data-ttu-id="817f2-175">Opcional.</span><span class="sxs-lookup"><span data-stu-id="817f2-175">Optional.</span></span> <span data-ttu-id="817f2-176">Quando o método é concluído, a função passada no parâmetro callback é chamada com um único parâmetro, asyncResult, que é um objeto Office. AsyncResult.</span><span class="sxs-lookup"><span data-stu-id="817f2-176">When the method completes, the function passed in the callback parameter is called with a single parameter, asyncResult, which is an Office.AsyncResult object.</span></span>
      type:
      - '(asyncResult: Office.AsyncResult<void>) => void'
- uid: Outlook_1_7.Office.Item.body
  summary: >-
    <span data-ttu-id="817f2-177">Obtém um objeto que fornece métodos para manipular o corpo de um item.</span><span class="sxs-lookup"><span data-stu-id="817f2-177">Gets an object that provides methods for manipulating the body of an item.</span></span>


    <span data-ttu-id="817f2-178">\[[Conjunto de APIs: caixa de correio 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="817f2-178">\[ [API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table> <tr><td>[<span data-ttu-id="817f2-179">Nível de permissão mínimo</span><span class="sxs-lookup"><span data-stu-id="817f2-179">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="817f2-180">ReadItem</span><span class="sxs-lookup"><span data-stu-id="817f2-180">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="817f2-181">Modo Aplicável do Outlook</span><span class="sxs-lookup"><span data-stu-id="817f2-181">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="817f2-182">Escrever ou Ler</span><span class="sxs-lookup"><span data-stu-id="817f2-182">Compose or Read</span></span></td></tr> </table><span data-ttu-id="817f2-183">

    ####Veja</span><span class="sxs-lookup"><span data-stu-id="817f2-183">

    #### Examples</span></span>


    ```javascript

    // This example gets the body of the message in plain text.

    Office.context.mailbox.item.body.getAsync(
        "text",
        { asyncContext: "This is passed to the callback" },
        function callback(result) {
            // Do something with the result.
        });

    // The following is an example of the result parameter passed to the callback function.

    {
        "value": "TEXT of whole body (including threads below)",
        "status": "succeeded",
        "asyncContext": "This is passed to the callback"
    }

    ```
  name: body
  fullName: body
  langs:
  - typeScript
  type: property
  syntax:
    content: 'body: Body;'
    return:
      type:
      - Body
- uid: Outlook_1_7.Office.Item.itemType
  summary: >-
    <span data-ttu-id="817f2-184">Obtém o tipo de item que representa uma instância.</span><span class="sxs-lookup"><span data-stu-id="817f2-184">Gets the type of item that an instance represents.</span></span>


    <span data-ttu-id="817f2-185">A propriedade itemType retorna um dos valores de enumeração ItemType, indicando se a instância do objeto item é uma mensagem ou um compromisso.</span><span class="sxs-lookup"><span data-stu-id="817f2-185">The itemType property returns one of the ItemType enumeration values, indicating whether the item object instance is a message or an appointment.</span></span>


    <span data-ttu-id="817f2-186">\[[Conjunto de APIs: caixa de correio 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="817f2-186">\[ [API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table> <tr><td>[<span data-ttu-id="817f2-187">Nível de permissão mínimo</span><span class="sxs-lookup"><span data-stu-id="817f2-187">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="817f2-188">ReadItem</span><span class="sxs-lookup"><span data-stu-id="817f2-188">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="817f2-189">Modo Aplicável do Outlook</span><span class="sxs-lookup"><span data-stu-id="817f2-189">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="817f2-190">Escrever ou Ler</span><span class="sxs-lookup"><span data-stu-id="817f2-190">Compose or Read</span></span></td></tr> </table><span data-ttu-id="817f2-191">

    ####Veja</span><span class="sxs-lookup"><span data-stu-id="817f2-191">

    #### Examples</span></span>


    ```javascript

    if (Office.context.mailbox.item.itemType === Office.MailboxEnums.ItemType.Message) {
        // Do something.
    } else {
        // Do something else.
    }

    ```
  name: itemType
  fullName: itemType
  langs:
  - typeScript
  type: property
  syntax:
    content: 'itemType: MailboxEnums.ItemType;'
    return:
      type:
      - MailboxEnums.ItemType
- uid: Outlook_1_7.Office.Item.notificationMessages
  summary: >-
    <span data-ttu-id="817f2-192">Obtém as mensagens de notificação de um item.</span><span class="sxs-lookup"><span data-stu-id="817f2-192">Gets the notification messages for an item.</span></span>


    <span data-ttu-id="817f2-193">\[[Conjunto de APIs: caixa de correio 1,3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="817f2-193">\[ [API set: Mailbox 1.3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table> <tr><td>[<span data-ttu-id="817f2-194">Nível de permissão mínimo</span><span class="sxs-lookup"><span data-stu-id="817f2-194">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="817f2-195">ReadItem</span><span class="sxs-lookup"><span data-stu-id="817f2-195">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="817f2-196">Modo Aplicável do Outlook</span><span class="sxs-lookup"><span data-stu-id="817f2-196">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="817f2-197">Escrever ou Ler</span><span class="sxs-lookup"><span data-stu-id="817f2-197">Compose or Read</span></span></td></tr> </table><span data-ttu-id="817f2-198">

    ####Veja</span><span class="sxs-lookup"><span data-stu-id="817f2-198">

    #### Examples</span></span>


    ```javascript

    // Get all notifications.

    Office.context.mailbox.item.notificationMessages.getAllAsync(
        function (asyncResult) {
            console.log(JSON.stringify(asyncResult));
        }
    );

    ```
  name: notificationMessages
  fullName: notificationMessages
  langs:
  - typeScript
  type: property
  syntax:
    content: 'notificationMessages: NotificationMessages;'
    return:
      type:
      - NotificationMessages
- uid: Outlook_1_7.Office.Item.seriesId
  summary: >-
    <span data-ttu-id="817f2-199">Obtém a ID da série à qual uma instância pertence.</span><span class="sxs-lookup"><span data-stu-id="817f2-199">Gets the id of the series that an instance belongs to.</span></span>


    <span data-ttu-id="817f2-200">No OWA e no Outlook, a seriesid retorna a ID dos serviços Web do Exchange (EWS) do item pai (série) ao qual este item pertence.</span><span class="sxs-lookup"><span data-stu-id="817f2-200">In OWA and Outlook, the seriesId returns the Exchange Web Services (EWS) ID of the parent (series) item that this item belongs to.</span></span> <span data-ttu-id="817f2-201">No enTanto, no iOS e no Android, o seriesid retorna a ID REST do item pai.</span><span class="sxs-lookup"><span data-stu-id="817f2-201">However, in iOS and Android, the seriesId returns the REST ID of the parent item.</span></span>


    <span data-ttu-id="817f2-202">**Observação**: o identificador retornado pela propriedade seriesid é o mesmo que o identificador de item dos serviços Web do Exchange.</span><span class="sxs-lookup"><span data-stu-id="817f2-202">**Note**: The identifier returned by the seriesId property is the same as the Exchange Web Services item identifier.</span></span> <span data-ttu-id="817f2-203">A propriedade seriesid não é idêntica às IDs do Outlook usadas pela API REST do Outlook.</span><span class="sxs-lookup"><span data-stu-id="817f2-203">The seriesId property is not identical to the Outlook IDs used by the Outlook REST API.</span></span> <span data-ttu-id="817f2-204">Antes de fazer chamadas API REST usando esse valor, ela deverá ser convertida usando Office.context.mailbox.convertToRestId.</span><span class="sxs-lookup"><span data-stu-id="817f2-204">Before making REST API calls using this value, it should be converted using Office.context.mailbox.convertToRestId.</span></span> <span data-ttu-id="817f2-205">Para obter mais detalhes, consulte [usar as APIs REST do Outlook a partir de um suplemento do Outlook](https://docs.microsoft.com/outlook/add-ins/use-rest-api)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="817f2-205">For more details, see [Use the Outlook REST APIs from an Outlook add-in](https://docs.microsoft.com/outlook/add-ins/use-rest-api)<!-- -->.</span></span>


    <span data-ttu-id="817f2-206">A propriedade seriesid retorna NULL para itens que não têm itens pai, como compromissos únicos, itens de série ou solicitações de reunião e retorna undefined para quaisquer outros itens que não sejam solicitações de reunião.</span><span class="sxs-lookup"><span data-stu-id="817f2-206">The seriesId property returns null for items that do not have parent items such as single appointments, series items, or meeting requests and returns undefined for any other items that are not meeting requests.</span></span>


    <span data-ttu-id="817f2-207">\[[Conjunto de APIs: caixa de correio 1,7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="817f2-207">\[ [API set: Mailbox 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: "<table> <tr><td>[<span data-ttu-id=\"817f2-208\">Nível de permissão mínimo</span><span class=\"sxs-lookup\"><span data-stu-id=\"817f2-208\">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id=\"817f2-209\">ReadItem</span><span class=\"sxs-lookup\"><span data-stu-id=\"817f2-209\">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id=\"817f2-210\">Modo do Outlook aplicável</span><span class=\"sxs-lookup\"><span data-stu-id=\"817f2-210\">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id=\"817f2-211\">Escrever ou Ler</span><span class=\"sxs-lookup\"><span data-stu-id=\"817f2-211\">Compose or Read</span></span></td></tr> </table><span data-ttu-id=\"817f2-212\">\n####Veja</span><span class=\"sxs-lookup\"><span data-stu-id=\"817f2-212\">\n#### Examples</span></span>\n\n```javascript\nvar seriesId = Office.context.mailbox.item.seriesId;\n\n// The seriesId property returns null for items that do\n// not have parent items (such as single appointments,\n// series items, or meeting requests) and returns\n// undefined for messages that are not meeting requests.\nvar isSeriesInstance = (seriesId != null);\nconsole.log(\"SeriesId is \" + seriesId \n    + \" and isSeriesInstance is \" + isSeriesInstance);\n```"
  name: seriesId
  fullName: seriesId
  langs:
  - typeScript
  type: property
  syntax:
    content: 'seriesId: string;'
    return:
      type:
      - string
