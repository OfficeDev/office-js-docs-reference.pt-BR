### YamlMime:UniversalReference
items:
  - uid: Outlook_1_7.Office.Subject
    summary: |-
      Fornece métodos para obter e definir o assunto de um compromisso ou uma mensagem em um suplemento do Outlook.

      \[[Conjunto de APIs: caixa de correio 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: '<table> <tr><td>[Nível de permissão mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr> <tr><td>[Modo do Outlook aplicável](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Escrever</td></tr> </table>'
    name: Office.Subject
    fullName: Office.Subject
    langs:
      - typeScript
    type: interface
    package: Outlook_1_7
    children:
      - Outlook_1_7.Office.Subject.getAsync
      - Outlook_1_7.Office.Subject.getAsync_1
      - Outlook_1_7.Office.Subject.setAsync
      - Outlook_1_7.Office.Subject.setAsync_1
  - uid: Outlook_1_7.Office.Subject.getAsync
    summary: |-
      Obtém o assunto de um compromisso ou uma mensagem.

      O método getAsync inicia uma chamada assíncrona para o servidor Exchange para obter o assunto de um compromisso ou uma mensagem.

      \[[Conjunto de APIs: caixa de correio 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: '<table> <tr><td>[Nível de permissão mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr> <tr><td>[Modo do Outlook aplicável](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Escrever</td></tr> </table>'
    name: 'getAsync(options, callback)'
    fullName: 'getAsync(options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getAsync(options: Office.AsyncContextOptions, callback: (asyncResult: Office.AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: 'Um objeto literal que contém uma ou mais das propriedades a seguir. asyncContext: os desenvolvedores podem fornecer qualquer objeto que desejarem acessar no método de retorno de chamada.'
          type:
            - Office.AsyncContextOptions
        - id: callback
          description: 'Quando o método for concluído, a função passada ao parâmetro callback será chamada com um único parâmetro do tipo Office. AsyncResult. A `value` Propriedade do resultado é o assunto do item.'
          type:
            - '(asyncResult: Office.AsyncResult<string>) => void'
  - uid: Outlook_1_7.Office.Subject.getAsync_1
    summary: |-
      Obtém o assunto de um compromisso ou uma mensagem.

      O método getAsync inicia uma chamada assíncrona para o servidor Exchange para obter o assunto de um compromisso ou uma mensagem.

      \[[Conjunto de APIs: caixa de correio 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      <table> <tr><td>[Nível de permissão mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr> <tr><td>[Modo do Outlook aplicável](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Escrever</td></tr> </table>

      #### <a name="examples"></a>Exemplos

      ```javascript
      Office.context.mailbox.item.subject.getAsync(callback);

      function callback(asyncResult) {
          var subject = asyncResult.value;
      }
      ```
    name: getAsync(callback)
    fullName: getAsync(callback)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getAsync(callback: (asyncResult: Office.AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: 'Quando o método for concluído, a função passada ao parâmetro callback será chamada com um único parâmetro do tipo Office. AsyncResult. A `value` Propriedade do resultado é o assunto do item.'
          type:
            - '(asyncResult: Office.AsyncResult<string>) => void'
  - uid: Outlook_1_7.Office.Subject.setAsync
    summary: |-
      Define o assunto de um compromisso ou uma mensagem.

      O método setAsync inicia uma chamada assíncrona para o servidor Exchange para definir o assunto de um compromisso ou uma mensagem. Definir o assunto substitui o assunto atual, mas mantém quaisquer prefixos, tais como "Enc:" ou "Res:".

      \[[Conjunto de APIs: caixa de correio 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: '<table> <tr><td>[Nível de permissão mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr> <tr><td>[Modo do Outlook aplicável](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Escrever</td></tr> <tr><td>Erros</td><td>DataExceedsMaximumSize-o parâmetro Subject é maior que 255 caracteres.</td></tr> </table>'
    name: 'setAsync(subject, options, callback)'
    fullName: 'setAsync(subject, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setAsync(subject: string, options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: subject
          description: O assunto do compromisso ou da mensagem. A cadeia de caracteres está limitada a 255 caracteres.
          type:
            - string
        - id: options
          description: 'Opcional. Um objeto literal que contém uma ou mais das propriedades a seguir. asyncContext: os desenvolvedores podem fornecer qualquer objeto que desejarem acessar no método de retorno de chamada.'
          type:
            - Office.AsyncContextOptions
        - id: callback
          description: 'Opcional. Quando o método for concluído, a função passada ao parâmetro callback será chamada com um único parâmetro do tipo Office. AsyncResult. Se a configuração do assunto falhar, a propriedade asyncResult. Error conterá um código de erro.'
          type:
            - '(asyncResult: Office.AsyncResult<void>) => void'
  - uid: Outlook_1_7.Office.Subject.setAsync_1
    summary: |-
      Define o assunto de um compromisso ou uma mensagem.

      O método setAsync inicia uma chamada assíncrona para o servidor Exchange para definir o assunto de um compromisso ou uma mensagem. Definir o assunto substitui o assunto atual, mas mantém quaisquer prefixos, tais como "Enc:" ou "Res:".

      \[[Conjunto de APIs: caixa de correio 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      <table> <tr><td>[Nível de permissão mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr> <tr><td>[Modo do Outlook aplicável](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Escrever</td></tr> <tr><td>Erros</td><td>DataExceedsMaximumSize-o parâmetro Subject é maior que 255 caracteres.</td></tr> </table>

      #### <a name="examples"></a>Exemplos

      ```javascript
      Office.context.mailbox.item.subject.setAsync("New subject!", function (asyncResult) {
          if (asyncResult.status === "failed") {
              console.log("Action failed with error: " + asyncResult.error.message);
          }
      });
      ```
    name: 'setAsync(data, callback)'
    fullName: 'setAsync(data, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setAsync(data: string, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: data
          description: ''
          type:
            - string
        - id: callback
          description: 'Opcional. Quando o método for concluído, a função passada ao parâmetro callback será chamada com um único parâmetro do tipo Office. AsyncResult. Se a configuração do assunto falhar, a propriedade asyncResult. Error conterá um código de erro.'
          type:
            - '(asyncResult: Office.AsyncResult<void>) => void'