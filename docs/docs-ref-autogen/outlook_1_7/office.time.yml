### YamlMime:UniversalReference
ms.openlocfilehash: 43addff958703682599ef907d0aa67e6c00d7bbb
ms.sourcegitcommit: 6c48441b8be51d3a9d7dc836e386230a155feceb
ms.translationtype: MT
ms.contentlocale: pt-BR
ms.lasthandoff: 02/22/2019
ms.locfileid: "30198050"
items:
- uid: Outlook_1_7.Office.Time
  summary: >-
    O objeto time é retornado como a propriedade Start ou end de um compromisso no modo de composição.


    \[[Conjunto de APIs: caixa de correio 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: <table> <tr><td>[Nível de permissão mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr> <tr><td>[Modo do Outlook aplicável](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Escrever</td></tr> </table>
  name: Office.Time
  fullName: Office.Time
  langs:
  - typeScript
  type: interface
  package: Outlook_1_7
  children:
  - Outlook_1_7.Office.Time.getAsync
  - Outlook_1_7.Office.Time.getAsync_1
  - Outlook_1_7.Office.Time.setAsync
  - Outlook_1_7.Office.Time.setAsync_1
- uid: Outlook_1_7.Office.Time.getAsync
  summary: >-
    Obtém a hora de início ou de término de um compromisso.


    A data e a hora são fornecidas como um objeto Date na propriedade asyncResult. Value. O valor está no Tempo Universal Coordenado (UTC). Você pode converter a hora UTC para a hora do cliente local usando o método convertToLocalClientTime.


    \[[Conjunto de APIs: caixa de correio 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: <table> <tr><td>[Nível de permissão mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr> <tr><td>[Modo do Outlook aplicável](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Escrever</td></tr> </table>
  name: getAsync(options, callback)
  fullName: getAsync(options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getAsync(options: Office.AsyncContextOptions, callback: (asyncResult: Office.AsyncResult<Date>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: options
      description: 'Um objeto literal que contém uma ou mais das propriedades a seguir. asyncContext: os desenvolvedores podem fornecer qualquer objeto que desejarem acessar no método de retorno de chamada.'
      type:
      - Office.AsyncContextOptions
    - id: callback
      description: Quando o método for concluído, a função passada ao parâmetro callback será chamada com um único parâmetro do tipo Office. AsyncResult. A `value` Propriedade do resultado é um objeto Date.
      type:
      - '(asyncResult: Office.AsyncResult<Date>) => void'
- uid: Outlook_1_7.Office.Time.getAsync_1
  summary: >-
    Obtém a hora de início ou de término de um compromisso.


    A data e a hora são fornecidas como um objeto Date na propriedade asyncResult. Value. O valor está no Tempo Universal Coordenado (UTC). Você pode converter a hora UTC para a hora do cliente local usando o método convertToLocalClientTime.


    \[[Conjunto de APIs: caixa de correio 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table> <tr><td>[Nível de permissão mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr> <tr><td>[Modo do Outlook aplicável](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Escrever</td></tr> </table>

    ####Veja


    ```javascript

    Office.context.mailbox.item.start.getAsync(function (asyncResult) {
        if (asyncResult.status === "failed") {
            console.log("Action failed with error: " + asyncResult.error.message);
        }
        else {
            console.log("Start date and time: " + asyncResult.value);
        }
    });

    ```
  name: getAsync(callback)
  fullName: getAsync(callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getAsync(callback: (asyncResult: Office.AsyncResult<Date>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: callback
      description: Quando o método for concluído, a função passada ao parâmetro callback será chamada com um único parâmetro do tipo Office. AsyncResult. A `value` Propriedade do resultado é um objeto Date.
      type:
      - '(asyncResult: Office.AsyncResult<Date>) => void'
- uid: Outlook_1_7.Office.Time.setAsync
  summary: >-
    Define a hora de início ou de término de um compromisso.


    Se o método setAsync for chamado na propriedade Start, a propriedade end será ajustada para manter a duração do compromisso como definido anteriormente. Se o método setAsync for chamado na Propriedade End, a duração do compromisso será estendida para a nova hora de término.


    A hora deve estar em UTC; Você pode obter o horário UTC correto usando o método convertToUtcClientTime.


    \[[Conjunto de APIs: caixa de correio 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table> <tr><td>[Nível de permissão mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr> <tr><td>[Modo do Outlook aplicável](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Escrever</td></tr> <tr><td>Erros</td><td>InvalidEndTime-a hora de término do compromisso é anterior à hora de início do compromisso.</td></tr> </table>

    ####Veja


    ```javascript

    var startTime = new Date("3/14/2015");

    var options = {
        // Pass information that can be used in the callback.
        asyncContext: {verb: "Set"}
    };

    Office.context.mailbox.item.start.setAsync(startTime, options, function(result) {
        if (result.error) {
            console.debug(result.error);
        } else {
            // Access the asyncContext that was passed to the setAsync function.
            console.debug("Start Time " + result.asyncContext.verb);
        }
    });

    ```
  name: setAsync(dateTime, options, callback)
  fullName: setAsync(dateTime, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setAsync(dateTime: Date, options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: dateTime
      description: Um objeto Date-Time no tempo universal coordenado (UTC).
      type:
      - Date
    - id: options
      description: 'Opcional. Um objeto literal que contém uma ou mais das propriedades a seguir. asyncContext: os desenvolvedores podem fornecer qualquer objeto que desejarem acessar no método de retorno de chamada.'
      type:
      - Office.AsyncContextOptions
    - id: callback
      description: Opcional. Quando o método for concluído, a função passada ao parâmetro callback será chamada com um único parâmetro do tipo Office. AsyncResult. Se a configuração de data e hora falhar, a propriedade asyncResult. Error conterá um código de erro.
      type:
      - '(asyncResult: Office.AsyncResult<void>) => void'
- uid: Outlook_1_7.Office.Time.setAsync_1
  summary: >-
    Define a hora de início ou de término de um compromisso.


    Se o método setAsync for chamado na propriedade Start, a propriedade end será ajustada para manter a duração do compromisso como definido anteriormente. Se o método setAsync for chamado na Propriedade End, a duração do compromisso será estendida para a nova hora de término.


    A hora deve estar em UTC; Você pode obter o horário UTC correto usando o método convertToUtcClientTime.


    \[[Conjunto de APIs: caixa de correio 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: <table> <tr><td>[Nível de permissão mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr> <tr><td>[Modo do Outlook aplicável](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Escrever</td></tr> <tr><td>Erros</td><td>InvalidEndTime-a hora de término do compromisso é anterior à hora de início do compromisso.</td></tr> </table>
  name: setAsync(dateTime, callback)
  fullName: setAsync(dateTime, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setAsync(dateTime: Date, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: dateTime
      description: Um objeto Date-Time no tempo universal coordenado (UTC).
      type:
      - Date
    - id: callback
      description: Opcional. Quando o método for concluído, a função passada ao parâmetro callback será chamada com um único parâmetro do tipo Office. AsyncResult. Se a configuração de data e hora falhar, a propriedade asyncResult. Error conterá um código de erro.
      type:
      - '(asyncResult: Office.AsyncResult<void>) => void'
