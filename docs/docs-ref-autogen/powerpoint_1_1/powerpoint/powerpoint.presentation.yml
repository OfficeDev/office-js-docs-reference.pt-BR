### YamlMime:UniversalReference
items:
  - uid: 'powerpoint!PowerPoint.Presentation:class'
    summary: '\[[Conjunto de APIs: PowerPointApi 1,0](/office/dev/add-ins/reference/requirement-sets/powerpoint-api-requirement-sets)\]'
    name: PowerPoint.Presentation
    fullName: PowerPoint.Presentation
    langs:
      - typeScript
    type: class
    extends:
      - 'powerpoint!OfficeExtension.ClientObject:class'
    package: powerpoint!
    children:
      - 'powerpoint!PowerPoint.Presentation#context:member'
      - 'powerpoint!PowerPoint.Presentation#load:member(1)'
      - 'powerpoint!PowerPoint.Presentation#load:member(2)'
      - 'powerpoint!PowerPoint.Presentation#load:member(3)'
      - 'powerpoint!PowerPoint.Presentation#title:member'
      - 'powerpoint!PowerPoint.Presentation#toJSON:member(1)'
  - uid: 'powerpoint!PowerPoint.Presentation#context:member'
    summary: O contexto de solicitação associado ao objeto. Isso conecta o processo do suplemento ao processo do aplicativo host do Office.
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'powerpoint!PowerPoint.RequestContext:class'
  - uid: 'powerpoint!PowerPoint.Presentation#load:member(1)'
    summary: Coloca um comando na fila para carregar as propriedades especificadas do objeto. Você deve chamar `context.sync()` antes de ler as propriedades.
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: PowerPoint.Interfaces.PresentationLoadOptions): PowerPoint.Presentation;'
      return:
        type:
          - 'powerpoint!PowerPoint.Presentation:class'
        description: ''
      parameters:
        - id: options
          description: Fornece opções para as propriedades do objeto a ser carregado.
          type:
            - 'powerpoint!PowerPoint.Interfaces.PresentationLoadOptions:interface'
  - uid: 'powerpoint!PowerPoint.Presentation#load:member(2)'
    summary: Coloca um comando na fila para carregar as propriedades especificadas do objeto. Você deve chamar `context.sync()` antes de ler as propriedades.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): PowerPoint.Presentation;'
      return:
        type:
          - 'powerpoint!PowerPoint.Presentation:class'
        description: ''
      parameters:
        - id: propertyNames
          description: Uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.
          type:
            - 'string | string[]'
  - uid: 'powerpoint!PowerPoint.Presentation#load:member(3)'
    summary: Coloca um comando na fila para carregar as propriedades especificadas do objeto. Você deve chamar `context.sync()` antes de ler as propriedades.
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): PowerPoint.Presentation;
      return:
        type:
          - 'powerpoint!PowerPoint.Presentation:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '`propertyNamesAndPaths.select` é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades a serem carregadas e `propertyNamesAndPaths.expand` é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades de navegação a serem carregadas.'
          type:
            - |-
              {
                          select?: string;
                          expand?: string;
                      }
  - uid: 'powerpoint!PowerPoint.Presentation#title:member'
    name: title
    fullName: title
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly title: string;'
      return:
        type:
          - string
  - uid: 'powerpoint!PowerPoint.Presentation#toJSON:member(1)'
    summary: 'Substitui o `toJSON()` método JavaScript para fornecer uma saída mais útil quando um objeto API é passado para `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, por sua vez, chama o `toJSON` método do objeto que é passado para ele.) Enquanto o objeto PowerPoint. Presentation original é um objeto API, o `toJSON` método retorna um objeto JavaScript simples (digitado como `PowerPoint.Interfaces.PresentationData`<!-- -->) que contém cópias superficiais de qualquer propriedade filho carregada do objeto original.'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): PowerPoint.Interfaces.PresentationData;'
      return:
        type:
          - 'powerpoint!PowerPoint.Interfaces.PresentationData:interface'
        description: ''
references:
  - uid: 'powerpoint!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'powerpoint!PowerPoint.RequestContext:class'
    name: RequestContext
  - uid: 'powerpoint!PowerPoint.Presentation:class'
    name: PowerPoint.Presentation
  - uid: 'powerpoint!PowerPoint.Interfaces.PresentationLoadOptions:interface'
    name: PowerPoint.Interfaces.PresentationLoadOptions
  - uid: 'powerpoint!PowerPoint.Interfaces.PresentationData:interface'
    name: PowerPoint.Interfaces.PresentationData