### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.DataPivotHierarchy:class'
    summary: |-
      Representa o Excel DataPivotHierarchy.

      \[[Conjunto de APIs: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: Excel.DataPivotHierarchy
    fullName: Excel.DataPivotHierarchy
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.DataPivotHierarchy#context:member'
      - 'excel!Excel.DataPivotHierarchy#field:member'
      - 'excel!Excel.DataPivotHierarchy#id:member'
      - 'excel!Excel.DataPivotHierarchy#load:member(1)'
      - 'excel!Excel.DataPivotHierarchy#load:member(2)'
      - 'excel!Excel.DataPivotHierarchy#load:member(3)'
      - 'excel!Excel.DataPivotHierarchy#name:member'
      - 'excel!Excel.DataPivotHierarchy#numberFormat:member'
      - 'excel!Excel.DataPivotHierarchy#position:member'
      - 'excel!Excel.DataPivotHierarchy#set:member(1)'
      - 'excel!Excel.DataPivotHierarchy#set:member(2)'
      - 'excel!Excel.DataPivotHierarchy#setToDefault:member(1)'
      - 'excel!Excel.DataPivotHierarchy#showAs:member'
      - 'excel!Excel.DataPivotHierarchy#summarizeBy:member'
      - 'excel!Excel.DataPivotHierarchy#toJSON:member(1)'
  - uid: 'excel!Excel.DataPivotHierarchy#context:member'
    summary: O contexto de solicitação associado ao objeto. Isso conecta o processo do suplemento ao processo do aplicativo host do Office.
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.DataPivotHierarchy#field:member'
    summary: |-
      Retorna PivotFields associados a DataPivotHierarchy.

      \[[Conjunto de APIs: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: field
    fullName: field
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly field: Excel.PivotField;'
      return:
        type:
          - 'excel!Excel.PivotField:class'
  - uid: 'excel!Excel.DataPivotHierarchy#id:member'
    summary: |-
      ID do DataPivotHierarchy.

      \[[Conjunto de APIs: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.DataPivotHierarchy#load:member(1)'
    summary: Coloca um comando na fila para carregar as propriedades especificadas do objeto. Você deve chamar "context.sync()" antes de ler as propriedades.
    remarks: |-
      Além dessa assinatura, este método tem as seguintes assinaturas:

      `load(option?: string | string[]): Excel.DataPivotHierarchy`-Where Option é uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.

      `load(option?: { select?: string; expand?: string; }): Excel.DataPivotHierarchy`-Onde Option. Select é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades a serem carregadas, e Options. Expand é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades de navegação a serem carregadas.

      `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.DataPivotHierarchy`– Disponível somente nos tipos de coleção. É semelhante à assinatura anterior. Option. Top especifica o número máximo de itens de coleta que podem ser incluídos no resultado. Option. Skip especifica o número de itens que devem ser ignorados e não incluídos no resultado. Se Option. Top for especificado, o conjunto de resultados será iniciado depois de ignorar o número de itens especificado.
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.DataPivotHierarchyLoadOptions): Excel.DataPivotHierarchy;'
      return:
        type:
          - 'excel!Excel.DataPivotHierarchy:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'excel!Excel.Interfaces.DataPivotHierarchyLoadOptions:interface'
  - uid: 'excel!Excel.DataPivotHierarchy#load:member(2)'
    summary: Coloca um comando na fila para carregar as propriedades especificadas do objeto. Você deve chamar `context.sync()` antes de ler as propriedades.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.DataPivotHierarchy;'
      return:
        type:
          - 'excel!Excel.DataPivotHierarchy:class'
        description: ''
      parameters:
        - id: propertyNames
          description: Uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.DataPivotHierarchy#load:member(3)'
    summary: Coloca um comando na fila para carregar as propriedades especificadas do objeto. Você deve chamar `context.sync()` antes de ler as propriedades.
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.DataPivotHierarchy;'
      return:
        type:
          - 'excel!Excel.DataPivotHierarchy:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: Onde propertyNamesAndPaths. Select é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades a serem carregadas e propertyNamesAndPaths. Expand é uma sequência de caracteres delimitada por vírgula que especifica as propriedades de navegação a serem carregadas.
          type:
            - '{ select?: string; expand?: string; }'
  - uid: 'excel!Excel.DataPivotHierarchy#name:member'
    summary: |-
      Nome da DataPivotHierarchy.

      \[[Conjunto de APIs: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: name
    fullName: name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'name: string;'
      return:
        type:
          - string
        description: |-


          #### <a name="examples"></a>Exemplos

          ```typescript
          await Excel.run(async (context) => {
              const dataHierarchies = context.workbook.worksheets.getActiveWorksheet().pivotTables.getItem("Farm Sales").dataHierarchies
              dataHierarchies.load("no-properties-needed");
              await context.sync();

              dataHierarchies.items[0].name = "Farm Sales";
              dataHierarchies.items[1].name = "Wholesale";
              await context.sync();
          });
          ```
  - uid: 'excel!Excel.DataPivotHierarchy#numberFormat:member'
    summary: |-
      Formato de número do DataPivotHierarchy.

      \[[Conjunto de APIs: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: numberFormat
    fullName: numberFormat
    langs:
      - typeScript
    type: property
    syntax:
      content: 'numberFormat: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.DataPivotHierarchy#position:member'
    summary: |-
      Posição da DataPivotHierarchy.

      \[[Conjunto de APIs: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: position
    fullName: position
    langs:
      - typeScript
    type: property
    syntax:
      content: 'position: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.DataPivotHierarchy#set:member(1)'
    summary: Define várias propriedades de um objeto ao mesmo tempo. Você pode passar um objeto simples com as propriedades apropriadas ou outro objeto API do mesmo tipo.
    remarks: |-
      Este método tem a seguinte assinatura adicional:

      `set(properties: Excel.DataPivotHierarchy): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.DataPivotHierarchyUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: Um objeto JavaScript com propriedades que são estruturadas isomorphically para as propriedades do objeto no qual o método é chamado.
          type:
            - 'excel!Excel.Interfaces.DataPivotHierarchyUpdateData:interface'
        - id: options
          description: Fornece uma opção para suprimir erros se o objeto Properties tentar definir qualquer propriedade somente leitura.
          type:
            - 'excel!OfficeExtension.UpdateOptions:interface'
  - uid: 'excel!Excel.DataPivotHierarchy#set:member(2)'
    summary: 'Define várias propriedades no objeto ao mesmo tempo, com base em um objeto carregado existente.'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.DataPivotHierarchy): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'excel!Excel.DataPivotHierarchy:class'
  - uid: 'excel!Excel.DataPivotHierarchy#setToDefault:member(1)'
    summary: |-
      Redefina a DataPivotHierarchy para os valores padrão.

      \[[Conjunto de APIs: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: setToDefault()
    fullName: setToDefault()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setToDefault(): void;'
      return:
        type:
          - void
        description: ''
  - uid: 'excel!Excel.DataPivotHierarchy#showAs:member'
    summary: |-
      Determina se os dados devem ser mostrados como um cálculo de resumo específico ou não.

      \[[Conjunto de APIs: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: showAs
    fullName: showAs
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showAs: Excel.ShowAsRule;'
      return:
        type:
          - 'excel!Excel.ShowAsRule:interface'
        description: |-


          #### <a name="examples"></a>Exemplos

          ```typescript
          await Excel.run(async (context) => {
              const pivotTable = context.workbook.worksheets.getActiveWorksheet().pivotTables.getItem("Farm Sales");
              const farmDataHierarchy: Excel.DataPivotHierarchy = pivotTable.dataHierarchies.getItem("Sum of Crates Sold at Farm");        
              const wholesaleDataHierarchy: Excel.DataPivotHierarchy = pivotTable.dataHierarchies.getItem("Sum of Crates Sold Wholesale");

              farmDataHierarchy.load("showAs");
              wholesaleDataHierarchy.load("showAs");
              await context.sync();

              // show the crates of each fruit type sold at the farm as a percentage of the column's total
              let farmShowAs = farmDataHierarchy.showAs;
              farmShowAs.calculation = Excel.ShowAsCalculation.percentOfColumnTotal;
              farmShowAs.baseField = pivotTable.rowHierarchies.getItem("Type").fields.getItem("Type");
              farmDataHierarchy.showAs = farmShowAs;

              let wholesaleShowAs = wholesaleDataHierarchy.showAs;
              wholesaleShowAs.calculation = Excel.ShowAsCalculation.percentOfColumnTotal;
              wholesaleShowAs.baseField = pivotTable.rowHierarchies.getItem("Type").fields.getItem("Type");
              wholesaleDataHierarchy.showAs = wholesaleShowAs;
              await context.sync();
          });
          ```
  - uid: 'excel!Excel.DataPivotHierarchy#summarizeBy:member'
    summary: |-
      Determina se deve mostrar todos os itens a DataPivotHierarchy.

      \[[Conjunto de APIs: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: summarizeBy
    fullName: summarizeBy
    langs:
      - typeScript
    type: property
    syntax:
      content: 'summarizeBy: Excel.AggregationFunction | "Unknown" | "Automatic" | "Sum" | "Count" | "Average" | "Max" | "Min" | "Product" | "CountNumbers" | "StandardDeviation" | "StandardDeviationP" | "Variance" | "VarianceP";'
      return:
        type:
          - 'excel!Excel.DataPivotHierarchy#summarizeBy~0:complex'
  - uid: 'excel!Excel.DataPivotHierarchy#toJSON:member(1)'
    summary: 'Substitui o método `toJSON()` JavaScript para fornecer uma saída mais útil quando um objeto API é passado para`JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, por sua vez, chama `toJSON` o método do objeto que é passado para ele.) Enquanto o objeto Excel. DataPivotHierarchy original é um objeto API, o `toJSON` método retorna um objeto JavaScript simples (digitado como`Excel.Interfaces.DataPivotHierarchyData`<!-- -->) que contém cópias superficiais de qualquer propriedade filho carregada do objeto original.'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.DataPivotHierarchyData;'
      return:
        type:
          - 'excel!Excel.Interfaces.DataPivotHierarchyData:interface'
        description: ''
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.PivotField:class'
    name: Excel.PivotField
  - uid: 'excel!Excel.DataPivotHierarchy:class'
    name: Excel.DataPivotHierarchy
  - uid: 'excel!Excel.Interfaces.DataPivotHierarchyLoadOptions:interface'
    name: Excel.Interfaces.DataPivotHierarchyLoadOptions
  - uid: 'excel!Excel.Interfaces.DataPivotHierarchyUpdateData:interface'
    name: Interfaces.DataPivotHierarchyUpdateData
  - uid: 'excel!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'excel!Excel.ShowAsRule:interface'
    name: Excel.ShowAsRule
  - uid: 'excel!Excel.DataPivotHierarchy#summarizeBy~0:complex'
    name: Excel.AggregationFunction | "Unknown" | "Automatic" | "Sum" | "Count" | "Average" | "Max" | "Min" | "Product" | "CountNumbers" | "StandardDeviation" | "StandardDeviationP" | "Variance" | "VarianceP"
    fullName: Excel.AggregationFunction | "Unknown" | "Automatic" | "Sum" | "Count" | "Average" | "Max" | "Min" | "Product" | "CountNumbers" | "StandardDeviation" | "StandardDeviationP" | "Variance" | "VarianceP"
    spec.typeScript:
      - uid: 'excel!Excel.AggregationFunction:enum'
        name: Excel.AggregationFunction
        fullName: Excel.AggregationFunction
      - name: ' | "Unknown" | "Automatic" | "Sum" | "Count" | "Average" | "Max" | "Min" | "Product" | "CountNumbers" | "StandardDeviation" | "StandardDeviationP" | "Variance" | "VarianceP"'
        fullName: ' | "Unknown" | "Automatic" | "Sum" | "Count" | "Average" | "Max" | "Min" | "Product" | "CountNumbers" | "StandardDeviation" | "StandardDeviationP" | "Variance" | "VarianceP"'
  - uid: 'excel!Excel.Interfaces.DataPivotHierarchyData:interface'
    name: Excel.Interfaces.DataPivotHierarchyData