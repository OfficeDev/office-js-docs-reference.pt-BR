### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.RangeSort:class'
    summary: |-
      Gerencia operações de classificação em objetos Range.

      \[[Conjunto de APIs: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: Excel.RangeSort
    fullName: Excel.RangeSort
    langs:
      - typeScript
    type: class
    extends:
      - 'office!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.RangeSort#apply:member(1)'
      - 'excel!Excel.RangeSort#apply:member(2)'
      - 'excel!Excel.RangeSort#context:member'
      - 'excel!Excel.RangeSort#toJSON:member(1)'
  - uid: 'excel!Excel.RangeSort#apply:member(1)'
    summary: |-
      Executa uma operação de classificação.

      \[[Conjunto de APIs: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: 'apply(fields, matchCase, hasHeaders, orientation, method)'
    fullName: 'apply(fields, matchCase, hasHeaders, orientation, method)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'apply(fields: Excel.SortField[], matchCase?: boolean, hasHeaders?: boolean, orientation?: Excel.SortOrientation, method?: Excel.SortMethod): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: fields
          description: A lista de condições para a classificação.
          type:
            - 'excel!Excel.RangeSort#apply~0:complex'
        - id: matchCase
          description: Opcional. Define se o uso de maiúsculas ou minúsculas afeta a ordenação da cadeia de caracteres.
          type:
            - boolean
        - id: hasHeaders
          description: Opcional. Se o intervalo tem um cabeçalho.
          type:
            - boolean
        - id: orientation
          description: Opcional. Se a operação classifica linhas ou colunas.
          type:
            - 'excel!Excel.SortOrientation:enum'
        - id: method
          description: Opcional. O método de ordenação usado pelos caracteres chineses.
          type:
            - 'excel!Excel.SortMethod:enum'
  - uid: 'excel!Excel.RangeSort#apply:member(2)'
    summary: |-
      Executa uma operação de classificação.

      \[[Conjunto de APIs: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: 'apply(fields, matchCase, hasHeaders, orientationString, method)'
    fullName: 'apply(fields, matchCase, hasHeaders, orientationString, method)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'apply(fields: Excel.SortField[], matchCase?: boolean, hasHeaders?: boolean, orientationString?: "Rows" | "Columns", method?: "PinYin" | "StrokeCount"): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: fields
          description: A lista de condições para a classificação.
          type:
            - 'excel!Excel.RangeSort#apply~1:complex'
        - id: matchCase
          description: Opcional. Define se o uso de maiúsculas ou minúsculas afeta a ordenação da cadeia de caracteres.
          type:
            - boolean
        - id: hasHeaders
          description: Opcional. Se o intervalo tem um cabeçalho.
          type:
            - boolean
        - id: orientationString
          description: Opcional. Se a operação classifica linhas ou colunas.
          type:
            - '"Rows" | "Columns"'
        - id: method
          description: Opcional. O método de ordenação usado pelos caracteres chineses.
          type:
            - '"PinYin" | "StrokeCount"'
  - uid: 'excel!Excel.RangeSort#context:member'
    summary: O contexto de solicitação associado ao objeto. Isso conecta o processo do suplemento ao processo do aplicativo host do Office.
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.RangeSort#toJSON:member(1)'
    summary: 'Substitui o `toJSON()` método JavaScript para fornecer uma saída mais útil quando um objeto API é passado para`JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, por sua vez, chama o `toJSON` método do objeto que é passado para ele.) Enquanto o objeto Excel. RangeSort original é um objeto API, o `toJSON` método retorna um objeto JavaScript simples (digitado como`Excel.Interfaces.RangeSortData`<!-- -->) que contém cópias superficiais de qualquer propriedade filho carregada do objeto original.'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        toJSON(): {
                    [key: string]: string;
                };
      return:
        type:
          - |-
            {
                        [key: string]: string;
                    }
        description: ''
references:
  - uid: 'office!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RangeSort#apply~0:complex'
    name: 'Excel.SortField[]'
    fullName: 'Excel.SortField[]'
    spec.typeScript:
      - uid: 'excel!Excel.SortField:interface'
        name: Excel.SortField
        fullName: Excel.SortField
      - name: '[]'
        fullName: '[]'
  - uid: 'excel!Excel.SortOrientation:enum'
    name: Excel.SortOrientation
  - uid: 'excel!Excel.SortMethod:enum'
    name: Excel.SortMethod
  - uid: 'excel!Excel.RangeSort#apply~1:complex'
    name: 'Excel.SortField[]'
    fullName: 'Excel.SortField[]'
    spec.typeScript:
      - uid: 'excel!Excel.SortField:interface'
        name: Excel.SortField
        fullName: Excel.SortField
      - name: '[]'
        fullName: '[]'
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext