### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.ChartAxisTitle:class'
    summary: |-
      <span data-ttu-id="1a166-101">Representa o título de um eixo do gráfico.</span><span class="sxs-lookup"><span data-stu-id="1a166-101">Represents the title of a chart axis.</span></span>

      <span data-ttu-id="1a166-102">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1a166-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.ChartAxisTitle
    fullName: Excel.ChartAxisTitle
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.ChartAxisTitle#context:member'
      - 'excel!Excel.ChartAxisTitle#format:member'
      - 'excel!Excel.ChartAxisTitle#load:member(1)'
      - 'excel!Excel.ChartAxisTitle#load:member(2)'
      - 'excel!Excel.ChartAxisTitle#load:member(3)'
      - 'excel!Excel.ChartAxisTitle#set:member(1)'
      - 'excel!Excel.ChartAxisTitle#set:member(2)'
      - 'excel!Excel.ChartAxisTitle#setFormula:member(1)'
      - 'excel!Excel.ChartAxisTitle#text:member'
      - 'excel!Excel.ChartAxisTitle#toJSON:member(1)'
      - 'excel!Excel.ChartAxisTitle#visible:member'
  - uid: 'excel!Excel.ChartAxisTitle#context:member'
    summary: <span data-ttu-id="1a166-103">O contexto de solicitação associado ao objeto.</span><span class="sxs-lookup"><span data-stu-id="1a166-103">The request context associated with the object.</span></span> <span data-ttu-id="1a166-104">Isso conecta o processo do suplemento ao processo do aplicativo host do Office.</span><span class="sxs-lookup"><span data-stu-id="1a166-104">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.ChartAxisTitle#format:member'
    summary: |-
      <span data-ttu-id="1a166-105">Representa a formatação do título do eixo do gráfico.</span><span class="sxs-lookup"><span data-stu-id="1a166-105">Represents the formatting of chart axis title.</span></span> <span data-ttu-id="1a166-106">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="1a166-106">Read-only.</span></span>

      <span data-ttu-id="1a166-107">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1a166-107">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: format
    fullName: format
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly format: Excel.ChartAxisTitleFormat;'
      return:
        type:
          - 'excel!Excel.ChartAxisTitleFormat:class'
  - uid: 'excel!Excel.ChartAxisTitle#load:member(1)'
    summary: <span data-ttu-id="1a166-108">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="1a166-108">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="1a166-109">Você deve chamar `context.sync()` antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="1a166-109">You must call `context.sync()` before reading the properties.</span></span>
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.ChartAxisTitleLoadOptions): Excel.ChartAxisTitle;'
      return:
        type:
          - 'excel!Excel.ChartAxisTitle:class'
        description: ''
      parameters:
        - id: options
          description: <span data-ttu-id="1a166-110">Fornece opções para as propriedades do objeto a ser carregado.</span><span class="sxs-lookup"><span data-stu-id="1a166-110">Provides options for which properties of the object to load.</span></span>
          type:
            - 'excel!Excel.Interfaces.ChartAxisTitleLoadOptions:interface'
  - uid: 'excel!Excel.ChartAxisTitle#load:member(2)'
    summary: <span data-ttu-id="1a166-111">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="1a166-111">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="1a166-112">Você deve chamar `context.sync()` antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="1a166-112">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.ChartAxisTitle;'
      return:
        type:
          - 'excel!Excel.ChartAxisTitle:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="1a166-113">Exemplos</span><span class="sxs-lookup"><span data-stu-id="1a166-113">Examples</span></span>

          ```javascript
          // Get the text of Chart Axis Title from the value axis of Chart1.
          Excel.run(function (ctx) { 
              var chart = ctx.workbook.worksheets.getItem("Sheet1").charts.getItem("Chart1"); 
              var title = chart.axes.valueAxis.title;
              title.load('text');
              return ctx.sync().then(function() {
                      console.log(title.text);
              });
          }).catch(function(error) {
                  console.log("Error: " + error);
                  if (error instanceof OfficeExtension.Error) {
                      console.log("Debug info: " + JSON.stringify(error.debugInfo));
                  }
          });
          ```
          ```javascript
          // Add "Values" as the title for the value Axis 
          Excel.run(function (ctx) { 
              var chart = ctx.workbook.worksheets.getItem("Sheet1").charts.getItem("Chart1"); 
              chart.axes.valueAxis.title.text = "Values";
              return ctx.sync().then(function() {
                      console.log("Axis Title Added ");
              });
          }).catch(function(error) {
                  console.log("Error: " + error);
                  if (error instanceof OfficeExtension.Error) {
                      console.log("Debug info: " + JSON.stringify(error.debugInfo));
                  }
          });
          ```
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="1a166-114">Uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="1a166-114">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.ChartAxisTitle#load:member(3)'
    summary: <span data-ttu-id="1a166-115">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="1a166-115">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="1a166-116">Você deve chamar `context.sync()` antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="1a166-116">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.ChartAxisTitle;
      return:
        type:
          - 'excel!Excel.ChartAxisTitle:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="1a166-117">`propertyNamesAndPaths.select`é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades a serem `propertyNamesAndPaths.expand` carregadas e é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades de navegação a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="1a166-117">`propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - |-
              {
                          select?: string;
                          expand?: string;
                      }
  - uid: 'excel!Excel.ChartAxisTitle#set:member(1)'
    summary: '<span data-ttu-id="1a166-118">Define várias propriedades de um objeto ao mesmo tempo.</span><span class="sxs-lookup"><span data-stu-id="1a166-118">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="1a166-119">Você pode passar um objeto simples com as propriedades apropriadas ou outro objeto API do mesmo tipo.</span><span class="sxs-lookup"><span data-stu-id="1a166-119">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="1a166-120">Este método tem a seguinte assinatura adicional:</span><span class="sxs-lookup"><span data-stu-id="1a166-120">This method has the following additional signature:</span></span>

      `set(properties: Excel.ChartAxisTitle): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.ChartAxisTitleUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="1a166-121">Um objeto JavaScript com propriedades que são estruturadas isomorphically para as propriedades do objeto no qual o método é chamado.</span><span class="sxs-lookup"><span data-stu-id="1a166-121">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - 'excel!Excel.Interfaces.ChartAxisTitleUpdateData:interface'
        - id: options
          description: <span data-ttu-id="1a166-122">Fornece uma opção para suprimir erros se o objeto Properties tentar definir qualquer propriedade somente leitura.</span><span class="sxs-lookup"><span data-stu-id="1a166-122">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - 'excel!OfficeExtension.UpdateOptions:interface'
  - uid: 'excel!Excel.ChartAxisTitle#set:member(2)'
    summary: '<span data-ttu-id="1a166-123">Define várias propriedades no objeto ao mesmo tempo, com base em um objeto carregado existente.</span><span class="sxs-lookup"><span data-stu-id="1a166-123">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.ChartAxisTitle): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'excel!Excel.ChartAxisTitle:class'
  - uid: 'excel!Excel.ChartAxisTitle#setFormula:member(1)'
    summary: |-
      <span data-ttu-id="1a166-124">Um valor de cadeia de caracteres que representa a fórmula do título do eixo do gráfico usando a notação no estilo A1.</span><span class="sxs-lookup"><span data-stu-id="1a166-124">A string value that represents the formula of chart axis title using A1-style notation.</span></span>

      <span data-ttu-id="1a166-125">\[[Conjunto de APIs: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1a166-125">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: setFormula(formula)
    fullName: setFormula(formula)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setFormula(formula: string): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: formula
          description: <span data-ttu-id="1a166-126">uma cadeia de caracteres que apresenta a fórmula a ser definida</span><span class="sxs-lookup"><span data-stu-id="1a166-126">a string that present the formula to set</span></span>
          type:
            - string
  - uid: 'excel!Excel.ChartAxisTitle#text:member'
    summary: |-
      <span data-ttu-id="1a166-127">Representa o título do eixo.</span><span class="sxs-lookup"><span data-stu-id="1a166-127">Represents the axis title.</span></span>

      <span data-ttu-id="1a166-128">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1a166-128">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: text
    fullName: text
    langs:
      - typeScript
    type: property
    syntax:
      content: 'text: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.ChartAxisTitle#toJSON:member(1)'
    summary: '<span data-ttu-id="1a166-129">Substitui o método `toJSON()` JavaScript para fornecer uma saída mais útil quando um objeto API é passado para`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="1a166-129">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="1a166-130">.</span><span class="sxs-lookup"><span data-stu-id="1a166-130"></span></span> <span data-ttu-id="1a166-131">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="1a166-131"></span></span><!-- --><span data-ttu-id="1a166-132">, por sua vez, chama `toJSON` o método do objeto que é passado para ele.) Enquanto o objeto Excel. ChartAxisTitle original é um objeto API, o `toJSON` método retorna um objeto JavaScript simples (digitado como`Excel.Interfaces.ChartAxisTitleData`</span><span class="sxs-lookup"><span data-stu-id="1a166-132">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.ChartAxisTitle object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ChartAxisTitleData`</span></span><!-- --><span data-ttu-id="1a166-133">) que contém cópias superficiais de qualquer propriedade filho carregada do objeto original.</span><span class="sxs-lookup"><span data-stu-id="1a166-133">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.ChartAxisTitleData;'
      return:
        type:
          - 'excel!Excel.Interfaces.ChartAxisTitleData:interface'
        description: ''
  - uid: 'excel!Excel.ChartAxisTitle#visible:member'
    summary: |-
      <span data-ttu-id="1a166-134">Um booliano que especifica a visibilidade de um título do eixo.</span><span class="sxs-lookup"><span data-stu-id="1a166-134">A boolean that specifies the visibility of an axis title.</span></span>

      <span data-ttu-id="1a166-135">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1a166-135">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: visible
    fullName: visible
    langs:
      - typeScript
    type: property
    syntax:
      content: 'visible: boolean;'
      return:
        type:
          - boolean
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.ChartAxisTitleFormat:class'
    name: Excel.ChartAxisTitleFormat
  - uid: 'excel!Excel.ChartAxisTitle:class'
    name: Excel.ChartAxisTitle
  - uid: 'excel!Excel.Interfaces.ChartAxisTitleLoadOptions:interface'
    name: Excel.Interfaces.ChartAxisTitleLoadOptions
  - uid: 'excel!Excel.Interfaces.ChartAxisTitleUpdateData:interface'
    name: Interfaces.ChartAxisTitleUpdateData
  - uid: 'excel!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'excel!Excel.Interfaces.ChartAxisTitleData:interface'
    name: Excel.Interfaces.ChartAxisTitleData