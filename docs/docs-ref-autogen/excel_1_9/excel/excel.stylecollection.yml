### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.StyleCollection:class'
    summary: |-
      <span data-ttu-id="2f649-101">Representa uma coleção de todos os estilos.</span><span class="sxs-lookup"><span data-stu-id="2f649-101">Represents a collection of all the styles.</span></span>

      <span data-ttu-id="2f649-102">\[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2f649-102">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.StyleCollection
    fullName: Excel.StyleCollection
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.StyleCollection#add:member(1)'
      - 'excel!Excel.StyleCollection#context:member'
      - 'excel!Excel.StyleCollection#getCount:member(1)'
      - 'excel!Excel.StyleCollection#getItem:member(1)'
      - 'excel!Excel.StyleCollection#getItemAt:member(1)'
      - 'excel!Excel.StyleCollection#items:member'
      - 'excel!Excel.StyleCollection#load:member(1)'
      - 'excel!Excel.StyleCollection#load:member(2)'
      - 'excel!Excel.StyleCollection#load:member(3)'
      - 'excel!Excel.StyleCollection#toJSON:member(1)'
  - uid: 'excel!Excel.StyleCollection#add:member(1)'
    summary: |-
      <span data-ttu-id="2f649-103">Adiciona um novo estilo para o conjunto.</span><span class="sxs-lookup"><span data-stu-id="2f649-103">Adds a new style to the collection.</span></span>

      <span data-ttu-id="2f649-104">\[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2f649-104">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: add(name)
    fullName: add(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(name: string): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="2f649-105">Exemplos</span><span class="sxs-lookup"><span data-stu-id="2f649-105">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              let styles = context.workbook.styles;

              // Add a new style to the style collection.
              // Styles is in the Home tab ribbon.
              styles.add("Diagonal Orientation Style");
                    
              let newStyle = styles.getItem("Diagonal Orientation Style");
              
              // The "Diagonal Orientation Style" properties.
              newStyle.textOrientation = 38;
              newStyle.autoIndent = true;
              newStyle.includeProtection = true;
              newStyle.shrinkToFit = true;
              newStyle.locked = false;
              
              await context.sync();

              console.log("Successfully added a new style with diagonal orientation to the Home tab ribbon.");
          });
          ```
      parameters:
        - id: name
          description: <span data-ttu-id="2f649-106">Nome do estilo a ser adicionado.</span><span class="sxs-lookup"><span data-stu-id="2f649-106">Name of the style to be added.</span></span>
          type:
            - string
  - uid: 'excel!Excel.StyleCollection#context:member'
    summary: <span data-ttu-id="2f649-107">O contexto de solicitação associado ao objeto.</span><span class="sxs-lookup"><span data-stu-id="2f649-107">The request context associated with the object.</span></span> <span data-ttu-id="2f649-108">Isso conecta o processo do suplemento ao processo do aplicativo host do Office.</span><span class="sxs-lookup"><span data-stu-id="2f649-108">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.StyleCollection#getCount:member(1)'
    summary: |-
      <span data-ttu-id="2f649-109">Obtém o número de estilos na coleção.</span><span class="sxs-lookup"><span data-stu-id="2f649-109">Gets the number of styles in the collection.</span></span>

      <span data-ttu-id="2f649-110">\[[Conjunto de APIs: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2f649-110">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - 'excel!Excel.StyleCollection#getCount~0:complex'
        description: ''
  - uid: 'excel!Excel.StyleCollection#getItem:member(1)'
    summary: |-
      <span data-ttu-id="2f649-111">Obtém um estilo por nome.</span><span class="sxs-lookup"><span data-stu-id="2f649-111">Gets a style by name.</span></span>

      <span data-ttu-id="2f649-112">\[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2f649-112">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItem(name)
    fullName: getItem(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(name: string): Excel.Style;'
      return:
        type:
          - 'excel!Excel.Style:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="2f649-113">Exemplos</span><span class="sxs-lookup"><span data-stu-id="2f649-113">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              let styles = context.workbook.styles;

              // Add a new style to the style collection.
              // Styles is in the Home tab ribbon.
              styles.add("Diagonal Orientation Style");
                    
              let newStyle = styles.getItem("Diagonal Orientation Style");
              
              // The "Diagonal Orientation Style" properties.
              newStyle.textOrientation = 38;
              newStyle.autoIndent = true;
              newStyle.includeProtection = true;
              newStyle.shrinkToFit = true;
              newStyle.locked = false;
              
              await context.sync();

              console.log("Successfully added a new style with diagonal orientation to the Home tab ribbon.");
          });
          ```
      parameters:
        - id: name
          description: <span data-ttu-id="2f649-114">Nome do estilo a ser recuperado.</span><span class="sxs-lookup"><span data-stu-id="2f649-114">Name of the style to be retrieved.</span></span>
          type:
            - string
  - uid: 'excel!Excel.StyleCollection#getItemAt:member(1)'
    summary: |-
      <span data-ttu-id="2f649-115">Obtém um estilo com base em sua posição na coleção.</span><span class="sxs-lookup"><span data-stu-id="2f649-115">Gets a style based on its position in the collection.</span></span>

      <span data-ttu-id="2f649-116">\[[Conjunto de APIs: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2f649-116">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItemAt(index)
    fullName: getItemAt(index)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemAt(index: number): Excel.Style;'
      return:
        type:
          - 'excel!Excel.Style:class'
        description: ''
      parameters:
        - id: index
          description: <span data-ttu-id="2f649-117">Valor de índice do objeto Style a ser recuperado.</span><span class="sxs-lookup"><span data-stu-id="2f649-117">Index value of the style object to be retrieved.</span></span> <span data-ttu-id="2f649-118">Indexados com zero.</span><span class="sxs-lookup"><span data-stu-id="2f649-118">Zero-indexed.</span></span>
          type:
            - number
  - uid: 'excel!Excel.StyleCollection#items:member'
    summary: <span data-ttu-id="2f649-119">Obtém os itens filhos carregados nesta coleção.</span><span class="sxs-lookup"><span data-stu-id="2f649-119">Gets the loaded child items in this collection.</span></span>
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.Style[];'
      return:
        type:
          - 'excel!Excel.StyleCollection#items~0:complex'
  - uid: 'excel!Excel.StyleCollection#load:member(1)'
    summary: <span data-ttu-id="2f649-120">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="2f649-120">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="2f649-121">Você deve chamar "context.sync()" antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="2f649-121">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="2f649-122">Além dessa assinatura, este método tem as seguintes assinaturas:</span><span class="sxs-lookup"><span data-stu-id="2f649-122">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="2f649-123">`load(option?: string | string[]): Excel.StyleCollection`-Where Option é uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="2f649-123">`load(option?: string | string[]): Excel.StyleCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="2f649-124">`load(option?: { select?: string; expand?: string; }): Excel.StyleCollection`-Onde Option. Select é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades a serem carregadas, e Options. Expand é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades de navegação a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="2f649-124">`load(option?: { select?: string; expand?: string; }): Excel.StyleCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="2f649-125">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.StyleCollection`– Disponível somente nos tipos de coleção.</span><span class="sxs-lookup"><span data-stu-id="2f649-125">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.StyleCollection` - Only available on collection types.</span></span> <span data-ttu-id="2f649-126">É semelhante à assinatura anterior.</span><span class="sxs-lookup"><span data-stu-id="2f649-126">It is similar to the preceding signature.</span></span> <span data-ttu-id="2f649-127">Option. Top especifica o número máximo de itens de coleta que podem ser incluídos no resultado.</span><span class="sxs-lookup"><span data-stu-id="2f649-127">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="2f649-128">Option. Skip especifica o número de itens que devem ser ignorados e não incluídos no resultado.</span><span class="sxs-lookup"><span data-stu-id="2f649-128">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="2f649-129">Se Option. Top for especificado, o conjunto de resultados será iniciado depois de ignorar o número de itens especificado.</span><span class="sxs-lookup"><span data-stu-id="2f649-129">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.StyleCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.StyleCollection;'
      return:
        type:
          - 'excel!Excel.StyleCollection:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'excel!Excel.StyleCollection#load~0:complex'
  - uid: 'excel!Excel.StyleCollection#load:member(2)'
    summary: <span data-ttu-id="2f649-130">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="2f649-130">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="2f649-131">Você deve chamar `context.sync()` antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="2f649-131">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.StyleCollection;'
      return:
        type:
          - 'excel!Excel.StyleCollection:class'
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="2f649-132">Uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="2f649-132">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.StyleCollection#load:member(3)'
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): Excel.StyleCollection;'
      return:
        type:
          - 'excel!Excel.StyleCollection:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'excel!OfficeExtension.LoadOption:interface'
  - uid: 'excel!Excel.StyleCollection#toJSON:member(1)'
    summary: '<span data-ttu-id="2f649-133">Substitui o método `toJSON()` JavaScript para fornecer uma saída mais útil quando um objeto API é passado para`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="2f649-133">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="2f649-134">.</span><span class="sxs-lookup"><span data-stu-id="2f649-134"></span></span> <span data-ttu-id="2f649-135">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="2f649-135"></span></span><!-- --><span data-ttu-id="2f649-136">, por sua vez, chama `toJSON` o método do objeto que é passado para ele.) Enquanto o objeto `Excel.StyleCollection` original é um objeto API, o `toJSON` método retorna um objeto JavaScript simples (digitado como`Excel.Interfaces.StyleCollectionData`</span><span class="sxs-lookup"><span data-stu-id="2f649-136">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.StyleCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.StyleCollectionData`</span></span><!-- --><span data-ttu-id="2f649-137">) que contém uma matriz de "itens" com cópias superficiais de qualquer propriedade carregada dos itens da coleção.</span><span class="sxs-lookup"><span data-stu-id="2f649-137">) that contains an "items" array with shallow copies of any loaded properties from the collection''s items.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.StyleCollectionData;'
      return:
        type:
          - 'excel!Excel.Interfaces.StyleCollectionData:interface'
        description: ''
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.StyleCollection#getCount~0:complex'
    name: OfficeExtension.ClientResult<number>
    fullName: OfficeExtension.ClientResult<number>
    spec.typeScript:
      - uid: 'excel!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <number>
        fullName: <number>
  - uid: 'excel!Excel.Style:class'
    name: Excel.Style
  - uid: 'excel!Excel.StyleCollection#items~0:complex'
    name: 'Excel.Style[]'
    fullName: 'Excel.Style[]'
    spec.typeScript:
      - uid: 'excel!Excel.Style:class'
        name: Excel.Style
        fullName: Excel.Style
      - name: '[]'
        fullName: '[]'
  - uid: 'excel!Excel.StyleCollection:class'
    name: Excel.StyleCollection
  - uid: 'excel!Excel.StyleCollection#load~0:complex'
    name: Excel.Interfaces.StyleCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    fullName: Excel.Interfaces.StyleCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    spec.typeScript:
      - uid: 'excel!Excel.Interfaces.StyleCollectionLoadOptions:interface'
        name: Excel.Interfaces.StyleCollectionLoadOptions
        fullName: Excel.Interfaces.StyleCollectionLoadOptions
      - name: ' & '
        fullName: ' & '
      - uid: 'excel!Excel.Interfaces.CollectionLoadOptions:interface'
        name: Excel.Interfaces.CollectionLoadOptions
        fullName: Excel.Interfaces.CollectionLoadOptions
  - uid: 'excel!OfficeExtension.LoadOption:interface'
    name: OfficeExtension.LoadOption
  - uid: 'excel!Excel.Interfaces.StyleCollectionData:interface'
    name: Excel.Interfaces.StyleCollectionData