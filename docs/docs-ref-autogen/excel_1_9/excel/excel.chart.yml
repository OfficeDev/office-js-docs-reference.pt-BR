### YamlMime:TSType
name: Excel.Chart
uid: excel!Excel.Chart:class
package: excel!
fullName: Excel.Chart
summary: >-
  Representa um objeto chart em uma pasta de trabalho. Para saber mais sobre o modelo de objeto de gráfico, consulte [Trabalhar com gráficos usando](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-charts) Excel API JavaScript<!-- -->.


  \[[Conjunto de API: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
- name: axes
  uid: excel!Excel.Chart#axes:member
  package: excel!
  fullName: axes
  summary: >-
    Representa os eixos de um gráfico.


    \[[Conjunto de API: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly axes: Excel.ChartAxes;'
    return:
      type: <xref uid="excel!Excel.ChartAxes:class" />
- name: categoryLabelLevel
  uid: excel!Excel.Chart#categoryLabelLevel:member
  package: excel!
  fullName: categoryLabelLevel
  summary: >-
    Especifica uma constante de enumeração de nível de rótulo de categoria de gráfico, referindo-se ao nível dos rótulos de categoria de origem.


    \[[Conjunto de API: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'categoryLabelLevel: number;'
    return:
      type: number
- name: chartType
  uid: excel!Excel.Chart#chartType:member
  package: excel!
  fullName: chartType
  summary: >-
    Especifica o tipo do gráfico. Consulte `Excel.ChartType` para obter detalhes.


    \[[Conjunto de API: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'chartType: Excel.ChartType | "Invalid" | "ColumnClustered" | "ColumnStacked" | "ColumnStacked100" | "3DColumnClustered" | "3DColumnStacked" | "3DColumnStacked100" | "BarClustered" | "BarStacked" | "BarStacked100" | "3DBarClustered" | "3DBarStacked" | "3DBarStacked100" | "LineStacked" | "LineStacked100" | "LineMarkers" | "LineMarkersStacked" | "LineMarkersStacked100" | "PieOfPie" | "PieExploded" | "3DPieExploded" | "BarOfPie" | "XYScatterSmooth" | "XYScatterSmoothNoMarkers" | "XYScatterLines" | "XYScatterLinesNoMarkers" | "AreaStacked" | "AreaStacked100" | "3DAreaStacked" | "3DAreaStacked100" | "DoughnutExploded" | "RadarMarkers" | "RadarFilled" | "Surface" | "SurfaceWireframe" | "SurfaceTopView" | "SurfaceTopViewWireframe" | "Bubble" | "Bubble3DEffect" | "StockHLC" | "StockOHLC" | "StockVHLC" | "StockVOHLC" | "CylinderColClustered" | "CylinderColStacked" | "CylinderColStacked100" | "CylinderBarClustered" | "CylinderBarStacked" | "CylinderBarStacked100" | "CylinderCol" | "ConeColClustered" | "ConeColStacked" | "ConeColStacked100" | "ConeBarClustered" | "ConeBarStacked" | "ConeBarStacked100" | "ConeCol" | "PyramidColClustered" | "PyramidColStacked" | "PyramidColStacked100" | "PyramidBarClustered" | "PyramidBarStacked" | "PyramidBarStacked100" | "PyramidCol" | "3DColumn" | "Line" | "3DLine" | "3DPie" | "Pie" | "XYScatter" | "3DArea" | "Area" | "Doughnut" | "Radar" | "Histogram" | "Boxwhisker" | "Pareto" | "RegionMap" | "Treemap" | "Waterfall" | "Sunburst" | "Funnel";'
    return:
      type: <xref uid="excel!Excel.ChartType:enum" /> | "Invalid" | "ColumnClustered" | "ColumnStacked" | "ColumnStacked100" | "3DColumnClustered" | "3DColumnStacked" | "3DColumnStacked100" | "BarClustered" | "BarStacked" | "BarStacked100" | "3DBarClustered" | "3DBarStacked" | "3DBarStacked100" | "LineStacked" | "LineStacked100" | "LineMarkers" | "LineMarkersStacked" | "LineMarkersStacked100" | "PieOfPie" | "PieExploded" | "3DPieExploded" | "BarOfPie" | "XYScatterSmooth" | "XYScatterSmoothNoMarkers" | "XYScatterLines" | "XYScatterLinesNoMarkers" | "AreaStacked" | "AreaStacked100" | "3DAreaStacked" | "3DAreaStacked100" | "DoughnutExploded" | "RadarMarkers" | "RadarFilled" | "Surface" | "SurfaceWireframe" | "SurfaceTopView" | "SurfaceTopViewWireframe" | "Bubble" | "Bubble3DEffect" | "StockHLC" | "StockOHLC" | "StockVHLC" | "StockVOHLC" | "CylinderColClustered" | "CylinderColStacked" | "CylinderColStacked100" | "CylinderBarClustered" | "CylinderBarStacked" | "CylinderBarStacked100" | "CylinderCol" | "ConeColClustered" | "ConeColStacked" | "ConeColStacked100" | "ConeBarClustered" | "ConeBarStacked" | "ConeBarStacked100" | "ConeCol" | "PyramidColClustered" | "PyramidColStacked" | "PyramidColStacked100" | "PyramidBarClustered" | "PyramidBarStacked" | "PyramidBarStacked100" | "PyramidCol" | "3DColumn" | "Line" | "3DLine" | "3DPie" | "Pie" | "XYScatter" | "3DArea" | "Area" | "Doughnut" | "Radar" | "Histogram" | "Boxwhisker" | "Pareto" | "RegionMap" | "Treemap" | "Waterfall" | "Sunburst" | "Funnel"
- name: context
  uid: excel!Excel.Chart#context:member
  package: excel!
  fullName: context
  summary: O contexto de solicitação associado ao objeto. Isso conecta o processo do Office do aplicativo host.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'context: RequestContext;'
    return:
      type: <xref uid="excel!Excel.RequestContext:class" />
- name: dataLabels
  uid: excel!Excel.Chart#dataLabels:member
  package: excel!
  fullName: dataLabels
  summary: >-
    Representa os rótulos de dados no gráfico.


    \[[Conjunto de API: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly dataLabels: Excel.ChartDataLabels;'
    return:
      type: <xref uid="excel!Excel.ChartDataLabels:class" />
- name: displayBlanksAs
  uid: excel!Excel.Chart#displayBlanksAs:member
  package: excel!
  fullName: displayBlanksAs
  summary: >-
    Especifica a maneira como as células em branco são plotadas em um gráfico.


    \[[Conjunto de API: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'displayBlanksAs: Excel.ChartDisplayBlanksAs | "NotPlotted" | "Zero" | "Interplotted";'
    return:
      type: <xref uid="excel!Excel.ChartDisplayBlanksAs:enum" /> | "NotPlotted" | "Zero" | "Interplotted"
- name: format
  uid: excel!Excel.Chart#format:member
  package: excel!
  fullName: format
  summary: >-
    Encapsula as propriedades de formato da área do gráfico.


    \[[Conjunto de API: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly format: Excel.ChartAreaFormat;'
    return:
      type: <xref uid="excel!Excel.ChartAreaFormat:class" />
- name: height
  uid: excel!Excel.Chart#height:member
  package: excel!
  fullName: height
  summary: >-
    Especifica a altura, em pontos, do objeto chart.


    \[[Conjunto de API: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'height: number;'
    return:
      type: number
- name: id
  uid: excel!Excel.Chart#id:member
  package: excel!
  fullName: id
  summary: >-
    A ID exclusiva do gráfico.


    \[[Conjunto de API: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly id: string;'
    return:
      type: string
- name: left
  uid: excel!Excel.Chart#left:member
  package: excel!
  fullName: left
  summary: >-
    A distância, em pontos, da esquerda do gráfico à origem da planilha.


    \[[Conjunto de API: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'left: number;'
    return:
      type: number
- name: legend
  uid: excel!Excel.Chart#legend:member
  package: excel!
  fullName: legend
  summary: >-
    Representa a legenda do gráfico.


    \[[Conjunto de API: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly legend: Excel.ChartLegend;'
    return:
      type: <xref uid="excel!Excel.ChartLegend:class" />
      description: "\n\n#### <a name=\"examples\"></a>Exemplos\n\n```javascript\n// Set to show legend of Chart1 and make it on top of the chart.\nExcel.run(function (ctx) { \n    var chart = ctx.workbook.worksheets.getItem(\"Sheet1\").charts.getItem(\"Chart1\");    \n    chart.legend.visible = true;\n    chart.legend.position = \"top\"; \n    chart.legend.overlay = false; \n    return ctx.sync().then(function() {\n            console.log(\"Legend Shown \");\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: name
  uid: excel!Excel.Chart#name:member
  package: excel!
  fullName: name
  summary: >-
    Especifica o nome de um objeto chart.


    \[[Conjunto de API: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'name: string;'
    return:
      type: string
      description: "\n\n#### <a name=\"examples\"></a>Exemplos\n\n```javascript\n// Rename the chart to new name, resize the chart to 200 points in both height and weight. \n// Move Chart1 to 100 points to the top and left. \nExcel.run(function (ctx) { \n    var chart = ctx.workbook.worksheets.getItem(\"Sheet1\").charts.getItem(\"Chart1\");    \n    chart.name = \"New Name\";\n    chart.top = 100;\n    chart.left = 100;\n    chart.height = 200;\n    chart.width = 200;\n    return ctx.sync(); \n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: pivotOptions
  uid: excel!Excel.Chart#pivotOptions:member
  package: excel!
  fullName: pivotOptions
  summary: >-
    Encapsula as opções para um gráfico dinâmico.


    \[[Conjunto de API: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly pivotOptions: Excel.ChartPivotOptions;'
    return:
      type: <xref uid="excel!Excel.ChartPivotOptions:class" />
- name: plotArea
  uid: excel!Excel.Chart#plotArea:member
  package: excel!
  fullName: plotArea
  summary: >-
    Representa a área de plotagem do gráfico.


    \[[Conjunto de API: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly plotArea: Excel.ChartPlotArea;'
    return:
      type: <xref uid="excel!Excel.ChartPlotArea:class" />
- name: plotBy
  uid: excel!Excel.Chart#plotBy:member
  package: excel!
  fullName: plotBy
  summary: >-
    Especifica a forma como as colunas ou linhas são usadas como série de dados no gráfico.


    \[[Conjunto de API: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'plotBy: Excel.ChartPlotBy | "Rows" | "Columns";'
    return:
      type: <xref uid="excel!Excel.ChartPlotBy:enum" /> | "Rows" | "Columns"
- name: plotVisibleOnly
  uid: excel!Excel.Chart#plotVisibleOnly:member
  package: excel!
  fullName: plotVisibleOnly
  summary: >-
    Verdadeiro se apenas as células visíveis forem plotadas. Falso se ambas as células visíveis e ocultas forem plotadas..


    \[[Conjunto de API: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'plotVisibleOnly: boolean;'
    return:
      type: boolean
- name: series
  uid: excel!Excel.Chart#series:member
  package: excel!
  fullName: series
  summary: >-
    Representa uma única série ou uma coleção de séries no gráfico.


    \[[Conjunto de API: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly series: Excel.ChartSeriesCollection;'
    return:
      type: <xref uid="excel!Excel.ChartSeriesCollection:class" />
- name: seriesNameLevel
  uid: excel!Excel.Chart#seriesNameLevel:member
  package: excel!
  fullName: seriesNameLevel
  summary: >-
    Especifica uma constante de enumeração de nível de nome de série de gráfico, referindo-se ao nível dos nomes da série de origem.


    \[[Conjunto de API: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'seriesNameLevel: number;'
    return:
      type: number
- name: showAllFieldButtons
  uid: excel!Excel.Chart#showAllFieldButtons:member
  package: excel!
  fullName: showAllFieldButtons
  summary: >-
    Especifica se todos os botões de campo serão exibidos em um Gráfico Dinâmico.


    \[[Conjunto de API: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'showAllFieldButtons: boolean;'
    return:
      type: boolean
- name: showDataLabelsOverMaximum
  uid: excel!Excel.Chart#showDataLabelsOverMaximum:member
  package: excel!
  fullName: showDataLabelsOverMaximum
  summary: >-
    Especifica se os rótulos de dados serão indicados quando o valor for maior do que o valor máximo no eixo do valor. Se o eixo dos valores ficar menor do que o tamanho dos pontos de dados, você poderá usar essa propriedade para definir se os rótulos de dados serão mostrar. Essa propriedade se aplica somente a gráficos 2D.


    \[[Conjunto de API: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'showDataLabelsOverMaximum: boolean;'
    return:
      type: boolean
- name: style
  uid: excel!Excel.Chart#style:member
  package: excel!
  fullName: style
  summary: >-
    Especifica o estilo do gráfico para o gráfico.


    \[[Conjunto de API: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'style: number;'
    return:
      type: number
- name: title
  uid: excel!Excel.Chart#title:member
  package: excel!
  fullName: title
  summary: >-
    Representa o título do gráfico especificado, incluindo o respectivo texto, a visibilidade, a posição e a formatação.


    \[[Conjunto de API: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly title: Excel.ChartTitle;'
    return:
      type: <xref uid="excel!Excel.ChartTitle:class" />
- name: top
  uid: excel!Excel.Chart#top:member
  package: excel!
  fullName: top
  summary: >-
    Especifica a distância, em pontos, da borda superior do objeto até a parte superior da linha 1 (em uma planilha) ou a parte superior da área do gráfico (em um gráfico).


    \[[Conjunto de API: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'top: number;'
    return:
      type: number
- name: width
  uid: excel!Excel.Chart#width:member
  package: excel!
  fullName: width
  summary: >-
    Especifica a largura, em pontos, do objeto chart.


    \[[Conjunto de API: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'width: number;'
    return:
      type: number
- name: worksheet
  uid: excel!Excel.Chart#worksheet:member
  package: excel!
  fullName: worksheet
  summary: >-
    A planilha que contém o gráfico atual.


    \[[Conjunto de API: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly worksheet: Excel.Worksheet;'
    return:
      type: <xref uid="excel!Excel.Worksheet:class" />
methods:
- name: activate()
  uid: excel!Excel.Chart#activate:member(1)
  package: excel!
  fullName: activate()
  summary: >-
    Ativa o gráfico na interface do usuário do Excel.


    \[[Conjunto de API: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'activate(): void;'
    return:
      type: void
      description: ''
- name: delete()
  uid: excel!Excel.Chart#delete:member(1)
  package: excel!
  fullName: delete()
  summary: >-
    Exclui o objeto de gráfico.


    \[[Conjunto de API: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'delete(): void;'
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>Exemplos\n\n```javascript\nExcel.run(function (ctx) { \n    var chart = ctx.workbook.worksheets.getItem(\"Sheet1\").charts.getItem(\"Chart1\");    \n    chart.delete();\n    return ctx.sync(); \n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: getImage(width, height, fittingMode)
  uid: excel!Excel.Chart#getImage:member(1)
  package: excel!
  fullName: getImage(width, height, fittingMode)
  summary: >-
    Processa o gráfico como uma imagem codificada em base64, dimensionando o gráfico para se ajustar às dimensões especificadas. A taxa de proporção é preservada como parte do resizing.


    \[[Conjunto de API: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getImage(width?: number, height?: number, fittingMode?: Excel.ImageFittingMode): OfficeExtension.ClientResult<string>;'
    parameters:
    - id: width
      description: Opcional. A largura desejada da imagem resultante.
      type: number
    - id: height
      description: Opcional. A altura desejada da imagem resultante.
      type: number
    - id: fittingMode
      description: Opcional. O método usado para dimensionar o gráfico para as dimensões especificadas (se a altura e a largura estão definidas).
      type: <xref uid="excel!Excel.ImageFittingMode:enum" />
    return:
      type: <xref uid="office!OfficeExtension.ClientResult:class" />&lt;string&gt;
      description: "\n\n#### <a name=\"examples\"></a>Exemplos\n\n```javascript\nExcel.run(function (ctx) { \n    var chart = ctx.workbook.worksheets.getItem(\"Sheet1\").charts.getItem(\"Chart1\");    \n    var image = chart.getImage();\n    return ctx.sync(); \n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: getImage(width, height, fittingModeString)
  uid: excel!Excel.Chart#getImage:member(2)
  package: excel!
  fullName: getImage(width, height, fittingModeString)
  summary: >-
    Processa o gráfico como uma imagem codificada em base64, dimensionando o gráfico para se ajustar às dimensões especificadas. A taxa de proporção é preservada como parte do resizing.


    \[[Conjunto de API: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getImage(width?: number, height?: number, fittingModeString?: "Fit" | "FitAndCenter" | "Fill"): OfficeExtension.ClientResult<string>;'
    parameters:
    - id: width
      description: Opcional. A largura desejada da imagem resultante.
      type: number
    - id: height
      description: Opcional. A altura desejada da imagem resultante.
      type: number
    - id: fittingModeString
      description: Opcional. O método usado para dimensionar o gráfico para as dimensões especificadas (se a altura e a largura estão definidas).
      type: "\"Fit\" | \"FitAndCenter\" | \"Fill\""
    return:
      type: <xref uid="office!OfficeExtension.ClientResult:class" />&lt;string&gt;
      description: ''
- name: load(options)
  uid: excel!Excel.Chart#load:member(1)
  package: excel!
  fullName: load(options)
  summary: Coloca um comando na fila para carregar as propriedades especificadas do objeto. Você deve chamar `context.sync()` antes de ler as propriedades.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(options?: Excel.Interfaces.ChartLoadOptions): Excel.Chart;'
    parameters:
    - id: options
      description: Fornece opções para quais propriedades do objeto deve ser carregado.
      type: <xref uid="excel!Excel.Interfaces.ChartLoadOptions:interface" />
    return:
      type: <xref uid="excel!Excel.Chart:class" />
      description: ''
- name: load(propertyNames)
  uid: excel!Excel.Chart#load:member(2)
  package: excel!
  fullName: load(propertyNames)
  summary: Coloca um comando na fila para carregar as propriedades especificadas do objeto. Você deve chamar `context.sync()` antes de ler as propriedades.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.Chart;'
    parameters:
    - id: propertyNames
      description: Uma cadeia de caracteres delimitada por vírgulas ou uma matriz de cadeias de caracteres que especificam as propriedades a ser carregadas.
      type: string | string[]
    return:
      type: <xref uid="excel!Excel.Chart:class" />
      description: "\n\n#### <a name=\"examples\"></a>Exemplos\n\n```javascript\n// Get a chart named \"Chart1\"\nExcel.run(function (ctx) { \n    var chart = ctx.workbook.worksheets.getItem(\"Sheet1\").charts.getItem(\"Chart1\");    \n    chart.load('name');\n    return ctx.sync().then(function() {\n            console.log(chart.name);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: load(propertyNamesAndPaths)
  uid: excel!Excel.Chart#load:member(3)
  package: excel!
  fullName: load(propertyNamesAndPaths)
  summary: Coloca um comando na fila para carregar as propriedades especificadas do objeto. Você deve chamar `context.sync()` antes de ler as propriedades.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      load(propertyNamesAndPaths?: {
                  select?: string;
                  expand?: string;
              }): Excel.Chart;
    parameters:
    - id: propertyNamesAndPaths
      description: '`propertyNamesAndPaths.select` é uma cadeia de caracteres delimitada por vírgulas que especifica as propriedades a ser carregadas e é uma cadeia de caracteres delimitada por vírgulas que especifica as propriedades de navegação a `propertyNamesAndPaths.expand` ser carregadas.'
      type: >-
        {
                    select?: string;
                    expand?: string;
                }
    return:
      type: <xref uid="excel!Excel.Chart:class" />
      description: ''
- name: set(properties, options)
  uid: excel!Excel.Chart#set:member(1)
  package: excel!
  fullName: set(properties, options)
  summary: Define várias propriedades de um objeto ao mesmo tempo. Você pode passar um objeto simples com as propriedades apropriadas ou outro objeto API do mesmo tipo.
  remarks: >-
    Este método tem a seguinte assinatura adicional:


    `set(properties: Excel.Chart): void`
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(properties: Interfaces.ChartUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    parameters:
    - id: properties
      description: Um objeto JavaScript com propriedades estruturadas isomorficamente para as propriedades do objeto no qual o método é chamado.
      type: <xref uid="excel!Excel.Interfaces.ChartUpdateData:interface" />
    - id: options
      description: Fornece uma opção para suprimir erros se o objeto properties tentar definir qualquer propriedade somente leitura.
      type: <xref uid="office!OfficeExtension.UpdateOptions:interface" />
    return:
      type: void
      description: ''
- name: set(properties)
  uid: excel!Excel.Chart#set:member(2)
  package: excel!
  fullName: set(properties)
  summary: Define várias propriedades no objeto ao mesmo tempo, com base em um objeto carregado existente.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(properties: Excel.Chart): void;'
    parameters:
    - id: properties
      description: ''
      type: <xref uid="excel!Excel.Chart:class" />
    return:
      type: void
      description: ''
- name: setData(sourceData, seriesBy)
  uid: excel!Excel.Chart#setData:member(1)
  package: excel!
  fullName: setData(sourceData, seriesBy)
  summary: >-
    Redefine os dados de origem do gráfico.


    \[[Conjunto de API: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setData(sourceData: Range, seriesBy?: Excel.ChartSeriesBy): void;'
    parameters:
    - id: sourceData
      description: O objeto range correspondente aos dados de origem.
      type: <xref uid="excel!Excel.Range:class" />
    - id: seriesBy
      description: 'Especifica a forma como as colunas ou linhas são usadas como série de dados no gráfico. Pode ser um dos seguintes: Auto (padrão), Linhas e Colunas. Consulte `Excel.ChartSeriesBy` para obter detalhes.'
      type: <xref uid="excel!Excel.ChartSeriesBy:enum" />
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>Exemplos\n\n```javascript\n// Set the sourceData to be \"A1:B4\" and seriesBy to be \"Columns\"\nExcel.run(function (ctx) { \n    var chart = ctx.workbook.worksheets.getItem(\"Sheet1\").charts.getItem(\"Chart1\");    \n    var sourceData = \"A1:B4\";\n    chart.setData(sourceData, \"Columns\");\n    return ctx.sync(); \n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: setData(sourceData, seriesByString)
  uid: excel!Excel.Chart#setData:member(2)
  package: excel!
  fullName: setData(sourceData, seriesByString)
  summary: >-
    Redefine os dados de origem do gráfico.


    \[[Conjunto de API: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setData(sourceData: Range, seriesByString?: "Auto" | "Columns" | "Rows"): void;'
    parameters:
    - id: sourceData
      description: O objeto range correspondente aos dados de origem.
      type: <xref uid="excel!Excel.Range:class" />
    - id: seriesByString
      description: 'Especifica a forma como as colunas ou linhas são usadas como série de dados no gráfico. Pode ser um dos seguintes: Auto (padrão), Linhas e Colunas. Consulte `Excel.ChartSeriesBy` para obter detalhes.'
      type: "\"Auto\" | \"Columns\" | \"Rows\""
    return:
      type: void
      description: ''
- name: setPosition(startCell, endCell)
  uid: excel!Excel.Chart#setPosition:member(1)
  package: excel!
  fullName: setPosition(startCell, endCell)
  summary: >-
    Posiciona o gráfico em relação às células na planilha.


    \[[Conjunto de API: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setPosition(startCell: Range | string, endCell?: Range | string): void;'
    parameters:
    - id: startCell
      description: A célula inicial. Esse é o local para o qual o gráfico será movido. A célula inicial é a célula superior esquerda ou direita, dependendo das configurações de exibição do usuário, da esquerda para a direita.
      type: <xref uid="excel!Excel.Range:class" /> | string
    - id: endCell
      description: Opcional. A célula final. Quando é especificada, a altura e a largura do gráfico são definidas para cobrirem totalmente essa célula ou intervalo.
      type: <xref uid="excel!Excel.Range:class" /> | string
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>Exemplos\n\n```javascript\nExcel.run(function (ctx) { \n    var sheetName = \"Charts\";\n    var rangeSelection = \"A1:B4\";\n    var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeSelection);\n    var sourceData = sheetName + \"!\" + \"A1:B4\";\n    var chart = ctx.workbook.worksheets.getItem(sheetName).charts.add(\"pie\", range, \"auto\");\n    chart.width = 500;\n    chart.height = 300;\n    chart.setPosition(\"C2\", null);\n    return ctx.sync(); \n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: toJSON()
  uid: excel!Excel.Chart#toJSON:member(1)
  package: excel!
  fullName: toJSON()
  summary: Substitui o método JavaScript `toJSON()` para fornecer uma saída mais útil quando um objeto API é passado para `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, por sua vez, chama `toJSON` o método do objeto que é passado a ele.) Enquanto a versão original Excel. Objeto Chart é um objeto API, `toJSON` o método retorna um objeto JavaScript simples (digitado como`Excel.Interfaces.ChartData`<!-- -->) que contém cópias rasas de quaisquer propriedades filho carregadas do objeto original.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'toJSON(): Excel.Interfaces.ChartData;'
    return:
      type: <xref uid="excel!Excel.Interfaces.ChartData:interface" />
      description: ''
events:
- name: onActivated
  uid: excel!Excel.Chart#onActivated:member
  package: excel!
  fullName: onActivated
  summary: >-
    Ocorre quando o gráfico é ativado.


    \[[Conjunto de API: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly onActivated: OfficeExtension.EventHandlers<Excel.ChartActivatedEventArgs>;'
    return:
      type: <xref uid="office!OfficeExtension.EventHandlers:class" />&lt;<xref uid="excel!Excel.ChartActivatedEventArgs:interface" />&gt;
      description: "\n\n#### <a name=\"examples\"></a>Exemplos\n\n```javascript\nExcel.run(function (context){\n    var pieChart = context.workbook.worksheets.getActiveWorksheet().charts.getItem(\"Pie\");\n    pieChart.onActivated.add(function (event) {\n        return Excel.run(function (context) {\n            console.log(\"The pie chart is the active chart. ID: \" + event.chartId);\n            return context.sync();\n        });\n    });\n    return context.sync();\n});\n```\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/excel/30-events/events-chart-activated.yaml\nawait Excel.run(async (context) => {\n\n    const pieChart = context.workbook.worksheets.getActiveWorksheet().charts.getItem(\"Pie\");\n\n    // Register the onActivated and onDeactivated event handlers.\n    pieChart.onActivated.add(chartActivated);\n    pieChart.onDeactivated.add(chartDeactivated);\n\n    await context.sync();\n\n    console.log(\"Added handlers for Chart onActivated and onDeactivated events.\");\n});\n```\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/excel/30-events/events-chart-activated.yaml\nasync function chartActivated(event) {\n    await Excel.run(async (context) => {\n        // Retrieve the worksheet.\n        const sheet = context.workbook.worksheets.getActiveWorksheet();\n\n        // Retrieve the activated chart by ID and load the name of the chart. \n        const activatedChart = sheet.charts.getItem(event.chartId);\n        activatedChart.load([\"name\"]);\n        await context.sync();\n\n        // Print out the activated chart's data.\n        console.log(`A chart was activated. ID: ${event.chartId}. Chart name: ${activatedChart.name}.`);\n    });\n}\n```"
- name: onDeactivated
  uid: excel!Excel.Chart#onDeactivated:member
  package: excel!
  fullName: onDeactivated
  summary: >-
    Ocorre quando o gráfico é desativado.


    \[[Conjunto de API: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly onDeactivated: OfficeExtension.EventHandlers<Excel.ChartDeactivatedEventArgs>;'
    return:
      type: <xref uid="office!OfficeExtension.EventHandlers:class" />&lt;<xref uid="excel!Excel.ChartDeactivatedEventArgs:interface" />&gt;
      description: "\n\n#### <a name=\"examples\"></a>Exemplos\n\n```javascript\nExcel.run(function (context){\n    var pieChart = context.workbook.worksheets.getActiveWorksheet().charts.getItem(\"Pie\");\n    pieChart.onDeactivated.add(function (event) {\n        return Excel.run(function (context) {\n            console.log(\"The pie chart is NOT active.\");\n            return context.sync();\n        });\n    });\n    return context.sync();\n});\n```"
extends: <xref uid="office!OfficeExtension.ClientObject:class" />
metadata:
  ms.openlocfilehash: fd7cf613a449a46daba340f7a678f754c3eeb588
  ms.sourcegitcommit: 319b8cca7d91e51669407633dacc02ea6e4f4338
  ms.translationtype: MT
  ms.contentlocale: pt-BR
  ms.lasthandoff: 06/18/2021
  ms.locfileid: "53010090"
