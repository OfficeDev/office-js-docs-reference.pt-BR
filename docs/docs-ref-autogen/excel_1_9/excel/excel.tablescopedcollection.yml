### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.TableScopedCollection:class'
    summary: |-
      <span data-ttu-id="10057-101">Representa uma coleção com escopo de tabelas.</span><span class="sxs-lookup"><span data-stu-id="10057-101">Represents a scoped collection of tables.</span></span> <span data-ttu-id="10057-102">Para cada tabela, o seu canto superior esquerdo é considerado seu local de âncora e as tabelas são classificadas de cima para baixo e da esquerda para a direita.</span><span class="sxs-lookup"><span data-stu-id="10057-102">For each table its top-left corner is considered its anchor location and the tables are sorted top to bottom and then left to right.</span></span>

      <span data-ttu-id="10057-103">\[[Conjunto de APIs: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="10057-103">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.TableScopedCollection
    fullName: Excel.TableScopedCollection
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.TableScopedCollection#context:member'
      - 'excel!Excel.TableScopedCollection#getCount:member(1)'
      - 'excel!Excel.TableScopedCollection#getFirst:member(1)'
      - 'excel!Excel.TableScopedCollection#getItem:member(1)'
      - 'excel!Excel.TableScopedCollection#items:member'
      - 'excel!Excel.TableScopedCollection#load:member(1)'
      - 'excel!Excel.TableScopedCollection#load:member(2)'
      - 'excel!Excel.TableScopedCollection#load:member(3)'
      - 'excel!Excel.TableScopedCollection#toJSON:member(1)'
  - uid: 'excel!Excel.TableScopedCollection#context:member'
    summary: <span data-ttu-id="10057-104">O contexto de solicitação associado ao objeto.</span><span class="sxs-lookup"><span data-stu-id="10057-104">The request context associated with the object.</span></span> <span data-ttu-id="10057-105">Isso conecta o processo do suplemento ao processo do aplicativo host do Office.</span><span class="sxs-lookup"><span data-stu-id="10057-105">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.TableScopedCollection#getCount:member(1)'
    summary: |-
      <span data-ttu-id="10057-106">Obtém o número de tabelas na coleção.</span><span class="sxs-lookup"><span data-stu-id="10057-106">Gets the number of tables in the collection.</span></span>

      <span data-ttu-id="10057-107">\[[Conjunto de APIs: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="10057-107">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - 'excel!Excel.TableScopedCollection#getCount~0:complex'
        description: ''
  - uid: 'excel!Excel.TableScopedCollection#getFirst:member(1)'
    summary: |-
      <span data-ttu-id="10057-108">Obtém a primeira tabela na coleção.</span><span class="sxs-lookup"><span data-stu-id="10057-108">Gets the first table in the collection.</span></span> <span data-ttu-id="10057-109">As tabelas na coleção são classificadas de cima para baixo e da esquerda para a direita, de forma que a tabela superior esquerda seja a primeira tabela da coleção.</span><span class="sxs-lookup"><span data-stu-id="10057-109">The tables in the collection are sorted top to bottom and left to right, such that top left table is the first table in the collection.</span></span>

      <span data-ttu-id="10057-110">\[[Conjunto de APIs: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="10057-110">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getFirst()
    fullName: getFirst()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getFirst(): Excel.Table;'
      return:
        type:
          - 'excel!Excel.Table:class'
        description: ''
  - uid: 'excel!Excel.TableScopedCollection#getItem:member(1)'
    summary: |-
      <span data-ttu-id="10057-111">Obtém uma tabela pelo nome ou ID.</span><span class="sxs-lookup"><span data-stu-id="10057-111">Gets a table by Name or ID.</span></span>

      <span data-ttu-id="10057-112">\[[Conjunto de APIs: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="10057-112">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItem(key)
    fullName: getItem(key)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(key: string): Excel.Table;'
      return:
        type:
          - 'excel!Excel.Table:class'
        description: ''
      parameters:
        - id: key
          description: <span data-ttu-id="10057-113">Nome ou ID da tabela a ser recuperada.</span><span class="sxs-lookup"><span data-stu-id="10057-113">Name or ID of the table to be retrieved.</span></span>
          type:
            - string
  - uid: 'excel!Excel.TableScopedCollection#items:member'
    summary: <span data-ttu-id="10057-114">Obtém os itens filhos carregados nesta coleção.</span><span class="sxs-lookup"><span data-stu-id="10057-114">Gets the loaded child items in this collection.</span></span>
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.Table[];'
      return:
        type:
          - 'excel!Excel.TableScopedCollection#items~0:complex'
  - uid: 'excel!Excel.TableScopedCollection#load:member(1)'
    summary: <span data-ttu-id="10057-115">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="10057-115">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="10057-116">Você deve chamar "context.sync()" antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="10057-116">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="10057-117">Além dessa assinatura, este método tem as seguintes assinaturas:</span><span class="sxs-lookup"><span data-stu-id="10057-117">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="10057-118">`load(option?: string | string[]): Excel.TableScopedCollection`-Where Option é uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="10057-118">`load(option?: string | string[]): Excel.TableScopedCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="10057-119">`load(option?: { select?: string; expand?: string; }): Excel.TableScopedCollection`-Onde Option. Select é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades a serem carregadas, e Options. Expand é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades de navegação a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="10057-119">`load(option?: { select?: string; expand?: string; }): Excel.TableScopedCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="10057-120">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TableScopedCollection`– Disponível somente nos tipos de coleção.</span><span class="sxs-lookup"><span data-stu-id="10057-120">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TableScopedCollection` - Only available on collection types.</span></span> <span data-ttu-id="10057-121">É semelhante à assinatura anterior.</span><span class="sxs-lookup"><span data-stu-id="10057-121">It is similar to the preceding signature.</span></span> <span data-ttu-id="10057-122">Option. Top especifica o número máximo de itens de coleta que podem ser incluídos no resultado.</span><span class="sxs-lookup"><span data-stu-id="10057-122">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="10057-123">Option. Skip especifica o número de itens que devem ser ignorados e não incluídos no resultado.</span><span class="sxs-lookup"><span data-stu-id="10057-123">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="10057-124">Se Option. Top for especificado, o conjunto de resultados será iniciado depois de ignorar o número de itens especificado.</span><span class="sxs-lookup"><span data-stu-id="10057-124">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.TableScopedCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.TableScopedCollection;'
      return:
        type:
          - 'excel!Excel.TableScopedCollection:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'excel!Excel.TableScopedCollection#load~0:complex'
  - uid: 'excel!Excel.TableScopedCollection#load:member(2)'
    summary: <span data-ttu-id="10057-125">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="10057-125">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="10057-126">Você deve chamar `context.sync()` antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="10057-126">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.TableScopedCollection;'
      return:
        type:
          - 'excel!Excel.TableScopedCollection:class'
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="10057-127">Uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="10057-127">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.TableScopedCollection#load:member(3)'
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): Excel.TableScopedCollection;'
      return:
        type:
          - 'excel!Excel.TableScopedCollection:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'excel!OfficeExtension.LoadOption:interface'
  - uid: 'excel!Excel.TableScopedCollection#toJSON:member(1)'
    summary: '<span data-ttu-id="10057-128">Substitui o método `toJSON()` JavaScript para fornecer uma saída mais útil quando um objeto API é passado para`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="10057-128">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="10057-129">.</span><span class="sxs-lookup"><span data-stu-id="10057-129"></span></span> <span data-ttu-id="10057-130">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="10057-130"></span></span><!-- --><span data-ttu-id="10057-131">, por sua vez, chama `toJSON` o método do objeto que é passado para ele.) Enquanto o objeto `Excel.TableScopedCollection` original é um objeto API, o `toJSON` método retorna um objeto JavaScript simples (digitado como`Excel.Interfaces.TableScopedCollectionData`</span><span class="sxs-lookup"><span data-stu-id="10057-131">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.TableScopedCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.TableScopedCollectionData`</span></span><!-- --><span data-ttu-id="10057-132">) que contém uma matriz de "itens" com cópias superficiais de qualquer propriedade carregada dos itens da coleção.</span><span class="sxs-lookup"><span data-stu-id="10057-132">) that contains an "items" array with shallow copies of any loaded properties from the collection''s items.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.TableScopedCollectionData;'
      return:
        type:
          - 'excel!Excel.Interfaces.TableScopedCollectionData:interface'
        description: ''
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.TableScopedCollection#getCount~0:complex'
    name: OfficeExtension.ClientResult<number>
    fullName: OfficeExtension.ClientResult<number>
    spec.typeScript:
      - uid: 'excel!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <number>
        fullName: <number>
  - uid: 'excel!Excel.Table:class'
    name: Excel.Table
  - uid: 'excel!Excel.TableScopedCollection#items~0:complex'
    name: 'Excel.Table[]'
    fullName: 'Excel.Table[]'
    spec.typeScript:
      - uid: 'excel!Excel.Table:class'
        name: Excel.Table
        fullName: Excel.Table
      - name: '[]'
        fullName: '[]'
  - uid: 'excel!Excel.TableScopedCollection:class'
    name: Excel.TableScopedCollection
  - uid: 'excel!Excel.TableScopedCollection#load~0:complex'
    name: Excel.Interfaces.TableScopedCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    fullName: Excel.Interfaces.TableScopedCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    spec.typeScript:
      - uid: 'excel!Excel.Interfaces.TableScopedCollectionLoadOptions:interface'
        name: Excel.Interfaces.TableScopedCollectionLoadOptions
        fullName: Excel.Interfaces.TableScopedCollectionLoadOptions
      - name: ' & '
        fullName: ' & '
      - uid: 'excel!Excel.Interfaces.CollectionLoadOptions:interface'
        name: Excel.Interfaces.CollectionLoadOptions
        fullName: Excel.Interfaces.CollectionLoadOptions
  - uid: 'excel!OfficeExtension.LoadOption:interface'
    name: OfficeExtension.LoadOption
  - uid: 'excel!Excel.Interfaces.TableScopedCollectionData:interface'
    name: Excel.Interfaces.TableScopedCollectionData