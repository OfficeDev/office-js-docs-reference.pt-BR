### YamlMime:UniversalReference
items:
  - uid: excel.Excel.IconSetConditionalFormat
    summary: |-
      <span data-ttu-id="153f4-101">Representa um critério Iconset para formatação condicional.</span><span class="sxs-lookup"><span data-stu-id="153f4-101">Represents an IconSet criteria for conditional formatting.</span></span>

      <span data-ttu-id="153f4-102">\[[Conjunto de APIs: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="153f4-102">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.IconSetConditionalFormat
    fullName: Excel.IconSetConditionalFormat
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: excel
    children:
      - excel.Excel.IconSetConditionalFormat.context
      - excel.Excel.IconSetConditionalFormat.criteria
      - excel.Excel.IconSetConditionalFormat.load
      - excel.Excel.IconSetConditionalFormat.load_1
      - excel.Excel.IconSetConditionalFormat.load_2
      - excel.Excel.IconSetConditionalFormat.reverseIconOrder
      - excel.Excel.IconSetConditionalFormat.set
      - excel.Excel.IconSetConditionalFormat.set_1
      - excel.Excel.IconSetConditionalFormat.showIconOnly
      - excel.Excel.IconSetConditionalFormat.style
      - excel.Excel.IconSetConditionalFormat.toJSON
  - uid: excel.Excel.IconSetConditionalFormat.context
    summary: <span data-ttu-id="153f4-103">O contexto de solicitação associado ao objeto.</span><span class="sxs-lookup"><span data-stu-id="153f4-103">The request context associated with the object.</span></span> <span data-ttu-id="153f4-104">Isso conecta o processo do suplemento ao processo do aplicativo host do Office.</span><span class="sxs-lookup"><span data-stu-id="153f4-104">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - excel.Excel.RequestContext
  - uid: excel.Excel.IconSetConditionalFormat.criteria
    summary: |-
      <span data-ttu-id="153f4-105">Uma matriz de critérios e IconSets para as regras e possíveis ícones personalizados para ícones condicionais.</span><span class="sxs-lookup"><span data-stu-id="153f4-105">An array of Criteria and IconSets for the rules and potential custom icons for conditional icons.</span></span> <span data-ttu-id="153f4-106">Observe que, para o primeiro critério, apenas o ícone personalizado pode ser modificado, enquanto Type, Formula e Operator serão ignorados quando set.</span><span class="sxs-lookup"><span data-stu-id="153f4-106">Note that for the first criterion only the custom icon can be modified, while type, formula, and operator will be ignored when set.</span></span>

      <span data-ttu-id="153f4-107">\[[Conjunto de APIs: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="153f4-107">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: criteria
    fullName: criteria
    langs:
      - typeScript
    type: property
    syntax:
      content: 'criteria: Excel.ConditionalIconCriterion[];'
      return:
        type:
          - 'Excel.ConditionalIconCriterion[]'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="153f4-108">Exemplos</span><span class="sxs-lookup"><span data-stu-id="153f4-108">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Sample");
              const range = sheet.getRange("B8:E13");
              const conditionalFormat = range.conditionalFormats
                  .add(Excel.ConditionalFormatType.iconSet);
              const iconSetCF = conditionalFormat.iconSet;
              iconSetCF.style = Excel.IconSet.threeTriangles;

              /*
                  The iconSetCF.criteria array is automatically prepopulated with
                  criterion elements whose properties have been given default settings.
                  You can't write to each property of a criterion directly. Instead,
                  replace the whole criteria object.

                  With a "three*" icon set style, such as "threeTriangles", the third
                  element in the criteria array (criteria[2]) defines the "top" icon;
                  e.g., a green triangle. The second (criteria[1]) defines the "middle"
                  icon, The first (criteria[0]) defines the "low" icon, but it
                  can often be left empty as this method does below, because every
                  cell that does not match the other two criteria always gets the low
                  icon.            
              */
              iconSetCF.criteria = [
                  {} as any,
                  {
                      type: Excel.ConditionalFormatIconRuleType.number,
                      operator: Excel.ConditionalIconCriterionOperator.greaterThanOrEqual,
                      formula: "=700"
                  },
                  {
                      type: Excel.ConditionalFormatIconRuleType.number,
                      operator: Excel.ConditionalIconCriterionOperator.greaterThanOrEqual,
                      formula: "=1000",
                  }
              ];

              await context.sync();
          });
          ```
  - uid: excel.Excel.IconSetConditionalFormat.load
    summary: <span data-ttu-id="153f4-109">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="153f4-109">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="153f4-110">Você deve chamar "context.sync()" antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="153f4-110">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="153f4-111">Além dessa assinatura, este método tem as seguintes assinaturas:</span><span class="sxs-lookup"><span data-stu-id="153f4-111">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="153f4-112">`load(option?: string | string[]): Excel.IconSetConditionalFormat`-Where Option é uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="153f4-112">`load(option?: string | string[]): Excel.IconSetConditionalFormat` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="153f4-113">`load(option?: { select?: string; expand?: string; }): Excel.IconSetConditionalFormat`-Onde Option. Select é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades a serem carregadas, e Options. Expand é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades de navegação a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="153f4-113">`load(option?: { select?: string; expand?: string; }): Excel.IconSetConditionalFormat` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="153f4-114">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.IconSetConditionalFormat`– Disponível somente nos tipos de coleção.</span><span class="sxs-lookup"><span data-stu-id="153f4-114">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.IconSetConditionalFormat` - Only available on collection types.</span></span> <span data-ttu-id="153f4-115">É semelhante à assinatura anterior.</span><span class="sxs-lookup"><span data-stu-id="153f4-115">It is similar to the preceding signature.</span></span> <span data-ttu-id="153f4-116">Option. Top especifica o número máximo de itens de coleta que podem ser incluídos no resultado.</span><span class="sxs-lookup"><span data-stu-id="153f4-116">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="153f4-117">Option. Skip especifica o número de itens que devem ser ignorados e não incluídos no resultado.</span><span class="sxs-lookup"><span data-stu-id="153f4-117">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="153f4-118">Se Option. Top for especificado, o conjunto de resultados será iniciado depois de ignorar o número de itens especificado.</span><span class="sxs-lookup"><span data-stu-id="153f4-118">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.IconSetConditionalFormatLoadOptions): Excel.IconSetConditionalFormat;'
      return:
        type:
          - excel.Excel.IconSetConditionalFormat
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.IconSetConditionalFormatLoadOptions
  - uid: excel.Excel.IconSetConditionalFormat.load_1
    summary: <span data-ttu-id="153f4-119">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="153f4-119">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="153f4-120">Você deve chamar `context.sync()` antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="153f4-120">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.IconSetConditionalFormat;'
      return:
        type:
          - excel.Excel.IconSetConditionalFormat
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="153f4-121">Uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="153f4-121">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: excel.Excel.IconSetConditionalFormat.load_2
    summary: <span data-ttu-id="153f4-122">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="153f4-122">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="153f4-123">Você deve chamar `context.sync()` antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="153f4-123">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.IconSetConditionalFormat;'
      return:
        type:
          - excel.Excel.IconSetConditionalFormat
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="153f4-124">Onde propertyNamesAndPaths. Select é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades a serem carregadas e propertyNamesAndPaths. Expand é uma sequência de caracteres delimitada por vírgula que especifica as propriedades de navegação a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="153f4-124">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel.Excel.IconSetConditionalFormat.reverseIconOrder
    summary: |-
      <span data-ttu-id="153f4-125">Se true, inverte as ordens de ícone para o Iconset.</span><span class="sxs-lookup"><span data-stu-id="153f4-125">If true, reverses the icon orders for the IconSet.</span></span> <span data-ttu-id="153f4-126">Observe que isso não poderá ser definido se os ícones personalizados forem usados.</span><span class="sxs-lookup"><span data-stu-id="153f4-126">Note that this cannot be set if custom icons are used.</span></span>

      <span data-ttu-id="153f4-127">\[[Conjunto de APIs: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="153f4-127">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: reverseIconOrder
    fullName: reverseIconOrder
    langs:
      - typeScript
    type: property
    syntax:
      content: 'reverseIconOrder: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.IconSetConditionalFormat.set
    summary: '<span data-ttu-id="153f4-128">Define várias propriedades de um objeto ao mesmo tempo.</span><span class="sxs-lookup"><span data-stu-id="153f4-128">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="153f4-129">Você pode passar um objeto simples com as propriedades apropriadas ou outro objeto API do mesmo tipo.</span><span class="sxs-lookup"><span data-stu-id="153f4-129">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="153f4-130">Este método tem a seguinte assinatura adicional:</span><span class="sxs-lookup"><span data-stu-id="153f4-130">This method has the following additional signature:</span></span>

      `set(properties: Excel.IconSetConditionalFormat): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.IconSetConditionalFormatUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="153f4-131">Um objeto JavaScript com propriedades que são estruturadas isomorphically para as propriedades do objeto no qual o método é chamado.</span><span class="sxs-lookup"><span data-stu-id="153f4-131">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - Interfaces.IconSetConditionalFormatUpdateData
        - id: options
          description: <span data-ttu-id="153f4-132">Fornece uma opção para suprimir erros se o objeto Properties tentar definir qualquer propriedade somente leitura.</span><span class="sxs-lookup"><span data-stu-id="153f4-132">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - OfficeExtension.UpdateOptions
  - uid: excel.Excel.IconSetConditionalFormat.set_1
    summary: '<span data-ttu-id="153f4-133">Define várias propriedades no objeto ao mesmo tempo, com base em um objeto carregado existente.</span><span class="sxs-lookup"><span data-stu-id="153f4-133">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.IconSetConditionalFormat): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - excel.Excel.IconSetConditionalFormat
  - uid: excel.Excel.IconSetConditionalFormat.showIconOnly
    summary: |-
      <span data-ttu-id="153f4-134">Caso verdadeiro, oculta os valores e mostra somente ícones.</span><span class="sxs-lookup"><span data-stu-id="153f4-134">If true, hides the values and only shows icons.</span></span>

      <span data-ttu-id="153f4-135">\[[Conjunto de APIs: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="153f4-135">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: showIconOnly
    fullName: showIconOnly
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showIconOnly: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.IconSetConditionalFormat.style
    summary: |-
      <span data-ttu-id="153f4-136">Se definido, exibe a opção Iconset para o formato condicional.</span><span class="sxs-lookup"><span data-stu-id="153f4-136">If set, displays the IconSet option for the conditional format.</span></span>

      <span data-ttu-id="153f4-137">\[[Conjunto de APIs: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="153f4-137">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: style
    fullName: style
    langs:
      - typeScript
    type: property
    syntax:
      content: 'style: Excel.IconSet | "Invalid" | "ThreeArrows" | "ThreeArrowsGray" | "ThreeFlags" | "ThreeTrafficLights1" | "ThreeTrafficLights2" | "ThreeSigns" | "ThreeSymbols" | "ThreeSymbols2" | "FourArrows" | "FourArrowsGray" | "FourRedToBlack" | "FourRating" | "FourTrafficLights" | "FiveArrows" | "FiveArrowsGray" | "FiveRating" | "FiveQuarters" | "ThreeStars" | "ThreeTriangles" | "FiveBoxes" | "LinkedEntityFinanceIcon" | "LinkedEntityMapIcon";'
      return:
        type:
          - Excel.IconSet | "Invalid" | "ThreeArrows" | "ThreeArrowsGray" | "ThreeFlags" | "ThreeTrafficLights1" | "ThreeTrafficLights2" | "ThreeSigns" | "ThreeSymbols" | "ThreeSymbols2" | "FourArrows" | "FourArrowsGray" | "FourRedToBlack" | "FourRating" | "FourTrafficLights" | "FiveArrows" | "FiveArrowsGray" | "FiveRating" | "FiveQuarters" | "ThreeStars" | "ThreeTriangles" | "FiveBoxes" | "LinkedEntityFinanceIcon" | "LinkedEntityMapIcon"
        description: |-


          #### <a name="examples"></a><span data-ttu-id="153f4-138">Exemplos</span><span class="sxs-lookup"><span data-stu-id="153f4-138">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Sample");
              const range = sheet.getRange("B8:E13");
              const conditionalFormat = range.conditionalFormats
                  .add(Excel.ConditionalFormatType.iconSet);
              const iconSetCF = conditionalFormat.iconSet;
              iconSetCF.style = Excel.IconSet.threeTriangles;

              /*
                  The iconSetCF.criteria array is automatically prepopulated with
                  criterion elements whose properties have been given default settings.
                  You can't write to each property of a criterion directly. Instead,
                  replace the whole criteria object.

                  With a "three*" icon set style, such as "threeTriangles", the third
                  element in the criteria array (criteria[2]) defines the "top" icon;
                  e.g., a green triangle. The second (criteria[1]) defines the "middle"
                  icon, The first (criteria[0]) defines the "low" icon, but it
                  can often be left empty as this method does below, because every
                  cell that does not match the other two criteria always gets the low
                  icon.            
              */
              iconSetCF.criteria = [
                  {} as any,
                  {
                      type: Excel.ConditionalFormatIconRuleType.number,
                      operator: Excel.ConditionalIconCriterionOperator.greaterThanOrEqual,
                      formula: "=700"
                  },
                  {
                      type: Excel.ConditionalFormatIconRuleType.number,
                      operator: Excel.ConditionalIconCriterionOperator.greaterThanOrEqual,
                      formula: "=1000",
                  }
              ];

              await context.sync();
          });
          ```
  - uid: excel.Excel.IconSetConditionalFormat.toJSON
    summary: '<span data-ttu-id="153f4-139">Substitui o método `toJSON()` JavaScript para fornecer uma saída mais útil quando um objeto API é passado para`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="153f4-139">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="153f4-140">.</span><span class="sxs-lookup"><span data-stu-id="153f4-140"></span></span> <span data-ttu-id="153f4-141">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="153f4-141"></span></span><!-- --><span data-ttu-id="153f4-142">, por sua vez, chama `toJSON` o método do objeto que é passado para ele.) Enquanto o objeto Excel. IconSetConditionalFormat original é um objeto API, o `toJSON` método retorna um objeto JavaScript simples (digitado como`Excel.Interfaces.IconSetConditionalFormatData`</span><span class="sxs-lookup"><span data-stu-id="153f4-142">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.IconSetConditionalFormat object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.IconSetConditionalFormatData`</span></span><!-- --><span data-ttu-id="153f4-143">) que contém cópias superficiais de qualquer propriedade filho carregada do objeto original.</span><span class="sxs-lookup"><span data-stu-id="153f4-143">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.IconSetConditionalFormatData;'
      return:
        type:
          - excel.Excel.Interfaces.IconSetConditionalFormatData
        description: ''