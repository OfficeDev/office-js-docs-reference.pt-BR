### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.TableColumnCollection:class'
    summary: |-
      <span data-ttu-id="628ee-101">Representa uma coleção de todas as colunas que fazem parte da tabela.</span><span class="sxs-lookup"><span data-stu-id="628ee-101">Represents a collection of all the columns that are part of the table.</span></span>

      <span data-ttu-id="628ee-102">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="628ee-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.TableColumnCollection
    fullName: Excel.TableColumnCollection
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.TableColumnCollection#add:member(1)'
      - 'excel!Excel.TableColumnCollection#context:member'
      - 'excel!Excel.TableColumnCollection#count:member'
      - 'excel!Excel.TableColumnCollection#getCount:member(1)'
      - 'excel!Excel.TableColumnCollection#getItem:member(1)'
      - 'excel!Excel.TableColumnCollection#getItemAt:member(1)'
      - 'excel!Excel.TableColumnCollection#getItemOrNullObject:member(1)'
      - 'excel!Excel.TableColumnCollection#items:member'
      - 'excel!Excel.TableColumnCollection#load:member(1)'
      - 'excel!Excel.TableColumnCollection#load:member(2)'
      - 'excel!Excel.TableColumnCollection#load:member(3)'
      - 'excel!Excel.TableColumnCollection#toJSON:member(1)'
  - uid: 'excel!Excel.TableColumnCollection#add:member(1)'
    summary: |-
      <span data-ttu-id="628ee-103">Adiciona uma nova coluna à tabela.</span><span class="sxs-lookup"><span data-stu-id="628ee-103">Adds a new column to the table.</span></span>

      <span data-ttu-id="628ee-104">\[[Conjunto de APIs: ExcelApi 1,1 requer um índice menor que a contagem total de colunas; 1,4 permite que o índice seja opcional (nulo ou-1) e acrescentará uma coluna no final; 1,4 permite o parâmetro Name no momento da criação.](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)</span><span class="sxs-lookup"><span data-stu-id="628ee-104">\[ [API set: ExcelApi 1.1 requires an index smaller than the total column count; 1.4 allows index to be optional (null or -1) and will append a column at the end; 1.4 allows name parameter at creation time.](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)</span></span> <span data-ttu-id="628ee-105">\]</span><span class="sxs-lookup"><span data-stu-id="628ee-105"></span></span>
    name: 'add(index, values, name)'
    fullName: 'add(index, values, name)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(index?: number, values?: Array<Array<boolean | string | number>> | boolean | string | number, name?: string): Excel.TableColumn;'
      return:
        type:
          - 'excel!Excel.TableColumn:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="628ee-106">Exemplos</span><span class="sxs-lookup"><span data-stu-id="628ee-106">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tables = ctx.workbook.tables;
              var values = [["Sample"], ["Values"], ["For"], ["New"], ["Column"]];
              var column = tables.getItem("Table1").columns.add(null, values);
              column.load('name');
              return ctx.sync().then(function() {
                  console.log(column.name);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: index
          description: '<span data-ttu-id="628ee-p102">Opcional. Especifica a posição relativa da nova coluna. Se for null ou -1, a adição ocorre no final. Colunas com um índice superior serão deslocadas para o lado. Indexado com zero.</span><span class="sxs-lookup"><span data-stu-id="628ee-p102">Optional. Specifies the relative position of the new column. If null or -1, the addition happens at the end. Columns with a higher index will be shifted to the side. Zero-indexed.</span></span>'
          type:
            - number
        - id: values
          description: <span data-ttu-id="628ee-112">Opcional.</span><span class="sxs-lookup"><span data-stu-id="628ee-112">Optional.</span></span> <span data-ttu-id="628ee-113">Uma matriz bidimensional de valores não formatados da coluna da tabela.</span><span class="sxs-lookup"><span data-stu-id="628ee-113">A 2-dimensional array of unformatted values of the table column.</span></span>
          type:
            - 'excel!Excel.TableColumnCollection#add~0:complex'
        - id: name
          description: '<span data-ttu-id="628ee-114">Opcional.</span><span class="sxs-lookup"><span data-stu-id="628ee-114">Optional.</span></span> <span data-ttu-id="628ee-115">Especifica o nome da nova coluna.</span><span class="sxs-lookup"><span data-stu-id="628ee-115">Specifies the name of the new column.</span></span> <span data-ttu-id="628ee-116">Se for null, o nome padrão será usado.</span><span class="sxs-lookup"><span data-stu-id="628ee-116">If null, the default name will be used.</span></span>'
          type:
            - string
  - uid: 'excel!Excel.TableColumnCollection#context:member'
    summary: <span data-ttu-id="628ee-117">O contexto de solicitação associado ao objeto.</span><span class="sxs-lookup"><span data-stu-id="628ee-117">The request context associated with the object.</span></span> <span data-ttu-id="628ee-118">Isso conecta o processo do suplemento ao processo do aplicativo host do Office.</span><span class="sxs-lookup"><span data-stu-id="628ee-118">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.TableColumnCollection#count:member'
    summary: |-
      <span data-ttu-id="628ee-119">Retorna o número de colunas na tabela.</span><span class="sxs-lookup"><span data-stu-id="628ee-119">Returns the number of columns in the table.</span></span> <span data-ttu-id="628ee-120">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="628ee-120">Read-only.</span></span>

      <span data-ttu-id="628ee-121">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="628ee-121">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: count
    fullName: count
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly count: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.TableColumnCollection#getCount:member(1)'
    summary: |-
      <span data-ttu-id="628ee-122">Obtém a quantidade de colunas na tabela.</span><span class="sxs-lookup"><span data-stu-id="628ee-122">Gets the number of columns in the table.</span></span>

      <span data-ttu-id="628ee-123">\[[Conjunto de APIs: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="628ee-123">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - 'excel!Excel.TableColumnCollection#getCount~0:complex'
        description: ''
  - uid: 'excel!Excel.TableColumnCollection#getItem:member(1)'
    summary: |-
      <span data-ttu-id="628ee-124">Obtém um objeto de coluna por nome ou ID.</span><span class="sxs-lookup"><span data-stu-id="628ee-124">Gets a column object by Name or ID.</span></span>

      <span data-ttu-id="628ee-125">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="628ee-125">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItem(key)
    fullName: getItem(key)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(key: number | string): Excel.TableColumn;'
      return:
        type:
          - 'excel!Excel.TableColumn:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="628ee-126">Exemplos</span><span class="sxs-lookup"><span data-stu-id="628ee-126">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tablecolumn = ctx.workbook.tables.getItem('Table1').columns.getItem(0);
              tablecolumn.load('name');
              return ctx.sync().then(function() {
                      console.log(tablecolumn.name);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: key
          description: <span data-ttu-id="628ee-127">ID ou nome da coluna.</span><span class="sxs-lookup"><span data-stu-id="628ee-127">Column Name or ID.</span></span>
          type:
            - number | string
  - uid: 'excel!Excel.TableColumnCollection#getItemAt:member(1)'
    summary: |-
      <span data-ttu-id="628ee-128">Obtém uma coluna com base em sua posição na coleção.</span><span class="sxs-lookup"><span data-stu-id="628ee-128">Gets a column based on its position in the collection.</span></span>

      <span data-ttu-id="628ee-129">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="628ee-129">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItemAt(index)
    fullName: getItemAt(index)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemAt(index: number): Excel.TableColumn;'
      return:
        type:
          - 'excel!Excel.TableColumn:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="628ee-130">Exemplos</span><span class="sxs-lookup"><span data-stu-id="628ee-130">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tablecolumn = ctx.workbook.tables.getItem['Table1'].columns.getItemAt(0);
              tablecolumn.load('name');
              return ctx.sync().then(function() {
                      console.log(tablecolumn.name);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: index
          description: <span data-ttu-id="628ee-131">Valor de índice do objeto a ser recuperado.</span><span class="sxs-lookup"><span data-stu-id="628ee-131">Index value of the object to be retrieved.</span></span> <span data-ttu-id="628ee-132">Indexados com zero.</span><span class="sxs-lookup"><span data-stu-id="628ee-132">Zero-indexed.</span></span>
          type:
            - number
  - uid: 'excel!Excel.TableColumnCollection#getItemOrNullObject:member(1)'
    summary: |-
      <span data-ttu-id="628ee-133">Obtém um objeto column por nome ou ID.</span><span class="sxs-lookup"><span data-stu-id="628ee-133">Gets a column object by Name or ID.</span></span> <span data-ttu-id="628ee-134">Se a coluna não existir, retornará um objeto null.</span><span class="sxs-lookup"><span data-stu-id="628ee-134">If the column does not exist, will return a null object.</span></span>

      <span data-ttu-id="628ee-135">\[[Conjunto de APIs: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="628ee-135">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItemOrNullObject(key)
    fullName: getItemOrNullObject(key)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemOrNullObject(key: number | string): Excel.TableColumn;'
      return:
        type:
          - 'excel!Excel.TableColumn:class'
        description: ''
      parameters:
        - id: key
          description: <span data-ttu-id="628ee-136">ID ou nome da coluna.</span><span class="sxs-lookup"><span data-stu-id="628ee-136">Column Name or ID.</span></span>
          type:
            - number | string
  - uid: 'excel!Excel.TableColumnCollection#items:member'
    summary: <span data-ttu-id="628ee-137">Obtém os itens filhos carregados nesta coleção.</span><span class="sxs-lookup"><span data-stu-id="628ee-137">Gets the loaded child items in this collection.</span></span>
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.TableColumn[];'
      return:
        type:
          - 'excel!Excel.TableColumnCollection#items~0:complex'
  - uid: 'excel!Excel.TableColumnCollection#load:member(1)'
    summary: <span data-ttu-id="628ee-138">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="628ee-138">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="628ee-139">Você deve chamar "context.sync()" antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="628ee-139">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="628ee-140">Além dessa assinatura, este método tem as seguintes assinaturas:</span><span class="sxs-lookup"><span data-stu-id="628ee-140">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="628ee-141">`load(option?: string | string[]): Excel.TableColumnCollection`-Where Option é uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="628ee-141">`load(option?: string | string[]): Excel.TableColumnCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="628ee-142">`load(option?: { select?: string; expand?: string; }): Excel.TableColumnCollection`-Onde Option. Select é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades a serem carregadas, e Options. Expand é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades de navegação a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="628ee-142">`load(option?: { select?: string; expand?: string; }): Excel.TableColumnCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="628ee-143">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TableColumnCollection`– Disponível somente nos tipos de coleção.</span><span class="sxs-lookup"><span data-stu-id="628ee-143">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TableColumnCollection` - Only available on collection types.</span></span> <span data-ttu-id="628ee-144">É semelhante à assinatura anterior.</span><span class="sxs-lookup"><span data-stu-id="628ee-144">It is similar to the preceding signature.</span></span> <span data-ttu-id="628ee-145">Option. Top especifica o número máximo de itens de coleta que podem ser incluídos no resultado.</span><span class="sxs-lookup"><span data-stu-id="628ee-145">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="628ee-146">Option. Skip especifica o número de itens que devem ser ignorados e não incluídos no resultado.</span><span class="sxs-lookup"><span data-stu-id="628ee-146">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="628ee-147">Se Option. Top for especificado, o conjunto de resultados será iniciado depois de ignorar o número de itens especificado.</span><span class="sxs-lookup"><span data-stu-id="628ee-147">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.TableColumnCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.TableColumnCollection;'
      return:
        type:
          - 'excel!Excel.TableColumnCollection:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'excel!Excel.TableColumnCollection#load~0:complex'
  - uid: 'excel!Excel.TableColumnCollection#load:member(2)'
    summary: <span data-ttu-id="628ee-148">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="628ee-148">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="628ee-149">Você deve chamar `context.sync()` antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="628ee-149">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.TableColumnCollection;'
      return:
        type:
          - 'excel!Excel.TableColumnCollection:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="628ee-150">Exemplos</span><span class="sxs-lookup"><span data-stu-id="628ee-150">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tablecolumns = ctx.workbook.tables.getItem('Table1').columns;
              tablecolumns.load('items');
              return ctx.sync().then(function() {
                  console.log("tablecolumns Count: " + tablecolumns.count);
                  for (var i = 0; i < tablecolumns.items.length; i++) {
                      console.log(tablecolumns.items[i].name);
                  }
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="628ee-151">Uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="628ee-151">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.TableColumnCollection#load:member(3)'
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): Excel.TableColumnCollection;'
      return:
        type:
          - 'excel!Excel.TableColumnCollection:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'excel!OfficeExtension.LoadOption:interface'
  - uid: 'excel!Excel.TableColumnCollection#toJSON:member(1)'
    summary: '<span data-ttu-id="628ee-152">Substitui o método `toJSON()` JavaScript para fornecer uma saída mais útil quando um objeto API é passado para`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="628ee-152">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="628ee-153">.</span><span class="sxs-lookup"><span data-stu-id="628ee-153"></span></span> <span data-ttu-id="628ee-154">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="628ee-154"></span></span><!-- --><span data-ttu-id="628ee-155">, por sua vez, chama `toJSON` o método do objeto que é passado para ele.) Enquanto o objeto `Excel.TableColumnCollection` original é um objeto API, o `toJSON` método retorna um objeto JavaScript simples (digitado como`Excel.Interfaces.TableColumnCollectionData`</span><span class="sxs-lookup"><span data-stu-id="628ee-155">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.TableColumnCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.TableColumnCollectionData`</span></span><!-- --><span data-ttu-id="628ee-156">) que contém uma matriz de "itens" com cópias superficiais de qualquer propriedade carregada dos itens da coleção.</span><span class="sxs-lookup"><span data-stu-id="628ee-156">) that contains an "items" array with shallow copies of any loaded properties from the collection''s items.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.TableColumnCollectionData;'
      return:
        type:
          - 'excel!Excel.Interfaces.TableColumnCollectionData:interface'
        description: ''
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.TableColumn:class'
    name: Excel.TableColumn
  - uid: 'excel!Excel.TableColumnCollection#add~0:complex'
    name: Array<Array<boolean | string | number>> | boolean | string | number
    fullName: Array<Array<boolean | string | number>> | boolean | string | number
    spec.typeScript:
      - uid: '!Array:interface'
        name: Array
        fullName: Array
      - name: <
        fullName: <
      - uid: '!Array:interface'
        name: Array
        fullName: Array
      - name: <boolean | string | number>> | boolean | string | number
        fullName: <boolean | string | number>> | boolean | string | number
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.TableColumnCollection#getCount~0:complex'
    name: OfficeExtension.ClientResult<number>
    fullName: OfficeExtension.ClientResult<number>
    spec.typeScript:
      - uid: 'excel!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <number>
        fullName: <number>
  - uid: 'excel!Excel.TableColumnCollection#items~0:complex'
    name: 'Excel.TableColumn[]'
    fullName: 'Excel.TableColumn[]'
    spec.typeScript:
      - uid: 'excel!Excel.TableColumn:class'
        name: Excel.TableColumn
        fullName: Excel.TableColumn
      - name: '[]'
        fullName: '[]'
  - uid: 'excel!Excel.TableColumnCollection:class'
    name: Excel.TableColumnCollection
  - uid: 'excel!Excel.TableColumnCollection#load~0:complex'
    name: Excel.Interfaces.TableColumnCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    fullName: Excel.Interfaces.TableColumnCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    spec.typeScript:
      - uid: 'excel!Excel.Interfaces.TableColumnCollectionLoadOptions:interface'
        name: Excel.Interfaces.TableColumnCollectionLoadOptions
        fullName: Excel.Interfaces.TableColumnCollectionLoadOptions
      - name: ' & '
        fullName: ' & '
      - uid: 'excel!Excel.Interfaces.CollectionLoadOptions:interface'
        name: Excel.Interfaces.CollectionLoadOptions
        fullName: Excel.Interfaces.CollectionLoadOptions
  - uid: 'excel!OfficeExtension.LoadOption:interface'
    name: OfficeExtension.LoadOption
  - uid: 'excel!Excel.Interfaces.TableColumnCollectionData:interface'
    name: Excel.Interfaces.TableColumnCollectionData