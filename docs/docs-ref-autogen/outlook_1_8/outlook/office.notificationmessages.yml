### YamlMime:TSType
name: Office.NotificationMessages
uid: outlook!Office.NotificationMessages:interface
package: outlook!
fullName: Office.NotificationMessages
summary: >-
  O objeto `NotificationMessages` é retornado como a propriedade `notificationMessages` de um item.


  \[[Conjunto de API: Caixa de Correio 1.3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
remarks: >-
  **[Nível mínimo de permissão](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**:`ReadItem`


  **[Modo do Outlook aplicável](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- -->**: Redação ou Leitura
isPreview: false
isDeprecated: false
type: interface
methods:
- name: addAsync(key, JSONmessage, options, callback)
  uid: outlook!Office.NotificationMessages#addAsync:member(1)
  package: outlook!
  fullName: addAsync(key, JSONmessage, options, callback)
  summary: >-
    Adiciona uma notificação a um item.


    Há um máximo de 5 notificações por mensagem. Definir mais retornará um erro `NumberOfNotificationMessagesExceeded`.


    \[[Conjunto de API: Caixa de Correio 1.3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    **[Nível mínimo de permissão](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**:`ReadItem`


    **[Modo do Outlook aplicável](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- -->**: Redação ou Leitura


    #### <a name="examples"></a>Exemplos


    ```javascript

    // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/outlook/35-notifications/add-getall-remove.yaml

    var id = $("#notificationId").val();

    var details =
      {
        type: "progressIndicator",
        message: "Progress indicator with id = " + id
      };
    Office.context.mailbox.item.notificationMessages.addAsync(id, details, handleResult);

    ```

    ```javascript

    // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/outlook/35-notifications/add-getall-remove.yaml

    var id = $("#notificationId").val();

    var details =
      {
        type: "informationalMessage",
        message: "Non-persistent informational notification message with id = " + id,
        icon: "icon1",
        persistent: false
      };
    Office.context.mailbox.item.notificationMessages.addAsync(id, details, handleResult);

    ```

    ```javascript

    // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/outlook/35-notifications/add-getall-remove.yaml

    var id = $("#notificationId").val();

    var details =
      {
        type: "informationalMessage",
        message: "Persistent informational notification message with id = " + id,
        icon: "icon1",
        persistent: true
      };
    Office.context.mailbox.item.notificationMessages.addAsync(id, details, handleResult);

    ```

    ```javascript

    // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/outlook/35-notifications/add-getall-remove.yaml

    var id = $("#notificationId").val();

    var details =
      {
        type: "errorMessage",
        message: "Error notification message with id = " + id
      };
    Office.context.mailbox.item.notificationMessages.addAsync(id, details, handleResult);

    ```
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'addAsync(key: string, JSONmessage: NotificationMessageDetails, options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
    parameters:
    - id: key
      description: Uma chave especificada pelo desenvolvedor usada para fazer referência a essa mensagem de notificação. Os desenvolvedores podem usá-la para modificar esta mensagem mais tarde. Ela não pode ter mais de 32 caracteres.
      type: string
    - id: JSONmessage
      description: Um objeto JSON que contém a mensagem de notificação a ser adicionada ao item. Ele contém um `NotificationMessageDetails` objeto.
      type: <xref uid="outlook!Office.NotificationMessageDetails:interface" />
    - id: options
      description: 'Opcional. Um objeto literal que contém uma ou mais das propriedades a seguir. `asyncContext`<!-- -->: Os desenvolvedores podem fornecer qualquer objeto que desejam acessar no método de retorno de chamada.'
      type: <xref uid="office!Office.AsyncContextOptions:interface" />
    - id: callback
      description: Opcional. Quando o método é concluído, a função passada no `callback` parâmetro é chamada com um único parâmetro de tipo `Office.AsyncResult`<!-- -->.
      type: '(asyncResult: <xref uid="office!Office.AsyncResult:interface" />&lt;void&gt;) =&gt; void'
    return:
      type: void
      description: ''
- name: getAllAsync(options, callback)
  uid: outlook!Office.NotificationMessages#getAllAsync:member(1)
  package: outlook!
  fullName: getAllAsync(options, callback)
  summary: >-
    Retorna todas as chaves e mensagens de um item.


    \[[Conjunto de API: Caixa de Correio 1.3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: "**[Nível mínimo de permissão](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**:`ReadItem`\n\n**[Modo do Outlook aplicável](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- -->**: Redação ou Leitura\n\n#### <a name=\"examples\"></a>Exemplos\n\n```javascript\n// Get all notifications.\nOffice.context.mailbox.item.notificationMessages.getAllAsync(function (asyncResult) {\n    if (asyncResult.status != \"failed\") {\n        Office.context.mailbox.item.notificationMessages.replaceAsync( \"notifications\", {\n            type: \"informationalMessage\",\n            message : \"Found \" + asyncResult.value.length + \" notifications.\",\n            icon : \"iconid\",\n            persistent: false\n        });\n    }\n});\n```\n```javascript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/outlook/35-notifications/add-getall-remove.yaml\nOffice.context.mailbox.item.notificationMessages.getAllAsync(handleResult);          \n```"
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getAllAsync(options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<NotificationMessageDetails[]>) => void): void;'
    parameters:
    - id: options
      description: 'Opcional. Um objeto literal que contém uma ou mais das propriedades a seguir. `asyncContext`<!-- -->: Os desenvolvedores podem fornecer qualquer objeto que desejam acessar no método de retorno de chamada.'
      type: <xref uid="office!Office.AsyncContextOptions:interface" />
    - id: callback
      description: Opcional. Quando o método é concluído, a função passada no `callback` parâmetro é chamada com um único parâmetro de tipo `Office.AsyncResult`<!-- -->. A `value` propriedade do resultado é uma matriz de `NotificationMessageDetails` objetos.
      type: '(asyncResult: <xref uid="office!Office.AsyncResult:interface" />&lt;<xref uid="outlook!Office.NotificationMessageDetails:interface" />[]&gt;) =&gt; void'
    return:
      type: void
      description: ''
- name: removeAsync(key, options, callback)
  uid: outlook!Office.NotificationMessages#removeAsync:member(1)
  package: outlook!
  fullName: removeAsync(key, options, callback)
  summary: >-
    Obtém uma mensagem de notificação de um item.


    \[[Conjunto de API: Caixa de Correio 1.3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    **[Nível mínimo de permissão](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**:`ReadItem`


    **[Modo do Outlook aplicável](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- -->**: Redação ou Leitura


    #### <a name="examples"></a>Exemplos


    ```javascript

    // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/outlook/35-notifications/add-getall-remove.yaml

    var id = $("#notificationId").val();

    Office.context.mailbox.item.notificationMessages.removeAsync(id, handleResult);

    ```
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'removeAsync(key: string, options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
    parameters:
    - id: key
      description: A chave para a mensagem de notificação a remover.
      type: string
    - id: options
      description: 'Opcional. Um objeto literal que contém uma ou mais das propriedades a seguir. `asyncContext`<!-- -->: Os desenvolvedores podem fornecer qualquer objeto que desejam acessar no método de retorno de chamada.'
      type: <xref uid="office!Office.AsyncContextOptions:interface" />
    - id: callback
      description: Opcional. Quando o método é concluído, a função passada no `callback` parâmetro é chamada com um único parâmetro de tipo `Office.AsyncResult`<!-- -->.
      type: '(asyncResult: <xref uid="office!Office.AsyncResult:interface" />&lt;void&gt;) =&gt; void'
    return:
      type: void
      description: ''
- name: replaceAsync(key, JSONmessage, options, callback)
  uid: outlook!Office.NotificationMessages#replaceAsync:member(1)
  package: outlook!
  fullName: replaceAsync(key, JSONmessage, options, callback)
  summary: >-
    Substitui uma mensagem de notificação que tenha uma determinada chave com outra mensagem.


    Se uma mensagem de notificação com a chave especificada não existir, `replaceAsync` adicionará a notificação.


    \[[Conjunto de API: Caixa de Correio 1.3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    **[Nível mínimo de permissão](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**:`ReadItem`


    **[Modo do Outlook aplicável](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- -->**: Redação ou Leitura


    #### <a name="examples"></a>Exemplos


    ```javascript

    // Replace a notification with an informational notification.

    Office.context.mailbox.item.notificationMessages.replaceAsync("progress", {
        type: "informationalMessage",
        message : "The message was processed successfully.",
        icon : "iconid",
        persistent: false
    });

    ```

    ```javascript

    // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/outlook/35-notifications/add-getall-remove.yaml

    var id = $("#notificationId").val();

    Office.context.mailbox.item.notificationMessages.replaceAsync(
      id,
      {
        type: "informationalMessage",
        message: "Notification message with id = " + id + " has been replaced with an informational message.",
        icon: "icon2",
        persistent: false
      },
      handleResult);
    ```
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'replaceAsync(key: string, JSONmessage: NotificationMessageDetails, options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
    parameters:
    - id: key
      description: A chave para a mensagem de notificação a substituir. Ela não pode ter mais de 32 caracteres.
      type: string
    - id: JSONmessage
      description: Um objeto JSON que contém a nova mensagem de notificação para substituir a mensagem existente. Ele contém um `NotificationMessageDetails` objeto.
      type: <xref uid="outlook!Office.NotificationMessageDetails:interface" />
    - id: options
      description: 'Opcional. Um objeto literal que contém uma ou mais das propriedades a seguir. `asyncContext`<!-- -->: Os desenvolvedores podem fornecer qualquer objeto que desejam acessar no método de retorno de chamada.'
      type: <xref uid="office!Office.AsyncContextOptions:interface" />
    - id: callback
      description: Opcional. Quando o método é concluído, a função passada no `callback` parâmetro é chamada com um único parâmetro de tipo `Office.AsyncResult`<!-- -->.
      type: '(asyncResult: <xref uid="office!Office.AsyncResult:interface" />&lt;void&gt;) =&gt; void'
    return:
      type: void
      description: ''
metadata:
  ms.openlocfilehash: 1d2c3e73fba6c317f0bcf10fd880e8e9b0663ee2
  ms.sourcegitcommit: a8a86cfcaff5ad7dacc653d63502c76b1fedbebe
  ms.translationtype: MT
  ms.contentlocale: pt-BR
  ms.lasthandoff: 03/26/2021
  ms.locfileid: "51368755"
