### YamlMime:TSType
name: Office.AttachmentContent
uid: outlook!Office.AttachmentContent:interface
package: outlook!
fullName: Office.AttachmentContent
summary: >-
  Representa o conteúdo de um anexo em um item de compromisso ou mensagem.


  \[[Conjunto de APIs: caixa de correio 1,8](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
remarks: >-
  **<!-- --> [Nível de permissão mínimo](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)**:`ReadItem`


  **<!-- --> [Modo do Outlook aplicável](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)**: redação ou leitura
isPreview: false
isDeprecated: false
type: interface
properties:
- name: content
  uid: outlook!Office.AttachmentContent#content:member
  package: outlook!
  fullName: content
  summary: O conteúdo de um anexo como uma cadeia de caracteres.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'content: string;'
    return:
      type: string
- name: format
  uid: outlook!Office.AttachmentContent#format:member
  package: outlook!
  fullName: format
  summary: >-
    O formato de cadeia de caracteres a ser usado para o conteúdo de um anexo.


    Para anexos de arquivo, a formatação é uma cadeia de caracteres codificada em base64.


    Para anexos de item que representam mensagens e foram anexados por arrastar e soltar ou "anexar item", a formatação é uma cadeia de caracteres que representa um arquivo. eml formatado. **Importante**: se um item de mensagem tiver sido anexado por um recurso de arrastar e soltar no Outlook na Web, `getAttachmentContentAsync` um erro será gerado.


    Para anexos de item que representam itens de calendário e foram anexados por arrastar e soltar ou "anexar item", a formatação é uma cadeia de caracteres que representa um arquivo. iCalendar. **Importante**: se um item de calendário foi anexado pelo recurso de arrastar e soltar no Outlook na Web, `getAttachmentContentAsync` um erro será gerado.


    Para anexos na nuvem, a formatação é uma cadeia de caracteres de URL.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'format: MailboxEnums.AttachmentContentFormat | string;'
    return:
      type: <xref uid="outlook!Office.MailboxEnums.AttachmentContentFormat:enum" /> | string
      description: "\n\n#### <a name=\"examples\"></a>Exemplos\n\n```javascript\nvar item = Office.context.mailbox.item;\nvar options = {asyncContext: {currentItem: item}};\nitem.getAttachmentsAsync(options, callback);\n\nfunction callback(result) {\n    if (result.value.length > 0) {\n        for (i = 0 ; i < result.value.length ; i++) {\n            result.asyncContext.currentItem.getAttachmentContentAsync(result.value[i].id, handleAttachmentsCallback);\n        }\n    }\n}\n\nfunction handleAttachmentsCallback(result) {\n    // Parse string to be a url, an .eml file, a base64-encoded string, or an .icalendar file.\n    switch (result.value.format) {\n        case Office.MailboxEnums.AttachmentContentFormat.Base64:\n            // Handle file attachment.\n            break;\n        case Office.MailboxEnums.AttachmentContentFormat.Eml:\n            // Handle email item attachment.\n            break;\n        case Office.MailboxEnums.AttachmentContentFormat.ICalendar:\n            // Handle .icalender attachment.\n            break;\n        case Office.MailboxEnums.AttachmentContentFormat.Url:\n            // Handle cloud attachment.\n            break;\n        default:\n            // Handle attachment formats that are not supported.\n    }\n}\n```"
metadata:
  ms.openlocfilehash: 832984f1ec4064f0e63ad81ebc8faf7b17c2fe17
  ms.sourcegitcommit: 3bab97ab3b91da7cca497f6fc895408a76bd8b46
  ms.translationtype: MT
  ms.contentlocale: pt-BR
  ms.lasthandoff: 11/18/2020
  ms.locfileid: "49193135"
