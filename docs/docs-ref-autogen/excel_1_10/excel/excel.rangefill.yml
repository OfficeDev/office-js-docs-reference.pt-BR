### YamlMime:TSType
name: Excel.RangeFill
uid: excel!Excel.RangeFill:class
package: excel!
fullName: Excel.RangeFill
summary: >-
  Representa a tela de fundo de um objeto Range.


  \[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
- name: color
  uid: excel!Excel.RangeFill#color:member
  package: excel!
  fullName: color
  summary: >-
    Código de cor HTML que representa a cor do plano de fundo, da forma \# RRGGBB (por exemplo, "FFA500") ou como uma cor HTML nomeada (por exemplo, "laranja")


    \[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'color: string;'
    return:
      type: string
- name: context
  uid: excel!Excel.RangeFill#context:member
  package: excel!
  fullName: context
  summary: O contexto de solicitação associado ao objeto. Isso conecta o processo do suplemento ao processo do aplicativo host do Office.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'context: RequestContext;'
    return:
      type: <xref uid="excel!Excel.RequestContext:class" />
- name: pattern
  uid: excel!Excel.RangeFill#pattern:member
  package: excel!
  fullName: pattern
  summary: >-
    O padrão de um intervalo. Para saber detalhes, confira Excel.FillPattern. LinearGradient e RectangularGradient não são compatíveis. Um valor nulo indica que o intervalo inteiro não tem configuração de padrão uniforme.


    \[[Conjunto de APIs: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'pattern: Excel.FillPattern | "None" | "Solid" | "Gray50" | "Gray75" | "Gray25" | "Horizontal" | "Vertical" | "Down" | "Up" | "Checker" | "SemiGray75" | "LightHorizontal" | "LightVertical" | "LightDown" | "LightUp" | "Grid" | "CrissCross" | "Gray16" | "Gray8" | "LinearGradient" | "RectangularGradient";'
    return:
      type: <xref uid="excel!Excel.FillPattern:enum" /> | "None" | "Solid" | "Gray50" | "Gray75" | "Gray25" | "Horizontal" | "Vertical" | "Down" | "Up" | "Checker" | "SemiGray75" | "LightHorizontal" | "LightVertical" | "LightDown" | "LightUp" | "Grid" | "CrissCross" | "Gray16" | "Gray8" | "LinearGradient" | "RectangularGradient"
- name: patternColor
  uid: excel!Excel.RangeFill#patternColor:member
  package: excel!
  fullName: patternColor
  summary: >-
    O código de cor HTML que representa a cor do padrão de intervalo, do formato \# RRGGBB (por exemplo, "FFA500") ou como uma cor de HTML nomeada (por exemplo, "laranja").


    \[[Conjunto de APIs: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'patternColor: string;'
    return:
      type: string
- name: patternTintAndShade
  uid: excel!Excel.RangeFill#patternTintAndShade:member
  package: excel!
  fullName: patternTintAndShade
  summary: >-
    Especifica um duplo que clareia ou escurece uma cor de padrão para o preenchimento de intervalo, o valor é entre-1 (mais escuro) e 1 (mais brilhante), com 0 para a cor original. Se o padrão tintAndShades não for uniforme, NULL será retornado.


    \[[Conjunto de APIs: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'patternTintAndShade: number;'
    return:
      type: number
- name: tintAndShade
  uid: excel!Excel.RangeFill#tintAndShade:member
  package: excel!
  fullName: tintAndShade
  summary: >-
    Especifica um duplo que clareia ou escurece uma cor para o preenchimento de intervalo. O valor é entre-1 (mais escuro) e 1 (mais brilhante), com 0 para a cor original. Se o tintAndShades não for uniforme, NULL será retornado.


    \[[Conjunto de APIs: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'tintAndShade: number;'
    return:
      type: number
methods:
- name: clear()
  uid: excel!Excel.RangeFill#clear:member(1)
  package: excel!
  fullName: clear()
  summary: >-
    Redefine a tela de fundo do intervalo.


    \[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'clear(): void;'
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>Exemplos\n\n```javascript\nExcel.run(function (ctx) { \n    var sheetName = \"Sheet1\";\n    var rangeAddress = \"F:G\";\n    var worksheet = ctx.workbook.worksheets.getItem(sheetName);\n    var range = worksheet.getRange(rangeAddress);\n    var rangeFill = range.format.fill;\n    rangeFill.clear();\n    return ctx.sync(); \n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: load(options)
  uid: excel!Excel.RangeFill#load:member(1)
  package: excel!
  fullName: load(options)
  summary: Coloca um comando na fila para carregar as propriedades especificadas do objeto. Você deve chamar `context.sync()` antes de ler as propriedades.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(options?: Excel.Interfaces.RangeFillLoadOptions): Excel.RangeFill;'
    parameters:
    - id: options
      description: Fornece opções para as propriedades do objeto a ser carregado.
      type: <xref uid="excel!Excel.Interfaces.RangeFillLoadOptions:interface" />
    return:
      type: <xref uid="excel!Excel.RangeFill:class" />
      description: ''
- name: load(propertyNames)
  uid: excel!Excel.RangeFill#load:member(2)
  package: excel!
  fullName: load(propertyNames)
  summary: Coloca um comando na fila para carregar as propriedades especificadas do objeto. Você deve chamar `context.sync()` antes de ler as propriedades.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.RangeFill;'
    parameters:
    - id: propertyNames
      description: Uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.
      type: string | string[]
    return:
      type: <xref uid="excel!Excel.RangeFill:class" />
      description: "\n\n#### <a name=\"examples\"></a>Exemplos\n\n```javascript\nExcel.run(function (ctx) { \n    var sheetName = \"Sheet1\";\n    var rangeAddress = \"F:G\";\n    var worksheet = ctx.workbook.worksheets.getItem(sheetName);\n    var range = worksheet.getRange(rangeAddress);\n    var rangeFill = range.format.fill;\n    rangeFill.load('color');\n    return ctx.sync().then(function() {\n        console.log(rangeFill.color);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\n// The example below sets fill color. \nExcel.run(function (ctx) { \n    var sheetName = \"Sheet1\";\n    var rangeAddress = \"F:G\";\n    var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeAddress);\n    range.format.fill.color = '0000FF';\n    return ctx.sync(); \n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: load(propertyNamesAndPaths)
  uid: excel!Excel.RangeFill#load:member(3)
  package: excel!
  fullName: load(propertyNamesAndPaths)
  summary: Coloca um comando na fila para carregar as propriedades especificadas do objeto. Você deve chamar `context.sync()` antes de ler as propriedades.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      load(propertyNamesAndPaths?: {
                  select?: string;
                  expand?: string;
              }): Excel.RangeFill;
    parameters:
    - id: propertyNamesAndPaths
      description: '`propertyNamesAndPaths.select` é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades a serem carregadas e `propertyNamesAndPaths.expand` é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades de navegação a serem carregadas.'
      type: >-
        {
                    select?: string;
                    expand?: string;
                }
    return:
      type: <xref uid="excel!Excel.RangeFill:class" />
      description: ''
- name: set(properties, options)
  uid: excel!Excel.RangeFill#set:member(1)
  package: excel!
  fullName: set(properties, options)
  summary: Define várias propriedades de um objeto ao mesmo tempo. Você pode passar um objeto simples com as propriedades apropriadas ou outro objeto API do mesmo tipo.
  remarks: >-
    Este método tem a seguinte assinatura adicional:


    `set(properties: Excel.RangeFill): void`
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(properties: Interfaces.RangeFillUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    parameters:
    - id: properties
      description: Um objeto JavaScript com propriedades que são estruturadas isomorphically para as propriedades do objeto no qual o método é chamado.
      type: <xref uid="excel!Excel.Interfaces.RangeFillUpdateData:interface" />
    - id: options
      description: Fornece uma opção para suprimir erros se o objeto Properties tentar definir qualquer propriedade somente leitura.
      type: <xref uid="office!OfficeExtension.UpdateOptions:interface" />
    return:
      type: void
      description: ''
- name: set(properties)
  uid: excel!Excel.RangeFill#set:member(2)
  package: excel!
  fullName: set(properties)
  summary: Define várias propriedades no objeto ao mesmo tempo, com base em um objeto carregado existente.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(properties: Excel.RangeFill): void;'
    parameters:
    - id: properties
      description: ''
      type: <xref uid="excel!Excel.RangeFill:class" />
    return:
      type: void
      description: ''
- name: toJSON()
  uid: excel!Excel.RangeFill#toJSON:member(1)
  package: excel!
  fullName: toJSON()
  summary: Substitui o `toJSON()` método JavaScript para fornecer uma saída mais útil quando um objeto API é passado para `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, por sua vez, chama o `toJSON` método do objeto que é passado para ele.) Enquanto o objeto Excel. RangeFill original é um objeto API, o `toJSON` método retorna um objeto JavaScript simples (digitado como `Excel.Interfaces.RangeFillData`<!-- -->) que contém cópias superficiais de qualquer propriedade filho carregada do objeto original.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'toJSON(): Excel.Interfaces.RangeFillData;'
    return:
      type: <xref uid="excel!Excel.Interfaces.RangeFillData:interface" />
      description: ''
extends: <xref uid="office!OfficeExtension.ClientObject:class" />
metadata:
  ms.openlocfilehash: 2480cb271a5ef8f99d24b61a04a172eea58e09bb
  ms.sourcegitcommit: 3bab97ab3b91da7cca497f6fc895408a76bd8b46
  ms.translationtype: MT
  ms.contentlocale: pt-BR
  ms.lasthandoff: 11/18/2020
  ms.locfileid: "49232687"
