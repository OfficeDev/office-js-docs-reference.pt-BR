### YamlMime:UniversalReference
items:
  - uid: 'word!Word.Range:class'
    summary: |-
      <span data-ttu-id="d6256-101">Representa uma área contígua em um documento.</span><span class="sxs-lookup"><span data-stu-id="d6256-101">Represents a contiguous area in a document.</span></span>

      <span data-ttu-id="d6256-102">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d6256-102">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: Word.Range
    fullName: Word.Range
    langs:
      - typeScript
    type: class
    extends:
      - 'word!OfficeExtension.ClientObject:class'
    package: word!
    children:
      - 'word!Word.Range#clear:member(1)'
      - 'word!Word.Range#contentControls:member'
      - 'word!Word.Range#context:member'
      - 'word!Word.Range#delete:member(1)'
      - 'word!Word.Range#font:member'
      - 'word!Word.Range#getHtml:member(1)'
      - 'word!Word.Range#getOoxml:member(1)'
      - 'word!Word.Range#inlinePictures:member'
      - 'word!Word.Range#insertBreak:member(1)'
      - 'word!Word.Range#insertBreak:member(2)'
      - 'word!Word.Range#insertContentControl:member(1)'
      - 'word!Word.Range#insertFileFromBase64:member(1)'
      - 'word!Word.Range#insertFileFromBase64:member(2)'
      - 'word!Word.Range#insertHtml:member(1)'
      - 'word!Word.Range#insertHtml:member(2)'
      - 'word!Word.Range#insertInlinePictureFromBase64:member(1)'
      - 'word!Word.Range#insertInlinePictureFromBase64:member(2)'
      - 'word!Word.Range#insertOoxml:member(1)'
      - 'word!Word.Range#insertOoxml:member(2)'
      - 'word!Word.Range#insertParagraph:member(1)'
      - 'word!Word.Range#insertParagraph:member(2)'
      - 'word!Word.Range#insertText:member(1)'
      - 'word!Word.Range#insertText:member(2)'
      - 'word!Word.Range#load:member(1)'
      - 'word!Word.Range#load:member(2)'
      - 'word!Word.Range#load:member(3)'
      - 'word!Word.Range#paragraphs:member'
      - 'word!Word.Range#parentContentControl:member'
      - 'word!Word.Range#search:member(1)'
      - 'word!Word.Range#select:member(1)'
      - 'word!Word.Range#select:member(2)'
      - 'word!Word.Range#set:member(1)'
      - 'word!Word.Range#set:member(2)'
      - 'word!Word.Range#style:member'
      - 'word!Word.Range#text:member'
      - 'word!Word.Range#toJSON:member(1)'
      - 'word!Word.Range#track:member(1)'
      - 'word!Word.Range#untrack:member(1)'
  - uid: 'word!Word.Range#clear:member(1)'
    summary: |-
      <span data-ttu-id="d6256-103">Limpa o conteúdo do objeto Range.</span><span class="sxs-lookup"><span data-stu-id="d6256-103">Clears the contents of the range object.</span></span> <span data-ttu-id="d6256-104">O usuário pode executar a operação de desfazer no conteúdo limpo.</span><span class="sxs-lookup"><span data-stu-id="d6256-104">The user can perform the undo operation on the cleared content.</span></span>

      <span data-ttu-id="d6256-105">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d6256-105">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: clear()
    fullName: clear()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clear(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="d6256-106">Exemplos</span><span class="sxs-lookup"><span data-stu-id="d6256-106">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a command to clear the contents of the proxy range object.
              range.clear();

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Cleared the selection (range object)');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'word!Word.Range#contentControls:member'
    summary: |-
      <span data-ttu-id="d6256-107">Obtém a coleção de objetos de controle de conteúdo no intervalo.</span><span class="sxs-lookup"><span data-stu-id="d6256-107">Gets the collection of content control objects in the range.</span></span> <span data-ttu-id="d6256-108">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="d6256-108">Read-only.</span></span>

      <span data-ttu-id="d6256-109">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d6256-109">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: contentControls
    fullName: contentControls
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly contentControls: Word.ContentControlCollection;'
      return:
        type:
          - 'word!Word.ContentControlCollection:class'
  - uid: 'word!Word.Range#context:member'
    summary: <span data-ttu-id="d6256-110">O contexto de solicitação associado ao objeto.</span><span class="sxs-lookup"><span data-stu-id="d6256-110">The request context associated with the object.</span></span> <span data-ttu-id="d6256-111">Isso conecta o processo do suplemento ao processo do aplicativo host do Office.</span><span class="sxs-lookup"><span data-stu-id="d6256-111">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'word!Word.RequestContext:class'
  - uid: 'word!Word.Range#delete:member(1)'
    summary: |-
      <span data-ttu-id="d6256-112">Exclui o intervalo e o respectivo conteúdo do documento.</span><span class="sxs-lookup"><span data-stu-id="d6256-112">Deletes the range and its content from the document.</span></span>

      <span data-ttu-id="d6256-113">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d6256-113">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="d6256-114">Exemplos</span><span class="sxs-lookup"><span data-stu-id="d6256-114">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a command to delete the range object.
              range.delete();

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Deleted the selection (range object)');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'word!Word.Range#font:member'
    summary: |-
      <span data-ttu-id="d6256-115">Obtém o formato de texto do intervalo.</span><span class="sxs-lookup"><span data-stu-id="d6256-115">Gets the text format of the range.</span></span> <span data-ttu-id="d6256-116">Use isto para obter e definir o nome, o tamanho e a cor da fonte, além de outras propriedades.</span><span class="sxs-lookup"><span data-stu-id="d6256-116">Use this to get and set font name, size, color, and other properties.</span></span> <span data-ttu-id="d6256-117">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="d6256-117">Read-only.</span></span>

      <span data-ttu-id="d6256-118">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d6256-118">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: font
    fullName: font
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly font: Word.Font;'
      return:
        type:
          - 'word!Word.Font:class'
  - uid: 'word!Word.Range#getHtml:member(1)'
    summary: |-
      <span data-ttu-id="d6256-119">Obtém uma representação HTML do objeto Range.</span><span class="sxs-lookup"><span data-stu-id="d6256-119">Gets an HTML representation of the range object.</span></span> <span data-ttu-id="d6256-120">Quando renderizado em uma página da Web ou em um visualizador de HTML, a formatação será uma correspondência próxima, mas não exata, à formatação do documento.</span><span class="sxs-lookup"><span data-stu-id="d6256-120">When rendered in a web page or HTML viewer, the formatting will be a close, but not exact, match to the formatting of the document.</span></span> <span data-ttu-id="d6256-121">Este método não retorna o mesmo HTML para o mesmo documento em diferentes plataformas (Windows, Mac, etc.).</span><span class="sxs-lookup"><span data-stu-id="d6256-121">This method does not return the exact same HTML for the same document on different platforms (Windows, Mac, etc.).</span></span> <span data-ttu-id="d6256-122">Se você precisar de fidelidade exata ou consistência entre plataformas, use `Range.getOoxml()` e converta o XML RETORNADO em HTML.</span><span class="sxs-lookup"><span data-stu-id="d6256-122">If you need exact fidelity, or consistency across platforms, use `Range.getOoxml()` and convert the returned XML to HTML.</span></span>

      <span data-ttu-id="d6256-123">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d6256-123">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getHtml()
    fullName: getHtml()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getHtml(): OfficeExtension.ClientResult<string>;'
      return:
        type:
          - 'word!Word.Range#getHtml~0:complex'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="d6256-124">Exemplos</span><span class="sxs-lookup"><span data-stu-id="d6256-124">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a command to get the HTML of the current selection.
              var html = range.getHtml();

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('The HTML read from the document was: ' + html.value);
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'word!Word.Range#getOoxml:member(1)'
    summary: |-
      <span data-ttu-id="d6256-125">Obtém a representação OOXML do objeto Range.</span><span class="sxs-lookup"><span data-stu-id="d6256-125">Gets the OOXML representation of the range object.</span></span>

      <span data-ttu-id="d6256-126">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d6256-126">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getOoxml()
    fullName: getOoxml()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getOoxml(): OfficeExtension.ClientResult<string>;'
      return:
        type:
          - 'word!Word.Range#getOoxml~0:complex'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="d6256-127">Exemplos</span><span class="sxs-lookup"><span data-stu-id="d6256-127">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a command to get the OOXML of the current selection.
              var ooxml = range.getOoxml();

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('The OOXML read from the document was:  ' + ooxml.value);
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'word!Word.Range#inlinePictures:member'
    summary: |-
      <span data-ttu-id="d6256-128">Obtém a coleção de objetos de imagem embutida presentes no intervalo.</span><span class="sxs-lookup"><span data-stu-id="d6256-128">Gets the collection of inline picture objects in the range.</span></span> <span data-ttu-id="d6256-129">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="d6256-129">Read-only.</span></span>

      <span data-ttu-id="d6256-130">\[[Conjunto de APIs: WordApi 1,2](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d6256-130">\[ [API set: WordApi 1.2](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: inlinePictures
    fullName: inlinePictures
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly inlinePictures: Word.InlinePictureCollection;'
      return:
        type:
          - 'word!Word.InlinePictureCollection:class'
  - uid: 'word!Word.Range#insertBreak:member(1)'
    summary: |-
      <span data-ttu-id="d6256-131">Insere uma quebra no local especificado no documento principal.</span><span class="sxs-lookup"><span data-stu-id="d6256-131">Inserts a break at the specified location in the main document.</span></span> <span data-ttu-id="d6256-132">O valor de insertLocation pode ser 'Before' ou 'After'.</span><span class="sxs-lookup"><span data-stu-id="d6256-132">The insertLocation value can be 'Before' or 'After'.</span></span>

      <span data-ttu-id="d6256-133">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d6256-133">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertBreak(breakType, insertLocation)'
    fullName: 'insertBreak(breakType, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertBreak(breakType: Word.BreakType, insertLocation: Word.InsertLocation): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: breakType
          description: <span data-ttu-id="d6256-134">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="d6256-134">Required.</span></span> <span data-ttu-id="d6256-135">O tipo de interrupção a ser adicionado.</span><span class="sxs-lookup"><span data-stu-id="d6256-135">The break type to add.</span></span>
          type:
            - 'word!Word.BreakType:enum'
        - id: insertLocation
          description: <span data-ttu-id="d6256-136">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="d6256-136">Required.</span></span> <span data-ttu-id="d6256-137">O valor pode ser 'Before' ou 'After'.</span><span class="sxs-lookup"><span data-stu-id="d6256-137">The value can be 'Before' or 'After'.</span></span>
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.Range#insertBreak:member(2)'
    summary: |-
      <span data-ttu-id="d6256-138">Insere uma quebra no local especificado no documento principal.</span><span class="sxs-lookup"><span data-stu-id="d6256-138">Inserts a break at the specified location in the main document.</span></span> <span data-ttu-id="d6256-139">O valor de insertLocation pode ser 'Before' ou 'After'.</span><span class="sxs-lookup"><span data-stu-id="d6256-139">The insertLocation value can be 'Before' or 'After'.</span></span>

      <span data-ttu-id="d6256-140">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d6256-140">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertBreak(breakTypeString, insertLocation)'
    fullName: 'insertBreak(breakTypeString, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertBreak(breakTypeString: "Page" | "Next" | "SectionNext" | "SectionContinuous" | "SectionEven" | "SectionOdd" | "Line", insertLocation: "Before" | "After" | "Start" | "End" | "Replace"): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="d6256-141">Exemplos</span><span class="sxs-lookup"><span data-stu-id="d6256-141">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a command to insert a page break after the selected text.
              range.insertBreak('page', 'After');

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Inserted a page break after the selected text.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: breakTypeString
          description: <span data-ttu-id="d6256-142">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="d6256-142">Required.</span></span> <span data-ttu-id="d6256-143">O tipo de interrupção a ser adicionado.</span><span class="sxs-lookup"><span data-stu-id="d6256-143">The break type to add.</span></span>
          type:
            - '"Page" | "Next" | "SectionNext" | "SectionContinuous" | "SectionEven" | "SectionOdd" | "Line"'
        - id: insertLocation
          description: <span data-ttu-id="d6256-144">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="d6256-144">Required.</span></span> <span data-ttu-id="d6256-145">O valor pode ser 'Before' ou 'After'.</span><span class="sxs-lookup"><span data-stu-id="d6256-145">The value can be 'Before' or 'After'.</span></span>
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.Range#insertContentControl:member(1)'
    summary: |-
      <span data-ttu-id="d6256-146">Quebra o objeto Range com um controle de conteúdo de rich text.</span><span class="sxs-lookup"><span data-stu-id="d6256-146">Wraps the range object with a rich text content control.</span></span>

      <span data-ttu-id="d6256-147">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d6256-147">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: insertContentControl()
    fullName: insertContentControl()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertContentControl(): Word.ContentControl;'
      return:
        type:
          - 'word!Word.ContentControl:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="d6256-148">Exemplos</span><span class="sxs-lookup"><span data-stu-id="d6256-148">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a command to insert a content control around the selected text,
              // and create a proxy content control object. We'll update the properties
              // on the content control.
              var myContentControl = range.insertContentControl();
              myContentControl.tag = "Customer-Address";
              myContentControl.title = "Enter Customer Address Here:";
              myContentControl.style = "Normal";
              myContentControl.insertText("One Microsoft Way, Redmond, WA 98052", 'Replace');
              myContentControl.cannotEdit = true;

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Wrapped a content control around the selected text.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```typescript
          await Word.run(async (context) => {
              let results = context.document.body.search("Contractor");
              results.load("font/bold");

              // Check to make sure these content controls haven't been added yet.
              let customerContentControls = context.document.contentControls.getByTag("customer");
              customerContentControls.load("text");
              await context.sync();

            if (customerContentControls.items.length === 0) {
              for (var i = 0; i < results.items.length; i++) { 
                  results.items[i].font.bold = true;
                  var cc = results.items[i].insertContentControl();
                  cc.tag = "customer";  // This value is used in the next step of this sample.
                  cc.title = "Customer Name " + i;
              }
            }
              await context.sync();
          });
          ```
  - uid: 'word!Word.Range#insertFileFromBase64:member(1)'
    summary: |-
      <span data-ttu-id="d6256-149">Insere um documento no local especificado.</span><span class="sxs-lookup"><span data-stu-id="d6256-149">Inserts a document at the specified location.</span></span> <span data-ttu-id="d6256-150">O valor insertLocation pode ser ' replace ', ' Start ', ' End ', ' before ' ou ' after '.</span><span class="sxs-lookup"><span data-stu-id="d6256-150">The insertLocation value can be 'Replace', 'Start', 'End', 'Before', or 'After'.</span></span>

      <span data-ttu-id="d6256-151">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d6256-151">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertFileFromBase64(base64File, insertLocation)'
    fullName: 'insertFileFromBase64(base64File, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertFileFromBase64(base64File: string, insertLocation: Word.InsertLocation): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="d6256-152">Exemplos</span><span class="sxs-lookup"><span data-stu-id="d6256-152">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a command to insert base64 encoded .docx at the beginning of the range.
              // You'll need to implement getBase64() to make this work.
              range.insertFileFromBase64(getBase64(), Word.InsertLocation.start);

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Added base64 encoded text to the beginning of the range.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: base64File
          description: <span data-ttu-id="d6256-153">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="d6256-153">Required.</span></span> <span data-ttu-id="d6256-154">O conteúdo codificado em Base64 de um arquivo. docx.</span><span class="sxs-lookup"><span data-stu-id="d6256-154">The base64 encoded content of a .docx file.</span></span>
          type:
            - string
        - id: insertLocation
          description: '<span data-ttu-id="d6256-155">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="d6256-155">Required.</span></span> <span data-ttu-id="d6256-156">O valor pode ser '' replace '', '' Start '', '' End '', '' before '' ou '' after ''.</span><span class="sxs-lookup"><span data-stu-id="d6256-156">The value can be ''Replace'', ''Start'', ''End'', ''Before'', or ''After''.</span></span>'
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.Range#insertFileFromBase64:member(2)'
    summary: |-
      <span data-ttu-id="d6256-157">Insere um documento no local especificado.</span><span class="sxs-lookup"><span data-stu-id="d6256-157">Inserts a document at the specified location.</span></span> <span data-ttu-id="d6256-158">O valor insertLocation pode ser ' replace ', ' Start ', ' End ', ' before ' ou ' after '.</span><span class="sxs-lookup"><span data-stu-id="d6256-158">The insertLocation value can be 'Replace', 'Start', 'End', 'Before', or 'After'.</span></span>

      <span data-ttu-id="d6256-159">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d6256-159">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertFileFromBase64(base64File, insertLocationString)'
    fullName: 'insertFileFromBase64(base64File, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertFileFromBase64(base64File: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: base64File
          description: <span data-ttu-id="d6256-160">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="d6256-160">Required.</span></span> <span data-ttu-id="d6256-161">O conteúdo codificado em Base64 de um arquivo. docx.</span><span class="sxs-lookup"><span data-stu-id="d6256-161">The base64 encoded content of a .docx file.</span></span>
          type:
            - string
        - id: insertLocationString
          description: '<span data-ttu-id="d6256-162">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="d6256-162">Required.</span></span> <span data-ttu-id="d6256-163">O valor pode ser '' replace '', '' Start '', '' End '', '' before '' ou '' after ''.</span><span class="sxs-lookup"><span data-stu-id="d6256-163">The value can be ''Replace'', ''Start'', ''End'', ''Before'', or ''After''.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.Range#insertHtml:member(1)'
    summary: |-
      <span data-ttu-id="d6256-164">Insere HTML no local especificado.</span><span class="sxs-lookup"><span data-stu-id="d6256-164">Inserts HTML at the specified location.</span></span> <span data-ttu-id="d6256-165">O valor insertLocation pode ser ' replace ', ' Start ', ' End ', ' before ' ou ' after '.</span><span class="sxs-lookup"><span data-stu-id="d6256-165">The insertLocation value can be 'Replace', 'Start', 'End', 'Before', or 'After'.</span></span>

      <span data-ttu-id="d6256-166">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d6256-166">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertHtml(html, insertLocation)'
    fullName: 'insertHtml(html, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertHtml(html: string, insertLocation: Word.InsertLocation): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="d6256-167">Exemplos</span><span class="sxs-lookup"><span data-stu-id="d6256-167">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a command to insert HTML in to the beginning of the range.
              range.insertHtml('<strong>This is text inserted with range.insertHtml()</strong>', Word.InsertLocation.start);

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('HTML added to the beginning of the range.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: html
          description: <span data-ttu-id="d6256-168">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="d6256-168">Required.</span></span> <span data-ttu-id="d6256-169">O HTML a ser inserido.</span><span class="sxs-lookup"><span data-stu-id="d6256-169">The HTML to be inserted.</span></span>
          type:
            - string
        - id: insertLocation
          description: '<span data-ttu-id="d6256-170">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="d6256-170">Required.</span></span> <span data-ttu-id="d6256-171">O valor pode ser '' replace '', '' Start '', '' End '', '' before '' ou '' after ''.</span><span class="sxs-lookup"><span data-stu-id="d6256-171">The value can be ''Replace'', ''Start'', ''End'', ''Before'', or ''After''.</span></span>'
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.Range#insertHtml:member(2)'
    summary: |-
      <span data-ttu-id="d6256-172">Insere HTML no local especificado.</span><span class="sxs-lookup"><span data-stu-id="d6256-172">Inserts HTML at the specified location.</span></span> <span data-ttu-id="d6256-173">O valor insertLocation pode ser ' replace ', ' Start ', ' End ', ' before ' ou ' after '.</span><span class="sxs-lookup"><span data-stu-id="d6256-173">The insertLocation value can be 'Replace', 'Start', 'End', 'Before', or 'After'.</span></span>

      <span data-ttu-id="d6256-174">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d6256-174">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertHtml(html, insertLocationString)'
    fullName: 'insertHtml(html, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertHtml(html: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: html
          description: <span data-ttu-id="d6256-175">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="d6256-175">Required.</span></span> <span data-ttu-id="d6256-176">O HTML a ser inserido.</span><span class="sxs-lookup"><span data-stu-id="d6256-176">The HTML to be inserted.</span></span>
          type:
            - string
        - id: insertLocationString
          description: '<span data-ttu-id="d6256-177">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="d6256-177">Required.</span></span> <span data-ttu-id="d6256-178">O valor pode ser '' replace '', '' Start '', '' End '', '' before '' ou '' after ''.</span><span class="sxs-lookup"><span data-stu-id="d6256-178">The value can be ''Replace'', ''Start'', ''End'', ''Before'', or ''After''.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.Range#insertInlinePictureFromBase64:member(1)'
    summary: |-
      <span data-ttu-id="d6256-179">Insere uma imagem no local especificado.</span><span class="sxs-lookup"><span data-stu-id="d6256-179">Inserts a picture at the specified location.</span></span> <span data-ttu-id="d6256-180">O valor insertLocation pode ser ' replace ', ' Start ', ' End ', ' before ' ou ' after '.</span><span class="sxs-lookup"><span data-stu-id="d6256-180">The insertLocation value can be 'Replace', 'Start', 'End', 'Before', or 'After'.</span></span>

      <span data-ttu-id="d6256-181">\[[Conjunto de APIs: WordApi 1,2](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d6256-181">\[ [API set: WordApi 1.2](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertInlinePictureFromBase64(base64EncodedImage, insertLocation)'
    fullName: 'insertInlinePictureFromBase64(base64EncodedImage, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertInlinePictureFromBase64(base64EncodedImage: string, insertLocation: Word.InsertLocation): Word.InlinePicture;'
      return:
        type:
          - 'word!Word.InlinePicture:class'
        description: ''
      parameters:
        - id: base64EncodedImage
          description: <span data-ttu-id="d6256-182">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="d6256-182">Required.</span></span> <span data-ttu-id="d6256-183">A imagem codificada em base64 a ser inserida.</span><span class="sxs-lookup"><span data-stu-id="d6256-183">The base64 encoded image to be inserted.</span></span>
          type:
            - string
        - id: insertLocation
          description: '<span data-ttu-id="d6256-184">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="d6256-184">Required.</span></span> <span data-ttu-id="d6256-185">O valor pode ser '' replace '', '' Start '', '' End '', '' before '' ou '' after ''.</span><span class="sxs-lookup"><span data-stu-id="d6256-185">The value can be ''Replace'', ''Start'', ''End'', ''Before'', or ''After''.</span></span>'
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.Range#insertInlinePictureFromBase64:member(2)'
    summary: |-
      <span data-ttu-id="d6256-186">Insere uma imagem no local especificado.</span><span class="sxs-lookup"><span data-stu-id="d6256-186">Inserts a picture at the specified location.</span></span> <span data-ttu-id="d6256-187">O valor insertLocation pode ser ' replace ', ' Start ', ' End ', ' before ' ou ' after '.</span><span class="sxs-lookup"><span data-stu-id="d6256-187">The insertLocation value can be 'Replace', 'Start', 'End', 'Before', or 'After'.</span></span>

      <span data-ttu-id="d6256-188">\[[Conjunto de APIs: WordApi 1,2](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d6256-188">\[ [API set: WordApi 1.2](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertInlinePictureFromBase64(base64EncodedImage, insertLocationString)'
    fullName: 'insertInlinePictureFromBase64(base64EncodedImage, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertInlinePictureFromBase64(base64EncodedImage: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.InlinePicture;'
      return:
        type:
          - 'word!Word.InlinePicture:class'
        description: ''
      parameters:
        - id: base64EncodedImage
          description: <span data-ttu-id="d6256-189">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="d6256-189">Required.</span></span> <span data-ttu-id="d6256-190">A imagem codificada em base64 a ser inserida.</span><span class="sxs-lookup"><span data-stu-id="d6256-190">The base64 encoded image to be inserted.</span></span>
          type:
            - string
        - id: insertLocationString
          description: '<span data-ttu-id="d6256-191">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="d6256-191">Required.</span></span> <span data-ttu-id="d6256-192">O valor pode ser '' replace '', '' Start '', '' End '', '' before '' ou '' after ''.</span><span class="sxs-lookup"><span data-stu-id="d6256-192">The value can be ''Replace'', ''Start'', ''End'', ''Before'', or ''After''.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.Range#insertOoxml:member(1)'
    summary: |-
      <span data-ttu-id="d6256-193">Insere um formato OOXML no local especificado.</span><span class="sxs-lookup"><span data-stu-id="d6256-193">Inserts OOXML at the specified location.</span></span> <span data-ttu-id="d6256-194">O valor insertLocation pode ser ' replace ', ' Start ', ' End ', ' before ' ou ' after '.</span><span class="sxs-lookup"><span data-stu-id="d6256-194">The insertLocation value can be 'Replace', 'Start', 'End', 'Before', or 'After'.</span></span>

      <span data-ttu-id="d6256-195">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d6256-195">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertOoxml(ooxml, insertLocation)'
    fullName: 'insertOoxml(ooxml, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertOoxml(ooxml: string, insertLocation: Word.InsertLocation): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="d6256-196">Exemplos</span><span class="sxs-lookup"><span data-stu-id="d6256-196">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a command to insert OOXML in to the beginning of the range.
              range.insertOoxml("<pkg:package xmlns:pkg='http://schemas.microsoft.com/office/2006/xmlPackage'><pkg:part pkg:name='/_rels/.rels' pkg:contentType='application/vnd.openxmlformats-package.relationships+xml' pkg:padding='512'><pkg:xmlData><Relationships xmlns='http://schemas.openxmlformats.org/package/2006/relationships'><Relationship Id='rId1' Type='http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument' Target='word/document.xml'/></Relationships></pkg:xmlData></pkg:part><pkg:part pkg:name='/word/document.xml' pkg:contentType='application/vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml'><pkg:xmlData><w:document xmlns:w='http://schemas.openxmlformats.org/wordprocessingml/2006/main' ><w:body><w:p><w:pPr><w:spacing w:before='360' w:after='0' w:line='480' w:lineRule='auto'/><w:rPr><w:color w:val='70AD47' w:themeColor='accent6'/><w:sz w:val='28'/></w:rPr></w:pPr><w:r><w:rPr><w:color w:val='70AD47' w:themeColor='accent6'/><w:sz w:val='28'/></w:rPr><w:t>This text has formatting directly applied to achieve its font size, color, line spacing, and paragraph spacing.</w:t></w:r></w:p></w:body></w:document></pkg:xmlData></pkg:part></pkg:package>", Word.InsertLocation.start);

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('OOXML added to the beginning of the range.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });

          // Read "Create better add-ins for Word with Office Open XML" for guidance on working with OOXML.
          // https://docs.microsoft.com/office/dev/add-ins/word/create-better-add-ins-for-word-with-office-open-xml
          ```
      parameters:
        - id: ooxml
          description: <span data-ttu-id="d6256-197">Obrigatória.</span><span class="sxs-lookup"><span data-stu-id="d6256-197">Required.</span></span> <span data-ttu-id="d6256-198">O formato OOXML a inserir.</span><span class="sxs-lookup"><span data-stu-id="d6256-198">The OOXML to be inserted.</span></span>
          type:
            - string
        - id: insertLocation
          description: '<span data-ttu-id="d6256-199">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="d6256-199">Required.</span></span> <span data-ttu-id="d6256-200">O valor pode ser '' replace '', '' Start '', '' End '', '' before '' ou '' after ''.</span><span class="sxs-lookup"><span data-stu-id="d6256-200">The value can be ''Replace'', ''Start'', ''End'', ''Before'', or ''After''.</span></span>'
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.Range#insertOoxml:member(2)'
    summary: |-
      <span data-ttu-id="d6256-201">Insere um formato OOXML no local especificado.</span><span class="sxs-lookup"><span data-stu-id="d6256-201">Inserts OOXML at the specified location.</span></span> <span data-ttu-id="d6256-202">O valor insertLocation pode ser ' replace ', ' Start ', ' End ', ' before ' ou ' after '.</span><span class="sxs-lookup"><span data-stu-id="d6256-202">The insertLocation value can be 'Replace', 'Start', 'End', 'Before', or 'After'.</span></span>

      <span data-ttu-id="d6256-203">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d6256-203">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertOoxml(ooxml, insertLocationString)'
    fullName: 'insertOoxml(ooxml, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertOoxml(ooxml: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: ooxml
          description: <span data-ttu-id="d6256-204">Obrigatória.</span><span class="sxs-lookup"><span data-stu-id="d6256-204">Required.</span></span> <span data-ttu-id="d6256-205">O formato OOXML a inserir.</span><span class="sxs-lookup"><span data-stu-id="d6256-205">The OOXML to be inserted.</span></span>
          type:
            - string
        - id: insertLocationString
          description: '<span data-ttu-id="d6256-206">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="d6256-206">Required.</span></span> <span data-ttu-id="d6256-207">O valor pode ser '' replace '', '' Start '', '' End '', '' before '' ou '' after ''.</span><span class="sxs-lookup"><span data-stu-id="d6256-207">The value can be ''Replace'', ''Start'', ''End'', ''Before'', or ''After''.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.Range#insertParagraph:member(1)'
    summary: |-
      <span data-ttu-id="d6256-208">Insere um parágrafo no local especificado.</span><span class="sxs-lookup"><span data-stu-id="d6256-208">Inserts a paragraph at the specified location.</span></span> <span data-ttu-id="d6256-209">O valor de insertLocation pode ser 'Before' ou 'After'.</span><span class="sxs-lookup"><span data-stu-id="d6256-209">The insertLocation value can be 'Before' or 'After'.</span></span>

      <span data-ttu-id="d6256-210">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d6256-210">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertParagraph(paragraphText, insertLocation)'
    fullName: 'insertParagraph(paragraphText, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertParagraph(paragraphText: string, insertLocation: Word.InsertLocation): Word.Paragraph;'
      return:
        type:
          - 'word!Word.Paragraph:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="d6256-211">Exemplos</span><span class="sxs-lookup"><span data-stu-id="d6256-211">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a command to insert the paragraph after the range.
              range.insertParagraph('Content of a new paragraph', Word.InsertLocation.after);

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Paragraph added to the end of the range.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: paragraphText
          description: <span data-ttu-id="d6256-212">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="d6256-212">Required.</span></span> <span data-ttu-id="d6256-213">O texto do parágrafo a ser inserido.</span><span class="sxs-lookup"><span data-stu-id="d6256-213">The paragraph text to be inserted.</span></span>
          type:
            - string
        - id: insertLocation
          description: <span data-ttu-id="d6256-214">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="d6256-214">Required.</span></span> <span data-ttu-id="d6256-215">O valor pode ser 'Before' ou 'After'.</span><span class="sxs-lookup"><span data-stu-id="d6256-215">The value can be 'Before' or 'After'.</span></span>
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.Range#insertParagraph:member(2)'
    summary: |-
      <span data-ttu-id="d6256-216">Insere um parágrafo no local especificado.</span><span class="sxs-lookup"><span data-stu-id="d6256-216">Inserts a paragraph at the specified location.</span></span> <span data-ttu-id="d6256-217">O valor de insertLocation pode ser 'Before' ou 'After'.</span><span class="sxs-lookup"><span data-stu-id="d6256-217">The insertLocation value can be 'Before' or 'After'.</span></span>

      <span data-ttu-id="d6256-218">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d6256-218">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertParagraph(paragraphText, insertLocationString)'
    fullName: 'insertParagraph(paragraphText, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertParagraph(paragraphText: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Paragraph;'
      return:
        type:
          - 'word!Word.Paragraph:class'
        description: ''
      parameters:
        - id: paragraphText
          description: <span data-ttu-id="d6256-219">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="d6256-219">Required.</span></span> <span data-ttu-id="d6256-220">O texto do parágrafo a ser inserido.</span><span class="sxs-lookup"><span data-stu-id="d6256-220">The paragraph text to be inserted.</span></span>
          type:
            - string
        - id: insertLocationString
          description: <span data-ttu-id="d6256-221">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="d6256-221">Required.</span></span> <span data-ttu-id="d6256-222">O valor pode ser 'Before' ou 'After'.</span><span class="sxs-lookup"><span data-stu-id="d6256-222">The value can be 'Before' or 'After'.</span></span>
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.Range#insertText:member(1)'
    summary: |-
      <span data-ttu-id="d6256-223">Insere um texto no local especificado.</span><span class="sxs-lookup"><span data-stu-id="d6256-223">Inserts text at the specified location.</span></span> <span data-ttu-id="d6256-224">O valor insertLocation pode ser ' replace ', ' Start ', ' End ', ' before ' ou ' after '.</span><span class="sxs-lookup"><span data-stu-id="d6256-224">The insertLocation value can be 'Replace', 'Start', 'End', 'Before', or 'After'.</span></span>

      <span data-ttu-id="d6256-225">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d6256-225">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertText(text, insertLocation)'
    fullName: 'insertText(text, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertText(text: string, insertLocation: Word.InsertLocation): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="d6256-226">Exemplos</span><span class="sxs-lookup"><span data-stu-id="d6256-226">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a command to insert the paragraph at the end of the range.
              range.insertText('New text inserted into the range.', Word.InsertLocation.end);

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Text added to the end of the range.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: text
          description: <span data-ttu-id="d6256-227">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="d6256-227">Required.</span></span> <span data-ttu-id="d6256-228">Texto a inserir.</span><span class="sxs-lookup"><span data-stu-id="d6256-228">Text to be inserted.</span></span>
          type:
            - string
        - id: insertLocation
          description: '<span data-ttu-id="d6256-229">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="d6256-229">Required.</span></span> <span data-ttu-id="d6256-230">O valor pode ser '' replace '', '' Start '', '' End '', '' before '' ou '' after ''.</span><span class="sxs-lookup"><span data-stu-id="d6256-230">The value can be ''Replace'', ''Start'', ''End'', ''Before'', or ''After''.</span></span>'
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.Range#insertText:member(2)'
    summary: |-
      <span data-ttu-id="d6256-231">Insere um texto no local especificado.</span><span class="sxs-lookup"><span data-stu-id="d6256-231">Inserts text at the specified location.</span></span> <span data-ttu-id="d6256-232">O valor insertLocation pode ser ' replace ', ' Start ', ' End ', ' before ' ou ' after '.</span><span class="sxs-lookup"><span data-stu-id="d6256-232">The insertLocation value can be 'Replace', 'Start', 'End', 'Before', or 'After'.</span></span>

      <span data-ttu-id="d6256-233">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d6256-233">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertText(text, insertLocationString)'
    fullName: 'insertText(text, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertText(text: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: text
          description: <span data-ttu-id="d6256-234">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="d6256-234">Required.</span></span> <span data-ttu-id="d6256-235">Texto a inserir.</span><span class="sxs-lookup"><span data-stu-id="d6256-235">Text to be inserted.</span></span>
          type:
            - string
        - id: insertLocationString
          description: '<span data-ttu-id="d6256-236">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="d6256-236">Required.</span></span> <span data-ttu-id="d6256-237">O valor pode ser '' replace '', '' Start '', '' End '', '' before '' ou '' after ''.</span><span class="sxs-lookup"><span data-stu-id="d6256-237">The value can be ''Replace'', ''Start'', ''End'', ''Before'', or ''After''.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.Range#load:member(1)'
    summary: <span data-ttu-id="d6256-238">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="d6256-238">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="d6256-239">Você deve chamar "context.sync()" antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="d6256-239">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="d6256-240">Além dessa assinatura, este método tem as seguintes assinaturas:</span><span class="sxs-lookup"><span data-stu-id="d6256-240">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="d6256-241">`load(option?: string | string[]): Word.Range`-Where Option é uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="d6256-241">`load(option?: string | string[]): Word.Range` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="d6256-242">`load(option?: { select?: string; expand?: string; }): Word.Range`-Onde Option. Select é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades a serem carregadas, e Options. Expand é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades de navegação a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="d6256-242">`load(option?: { select?: string; expand?: string; }): Word.Range` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="d6256-243">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.Range`– Disponível somente nos tipos de coleção.</span><span class="sxs-lookup"><span data-stu-id="d6256-243">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.Range` - Only available on collection types.</span></span> <span data-ttu-id="d6256-244">É semelhante à assinatura anterior.</span><span class="sxs-lookup"><span data-stu-id="d6256-244">It is similar to the preceding signature.</span></span> <span data-ttu-id="d6256-245">Option. Top especifica o número máximo de itens de coleta que podem ser incluídos no resultado.</span><span class="sxs-lookup"><span data-stu-id="d6256-245">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="d6256-246">Option. Skip especifica o número de itens que devem ser ignorados e não incluídos no resultado.</span><span class="sxs-lookup"><span data-stu-id="d6256-246">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="d6256-247">Se Option. Top for especificado, o conjunto de resultados será iniciado depois de ignorar o número de itens especificado.</span><span class="sxs-lookup"><span data-stu-id="d6256-247">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Word.Interfaces.RangeLoadOptions): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'word!Word.Interfaces.RangeLoadOptions:interface'
  - uid: 'word!Word.Range#load:member(2)'
    summary: <span data-ttu-id="d6256-248">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="d6256-248">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="d6256-249">Você deve chamar `context.sync()` antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="d6256-249">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="d6256-250">Uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="d6256-250">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'word!Word.Range#load:member(3)'
    summary: <span data-ttu-id="d6256-251">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="d6256-251">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="d6256-252">Você deve chamar `context.sync()` antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="d6256-252">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="d6256-253">Onde propertyNamesAndPaths. Select é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades a serem carregadas e propertyNamesAndPaths. Expand é uma sequência de caracteres delimitada por vírgula que especifica as propriedades de navegação a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="d6256-253">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: 'word!Word.Range#paragraphs:member'
    summary: |-
      <span data-ttu-id="d6256-254">Obtém a coleção de objetos Paragraph no intervalo.</span><span class="sxs-lookup"><span data-stu-id="d6256-254">Gets the collection of paragraph objects in the range.</span></span> <span data-ttu-id="d6256-255">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="d6256-255">Read-only.</span></span>

      <span data-ttu-id="d6256-256">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d6256-256">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: paragraphs
    fullName: paragraphs
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly paragraphs: Word.ParagraphCollection;'
      return:
        type:
          - 'word!Word.ParagraphCollection:class'
  - uid: 'word!Word.Range#parentContentControl:member'
    summary: |-
      <span data-ttu-id="d6256-257">Obtém o controle de conteúdo que inclui o intervalo.</span><span class="sxs-lookup"><span data-stu-id="d6256-257">Gets the content control that contains the range.</span></span> <span data-ttu-id="d6256-258">Gera se não há um controle de conteúdo pai.</span><span class="sxs-lookup"><span data-stu-id="d6256-258">Throws if there isn't a parent content control.</span></span> <span data-ttu-id="d6256-259">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="d6256-259">Read-only.</span></span>

      <span data-ttu-id="d6256-260">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d6256-260">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: parentContentControl
    fullName: parentContentControl
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentContentControl: Word.ContentControl;'
      return:
        type:
          - 'word!Word.ContentControl:class'
  - uid: 'word!Word.Range#search:member(1)'
    summary: |-
      <span data-ttu-id="d6256-261">Realiza uma pesquisa com o Searchoptions especificado no escopo do objeto Range.</span><span class="sxs-lookup"><span data-stu-id="d6256-261">Performs a search with the specified SearchOptions on the scope of the range object.</span></span> <span data-ttu-id="d6256-262">Os resultados da pesquisa são uma coleção de objetos Range.</span><span class="sxs-lookup"><span data-stu-id="d6256-262">The search results are a collection of range objects.</span></span>

      <span data-ttu-id="d6256-263">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d6256-263">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'search(searchText, searchOptions)'
    fullName: 'search(searchText, searchOptions)'
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        search(searchText: string, searchOptions?: Word.SearchOptions | {
                    ignorePunct?: boolean;
                    ignoreSpace?: boolean;
                    matchCase?: boolean;
                    matchPrefix?: boolean;
                    matchSuffix?: boolean;
                    matchWholeWord?: boolean;
                    matchWildcards?: boolean;
                }): Word.RangeCollection;
      return:
        type:
          - 'word!Word.RangeCollection:class'
        description: ''
      parameters:
        - id: searchText
          description: <span data-ttu-id="d6256-264">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="d6256-264">Required.</span></span> <span data-ttu-id="d6256-265">O texto da pesquisa.</span><span class="sxs-lookup"><span data-stu-id="d6256-265">The search text.</span></span>
          type:
            - string
        - id: searchOptions
          description: <span data-ttu-id="d6256-266">Opcional.</span><span class="sxs-lookup"><span data-stu-id="d6256-266">Optional.</span></span> <span data-ttu-id="d6256-267">Opções da pesquisa.</span><span class="sxs-lookup"><span data-stu-id="d6256-267">Options for the search.</span></span>
          type:
            - 'word!Word.Range#search~0:complex'
  - uid: 'word!Word.Range#select:member(1)'
    summary: |-
      <span data-ttu-id="d6256-268">Seleciona e navega na interface do usuário do Word até o intervalo.</span><span class="sxs-lookup"><span data-stu-id="d6256-268">Selects and navigates the Word UI to the range.</span></span>

      <span data-ttu-id="d6256-269">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d6256-269">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: select(selectionMode)
    fullName: select(selectionMode)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'select(selectionMode?: Word.SelectionMode): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="d6256-270">Exemplos</span><span class="sxs-lookup"><span data-stu-id="d6256-270">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a command to insert HTML in to the beginning of the range.
              range.insertHtml('<strong>This is text inserted with range.insertHtml()</strong>', Word.InsertLocation.start);

              // Queue a command to select the HTML that was inserted.
              range.select();

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Selected the range.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: selectionMode
          description: '<span data-ttu-id="d6256-271">Opcional.</span><span class="sxs-lookup"><span data-stu-id="d6256-271">Optional.</span></span> <span data-ttu-id="d6256-272">O modo de seleção pode ser ''Select'', ''Start'' ou ''End''.</span><span class="sxs-lookup"><span data-stu-id="d6256-272">The selection mode can be ''Select'', ''Start'', or ''End''.</span></span> <span data-ttu-id="d6256-273">''Select'' é o padrão.</span><span class="sxs-lookup"><span data-stu-id="d6256-273">''Select'' is the default.</span></span>'
          type:
            - 'word!Word.SelectionMode:enum'
  - uid: 'word!Word.Range#select:member(2)'
    summary: |-
      <span data-ttu-id="d6256-274">Seleciona e navega na interface do usuário do Word até o intervalo.</span><span class="sxs-lookup"><span data-stu-id="d6256-274">Selects and navigates the Word UI to the range.</span></span>

      <span data-ttu-id="d6256-275">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d6256-275">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: select(selectionModeString)
    fullName: select(selectionModeString)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'select(selectionModeString?: "Select" | "Start" | "End"): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: selectionModeString
          description: '<span data-ttu-id="d6256-276">Opcional.</span><span class="sxs-lookup"><span data-stu-id="d6256-276">Optional.</span></span> <span data-ttu-id="d6256-277">O modo de seleção pode ser ''Select'', ''Start'' ou ''End''.</span><span class="sxs-lookup"><span data-stu-id="d6256-277">The selection mode can be ''Select'', ''Start'', or ''End''.</span></span> <span data-ttu-id="d6256-278">''Select'' é o padrão.</span><span class="sxs-lookup"><span data-stu-id="d6256-278">''Select'' is the default.</span></span>'
          type:
            - '"Select" | "Start" | "End"'
  - uid: 'word!Word.Range#set:member(1)'
    summary: '<span data-ttu-id="d6256-279">Define várias propriedades de um objeto ao mesmo tempo.</span><span class="sxs-lookup"><span data-stu-id="d6256-279">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="d6256-280">Você pode passar um objeto simples com as propriedades apropriadas ou outro objeto API do mesmo tipo.</span><span class="sxs-lookup"><span data-stu-id="d6256-280">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="d6256-281">Este método tem a seguinte assinatura adicional:</span><span class="sxs-lookup"><span data-stu-id="d6256-281">This method has the following additional signature:</span></span>

      `set(properties: Word.Range): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.RangeUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="d6256-282">Um objeto JavaScript com propriedades que são estruturadas isomorphically para as propriedades do objeto no qual o método é chamado.</span><span class="sxs-lookup"><span data-stu-id="d6256-282">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - 'word!Word.Interfaces.RangeUpdateData:interface'
        - id: options
          description: <span data-ttu-id="d6256-283">Fornece uma opção para suprimir erros se o objeto Properties tentar definir qualquer propriedade somente leitura.</span><span class="sxs-lookup"><span data-stu-id="d6256-283">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - 'word!OfficeExtension.UpdateOptions:interface'
  - uid: 'word!Word.Range#set:member(2)'
    summary: '<span data-ttu-id="d6256-284">Define várias propriedades no objeto ao mesmo tempo, com base em um objeto carregado existente.</span><span class="sxs-lookup"><span data-stu-id="d6256-284">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Word.Range): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'word!Word.Range:class'
  - uid: 'word!Word.Range#style:member'
    summary: |-
      <span data-ttu-id="d6256-285">Obtém ou define o nome do estilo para o intervalo.</span><span class="sxs-lookup"><span data-stu-id="d6256-285">Gets or sets the style name for the range.</span></span> <span data-ttu-id="d6256-286">Use esta propriedade de estilos personalizados e nomes de estilo localizados.</span><span class="sxs-lookup"><span data-stu-id="d6256-286">Use this property for custom styles and localized style names.</span></span> <span data-ttu-id="d6256-287">Para usar os estilos internos que são portáteis entre localidades, confira a propriedade "styleBuiltIn".</span><span class="sxs-lookup"><span data-stu-id="d6256-287">To use the built-in styles that are portable between locales, see the "styleBuiltIn" property.</span></span>

      <span data-ttu-id="d6256-288">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d6256-288">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: style
    fullName: style
    langs:
      - typeScript
    type: property
    syntax:
      content: 'style: string;'
      return:
        type:
          - string
  - uid: 'word!Word.Range#text:member'
    summary: |-
      <span data-ttu-id="d6256-289">Obtém o texto do intervalo.</span><span class="sxs-lookup"><span data-stu-id="d6256-289">Gets the text of the range.</span></span> <span data-ttu-id="d6256-290">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="d6256-290">Read-only.</span></span>

      <span data-ttu-id="d6256-291">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d6256-291">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: text
    fullName: text
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly text: string;'
      return:
        type:
          - string
  - uid: 'word!Word.Range#toJSON:member(1)'
    summary: '<span data-ttu-id="d6256-292">Substitui o método `toJSON()` JavaScript para fornecer uma saída mais útil quando um objeto API é passado para`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="d6256-292">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="d6256-293">.</span><span class="sxs-lookup"><span data-stu-id="d6256-293"></span></span> <span data-ttu-id="d6256-294">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="d6256-294"></span></span><!-- --><span data-ttu-id="d6256-295">, por sua vez, chama `toJSON` o método do objeto que é passado para ele.) Enquanto o objeto Word. Range original é um objeto API, o `toJSON` método retorna um objeto JavaScript simples (digitado como`Word.Interfaces.RangeData`</span><span class="sxs-lookup"><span data-stu-id="d6256-295">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Word.Range object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.RangeData`</span></span><!-- --><span data-ttu-id="d6256-296">) que contém cópias superficiais de qualquer propriedade filho carregada do objeto original.</span><span class="sxs-lookup"><span data-stu-id="d6256-296">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Word.Interfaces.RangeData;'
      return:
        type:
          - 'word!Word.Interfaces.RangeData:interface'
        description: ''
  - uid: 'word!Word.Range#track:member(1)'
    summary: '<span data-ttu-id="d6256-297">Acompanha o objeto para ajuste automático com base nas alterações adjacentes no documento.</span><span class="sxs-lookup"><span data-stu-id="d6256-297">Track the object for automatic adjustment based on surrounding changes in the document.</span></span> <span data-ttu-id="d6256-298">Essa chamada é uma abreviação de context.trackedObjects.add(thisObject).</span><span class="sxs-lookup"><span data-stu-id="d6256-298">This call is a shorthand for context.trackedObjects.add(thisObject).</span></span> <span data-ttu-id="d6256-299">Se você estiver usando esse objeto em chamadas ".sync" e fora da execução sequencial de um lote ".run" e receber um erro "InvalidObjectPath" ao definir uma propriedade ou invocar um método no objeto, era necessário ter adicionado o objeto à coleção de objetos rastreados quando o objeto foi criado pela primeira vez.</span><span class="sxs-lookup"><span data-stu-id="d6256-299">If you are using this object across ".sync" calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you needed to have added the object to the tracked object collection when the object was first created.</span></span>'
    name: track()
    fullName: track()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'track(): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
  - uid: 'word!Word.Range#untrack:member(1)'
    summary: '<span data-ttu-id="d6256-300">Libere a memória associada a este objeto, se ele já tiver sido rastreado anteriormente.</span><span class="sxs-lookup"><span data-stu-id="d6256-300">Release the memory associated with this object, if it has previously been tracked.</span></span> <span data-ttu-id="d6256-301">Essa chamada é uma abreviação de context.trackedObjects.remove(thisObject).</span><span class="sxs-lookup"><span data-stu-id="d6256-301">This call is shorthand for context.trackedObjects.remove(thisObject).</span></span> <span data-ttu-id="d6256-302">Ter muitos objetos rastreados desacelera o aplicativo host, por isso, lembre-se de liberar todos os objetos adicionados após usá-los.</span><span class="sxs-lookup"><span data-stu-id="d6256-302">Having many tracked objects slows down the host application, so please remember to free any objects you add, once you''re done using them.</span></span> <span data-ttu-id="d6256-303">Você precisa chamar "context.sync()" antes da liberação da memória entrar em vigor.</span><span class="sxs-lookup"><span data-stu-id="d6256-303">You will need to call "context.sync()" before the memory release takes effect.</span></span>'
    name: untrack()
    fullName: untrack()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'untrack(): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
references:
  - uid: 'word!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'word!Word.ContentControlCollection:class'
    name: Word.ContentControlCollection
  - uid: 'word!Word.RequestContext:class'
    name: RequestContext
  - uid: 'word!Word.Font:class'
    name: Word.Font
  - uid: 'word!Word.Range#getHtml~0:complex'
    name: OfficeExtension.ClientResult<string>
    fullName: OfficeExtension.ClientResult<string>
    spec.typeScript:
      - uid: 'word!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <string>
        fullName: <string>
  - uid: 'word!Word.Range#getOoxml~0:complex'
    name: OfficeExtension.ClientResult<string>
    fullName: OfficeExtension.ClientResult<string>
    spec.typeScript:
      - uid: 'word!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <string>
        fullName: <string>
  - uid: 'word!Word.InlinePictureCollection:class'
    name: Word.InlinePictureCollection
  - uid: 'word!Word.BreakType:enum'
    name: Word.BreakType
  - uid: 'word!Word.InsertLocation:enum'
    name: Word.InsertLocation
  - uid: 'word!Word.ContentControl:class'
    name: Word.ContentControl
  - uid: 'word!Word.Range:class'
    name: Word.Range
  - uid: 'word!Word.InlinePicture:class'
    name: Word.InlinePicture
  - uid: 'word!Word.Paragraph:class'
    name: Word.Paragraph
  - uid: 'word!Word.Interfaces.RangeLoadOptions:interface'
    name: Word.Interfaces.RangeLoadOptions
  - uid: 'word!Word.ParagraphCollection:class'
    name: Word.ParagraphCollection
  - uid: 'word!Word.RangeCollection:class'
    name: Word.RangeCollection
  - uid: 'word!Word.Range#search~0:complex'
    name: |-
      Word.SearchOptions | {
                  ignorePunct?: boolean;
                  ignoreSpace?: boolean;
                  matchCase?: boolean;
                  matchPrefix?: boolean;
                  matchSuffix?: boolean;
                  matchWholeWord?: boolean;
                  matchWildcards?: boolean;
              }
    fullName: |-
      Word.SearchOptions | {
                  ignorePunct?: boolean;
                  ignoreSpace?: boolean;
                  matchCase?: boolean;
                  matchPrefix?: boolean;
                  matchSuffix?: boolean;
                  matchWholeWord?: boolean;
                  matchWildcards?: boolean;
              }
    spec.typeScript:
      - uid: 'word!Word.SearchOptions:class'
        name: Word.SearchOptions
        fullName: Word.SearchOptions
      - name: |2-
           | {
                      ignorePunct?: boolean;
                      ignoreSpace?: boolean;
                      matchCase?: boolean;
                      matchPrefix?: boolean;
                      matchSuffix?: boolean;
                      matchWholeWord?: boolean;
                      matchWildcards?: boolean;
                  }
        fullName: |2-
           | {
                      ignorePunct?: boolean;
                      ignoreSpace?: boolean;
                      matchCase?: boolean;
                      matchPrefix?: boolean;
                      matchSuffix?: boolean;
                      matchWholeWord?: boolean;
                      matchWildcards?: boolean;
                  }
  - uid: 'word!Word.SelectionMode:enum'
    name: Word.SelectionMode
  - uid: 'word!Word.Interfaces.RangeUpdateData:interface'
    name: Interfaces.RangeUpdateData
  - uid: 'word!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'word!Word.Interfaces.RangeData:interface'
    name: Word.Interfaces.RangeData