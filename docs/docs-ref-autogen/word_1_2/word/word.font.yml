### YamlMime:UniversalReference
items:
  - uid: 'word!Word.Font:class'
    summary: |-
      Representa uma fonte.

      \[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: Word.Font
    fullName: Word.Font
    langs:
      - typeScript
    type: class
    extends:
      - 'office!OfficeExtension.ClientObject:class'
    package: word!
    children:
      - 'word!Word.Font#bold:member'
      - 'word!Word.Font#color:member'
      - 'word!Word.Font#context:member'
      - 'word!Word.Font#doubleStrikeThrough:member'
      - 'word!Word.Font#highlightColor:member'
      - 'word!Word.Font#italic:member'
      - 'word!Word.Font#load:member(1)'
      - 'word!Word.Font#load:member(2)'
      - 'word!Word.Font#load:member(3)'
      - 'word!Word.Font#name:member'
      - 'word!Word.Font#set:member(1)'
      - 'word!Word.Font#set:member(2)'
      - 'word!Word.Font#size:member'
      - 'word!Word.Font#strikeThrough:member'
      - 'word!Word.Font#subscript:member'
      - 'word!Word.Font#superscript:member'
      - 'word!Word.Font#toJSON:member(1)'
      - 'word!Word.Font#track:member(1)'
      - 'word!Word.Font#underline:member'
      - 'word!Word.Font#untrack:member(1)'
  - uid: 'word!Word.Font#bold:member'
    summary: |-
      Obtém ou define um valor que indica se a fonte está em negrito. True quando a fonte é formatada como negrito; caso contrário, false.

      \[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: bold
    fullName: bold
    langs:
      - typeScript
    type: property
    syntax:
      content: 'bold: boolean;'
      return:
        type:
          - boolean
        description: |-


          #### <a name="examples"></a>Exemplos

          ```javascript
          // Bold format text
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a range proxy object for the current selection.
              var selection = context.document.getSelection();

              // Queue a command to make the current selection bold.
              selection.font.bold = true;

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('The selection is now bold.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'word!Word.Font#color:member'
    summary: |-
      Obtém ou define a cor da fonte especificada. Você pode fornecer o valor no formato ' \# RRGGBB ' ou o nome da cor.

      \[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: color
    fullName: color
    langs:
      - typeScript
    type: property
    syntax:
      content: 'color: string;'
      return:
        type:
          - string
        description: |-


          #### <a name="examples"></a>Exemplos

          ```javascript
          // Change the font color
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a range proxy object for the current selection.
              var selection = context.document.getSelection();

              // Queue a command to change the font color of the current selection.
              selection.font.color = 'blue';

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('The font color of the selection has been changed.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'word!Word.Font#context:member'
    summary: O contexto de solicitação associado ao objeto. Isso conecta o processo do suplemento ao processo do aplicativo host do Office.
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'word!Word.RequestContext:class'
  - uid: 'word!Word.Font#doubleStrikeThrough:member'
    summary: |-
      Obtém ou define um valor que indica se a fonte tem um tachado duplo. True quando a fonte é formatada como texto tachado duplo; caso contrário, false.

      \[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: doubleStrikeThrough
    fullName: doubleStrikeThrough
    langs:
      - typeScript
    type: property
    syntax:
      content: 'doubleStrikeThrough: boolean;'
      return:
        type:
          - boolean
  - uid: 'word!Word.Font#highlightColor:member'
    summary: |-
      Obtém ou define a cor de realce. Para defini-lo, use um valor no formato ' \# RRGGBB ' ou o nome da cor. Para remover a cor de realce, defina-a como NULL. A cor de realce retornada pode estar no \# formato ' RRGGBB ', uma cadeia de caracteres vazia para cores de realce mistas ou NULL para nenhuma cor de realce. * Observação * *: somente as cores de realce padrão estão disponíveis na área de trabalho do Office para Windows. Eles são "amarelo", "verde-limão", "turquesa", "rosa", "azul", "vermelho", "DarkBlue", "azul-petróleo", "verde", "roxo", "DarkRed", "Oliva", "cinza", "LightGray" e "preto". Quando o suplemento é executado no Office para área de trabalho do Windows, qualquer outra cor é convertida para a cor mais próxima quando aplicada à fonte.

      \[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: highlightColor
    fullName: highlightColor
    langs:
      - typeScript
    type: property
    syntax:
      content: 'highlightColor: string;'
      return:
        type:
          - string
        description: |-


          #### <a name="examples"></a>Exemplos

          ```javascript
          // Highlight selected text
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a range proxy object for the current selection.
              var selection = context.document.getSelection();

              // Queue a command to highlight the current selection.
              selection.font.highlightColor = '#FFFF00'; // Yellow

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('The selection has been highlighted.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'word!Word.Font#italic:member'
    summary: |-
      Obtém ou define um valor que indica se a fonte está em itálico. True quando a fonte está em itálico; caso contrário, false.

      \[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: italic
    fullName: italic
    langs:
      - typeScript
    type: property
    syntax:
      content: 'italic: boolean;'
      return:
        type:
          - boolean
  - uid: 'word!Word.Font#load:member(1)'
    summary: Coloca um comando na fila para carregar as propriedades especificadas do objeto. Você deve chamar `context.sync()` antes de ler as propriedades.
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Word.Interfaces.FontLoadOptions): Word.Font;'
      return:
        type:
          - 'word!Word.Font:class'
        description: ''
      parameters:
        - id: options
          description: Fornece opções para as propriedades do objeto a ser carregado.
          type:
            - 'word!Word.Interfaces.FontLoadOptions:interface'
  - uid: 'word!Word.Font#load:member(2)'
    summary: Coloca um comando na fila para carregar as propriedades especificadas do objeto. Você deve chamar `context.sync()` antes de ler as propriedades.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Word.Font;'
      return:
        type:
          - 'word!Word.Font:class'
        description: ''
      parameters:
        - id: propertyNames
          description: Uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.
          type:
            - 'string | string[]'
  - uid: 'word!Word.Font#load:member(3)'
    summary: Coloca um comando na fila para carregar as propriedades especificadas do objeto. Você deve chamar `context.sync()` antes de ler as propriedades.
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Word.Font;
      return:
        type:
          - 'word!Word.Font:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '`propertyNamesAndPaths.select`é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades a serem carregadas e `propertyNamesAndPaths.expand` é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades de navegação a serem carregadas.'
          type:
            - |-
              {
                          select?: string;
                          expand?: string;
                      }
  - uid: 'word!Word.Font#name:member'
    summary: |-
      Obtém ou define um valor que representa o nome da fonte.

      \[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: name
    fullName: name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'name: string;'
      return:
        type:
          - string
        description: |-


          #### <a name="examples"></a>Exemplos

          ```javascript
          // Change the font name
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a range proxy object for the current selection.
              var selection = context.document.getSelection();

              // Queue a command to change the current selection's font name.
              selection.font.name = 'Arial';

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('The font name has changed.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'word!Word.Font#set:member(1)'
    summary: Define várias propriedades de um objeto ao mesmo tempo. Você pode passar um objeto simples com as propriedades apropriadas ou outro objeto API do mesmo tipo.
    remarks: |-
      Este método tem a seguinte assinatura adicional:

      `set(properties: Word.Font): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.FontUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: Um objeto JavaScript com propriedades que são estruturadas isomorphically para as propriedades do objeto no qual o método é chamado.
          type:
            - 'word!Word.Interfaces.FontUpdateData:interface'
        - id: options
          description: Fornece uma opção para suprimir erros se o objeto Properties tentar definir qualquer propriedade somente leitura.
          type:
            - 'office!OfficeExtension.UpdateOptions:interface'
  - uid: 'word!Word.Font#set:member(2)'
    summary: 'Define várias propriedades no objeto ao mesmo tempo, com base em um objeto carregado existente.'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Word.Font): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'word!Word.Font:class'
  - uid: 'word!Word.Font#size:member'
    summary: |-
      Obtém ou define um valor que representa o tamanho da fonte em pontos.

      \[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: size
    fullName: size
    langs:
      - typeScript
    type: property
    syntax:
      content: 'size: number;'
      return:
        type:
          - number
        description: |-


          #### <a name="examples"></a>Exemplos

          ```javascript
          // Change the font size
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a range proxy object for the current selection.
              var selection = context.document.getSelection();

              // Queue a command to change the current selection's font size.
              selection.font.size = 20;

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('The font size has changed.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'word!Word.Font#strikeThrough:member'
    summary: |-
      Obtém ou define um valor que indica se a fonte tem um tachado. True quando a fonte é formatada como texto tachado; caso contrário, false.

      \[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: strikeThrough
    fullName: strikeThrough
    langs:
      - typeScript
    type: property
    syntax:
      content: 'strikeThrough: boolean;'
      return:
        type:
          - boolean
        description: |-


          #### <a name="examples"></a>Exemplos

          ```javascript
          // Strike format text
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a range proxy object for the current selection.
              var selection = context.document.getSelection();

              // Queue a command to strikethrough the font of the current selection.
              selection.font.strikeThrough = true;

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('The selection now has a strikethrough.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'word!Word.Font#subscript:member'
    summary: |-
      Obtém ou define um valor que indica se a fonte é um subscrito. True quando a fonte é formatada como subscrito; caso contrário, false.

      \[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: subscript
    fullName: subscript
    langs:
      - typeScript
    type: property
    syntax:
      content: 'subscript: boolean;'
      return:
        type:
          - boolean
  - uid: 'word!Word.Font#superscript:member'
    summary: |-
      Obtém ou define um valor que indica se a fonte é um sobrescrito. True quando a fonte é formatada como sobrescrito; caso contrário, false.

      \[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: superscript
    fullName: superscript
    langs:
      - typeScript
    type: property
    syntax:
      content: 'superscript: boolean;'
      return:
        type:
          - boolean
  - uid: 'word!Word.Font#toJSON:member(1)'
    summary: 'Substitui o `toJSON()` método JavaScript para fornecer uma saída mais útil quando um objeto API é passado para`JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, por sua vez, chama o `toJSON` método do objeto que é passado para ele.) Enquanto o objeto Word. Font original é um objeto API, o `toJSON` método retorna um objeto JavaScript simples (digitado como`Word.Interfaces.FontData`<!-- -->) que contém cópias superficiais de qualquer propriedade filho carregada do objeto original.'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Word.Interfaces.FontData;'
      return:
        type:
          - 'word!Word.Interfaces.FontData:interface'
        description: ''
  - uid: 'word!Word.Font#track:member(1)'
    summary: 'Acompanha o objeto para ajuste automático com base nas alterações adjacentes no documento. Essa chamada é uma abreviação para`context.trackedObjects.add(thisObject)`<!-- -->. Se você estiver usando esse objeto nas `.sync` chamadas e fora da execução seqüencial de um lote ". Run" e obter um erro "InvalidObjectPath" ao definir uma propriedade ou invocar um método no objeto, você precisa ter adicionado o objeto à coleção de objetos rastreados quando o objeto foi criado pela primeira vez.'
    name: track()
    fullName: track()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'track(): Word.Font;'
      return:
        type:
          - 'word!Word.Font:class'
        description: ''
  - uid: 'word!Word.Font#underline:member'
    summary: |-
      Obtém ou define um valor que indica o tipo de sublinhado da fonte. ' Nenhum ' se a fonte não estiver sublinhada.

      \[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: underline
    fullName: underline
    langs:
      - typeScript
    type: property
    syntax:
      content: 'underline: Word.UnderlineType | "Mixed" | "None" | "Hidden" | "DotLine" | "Single" | "Word" | "Double" | "Thick" | "Dotted" | "DottedHeavy" | "DashLine" | "DashLineHeavy" | "DashLineLong" | "DashLineLongHeavy" | "DotDashLine" | "DotDashLineHeavy" | "TwoDotDashLine" | "TwoDotDashLineHeavy" | "Wave" | "WaveHeavy" | "WaveDouble";'
      return:
        type:
          - 'word!Word.Font#underline~0:complex'
        description: |-


          #### <a name="examples"></a>Exemplos

          ```javascript
          // Underline format text
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a range proxy object for the current selection.
              var selection = context.document.getSelection();

              // Queue a command to underline the current selection.
              selection.font.underline = Word.UnderlineType.single;

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('The selection now has an underline style.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'word!Word.Font#untrack:member(1)'
    summary: 'Libere a memória associada a este objeto, se ele já tiver sido rastreado anteriormente. Essa chamada é abreviada para`context.trackedObjects.remove(thisObject)`<!-- -->. Ter muitos objetos rastreados desacelera o aplicativo host, por isso, lembre-se de liberar todos os objetos adicionados após usá-los. Você precisará chamar `context.sync()` antes que o lançamento da memória entre em vigor.'
    name: untrack()
    fullName: untrack()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'untrack(): Word.Font;'
      return:
        type:
          - 'word!Word.Font:class'
        description: ''
references:
  - uid: 'office!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'word!Word.RequestContext:class'
    name: RequestContext
  - uid: 'word!Word.Font:class'
    name: Word.Font
  - uid: 'word!Word.Interfaces.FontLoadOptions:interface'
    name: Word.Interfaces.FontLoadOptions
  - uid: 'word!Word.Interfaces.FontUpdateData:interface'
    name: Interfaces.FontUpdateData
  - uid: 'office!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'word!Word.Interfaces.FontData:interface'
    name: Word.Interfaces.FontData
  - uid: 'word!Word.Font#underline~0:complex'
    name: Word.UnderlineType | "Mixed" | "None" | "Hidden" | "DotLine" | "Single" | "Word" | "Double" | "Thick" | "Dotted" | "DottedHeavy" | "DashLine" | "DashLineHeavy" | "DashLineLong" | "DashLineLongHeavy" | "DotDashLine" | "DotDashLineHeavy" | "TwoDotDashLine" | "TwoDotDashLineHeavy" | "Wave" | "WaveHeavy" | "WaveDouble"
    fullName: Word.UnderlineType | "Mixed" | "None" | "Hidden" | "DotLine" | "Single" | "Word" | "Double" | "Thick" | "Dotted" | "DottedHeavy" | "DashLine" | "DashLineHeavy" | "DashLineLong" | "DashLineLongHeavy" | "DotDashLine" | "DotDashLineHeavy" | "TwoDotDashLine" | "TwoDotDashLineHeavy" | "Wave" | "WaveHeavy" | "WaveDouble"
    spec.typeScript:
      - uid: 'word!Word.UnderlineType:enum'
        name: Word.UnderlineType
        fullName: Word.UnderlineType
      - name: ' | "Mixed" | "None" | "Hidden" | "DotLine" | "Single" | "Word" | "Double" | "Thick" | "Dotted" | "DottedHeavy" | "DashLine" | "DashLineHeavy" | "DashLineLong" | "DashLineLongHeavy" | "DotDashLine" | "DotDashLineHeavy" | "TwoDotDashLine" | "TwoDotDashLineHeavy" | "Wave" | "WaveHeavy" | "WaveDouble"'
        fullName: ' | "Mixed" | "None" | "Hidden" | "DotLine" | "Single" | "Word" | "Double" | "Thick" | "Dotted" | "DottedHeavy" | "DashLine" | "DashLineHeavy" | "DashLineLong" | "DashLineLongHeavy" | "DotDashLine" | "DotDashLineHeavy" | "TwoDotDashLine" | "TwoDotDashLineHeavy" | "Wave" | "WaveHeavy" | "WaveDouble"'