### YamlMime:UniversalReference
items:
  - uid: 'word!Word.Paragraph:class'
    summary: |-
      <span data-ttu-id="41cb4-101">Representa um único parágrafo em uma seleção, intervalo, controle de conteúdo ou corpo do documento.</span><span class="sxs-lookup"><span data-stu-id="41cb4-101">Represents a single paragraph in a selection, range, content control, or document body.</span></span>

      <span data-ttu-id="41cb4-102">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="41cb4-102">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: Word.Paragraph
    fullName: Word.Paragraph
    langs:
      - typeScript
    type: class
    extends:
      - 'word!OfficeExtension.ClientObject:class'
    package: word!
    children:
      - 'word!Word.Paragraph#alignment:member'
      - 'word!Word.Paragraph#clear:member(1)'
      - 'word!Word.Paragraph#contentControls:member'
      - 'word!Word.Paragraph#context:member'
      - 'word!Word.Paragraph#delete:member(1)'
      - 'word!Word.Paragraph#firstLineIndent:member'
      - 'word!Word.Paragraph#font:member'
      - 'word!Word.Paragraph#getHtml:member(1)'
      - 'word!Word.Paragraph#getOoxml:member(1)'
      - 'word!Word.Paragraph#inlinePictures:member'
      - 'word!Word.Paragraph#insertBreak:member(1)'
      - 'word!Word.Paragraph#insertBreak:member(2)'
      - 'word!Word.Paragraph#insertContentControl:member(1)'
      - 'word!Word.Paragraph#insertFileFromBase64:member(1)'
      - 'word!Word.Paragraph#insertFileFromBase64:member(2)'
      - 'word!Word.Paragraph#insertHtml:member(1)'
      - 'word!Word.Paragraph#insertHtml:member(2)'
      - 'word!Word.Paragraph#insertInlinePictureFromBase64:member(1)'
      - 'word!Word.Paragraph#insertInlinePictureFromBase64:member(2)'
      - 'word!Word.Paragraph#insertOoxml:member(1)'
      - 'word!Word.Paragraph#insertOoxml:member(2)'
      - 'word!Word.Paragraph#insertParagraph:member(1)'
      - 'word!Word.Paragraph#insertParagraph:member(2)'
      - 'word!Word.Paragraph#insertText:member(1)'
      - 'word!Word.Paragraph#insertText:member(2)'
      - 'word!Word.Paragraph#leftIndent:member'
      - 'word!Word.Paragraph#lineSpacing:member'
      - 'word!Word.Paragraph#lineUnitAfter:member'
      - 'word!Word.Paragraph#lineUnitBefore:member'
      - 'word!Word.Paragraph#load:member(1)'
      - 'word!Word.Paragraph#load:member(2)'
      - 'word!Word.Paragraph#load:member(3)'
      - 'word!Word.Paragraph#outlineLevel:member'
      - 'word!Word.Paragraph#parentContentControl:member'
      - 'word!Word.Paragraph#rightIndent:member'
      - 'word!Word.Paragraph#search:member(1)'
      - 'word!Word.Paragraph#select:member(1)'
      - 'word!Word.Paragraph#select:member(2)'
      - 'word!Word.Paragraph#set:member(1)'
      - 'word!Word.Paragraph#set:member(2)'
      - 'word!Word.Paragraph#spaceAfter:member'
      - 'word!Word.Paragraph#spaceBefore:member'
      - 'word!Word.Paragraph#style:member'
      - 'word!Word.Paragraph#text:member'
      - 'word!Word.Paragraph#toJSON:member(1)'
      - 'word!Word.Paragraph#track:member(1)'
      - 'word!Word.Paragraph#untrack:member(1)'
  - uid: 'word!Word.Paragraph#alignment:member'
    summary: |-
      <span data-ttu-id="41cb4-103">Obtém ou define o alinhamento de um parágrafo.</span><span class="sxs-lookup"><span data-stu-id="41cb4-103">Gets or sets the alignment for a paragraph.</span></span> <span data-ttu-id="41cb4-104">O valor pode ser 'left', 'centered', 'right' ou 'justified'.</span><span class="sxs-lookup"><span data-stu-id="41cb4-104">The value can be 'left', 'centered', 'right', or 'justified'.</span></span>

      <span data-ttu-id="41cb4-105">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="41cb4-105">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: alignment
    fullName: alignment
    langs:
      - typeScript
    type: property
    syntax:
      content: 'alignment: Word.Alignment | "Mixed" | "Unknown" | "Left" | "Centered" | "Right" | "Justified";'
      return:
        type:
          - 'word!Word.Paragraph#alignment~0:complex'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="41cb4-106">Exemplos</span><span class="sxs-lookup"><span data-stu-id="41cb4-106">Examples</span></span>

          ```typescript
          await Word.run(async (context) => {
            // Centers last paragraph alignment.
            context.document.body.paragraphs.getLast().alignment = "Centered";

            await context.sync();
          });
          ```
  - uid: 'word!Word.Paragraph#clear:member(1)'
    summary: |-
      <span data-ttu-id="41cb4-107">Limpa o conteúdo do objeto Paragraph.</span><span class="sxs-lookup"><span data-stu-id="41cb4-107">Clears the contents of the paragraph object.</span></span> <span data-ttu-id="41cb4-108">O usuário pode executar a operação de desfazer no conteúdo limpo.</span><span class="sxs-lookup"><span data-stu-id="41cb4-108">The user can perform the undo operation on the cleared content.</span></span>

      <span data-ttu-id="41cb4-109">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="41cb4-109">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: clear()
    fullName: clear()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clear(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="41cb4-110">Exemplos</span><span class="sxs-lookup"><span data-stu-id="41cb4-110">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the paragraphs collection.
              var paragraphs = context.document.body.paragraphs;

              // Queue a command to load the style property for all of the paragraphs.
              context.load(paragraphs, 'style');

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {

                  // Queue a command to clear the contents of the first paragraph.
                  paragraphs.items[0].clear();

                  // Synchronize the document state by executing the queued commands,
                  // and return a promise to indicate task completion.
                  return context.sync().then(function () {
                      console.log('Cleared the contents of the first paragraph.');
                  });
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'word!Word.Paragraph#contentControls:member'
    summary: |-
      <span data-ttu-id="41cb4-111">Obtém a coleção de objetos de controle de conteúdo no parágrafo.</span><span class="sxs-lookup"><span data-stu-id="41cb4-111">Gets the collection of content control objects in the paragraph.</span></span> <span data-ttu-id="41cb4-112">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="41cb4-112">Read-only.</span></span>

      <span data-ttu-id="41cb4-113">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="41cb4-113">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: contentControls
    fullName: contentControls
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly contentControls: Word.ContentControlCollection;'
      return:
        type:
          - 'word!Word.ContentControlCollection:class'
  - uid: 'word!Word.Paragraph#context:member'
    summary: <span data-ttu-id="41cb4-114">O contexto de solicitação associado ao objeto.</span><span class="sxs-lookup"><span data-stu-id="41cb4-114">The request context associated with the object.</span></span> <span data-ttu-id="41cb4-115">Isso conecta o processo do suplemento ao processo do aplicativo host do Office.</span><span class="sxs-lookup"><span data-stu-id="41cb4-115">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'word!Word.RequestContext:class'
  - uid: 'word!Word.Paragraph#delete:member(1)'
    summary: |-
      <span data-ttu-id="41cb4-116">Exclui o parágrafo e o respectivo conteúdo do documento.</span><span class="sxs-lookup"><span data-stu-id="41cb4-116">Deletes the paragraph and its content from the document.</span></span>

      <span data-ttu-id="41cb4-117">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="41cb4-117">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="41cb4-118">Exemplos</span><span class="sxs-lookup"><span data-stu-id="41cb4-118">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the paragraphs collection.
              var paragraphs = context.document.body.paragraphs;

              // Queue a command to load the text property for all of the paragraphs.
              context.load(paragraphs, 'text');

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {

                  // Queue a command to delete the first paragraph.
                  paragraphs.items[0].delete();

                  // Synchronize the document state by executing the queued commands,
                  // and return a promise to indicate task completion.
                  return context.sync().then(function () {
                      console.log('Deleted the first paragraph.');
                  });
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'word!Word.Paragraph#firstLineIndent:member'
    summary: |-
      <span data-ttu-id="41cb4-p105">Retorna ou define o valor, em pontos, para um recuo deslocado ou da primeira linha. Usa um valor positivo para definir um recuo da primeira linha e um valor negativo para definir um recuo deslocado.</span><span class="sxs-lookup"><span data-stu-id="41cb4-p105">Gets or sets the value, in points, for a first line or hanging indent. Use a positive value to set a first-line indent, and use a negative value to set a hanging indent.</span></span>

      <span data-ttu-id="41cb4-121">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="41cb4-121">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: firstLineIndent
    fullName: firstLineIndent
    langs:
      - typeScript
    type: property
    syntax:
      content: 'firstLineIndent: number;'
      return:
        type:
          - number
  - uid: 'word!Word.Paragraph#font:member'
    summary: |-
      <span data-ttu-id="41cb4-122">Obtém o formato de texto do parágrafo.</span><span class="sxs-lookup"><span data-stu-id="41cb4-122">Gets the text format of the paragraph.</span></span> <span data-ttu-id="41cb4-123">Use isto para obter e definir o nome, o tamanho e a cor da fonte, além de outras propriedades.</span><span class="sxs-lookup"><span data-stu-id="41cb4-123">Use this to get and set font name, size, color, and other properties.</span></span> <span data-ttu-id="41cb4-124">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="41cb4-124">Read-only.</span></span>

      <span data-ttu-id="41cb4-125">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="41cb4-125">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: font
    fullName: font
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly font: Word.Font;'
      return:
        type:
          - 'word!Word.Font:class'
  - uid: 'word!Word.Paragraph#getHtml:member(1)'
    summary: |-
      <span data-ttu-id="41cb4-126">Obtém uma representação HTML do objeto Paragraph.</span><span class="sxs-lookup"><span data-stu-id="41cb4-126">Gets an HTML representation of the paragraph object.</span></span> <span data-ttu-id="41cb4-127">Quando renderizado em uma página da Web ou em um visualizador de HTML, a formatação será uma correspondência próxima, mas não exata, da formatação do documento.</span><span class="sxs-lookup"><span data-stu-id="41cb4-127">When rendered in a web page or HTML viewer, the formatting will be a close, but not exact, match for of the formatting of the document.</span></span> <span data-ttu-id="41cb4-128">Este método não retorna o mesmo HTML para o mesmo documento em diferentes plataformas (Windows, Mac, Word para a Web, etc.).</span><span class="sxs-lookup"><span data-stu-id="41cb4-128">This method does not return the exact same HTML for the same document on different platforms (Windows, Mac, Word for the web, etc.).</span></span> <span data-ttu-id="41cb4-129">Se você precisar de fidelidade exata ou consistência entre plataformas, use `Paragraph.getOoxml()` e converta o XML RETORNADO em HTML.</span><span class="sxs-lookup"><span data-stu-id="41cb4-129">If you need exact fidelity, or consistency across platforms, use `Paragraph.getOoxml()` and convert the returned XML to HTML.</span></span>

      <span data-ttu-id="41cb4-130">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="41cb4-130">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getHtml()
    fullName: getHtml()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getHtml(): OfficeExtension.ClientResult<string>;'
      return:
        type:
          - 'word!Word.Paragraph#getHtml~0:complex'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="41cb4-131">Exemplos</span><span class="sxs-lookup"><span data-stu-id="41cb4-131">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the paragraphs collection.
              var paragraphs = context.document.body.paragraphs;

              // Queue a command to load the style property for all of the paragraphs.
              context.load(paragraphs, 'style');

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {

                  // Queue a a set of commands to get the HTML of the first paragraph.
                  var html = paragraphs.items[0].getHtml();

                  // Synchronize the document state by executing the queued commands,
                  // and return a promise to indicate task completion.
                  return context.sync().then(function () {
                      console.log('Paragraph HTML: ' + html.value);
                  });
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'word!Word.Paragraph#getOoxml:member(1)'
    summary: |-
      <span data-ttu-id="41cb4-132">Obtém a representação OOXML (Office Open XML) do objeto Paragraph.</span><span class="sxs-lookup"><span data-stu-id="41cb4-132">Gets the Office Open XML (OOXML) representation of the paragraph object.</span></span>

      <span data-ttu-id="41cb4-133">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="41cb4-133">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getOoxml()
    fullName: getOoxml()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getOoxml(): OfficeExtension.ClientResult<string>;'
      return:
        type:
          - 'word!Word.Paragraph#getOoxml~0:complex'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="41cb4-134">Exemplos</span><span class="sxs-lookup"><span data-stu-id="41cb4-134">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the paragraphs collection.
              var paragraphs = context.document.body.paragraphs;

              // Queue a command to load the style property for the top 2 paragraphs.
              context.load(paragraphs, {select: 'style', top: 2} );

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {

                  // Queue a a set of commands to get the OOXML of the first paragraph.
                  var ooxml = paragraphs.items[0].getOoxml();

                  // Synchronize the document state by executing the queued commands,
                  // and return a promise to indicate task completion.
                  return context.sync().then(function () {
                      console.log('Paragraph OOXML: ' + ooxml.value);
                  });
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'word!Word.Paragraph#inlinePictures:member'
    summary: |-
      <span data-ttu-id="41cb4-135">Obtém a coleção de objetos InlinePicture no parágrafo.</span><span class="sxs-lookup"><span data-stu-id="41cb4-135">Gets the collection of InlinePicture objects in the paragraph.</span></span> <span data-ttu-id="41cb4-136">A coleção não inclui imagens flutuantes.</span><span class="sxs-lookup"><span data-stu-id="41cb4-136">The collection does not include floating images.</span></span> <span data-ttu-id="41cb4-137">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="41cb4-137">Read-only.</span></span>

      <span data-ttu-id="41cb4-138">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="41cb4-138">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: inlinePictures
    fullName: inlinePictures
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly inlinePictures: Word.InlinePictureCollection;'
      return:
        type:
          - 'word!Word.InlinePictureCollection:class'
  - uid: 'word!Word.Paragraph#insertBreak:member(1)'
    summary: |-
      <span data-ttu-id="41cb4-139">Insere uma quebra no local especificado no documento principal.</span><span class="sxs-lookup"><span data-stu-id="41cb4-139">Inserts a break at the specified location in the main document.</span></span>

      <span data-ttu-id="41cb4-140">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="41cb4-140">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertBreak(breakType, insertLocation)'
    fullName: 'insertBreak(breakType, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertBreak(breakType: Word.BreakType, insertLocation: Word.InsertLocation): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="41cb4-141">Exemplos</span><span class="sxs-lookup"><span data-stu-id="41cb4-141">Examples</span></span>

          ```typescript
          Word.run(async (context) => {
            context.document.body.paragraphs.getFirst().insertBreak(Word.BreakType.line, "After");

            await context.sync();
            console.log("success");
          });
          ```
          ```typescript
          await Word.run(async (context) => {
            context.document.body.paragraphs.getFirst().insertBreak(Word.BreakType.page, "After");

            await context.sync();
            console.log("success");
          });
          ```
      parameters:
        - id: breakType
          description: <span data-ttu-id="41cb4-142">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="41cb4-142">Required.</span></span> <span data-ttu-id="41cb4-143">O tipo de quebra a adicionar ao documento.</span><span class="sxs-lookup"><span data-stu-id="41cb4-143">The break type to add to the document.</span></span>
          type:
            - 'word!Word.BreakType:enum'
        - id: insertLocation
          description: <span data-ttu-id="41cb4-144">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="41cb4-144">Required.</span></span> <span data-ttu-id="41cb4-145">O valor pode ser 'Before' ou 'After'.</span><span class="sxs-lookup"><span data-stu-id="41cb4-145">The value can be 'Before' or 'After'.</span></span>
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.Paragraph#insertBreak:member(2)'
    summary: |-
      <span data-ttu-id="41cb4-146">Insere uma quebra no local especificado no documento principal.</span><span class="sxs-lookup"><span data-stu-id="41cb4-146">Inserts a break at the specified location in the main document.</span></span>

      <span data-ttu-id="41cb4-147">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="41cb4-147">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertBreak(breakTypeString, insertLocation)'
    fullName: 'insertBreak(breakTypeString, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertBreak(breakTypeString: "Page" | "Next" | "SectionNext" | "SectionContinuous" | "SectionEven" | "SectionOdd" | "Line", insertLocation: "Before" | "After" | "Start" | "End" | "Replace"): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="41cb4-148">Exemplos</span><span class="sxs-lookup"><span data-stu-id="41cb4-148">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the paragraphs collection.
              var paragraphs = context.document.body.paragraphs;

              // Queue a command to load the style property for the top 2 paragraphs.
              // We never perform an empty load. We always must request a property.
              context.load(paragraphs, {select: 'style', top: 2} );

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {

                  // Queue a command to get the first paragraph.
                  var paragraph = paragraphs.items[0];

                  // Queue a command to insert a page break after the first paragraph.
                  paragraph.insertBreak('page', 'After');

                  // Synchronize the document state by executing the queued commands,
                  // and return a promise to indicate task completion.
                  return context.sync().then(function () {
                      console.log('Inserted a page break after the paragraph.');
                  });
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: breakTypeString
          description: <span data-ttu-id="41cb4-149">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="41cb4-149">Required.</span></span> <span data-ttu-id="41cb4-150">O tipo de quebra a adicionar ao documento.</span><span class="sxs-lookup"><span data-stu-id="41cb4-150">The break type to add to the document.</span></span>
          type:
            - '"Page" | "Next" | "SectionNext" | "SectionContinuous" | "SectionEven" | "SectionOdd" | "Line"'
        - id: insertLocation
          description: <span data-ttu-id="41cb4-151">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="41cb4-151">Required.</span></span> <span data-ttu-id="41cb4-152">O valor pode ser 'Before' ou 'After'.</span><span class="sxs-lookup"><span data-stu-id="41cb4-152">The value can be 'Before' or 'After'.</span></span>
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.Paragraph#insertContentControl:member(1)'
    summary: |-
      <span data-ttu-id="41cb4-153">Quebra o objeto Paragraph com um controle de conteúdo de rich text.</span><span class="sxs-lookup"><span data-stu-id="41cb4-153">Wraps the paragraph object with a rich text content control.</span></span>

      <span data-ttu-id="41cb4-154">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="41cb4-154">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: insertContentControl()
    fullName: insertContentControl()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertContentControl(): Word.ContentControl;'
      return:
        type:
          - 'word!Word.ContentControl:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="41cb4-155">Exemplos</span><span class="sxs-lookup"><span data-stu-id="41cb4-155">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the paragraphs collection.
              var paragraphs = context.document.body.paragraphs;

              // Queue a command to load the style property for the top 2 paragraphs.
              // We never perform an empty load. We always must request a property.
              context.load(paragraphs, {select: 'style', top: 2} );

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {

                  // Queue a command to get the first paragraph.
                  var paragraph = paragraphs.items[0];

                  // Queue a command to wrap the first paragraph in a rich text content control.
                  paragraph.insertContentControl();

                  // Synchronize the document state by executing the queued commands,
                  // and return a promise to indicate task completion.
                  return context.sync().then(function () {
                      console.log('Wrapped the first paragraph in a content control.');
                  });
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'word!Word.Paragraph#insertFileFromBase64:member(1)'
    summary: |-
      <span data-ttu-id="41cb4-156">Insere um documento no parágrafo no local especificado.</span><span class="sxs-lookup"><span data-stu-id="41cb4-156">Inserts a document into the paragraph at the specified location.</span></span>

      <span data-ttu-id="41cb4-157">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="41cb4-157">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertFileFromBase64(base64File, insertLocation)'
    fullName: 'insertFileFromBase64(base64File, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertFileFromBase64(base64File: string, insertLocation: Word.InsertLocation): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: base64File
          description: <span data-ttu-id="41cb4-158">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="41cb4-158">Required.</span></span> <span data-ttu-id="41cb4-159">O conteúdo codificado em Base64 de um arquivo. docx.</span><span class="sxs-lookup"><span data-stu-id="41cb4-159">The base64 encoded content of a .docx file.</span></span>
          type:
            - string
        - id: insertLocation
          description: '<span data-ttu-id="41cb4-160">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="41cb4-160">Required.</span></span> <span data-ttu-id="41cb4-161">O valor pode ser ''Replace'', ''Start'' ou ''End''.</span><span class="sxs-lookup"><span data-stu-id="41cb4-161">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.Paragraph#insertFileFromBase64:member(2)'
    summary: |-
      <span data-ttu-id="41cb4-162">Insere um documento no parágrafo no local especificado.</span><span class="sxs-lookup"><span data-stu-id="41cb4-162">Inserts a document into the paragraph at the specified location.</span></span>

      <span data-ttu-id="41cb4-163">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="41cb4-163">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertFileFromBase64(base64File, insertLocationString)'
    fullName: 'insertFileFromBase64(base64File, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertFileFromBase64(base64File: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: base64File
          description: <span data-ttu-id="41cb4-164">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="41cb4-164">Required.</span></span> <span data-ttu-id="41cb4-165">O conteúdo codificado em Base64 de um arquivo. docx.</span><span class="sxs-lookup"><span data-stu-id="41cb4-165">The base64 encoded content of a .docx file.</span></span>
          type:
            - string
        - id: insertLocationString
          description: '<span data-ttu-id="41cb4-166">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="41cb4-166">Required.</span></span> <span data-ttu-id="41cb4-167">O valor pode ser ''Replace'', ''Start'' ou ''End''.</span><span class="sxs-lookup"><span data-stu-id="41cb4-167">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.Paragraph#insertHtml:member(1)'
    summary: |-
      <span data-ttu-id="41cb4-168">Insere HTML no local especificado dentro do parágrafo.</span><span class="sxs-lookup"><span data-stu-id="41cb4-168">Inserts HTML into the paragraph at the specified location.</span></span>

      <span data-ttu-id="41cb4-169">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="41cb4-169">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertHtml(html, insertLocation)'
    fullName: 'insertHtml(html, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertHtml(html: string, insertLocation: Word.InsertLocation): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="41cb4-170">Exemplos</span><span class="sxs-lookup"><span data-stu-id="41cb4-170">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the paragraphs collection.
              var paragraphs = context.document.body.paragraphs;

              // Queue a command to load the style property for the top 2 paragraphs.
              // We never perform an empty load. We always must request a property.
              context.load(paragraphs, {select: 'style', top: 2} );

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {

                  // Queue a command to get the first paragraph.
                  var paragraph = paragraphs.items[0];

                  // Queue a command to insert HTML content at the end of the first paragraph.
                  paragraph.insertHtml('<strong>Inserted HTML.</strong>', Word.InsertLocation.end);

                  // Synchronize the document state by executing the queued commands,
                  // and return a promise to indicate task completion.
                  return context.sync().then(function () {
                      console.log('Inserted HTML content at the end of the first paragraph.');
                  });
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: html
          description: <span data-ttu-id="41cb4-171">Obrigatória.</span><span class="sxs-lookup"><span data-stu-id="41cb4-171">Required.</span></span> <span data-ttu-id="41cb4-172">O HTML a inserir no parágrafo.</span><span class="sxs-lookup"><span data-stu-id="41cb4-172">The HTML to be inserted in the paragraph.</span></span>
          type:
            - string
        - id: insertLocation
          description: '<span data-ttu-id="41cb4-173">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="41cb4-173">Required.</span></span> <span data-ttu-id="41cb4-174">O valor pode ser ''Replace'', ''Start'' ou ''End''.</span><span class="sxs-lookup"><span data-stu-id="41cb4-174">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.Paragraph#insertHtml:member(2)'
    summary: |-
      <span data-ttu-id="41cb4-175">Insere HTML no local especificado dentro do parágrafo.</span><span class="sxs-lookup"><span data-stu-id="41cb4-175">Inserts HTML into the paragraph at the specified location.</span></span>

      <span data-ttu-id="41cb4-176">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="41cb4-176">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertHtml(html, insertLocationString)'
    fullName: 'insertHtml(html, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertHtml(html: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: html
          description: <span data-ttu-id="41cb4-177">Obrigatória.</span><span class="sxs-lookup"><span data-stu-id="41cb4-177">Required.</span></span> <span data-ttu-id="41cb4-178">O HTML a inserir no parágrafo.</span><span class="sxs-lookup"><span data-stu-id="41cb4-178">The HTML to be inserted in the paragraph.</span></span>
          type:
            - string
        - id: insertLocationString
          description: '<span data-ttu-id="41cb4-179">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="41cb4-179">Required.</span></span> <span data-ttu-id="41cb4-180">O valor pode ser ''Replace'', ''Start'' ou ''End''.</span><span class="sxs-lookup"><span data-stu-id="41cb4-180">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.Paragraph#insertInlinePictureFromBase64:member(1)'
    summary: |-
      <span data-ttu-id="41cb4-181">Insere uma imagem no local especificado dentro do parágrafo.</span><span class="sxs-lookup"><span data-stu-id="41cb4-181">Inserts a picture into the paragraph at the specified location.</span></span>

      <span data-ttu-id="41cb4-182">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="41cb4-182">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertInlinePictureFromBase64(base64EncodedImage, insertLocation)'
    fullName: 'insertInlinePictureFromBase64(base64EncodedImage, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertInlinePictureFromBase64(base64EncodedImage: string, insertLocation: Word.InsertLocation): Word.InlinePicture;'
      return:
        type:
          - 'word!Word.InlinePicture:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="41cb4-183">Exemplos</span><span class="sxs-lookup"><span data-stu-id="41cb4-183">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the paragraphs collection.
              var paragraphs = context.document.body.paragraphs;

              // Queue a command to load the style property for all of the paragraphs.
              context.load(paragraphs, 'style');

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {

                  // Queue a command to get the first paragraph.
                  var paragraph = paragraphs.items[0];

                  var b64encodedImg = "iVBORw0KGgoAAAANSUhEUgAAAB4AAAANCAIAAAAxEEnAAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAACFSURBVDhPtY1BEoQwDMP6/0+XgIMTBAeYoTqso9Rkx1zG+tNj1H94jgGzeNSjteO5vtQQuG2seO0av8LzGbe3anzRoJ4ybm/VeKEerAEbAUpW4aWQCmrGFWykRzGBCnYy2ha3oAIq2MloW9yCCqhgJ6NtcQsqoIKdjLbFLaiACnYyf2fODbrjZcXfr2F4AAAAAElFTkSuQmCC";

                  // Queue a command to insert a base64 encoded image at the beginning of the first paragraph.
                  paragraph.insertInlinePictureFromBase64(b64encodedImg, Word.InsertLocation.start);

                  // Synchronize the document state by executing the queued commands,
                  // and return a promise to indicate task completion.
                  return context.sync().then(function () {
                      console.log('Added an image to the first paragraph.');
                  });
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: base64EncodedImage
          description: <span data-ttu-id="41cb4-184">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="41cb4-184">Required.</span></span> <span data-ttu-id="41cb4-185">A imagem codificada em base64 a ser inserida.</span><span class="sxs-lookup"><span data-stu-id="41cb4-185">The base64 encoded image to be inserted.</span></span>
          type:
            - string
        - id: insertLocation
          description: '<span data-ttu-id="41cb4-186">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="41cb4-186">Required.</span></span> <span data-ttu-id="41cb4-187">O valor pode ser ''Replace'', ''Start'' ou ''End''.</span><span class="sxs-lookup"><span data-stu-id="41cb4-187">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.Paragraph#insertInlinePictureFromBase64:member(2)'
    summary: |-
      <span data-ttu-id="41cb4-188">Insere uma imagem no local especificado dentro do parágrafo.</span><span class="sxs-lookup"><span data-stu-id="41cb4-188">Inserts a picture into the paragraph at the specified location.</span></span>

      <span data-ttu-id="41cb4-189">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="41cb4-189">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertInlinePictureFromBase64(base64EncodedImage, insertLocationString)'
    fullName: 'insertInlinePictureFromBase64(base64EncodedImage, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertInlinePictureFromBase64(base64EncodedImage: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.InlinePicture;'
      return:
        type:
          - 'word!Word.InlinePicture:class'
        description: ''
      parameters:
        - id: base64EncodedImage
          description: <span data-ttu-id="41cb4-190">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="41cb4-190">Required.</span></span> <span data-ttu-id="41cb4-191">A imagem codificada em base64 a ser inserida.</span><span class="sxs-lookup"><span data-stu-id="41cb4-191">The base64 encoded image to be inserted.</span></span>
          type:
            - string
        - id: insertLocationString
          description: '<span data-ttu-id="41cb4-192">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="41cb4-192">Required.</span></span> <span data-ttu-id="41cb4-193">O valor pode ser ''Replace'', ''Start'' ou ''End''.</span><span class="sxs-lookup"><span data-stu-id="41cb4-193">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.Paragraph#insertOoxml:member(1)'
    summary: |-
      <span data-ttu-id="41cb4-194">Insere OOXML no parágrafo no local especificado.</span><span class="sxs-lookup"><span data-stu-id="41cb4-194">Inserts OOXML into the paragraph at the specified location.</span></span>

      <span data-ttu-id="41cb4-195">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="41cb4-195">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertOoxml(ooxml, insertLocation)'
    fullName: 'insertOoxml(ooxml, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertOoxml(ooxml: string, insertLocation: Word.InsertLocation): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: ooxml
          description: <span data-ttu-id="41cb4-196">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="41cb4-196">Required.</span></span> <span data-ttu-id="41cb4-197">O OOXML a ser inserido no parágrafo.</span><span class="sxs-lookup"><span data-stu-id="41cb4-197">The OOXML to be inserted in the paragraph.</span></span>
          type:
            - string
        - id: insertLocation
          description: '<span data-ttu-id="41cb4-198">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="41cb4-198">Required.</span></span> <span data-ttu-id="41cb4-199">O valor pode ser ''Replace'', ''Start'' ou ''End''.</span><span class="sxs-lookup"><span data-stu-id="41cb4-199">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.Paragraph#insertOoxml:member(2)'
    summary: |-
      <span data-ttu-id="41cb4-200">Insere OOXML no parágrafo no local especificado.</span><span class="sxs-lookup"><span data-stu-id="41cb4-200">Inserts OOXML into the paragraph at the specified location.</span></span>

      <span data-ttu-id="41cb4-201">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="41cb4-201">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertOoxml(ooxml, insertLocationString)'
    fullName: 'insertOoxml(ooxml, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertOoxml(ooxml: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: ooxml
          description: <span data-ttu-id="41cb4-202">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="41cb4-202">Required.</span></span> <span data-ttu-id="41cb4-203">O OOXML a ser inserido no parágrafo.</span><span class="sxs-lookup"><span data-stu-id="41cb4-203">The OOXML to be inserted in the paragraph.</span></span>
          type:
            - string
        - id: insertLocationString
          description: '<span data-ttu-id="41cb4-204">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="41cb4-204">Required.</span></span> <span data-ttu-id="41cb4-205">O valor pode ser ''Replace'', ''Start'' ou ''End''.</span><span class="sxs-lookup"><span data-stu-id="41cb4-205">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.Paragraph#insertParagraph:member(1)'
    summary: |-
      <span data-ttu-id="41cb4-206">Insere um parágrafo no local especificado.</span><span class="sxs-lookup"><span data-stu-id="41cb4-206">Inserts a paragraph at the specified location.</span></span>

      <span data-ttu-id="41cb4-207">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="41cb4-207">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertParagraph(paragraphText, insertLocation)'
    fullName: 'insertParagraph(paragraphText, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertParagraph(paragraphText: string, insertLocation: Word.InsertLocation): Word.Paragraph;'
      return:
        type:
          - 'word!Word.Paragraph:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="41cb4-208">Exemplos</span><span class="sxs-lookup"><span data-stu-id="41cb4-208">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the paragraphs collection.
              var paragraphs = context.document.body.paragraphs;

              // Queue a command to load the style property for the top 2 paragraphs.
              // We never perform an empty load. We always must request a property.
              context.load(paragraphs, {select: 'style', top: 2} );

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {

                  // Queue a command to get the first paragraph.
                  var paragraph = paragraphs.items[0];

                  // Queue a command to insert the paragraph after the current paragraph.
                  paragraph.insertParagraph('Content of a new paragraph', Word.InsertLocation.after);

                  // Synchronize the document state by executing the queued commands,
                  // and return a promise to indicate task completion.
                  return context.sync().then(function () {
                      console.log('Inserted a new paragraph at the end of the first paragraph.');
                  });
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```typescript
          await Word.run(async (context) => {
            // Second sentence, let's insert it as a paragraph after the previously inserted one.
            let secondSentence = context.document.body.insertParagraph(
              "This is the first text with a custom style.",
              "End"
            );
            secondSentence.font.set({
              bold: false,
              italic: true,
              name: "Berlin Sans FB",
              color: "blue",
              size: 30
            });

            await context.sync();
          });
          ```
      parameters:
        - id: paragraphText
          description: <span data-ttu-id="41cb4-209">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="41cb4-209">Required.</span></span> <span data-ttu-id="41cb4-210">O texto do parágrafo a ser inserido.</span><span class="sxs-lookup"><span data-stu-id="41cb4-210">The paragraph text to be inserted.</span></span>
          type:
            - string
        - id: insertLocation
          description: <span data-ttu-id="41cb4-211">Obrigatória.</span><span class="sxs-lookup"><span data-stu-id="41cb4-211">Required.</span></span> <span data-ttu-id="41cb4-212">O valor pode ser 'Before' ou 'After'.</span><span class="sxs-lookup"><span data-stu-id="41cb4-212">The value can be 'Before' or 'After'.</span></span>
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.Paragraph#insertParagraph:member(2)'
    summary: |-
      <span data-ttu-id="41cb4-213">Insere um parágrafo no local especificado.</span><span class="sxs-lookup"><span data-stu-id="41cb4-213">Inserts a paragraph at the specified location.</span></span>

      <span data-ttu-id="41cb4-214">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="41cb4-214">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertParagraph(paragraphText, insertLocationString)'
    fullName: 'insertParagraph(paragraphText, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertParagraph(paragraphText: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Paragraph;'
      return:
        type:
          - 'word!Word.Paragraph:class'
        description: ''
      parameters:
        - id: paragraphText
          description: <span data-ttu-id="41cb4-215">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="41cb4-215">Required.</span></span> <span data-ttu-id="41cb4-216">O texto do parágrafo a ser inserido.</span><span class="sxs-lookup"><span data-stu-id="41cb4-216">The paragraph text to be inserted.</span></span>
          type:
            - string
        - id: insertLocationString
          description: <span data-ttu-id="41cb4-217">Obrigatória.</span><span class="sxs-lookup"><span data-stu-id="41cb4-217">Required.</span></span> <span data-ttu-id="41cb4-218">O valor pode ser 'Before' ou 'After'.</span><span class="sxs-lookup"><span data-stu-id="41cb4-218">The value can be 'Before' or 'After'.</span></span>
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.Paragraph#insertText:member(1)'
    summary: |-
      <span data-ttu-id="41cb4-219">Insere texto no local especificado dentro do parágrafo.</span><span class="sxs-lookup"><span data-stu-id="41cb4-219">Inserts text into the paragraph at the specified location.</span></span>

      <span data-ttu-id="41cb4-220">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="41cb4-220">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertText(text, insertLocation)'
    fullName: 'insertText(text, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertText(text: string, insertLocation: Word.InsertLocation): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="41cb4-221">Exemplos</span><span class="sxs-lookup"><span data-stu-id="41cb4-221">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the paragraphs collection.
              var paragraphs = context.document.body.paragraphs;

              // Queue a command to load the style property for the top 2 paragraphs.
              // We never perform an empty load. We always must request a property.
              context.load(paragraphs, {select: 'style', top: 2} );

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {

                  // Queue a command to get the first paragraph.
                  var paragraph = paragraphs.items[0];

                  // Queue a command to insert text into the end of the paragraph.
                  paragraph.insertText('New text inserted into the paragraph.', Word.InsertLocation.end);

                  // Synchronize the document state by executing the queued commands,
                  // and return a promise to indicate task completion.
                  return context.sync().then(function () {
                      console.log('Inserted text at the end of the first paragraph.');
                  });
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```typescript
          await Word.run(async (context) => {
            // Replace the last paragraph.
            let range = context.document.body.paragraphs.getLast().insertText("Just replaced the last paragraph!", "Replace");
            range.font.highlightColor = "black";
            range.font.color = "white";

            await context.sync();
          });
          ```
      parameters:
        - id: text
          description: <span data-ttu-id="41cb4-222">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="41cb4-222">Required.</span></span> <span data-ttu-id="41cb4-223">Texto a inserir.</span><span class="sxs-lookup"><span data-stu-id="41cb4-223">Text to be inserted.</span></span>
          type:
            - string
        - id: insertLocation
          description: '<span data-ttu-id="41cb4-224">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="41cb4-224">Required.</span></span> <span data-ttu-id="41cb4-225">O valor pode ser ''Replace'', ''Start'' ou ''End''.</span><span class="sxs-lookup"><span data-stu-id="41cb4-225">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.Paragraph#insertText:member(2)'
    summary: |-
      <span data-ttu-id="41cb4-226">Insere texto no local especificado dentro do parágrafo.</span><span class="sxs-lookup"><span data-stu-id="41cb4-226">Inserts text into the paragraph at the specified location.</span></span>

      <span data-ttu-id="41cb4-227">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="41cb4-227">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertText(text, insertLocationString)'
    fullName: 'insertText(text, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertText(text: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: text
          description: <span data-ttu-id="41cb4-228">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="41cb4-228">Required.</span></span> <span data-ttu-id="41cb4-229">Texto a inserir.</span><span class="sxs-lookup"><span data-stu-id="41cb4-229">Text to be inserted.</span></span>
          type:
            - string
        - id: insertLocationString
          description: '<span data-ttu-id="41cb4-230">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="41cb4-230">Required.</span></span> <span data-ttu-id="41cb4-231">O valor pode ser ''Replace'', ''Start'' ou ''End''.</span><span class="sxs-lookup"><span data-stu-id="41cb4-231">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.Paragraph#leftIndent:member'
    summary: |-
      <span data-ttu-id="41cb4-232">Obtém ou define o valor de recuo à esquerda, em pontos, para o parágrafo.</span><span class="sxs-lookup"><span data-stu-id="41cb4-232">Gets or sets the left indent value, in points, for the paragraph.</span></span>

      <span data-ttu-id="41cb4-233">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="41cb4-233">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: leftIndent
    fullName: leftIndent
    langs:
      - typeScript
    type: property
    syntax:
      content: 'leftIndent: number;'
      return:
        type:
          - number
        description: |-


          #### <a name="examples"></a><span data-ttu-id="41cb4-234">Exemplos</span><span class="sxs-lookup"><span data-stu-id="41cb4-234">Examples</span></span>

          ```typescript
          await Word.run(async (context) => {
            // Indents the first paragraph.
            context.document.body.paragraphs.getFirst().leftIndent = 75; //units = points

            return context.sync();
          });
          ```
  - uid: 'word!Word.Paragraph#lineSpacing:member'
    summary: |-
      <span data-ttu-id="41cb4-235">Obtém ou define o espaçamento entre linhas, em pontos, para o parágrafo especificado.</span><span class="sxs-lookup"><span data-stu-id="41cb4-235">Gets or sets the line spacing, in points, for the specified paragraph.</span></span> <span data-ttu-id="41cb4-236">Na interface do usuário do Word, esse valor é dividido por 12.</span><span class="sxs-lookup"><span data-stu-id="41cb4-236">In the Word UI, this value is divided by 12.</span></span>

      <span data-ttu-id="41cb4-237">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="41cb4-237">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: lineSpacing
    fullName: lineSpacing
    langs:
      - typeScript
    type: property
    syntax:
      content: 'lineSpacing: number;'
      return:
        type:
          - number
        description: |-


          #### <a name="examples"></a><span data-ttu-id="41cb4-238">Exemplos</span><span class="sxs-lookup"><span data-stu-id="41cb4-238">Examples</span></span>

          ```typescript
          await Word.run(async (context) => {
            // Adjusts line spacing.
            context.document.body.paragraphs.getFirst().lineSpacing = 20;

            await context.sync();
          });
          ```
  - uid: 'word!Word.Paragraph#lineUnitAfter:member'
    summary: |-
      <span data-ttu-id="41cb4-239">Obtém ou define a quantidade de espaçamento, em linhas de grade, após o parágrafo.</span><span class="sxs-lookup"><span data-stu-id="41cb4-239">Gets or sets the amount of spacing, in grid lines, after the paragraph.</span></span>

      <span data-ttu-id="41cb4-240">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="41cb4-240">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: lineUnitAfter
    fullName: lineUnitAfter
    langs:
      - typeScript
    type: property
    syntax:
      content: 'lineUnitAfter: number;'
      return:
        type:
          - number
  - uid: 'word!Word.Paragraph#lineUnitBefore:member'
    summary: |-
      <span data-ttu-id="41cb4-241">Obtém ou define a quantidade de espaçamento, em linhas de grade, antes do parágrafo.</span><span class="sxs-lookup"><span data-stu-id="41cb4-241">Gets or sets the amount of spacing, in grid lines, before the paragraph.</span></span>

      <span data-ttu-id="41cb4-242">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="41cb4-242">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: lineUnitBefore
    fullName: lineUnitBefore
    langs:
      - typeScript
    type: property
    syntax:
      content: 'lineUnitBefore: number;'
      return:
        type:
          - number
  - uid: 'word!Word.Paragraph#load:member(1)'
    summary: <span data-ttu-id="41cb4-243">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="41cb4-243">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="41cb4-244">Você deve chamar "context.sync()" antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="41cb4-244">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="41cb4-245">Além dessa assinatura, este método tem as seguintes assinaturas:</span><span class="sxs-lookup"><span data-stu-id="41cb4-245">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="41cb4-246">`load(option?: string | string[]): Word.Paragraph`-Where Option é uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="41cb4-246">`load(option?: string | string[]): Word.Paragraph` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="41cb4-247">`load(option?: { select?: string; expand?: string; }): Word.Paragraph`-Onde Option. Select é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades a serem carregadas, e Options. Expand é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades de navegação a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="41cb4-247">`load(option?: { select?: string; expand?: string; }): Word.Paragraph` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="41cb4-248">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.Paragraph`– Disponível somente nos tipos de coleção.</span><span class="sxs-lookup"><span data-stu-id="41cb4-248">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.Paragraph` - Only available on collection types.</span></span> <span data-ttu-id="41cb4-249">É semelhante à assinatura anterior.</span><span class="sxs-lookup"><span data-stu-id="41cb4-249">It is similar to the preceding signature.</span></span> <span data-ttu-id="41cb4-250">Option. Top especifica o número máximo de itens de coleta que podem ser incluídos no resultado.</span><span class="sxs-lookup"><span data-stu-id="41cb4-250">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="41cb4-251">Option. Skip especifica o número de itens que devem ser ignorados e não incluídos no resultado.</span><span class="sxs-lookup"><span data-stu-id="41cb4-251">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="41cb4-252">Se Option. Top for especificado, o conjunto de resultados será iniciado depois de ignorar o número de itens especificado.</span><span class="sxs-lookup"><span data-stu-id="41cb4-252">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Word.Interfaces.ParagraphLoadOptions): Word.Paragraph;'
      return:
        type:
          - 'word!Word.Paragraph:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'word!Word.Interfaces.ParagraphLoadOptions:interface'
  - uid: 'word!Word.Paragraph#load:member(2)'
    summary: <span data-ttu-id="41cb4-253">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="41cb4-253">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="41cb4-254">Você deve chamar `context.sync()` antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="41cb4-254">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Word.Paragraph;'
      return:
        type:
          - 'word!Word.Paragraph:class'
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="41cb4-255">Uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="41cb4-255">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'word!Word.Paragraph#load:member(3)'
    summary: <span data-ttu-id="41cb4-256">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="41cb4-256">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="41cb4-257">Você deve chamar `context.sync()` antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="41cb4-257">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Word.Paragraph;'
      return:
        type:
          - 'word!Word.Paragraph:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="41cb4-258">Onde propertyNamesAndPaths. Select é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades a serem carregadas e propertyNamesAndPaths. Expand é uma sequência de caracteres delimitada por vírgula que especifica as propriedades de navegação a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="41cb4-258">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: 'word!Word.Paragraph#outlineLevel:member'
    summary: |-
      <span data-ttu-id="41cb4-259">Obtém ou define o nível de estrutura de tópicos para o parágrafo.</span><span class="sxs-lookup"><span data-stu-id="41cb4-259">Gets or sets the outline level for the paragraph.</span></span>

      <span data-ttu-id="41cb4-260">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="41cb4-260">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: outlineLevel
    fullName: outlineLevel
    langs:
      - typeScript
    type: property
    syntax:
      content: 'outlineLevel: number;'
      return:
        type:
          - number
  - uid: 'word!Word.Paragraph#parentContentControl:member'
    summary: |-
      <span data-ttu-id="41cb4-261">Obtém o controle de conteúdo que inclui o parágrafo.</span><span class="sxs-lookup"><span data-stu-id="41cb4-261">Gets the content control that contains the paragraph.</span></span> <span data-ttu-id="41cb4-262">Gera um erro se não houver um controle de conteúdo pai.</span><span class="sxs-lookup"><span data-stu-id="41cb4-262">Throws an error if there isn't a parent content control.</span></span> <span data-ttu-id="41cb4-263">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="41cb4-263">Read-only.</span></span>

      <span data-ttu-id="41cb4-264">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="41cb4-264">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: parentContentControl
    fullName: parentContentControl
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentContentControl: Word.ContentControl;'
      return:
        type:
          - 'word!Word.ContentControl:class'
  - uid: 'word!Word.Paragraph#rightIndent:member'
    summary: |-
      <span data-ttu-id="41cb4-265">Obtém ou define o valor de recuo à direita, em pontos, para o parágrafo.</span><span class="sxs-lookup"><span data-stu-id="41cb4-265">Gets or sets the right indent value, in points, for the paragraph.</span></span>

      <span data-ttu-id="41cb4-266">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="41cb4-266">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: rightIndent
    fullName: rightIndent
    langs:
      - typeScript
    type: property
    syntax:
      content: 'rightIndent: number;'
      return:
        type:
          - number
  - uid: 'word!Word.Paragraph#search:member(1)'
    summary: |-
      <span data-ttu-id="41cb4-267">Realiza uma pesquisa com o Searchoptions especificado no escopo do objeto Paragraph.</span><span class="sxs-lookup"><span data-stu-id="41cb4-267">Performs a search with the specified SearchOptions on the scope of the paragraph object.</span></span> <span data-ttu-id="41cb4-268">Os resultados da pesquisa são uma coleção de objetos Range.</span><span class="sxs-lookup"><span data-stu-id="41cb4-268">The search results are a collection of range objects.</span></span>

      <span data-ttu-id="41cb4-269">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="41cb4-269">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'search(searchText, searchOptions)'
    fullName: 'search(searchText, searchOptions)'
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        search(searchText: string, searchOptions?: Word.SearchOptions | {
                    ignorePunct?: boolean;
                    ignoreSpace?: boolean;
                    matchCase?: boolean;
                    matchPrefix?: boolean;
                    matchSuffix?: boolean;
                    matchWholeWord?: boolean;
                    matchWildcards?: boolean;
                }): Word.RangeCollection;
      return:
        type:
          - 'word!Word.RangeCollection:class'
        description: ''
      parameters:
        - id: searchText
          description: <span data-ttu-id="41cb4-270">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="41cb4-270">Required.</span></span> <span data-ttu-id="41cb4-271">O texto da pesquisa.</span><span class="sxs-lookup"><span data-stu-id="41cb4-271">The search text.</span></span>
          type:
            - string
        - id: searchOptions
          description: <span data-ttu-id="41cb4-272">Opcional.</span><span class="sxs-lookup"><span data-stu-id="41cb4-272">Optional.</span></span> <span data-ttu-id="41cb4-273">Opções da pesquisa.</span><span class="sxs-lookup"><span data-stu-id="41cb4-273">Options for the search.</span></span>
          type:
            - 'word!Word.Paragraph#search~0:complex'
  - uid: 'word!Word.Paragraph#select:member(1)'
    summary: |-
      <span data-ttu-id="41cb4-274">Seleciona e navega na interface do usuário do Word até o parágrafo.</span><span class="sxs-lookup"><span data-stu-id="41cb4-274">Selects and navigates the Word UI to the paragraph.</span></span>

      <span data-ttu-id="41cb4-275">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="41cb4-275">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: select(selectionMode)
    fullName: select(selectionMode)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'select(selectionMode?: Word.SelectionMode): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="41cb4-276">Exemplos</span><span class="sxs-lookup"><span data-stu-id="41cb4-276">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the paragraphs collection.
              var paragraphs = context.document.body.paragraphs;

              // Queue a command to load the style property for all of the paragraphs.
              context.load(paragraphs, 'style');

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {

                  // Queue a command to get the last paragraph a create a
                  // proxy paragraph object.
                  var paragraph = paragraphs.items[paragraphs.items.length - 1];

                  // Queue a command to select the paragraph. The Word UI will
                  // move to the selected paragraph.
                  paragraph.select();

                  // Synchronize the document state by executing the queued commands,
                  // and return a promise to indicate task completion.
                  return context.sync().then(function () {
                      console.log('Selected the last paragraph.');
                  });
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```typescript
          await Word.run(async (context) => {
            // If select is called with no parameters, it selects the object.
            context.document.body.paragraphs.getLast().select();

            await context.sync();
          });
          ```
          ```typescript
          await Word.run(async (context) => {
            // Select can be at the start or end of a range; this by definition moves the insertion point without selecting the range.
            context.document.body.paragraphs.getLast().select("End");

            await context.sync();
          });
          ```
      parameters:
        - id: selectionMode
          description: '<span data-ttu-id="41cb4-277">Opcional.</span><span class="sxs-lookup"><span data-stu-id="41cb4-277">Optional.</span></span> <span data-ttu-id="41cb4-278">O modo de seleção pode ser ''Select'', ''Start'' ou ''End''.</span><span class="sxs-lookup"><span data-stu-id="41cb4-278">The selection mode can be ''Select'', ''Start'', or ''End''.</span></span> <span data-ttu-id="41cb4-279">''Select'' é o padrão.</span><span class="sxs-lookup"><span data-stu-id="41cb4-279">''Select'' is the default.</span></span>'
          type:
            - 'word!Word.SelectionMode:enum'
  - uid: 'word!Word.Paragraph#select:member(2)'
    summary: |-
      <span data-ttu-id="41cb4-280">Seleciona e navega na interface do usuário do Word até o parágrafo.</span><span class="sxs-lookup"><span data-stu-id="41cb4-280">Selects and navigates the Word UI to the paragraph.</span></span>

      <span data-ttu-id="41cb4-281">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="41cb4-281">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: select(selectionModeString)
    fullName: select(selectionModeString)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'select(selectionModeString?: "Select" | "Start" | "End"): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: selectionModeString
          description: '<span data-ttu-id="41cb4-282">Opcional.</span><span class="sxs-lookup"><span data-stu-id="41cb4-282">Optional.</span></span> <span data-ttu-id="41cb4-283">O modo de seleção pode ser ''Select'', ''Start'' ou ''End''.</span><span class="sxs-lookup"><span data-stu-id="41cb4-283">The selection mode can be ''Select'', ''Start'', or ''End''.</span></span> <span data-ttu-id="41cb4-284">''Select'' é o padrão.</span><span class="sxs-lookup"><span data-stu-id="41cb4-284">''Select'' is the default.</span></span>'
          type:
            - '"Select" | "Start" | "End"'
  - uid: 'word!Word.Paragraph#set:member(1)'
    summary: '<span data-ttu-id="41cb4-285">Define várias propriedades de um objeto ao mesmo tempo.</span><span class="sxs-lookup"><span data-stu-id="41cb4-285">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="41cb4-286">Você pode passar um objeto simples com as propriedades apropriadas ou outro objeto API do mesmo tipo.</span><span class="sxs-lookup"><span data-stu-id="41cb4-286">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="41cb4-287">Este método tem a seguinte assinatura adicional:</span><span class="sxs-lookup"><span data-stu-id="41cb4-287">This method has the following additional signature:</span></span>

      `set(properties: Word.Paragraph): void`

      #### <a name="examples"></a><span data-ttu-id="41cb4-288">Exemplos</span><span class="sxs-lookup"><span data-stu-id="41cb4-288">Examples</span></span>

      ```typescript
      await Word.run(async (context) => {
        const paragraph = context.document.body.paragraphs.getFirst();
        paragraph.set({
          leftIndent: 30,
          font: {
            bold: true,
            color: "red"
          }
        });

        await context.sync();
      });
      ```
      ```typescript
      await Word.run(async (context) => {
        const firstParagraph = context.document.body.paragraphs.getFirst();
        const secondParagraph = firstParagraph.getNext();
        firstParagraph.load("text, font/color, font/bold, leftIndent");

        await context.sync();

        secondParagraph.set(firstParagraph);

        await context.sync();
      });
      ```
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.ParagraphUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="41cb4-289">Um objeto JavaScript com propriedades que são estruturadas isomorphically para as propriedades do objeto no qual o método é chamado.</span><span class="sxs-lookup"><span data-stu-id="41cb4-289">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - 'word!Word.Interfaces.ParagraphUpdateData:interface'
        - id: options
          description: <span data-ttu-id="41cb4-290">Fornece uma opção para suprimir erros se o objeto Properties tentar definir qualquer propriedade somente leitura.</span><span class="sxs-lookup"><span data-stu-id="41cb4-290">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - 'word!OfficeExtension.UpdateOptions:interface'
  - uid: 'word!Word.Paragraph#set:member(2)'
    summary: '<span data-ttu-id="41cb4-291">Define várias propriedades no objeto ao mesmo tempo, com base em um objeto carregado existente.</span><span class="sxs-lookup"><span data-stu-id="41cb4-291">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Word.Paragraph): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'word!Word.Paragraph:class'
  - uid: 'word!Word.Paragraph#spaceAfter:member'
    summary: |-
      <span data-ttu-id="41cb4-292">Obtém ou define o espaçamento, em pontos, após o parágrafo.</span><span class="sxs-lookup"><span data-stu-id="41cb4-292">Gets or sets the spacing, in points, after the paragraph.</span></span>

      <span data-ttu-id="41cb4-293">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="41cb4-293">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: spaceAfter
    fullName: spaceAfter
    langs:
      - typeScript
    type: property
    syntax:
      content: 'spaceAfter: number;'
      return:
        type:
          - number
        description: |-


          #### <a name="examples"></a><span data-ttu-id="41cb4-294">Exemplos</span><span class="sxs-lookup"><span data-stu-id="41cb4-294">Examples</span></span>

          ```typescript
          await Word.run(async (context) => {
            // Adjust space between paragraphs.
            context.document.body.paragraphs.getFirst().spaceAfter = 20;

            await context.sync();
          });
          ```
  - uid: 'word!Word.Paragraph#spaceBefore:member'
    summary: |-
      <span data-ttu-id="41cb4-295">Obtém ou define o espaçamento, em pontos, antes o parágrafo.</span><span class="sxs-lookup"><span data-stu-id="41cb4-295">Gets or sets the spacing, in points, before the paragraph.</span></span>

      <span data-ttu-id="41cb4-296">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="41cb4-296">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: spaceBefore
    fullName: spaceBefore
    langs:
      - typeScript
    type: property
    syntax:
      content: 'spaceBefore: number;'
      return:
        type:
          - number
  - uid: 'word!Word.Paragraph#style:member'
    summary: |-
      <span data-ttu-id="41cb4-297">Obtém ou define o nome do estilo para o parágrafo.</span><span class="sxs-lookup"><span data-stu-id="41cb4-297">Gets or sets the style name for the paragraph.</span></span> <span data-ttu-id="41cb4-298">Use esta propriedade de estilos personalizados e nomes de estilo localizados.</span><span class="sxs-lookup"><span data-stu-id="41cb4-298">Use this property for custom styles and localized style names.</span></span> <span data-ttu-id="41cb4-299">Para usar os estilos internos que são portáteis entre localidades, confira a propriedade "styleBuiltIn".</span><span class="sxs-lookup"><span data-stu-id="41cb4-299">To use the built-in styles that are portable between locales, see the "styleBuiltIn" property.</span></span>

      <span data-ttu-id="41cb4-300">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="41cb4-300">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: style
    fullName: style
    langs:
      - typeScript
    type: property
    syntax:
      content: 'style: string;'
      return:
        type:
          - string
  - uid: 'word!Word.Paragraph#text:member'
    summary: |-
      <span data-ttu-id="41cb4-301">Obtém o texto do parágrafo.</span><span class="sxs-lookup"><span data-stu-id="41cb4-301">Gets the text of the paragraph.</span></span> <span data-ttu-id="41cb4-302">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="41cb4-302">Read-only.</span></span>

      <span data-ttu-id="41cb4-303">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="41cb4-303">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: text
    fullName: text
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly text: string;'
      return:
        type:
          - string
        description: |-


          #### <a name="examples"></a><span data-ttu-id="41cb4-304">Exemplos</span><span class="sxs-lookup"><span data-stu-id="41cb4-304">Examples</span></span>

          ```typescript
          await Word.run(async (context) => {
            // The collection of paragraphs of the current selection returns the full paragraphs contained in it.
            let paragraph = context.document.getSelection().paragraphs.getFirst();
            paragraph.load("text");

            await context.sync();
            console.log(paragraph.text);
          });
          ```
  - uid: 'word!Word.Paragraph#toJSON:member(1)'
    summary: '<span data-ttu-id="41cb4-305">Substitui o método `toJSON()` JavaScript para fornecer uma saída mais útil quando um objeto API é passado para`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="41cb4-305">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="41cb4-306">.</span><span class="sxs-lookup"><span data-stu-id="41cb4-306"></span></span> <span data-ttu-id="41cb4-307">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="41cb4-307"></span></span><!-- --><span data-ttu-id="41cb4-308">, por sua vez, chama `toJSON` o método do objeto que é passado para ele.) Enquanto o objeto Word. Paragraph original é um objeto API, o `toJSON` método retorna um objeto JavaScript simples (digitado como`Word.Interfaces.ParagraphData`</span><span class="sxs-lookup"><span data-stu-id="41cb4-308">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Word.Paragraph object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.ParagraphData`</span></span><!-- --><span data-ttu-id="41cb4-309">) que contém cópias superficiais de qualquer propriedade filho carregada do objeto original.</span><span class="sxs-lookup"><span data-stu-id="41cb4-309">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Word.Interfaces.ParagraphData;'
      return:
        type:
          - 'word!Word.Interfaces.ParagraphData:interface'
        description: ''
  - uid: 'word!Word.Paragraph#track:member(1)'
    summary: '<span data-ttu-id="41cb4-310">Acompanha o objeto para ajuste automático com base nas alterações adjacentes no documento.</span><span class="sxs-lookup"><span data-stu-id="41cb4-310">Track the object for automatic adjustment based on surrounding changes in the document.</span></span> <span data-ttu-id="41cb4-311">Essa chamada é uma abreviação de context.trackedObjects.add(thisObject).</span><span class="sxs-lookup"><span data-stu-id="41cb4-311">This call is a shorthand for context.trackedObjects.add(thisObject).</span></span> <span data-ttu-id="41cb4-312">Se você estiver usando esse objeto em chamadas ".sync" e fora da execução sequencial de um lote ".run" e receber um erro "InvalidObjectPath" ao definir uma propriedade ou invocar um método no objeto, era necessário ter adicionado o objeto à coleção de objetos rastreados quando o objeto foi criado pela primeira vez.</span><span class="sxs-lookup"><span data-stu-id="41cb4-312">If you are using this object across ".sync" calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you needed to have added the object to the tracked object collection when the object was first created.</span></span>'
    name: track()
    fullName: track()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'track(): Word.Paragraph;'
      return:
        type:
          - 'word!Word.Paragraph:class'
        description: ''
  - uid: 'word!Word.Paragraph#untrack:member(1)'
    summary: '<span data-ttu-id="41cb4-313">Libere a memória associada a este objeto, se ele já tiver sido rastreado anteriormente.</span><span class="sxs-lookup"><span data-stu-id="41cb4-313">Release the memory associated with this object, if it has previously been tracked.</span></span> <span data-ttu-id="41cb4-314">Essa chamada é uma abreviação de context.trackedObjects.remove(thisObject).</span><span class="sxs-lookup"><span data-stu-id="41cb4-314">This call is shorthand for context.trackedObjects.remove(thisObject).</span></span> <span data-ttu-id="41cb4-315">Ter muitos objetos rastreados desacelera o aplicativo host, por isso, lembre-se de liberar todos os objetos adicionados após usá-los.</span><span class="sxs-lookup"><span data-stu-id="41cb4-315">Having many tracked objects slows down the host application, so please remember to free any objects you add, once you''re done using them.</span></span> <span data-ttu-id="41cb4-316">Você precisa chamar "context.sync()" antes da liberação da memória entrar em vigor.</span><span class="sxs-lookup"><span data-stu-id="41cb4-316">You will need to call "context.sync()" before the memory release takes effect.</span></span>'
    name: untrack()
    fullName: untrack()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'untrack(): Word.Paragraph;'
      return:
        type:
          - 'word!Word.Paragraph:class'
        description: ''
references:
  - uid: 'word!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'word!Word.Paragraph#alignment~0:complex'
    name: Word.Alignment | "Mixed" | "Unknown" | "Left" | "Centered" | "Right" | "Justified"
    fullName: Word.Alignment | "Mixed" | "Unknown" | "Left" | "Centered" | "Right" | "Justified"
    spec.typeScript:
      - uid: 'word!Word.Alignment:enum'
        name: Word.Alignment
        fullName: Word.Alignment
      - name: ' | "Mixed" | "Unknown" | "Left" | "Centered" | "Right" | "Justified"'
        fullName: ' | "Mixed" | "Unknown" | "Left" | "Centered" | "Right" | "Justified"'
  - uid: 'word!Word.ContentControlCollection:class'
    name: Word.ContentControlCollection
  - uid: 'word!Word.RequestContext:class'
    name: RequestContext
  - uid: 'word!Word.Font:class'
    name: Word.Font
  - uid: 'word!Word.Paragraph#getHtml~0:complex'
    name: OfficeExtension.ClientResult<string>
    fullName: OfficeExtension.ClientResult<string>
    spec.typeScript:
      - uid: 'word!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <string>
        fullName: <string>
  - uid: 'word!Word.Paragraph#getOoxml~0:complex'
    name: OfficeExtension.ClientResult<string>
    fullName: OfficeExtension.ClientResult<string>
    spec.typeScript:
      - uid: 'word!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <string>
        fullName: <string>
  - uid: 'word!Word.InlinePictureCollection:class'
    name: Word.InlinePictureCollection
  - uid: 'word!Word.BreakType:enum'
    name: Word.BreakType
  - uid: 'word!Word.InsertLocation:enum'
    name: Word.InsertLocation
  - uid: 'word!Word.ContentControl:class'
    name: Word.ContentControl
  - uid: 'word!Word.Range:class'
    name: Word.Range
  - uid: 'word!Word.InlinePicture:class'
    name: Word.InlinePicture
  - uid: 'word!Word.Paragraph:class'
    name: Word.Paragraph
  - uid: 'word!Word.Interfaces.ParagraphLoadOptions:interface'
    name: Word.Interfaces.ParagraphLoadOptions
  - uid: 'word!Word.RangeCollection:class'
    name: Word.RangeCollection
  - uid: 'word!Word.Paragraph#search~0:complex'
    name: |-
      Word.SearchOptions | {
                  ignorePunct?: boolean;
                  ignoreSpace?: boolean;
                  matchCase?: boolean;
                  matchPrefix?: boolean;
                  matchSuffix?: boolean;
                  matchWholeWord?: boolean;
                  matchWildcards?: boolean;
              }
    fullName: |-
      Word.SearchOptions | {
                  ignorePunct?: boolean;
                  ignoreSpace?: boolean;
                  matchCase?: boolean;
                  matchPrefix?: boolean;
                  matchSuffix?: boolean;
                  matchWholeWord?: boolean;
                  matchWildcards?: boolean;
              }
    spec.typeScript:
      - uid: 'word!Word.SearchOptions:class'
        name: Word.SearchOptions
        fullName: Word.SearchOptions
      - name: |2-
           | {
                      ignorePunct?: boolean;
                      ignoreSpace?: boolean;
                      matchCase?: boolean;
                      matchPrefix?: boolean;
                      matchSuffix?: boolean;
                      matchWholeWord?: boolean;
                      matchWildcards?: boolean;
                  }
        fullName: |2-
           | {
                      ignorePunct?: boolean;
                      ignoreSpace?: boolean;
                      matchCase?: boolean;
                      matchPrefix?: boolean;
                      matchSuffix?: boolean;
                      matchWholeWord?: boolean;
                      matchWildcards?: boolean;
                  }
  - uid: 'word!Word.SelectionMode:enum'
    name: Word.SelectionMode
  - uid: 'word!Word.Interfaces.ParagraphUpdateData:interface'
    name: Interfaces.ParagraphUpdateData
  - uid: 'word!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'word!Word.Interfaces.ParagraphData:interface'
    name: Word.Interfaces.ParagraphData