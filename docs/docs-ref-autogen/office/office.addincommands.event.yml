### YamlMime:UniversalReference
items:
  - uid: office.Office.AddinCommands.Event
    summary: O objeto Event é passado como um parâmetro para funções de suplemento invocadas por botões de comando sem interface do usuário. O objeto permite que o suplemento identifique qual botão foi clicado e avise o host que concluiu seu processamento.
    remarks: |-
      Confira os [conjuntos de requisitos de comandos de suplemento](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/add-in-commands-requirement-sets) para obter mais informações de suporte.

      **<!-- --> [Nível de permissão mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)**: restrito

      **<!-- --> [Modo do Outlook aplicável](https://docs.microsoft.com/outlook/add-ins/#extension-points)**: redação ou leitura
    name: Office.AddinCommands.Event
    fullName: Office.AddinCommands.Event
    langs:
      - typeScript
    type: interface
    package: office
    children:
      - office.Office.AddinCommands.Event.completed
      - office.Office.AddinCommands.Event.source
  - uid: office.Office.AddinCommands.Event.completed
    summary: |-
      Indica que o suplemento concluiu o processamento que foi acionado por um botão de comando do suplemento ou manipulador de eventos.

      Este método deve ser chamado no final de uma função que foi invocado por um comando de suplemento definido com um elemento Action com um atributo xsi: type definido como ExecuteFunction. Chamar esse método sinaliza o cliente host de que a função está concluída e que ele pode limpar qualquer estado envolvido com chamar a função. Por exemplo, se o usuário fechar o Outlook antes de este método ser chamado, o Outlook o avisará de que uma função ainda está em execução.

      Este método deve ser chamado em um manipulador de eventos adicionado por meio de Office.context.mailbox.addHandlerAsync depois de concluir o processamento do evento.

      \[[Conjunto de APIs: caixa de correio 1,3](/office/dev/add-ins/reference/javascript-api-for-office)\]
    remarks: |-
      **<!-- --> [Nível de permissão mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)**: restrito

      **<!-- --> [Modo do Outlook aplicável](https://docs.microsoft.com/outlook/add-ins/#extension-points)**: redação ou leitura

      A caixa de correio 1,3 não `options` tem o parâmetro enquanto a visualização da caixa `options` de correio tem suporte para o parâmetro.

      #### <a name="examples"></a>Exemplos

      ```javascript
      function processItem (event) {
          // Do some processing

          event.completed();
      }

      // In the following example, the checkMessage function has
      // been registered as an event handler for ItemSend.
      function checkMessage(event) {
          // Get the item being sent
          var outgoingMsg = Office.context.mailbox.item;

          // Check if subject contains "BLOCK"
          outgoingMsg.subject.getAsync(function (result) {
              // Subject is in result.value
              if (result.value.indexOf('BLOCK') != -1) {
                  // Value is found, stop send
                  event.completed({allowEvent = false});
              } else {
                  // Value wasn't found, allow send
                  event.completed({allowEvent = true});
              }
          });
      }
      ```
    name: completed(options)
    fullName: completed(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'completed(options?: EventCompletedOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: Opcional. Um objeto que especifica as opções de comportamento para quando o evento é concluído.
          type:
            - office.Office.AddinCommands.EventCompletedOptions
  - uid: office.Office.AddinCommands.Event.source
    summary: Informações sobre o controle que disparou a chamada desta função.
    remarks: |-
      Esta propriedade só tem suporte no Outlook no [conjunto de requisitos](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) de caixa de correio 1,3 e posterior.

      #### <a name="examples"></a>Exemplos

      ```javascript
      // In this example, consider a button defined in an add-in manifest as follows:
      //<Control xsi:type="Button" id="eventTestButton">
      //    <Label resid="eventButtonLabel" />
      //    <Tooltip resid="eventButtonTooltip" />
      //    <Supertip>
      //        <Title resid="eventSuperTipTitle" />
      //        <Description resid="eventSuperTipDescription" />
      //    </Supertip>
      //    <Icon>
      //        <bt:Image size="16" resid="blue-icon-16" />
      //        <bt:Image size="32" resid="blue-icon-32" />
      //        <bt:Image size="80" resid="blue-icon-80" />
      //    </Icon>
      //    <Action xsi:type="ExecuteFunction">
      //        <FunctionName>testEventObject</FunctionName>
      //    </Action>
      //</Control>

      // The button has an id attribute set to eventTestButton, and will invoke
      // the testEventObject function defined in the add-in.
      // That function looks like this:
      function testEventObject(event) {
          // The event object implements the Event interface.

          // This value will be "eventTestButton".
          var buttonId = event.source.id;

          // Signal to the host app that processing is complete.
          event.completed();
      }
      ```
      ```javascript
      // Function is used by two buttons:
      // button1 and button2
      function multiButton (event) {
          // Check which button was clicked.
          var buttonId = event.source.id;

          if (buttonId === 'button1') {
              doButton1Action();
          } else {
              doButton2Action();
          }

          event.completed();
      }
      ```
    name: source
    fullName: source
    langs:
      - typeScript
    type: property
    syntax:
      content: 'source:Source;'
      return:
        type:
          - office.Office.AddinCommands.Source