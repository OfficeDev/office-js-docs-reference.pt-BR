### YamlMime:UniversalReference
ms.openlocfilehash: 556ce739a1db98e118e0e82365922c5268861c48
ms.sourcegitcommit: 016e17422cf62dc9f1de1809666e9244e41cc1a9
ms.translationtype: MT
ms.contentlocale: pt-BR
ms.lasthandoff: 11/09/2018
ms.locfileid: "26224619"
items:
- uid: office.OfficeExtension.TrackedObjects
  summary: Coleção de objetos rastreados, contida em um contexto de solicitação. Consulte "context.trackedObjects" para obter mais informações.
  name: OfficeExtension.TrackedObjects
  fullName: OfficeExtension.TrackedObjects
  langs:
  - typeScript
  type: class
  package: office
  children:
  - office.OfficeExtension.TrackedObjects.add
  - office.OfficeExtension.TrackedObjects.remove
- uid: office.OfficeExtension.TrackedObjects.add
  summary: >-
    Rastrear um novo objeto para ajuste automático, com base em torno de alterações no documento. Somente alguns tipos de objeto exigem isso. Se você estiver usando um objeto nas chamadas ". Sync" e fora a execução sequencial de um lote de ".run" e get um erro "InvalidObjectPath" ao definir uma propriedade ou um método no objeto de invocação, você precisava adicionou o objeto ao conjunto de objetos controladas Quando o objeto primeiro foi criado.


    Este método também tem a seguinte assinatura:


    `add(objects: ClientObject[]): void;`Onde objetos é uma matriz de objetos a serem rastreados.
  name: add(object)
  fullName: add
  langs:
  - typeScript
  type: method
  syntax:
    content: 'add(object: ClientObject): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: object
      description: ''
      type:
      - office.OfficeExtension.ClientObject
- uid: office.OfficeExtension.TrackedObjects.remove
  summary: >-
    Libere a memória associada a um objeto que foi adicionado anteriormente nessa coleção. Ter vários objetos controlados fica mais lenta do aplicativo host, portanto Lembre-se liberar todos os objetos adicionar, depois que terminar usá-los. Você precisará chamar `context.sync()` antes da memória versão entrará em vigor.


    Este método também tem a seguinte assinatura:


    `remove(objects: ClientObject[]): void;`Onde objetos é uma matriz de objetos a serem removidas.
  name: remove(object)
  fullName: remove
  langs:
  - typeScript
  type: method
  syntax:
    content: 'remove(object: ClientObject): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: object
      description: ''
      type:
      - office.OfficeExtension.ClientObject
