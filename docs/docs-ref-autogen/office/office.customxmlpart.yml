### YamlMime:UniversalReference
items:
  - uid: office.Office.CustomXmlPart
    summary: '<span data-ttu-id="da54f-101">Representa um único CustomXMLPart em uma coleção [Office. CustomXmlParts](xref:office.Office.CustomXmlParts) .</span><span class="sxs-lookup"><span data-stu-id="da54f-101">Represents a single CustomXMLPart in an [Office.CustomXmlParts](xref:office.Office.CustomXmlParts) collection.</span></span>'
    remarks: '<span data-ttu-id="da54f-102">**Hosts**: Word</span><span class="sxs-lookup"><span data-stu-id="da54f-102">**Hosts**: Word</span></span>'
    name: Office.CustomXmlPart
    fullName: Office.CustomXmlPart
    langs:
      - typeScript
    type: interface
    package: office
    children:
      - office.Office.CustomXmlPart.addHandlerAsync
      - office.Office.CustomXmlPart.addHandlerAsync_1
      - office.Office.CustomXmlPart.deleteAsync
      - office.Office.CustomXmlPart.deleteAsync_1
      - office.Office.CustomXmlPart.getNodesAsync
      - office.Office.CustomXmlPart.getNodesAsync_1
      - office.Office.CustomXmlPart.getXmlAsync
      - office.Office.CustomXmlPart.getXmlAsync_1
      - office.Office.CustomXmlPart.removeHandlerAsync
      - office.Office.CustomXmlPart.removeHandlerAsync_1
      - office.Office.CustomXmlPart.builtIn
      - office.Office.CustomXmlPart.id
      - office.Office.CustomXmlPart.namespaceManager
  - uid: office.Office.CustomXmlPart.addHandlerAsync
    summary: <span data-ttu-id="da54f-103">Adiciona um manipulador de eventos ao objeto usando o tipo de evento especificado.</span><span class="sxs-lookup"><span data-stu-id="da54f-103">Adds an event handler to the object using the specified event type.</span></span>
    remarks: |-
      <span data-ttu-id="da54f-104">**Conjunto de requisitos**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="da54f-104">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>

      <span data-ttu-id="da54f-105">Você pode adicionar vários manipuladores de eventos para o eventType especificado, desde que o nome de cada função do manipulador de eventos seja exclusivo.</span><span class="sxs-lookup"><span data-stu-id="da54f-105">You can add multiple event handlers for the specified eventType as long as the name of each event handler function is unique.</span></span>
    name: 'addHandlerAsync(eventType, handler, options, callback)'
    fullName: 'addHandlerAsync(eventType, handler, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addHandlerAsync(eventType: Office.EventType, handler: (result: any) => void, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: eventType
          description: '<span data-ttu-id="da54f-106">Especifica o tipo de evento a ser adicionado.</span><span class="sxs-lookup"><span data-stu-id="da54f-106">Specifies the type of event to add.</span></span> <span data-ttu-id="da54f-107">Para um objeto CustomXmlPart, o parâmetro eventType pode ser especificado como`Office.EventType.NodeDeleted`</span><span class="sxs-lookup"><span data-stu-id="da54f-107">For a CustomXmlPart object, the eventType parameter can be specified as `Office.EventType.NodeDeleted`</span></span><!-- --><span data-ttu-id="da54f-108">, `Office.EventType.NodeInserted`</span><span class="sxs-lookup"><span data-stu-id="da54f-108"></span></span><!-- --><span data-ttu-id="da54f-109">, e`Office.EventType.NodeReplaced`</span><span class="sxs-lookup"><span data-stu-id="da54f-109">, and `Office.EventType.NodeReplaced`</span></span><!-- --><span data-ttu-id="da54f-110">.</span><span class="sxs-lookup"><span data-stu-id="da54f-110"></span></span>'
          type:
            - Office.EventType
        - id: handler
          description: '<span data-ttu-id="da54f-111">A função de manipulador de eventos a ser adicionada, cujo único parâmetro é do tipo [Office. NodeDeletedEventArgs](xref:office.Office.NodeDeletedEventArgs)</span><span class="sxs-lookup"><span data-stu-id="da54f-111">The event handler function to add, whose only parameter is of type [Office.NodeDeletedEventArgs](xref:office.Office.NodeDeletedEventArgs)</span></span><!-- --><span data-ttu-id="da54f-112">, [Office. NodeInsertedEventArgs](xref:office.Office.NodeInsertedEventArgs)</span><span class="sxs-lookup"><span data-stu-id="da54f-112">, [Office.NodeInsertedEventArgs](xref:office.Office.NodeInsertedEventArgs)</span></span><!-- --><span data-ttu-id="da54f-113">, ou [Office. NodeReplacedEventArgs](xref:office.Office.NodeReplacedEventArgs)</span><span class="sxs-lookup"><span data-stu-id="da54f-113">, or [Office.NodeReplacedEventArgs](xref:office.Office.NodeReplacedEventArgs)</span></span>'
          type:
            - '(result: any) => void'
        - id: options
          description: '<span data-ttu-id="da54f-114">Fornece uma opção para preservar dados de contexto de qualquer tipo, inalterados, para uso em um retorno de chamada.</span><span class="sxs-lookup"><span data-stu-id="da54f-114">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>'
          type:
            - office.Office.AsyncContextOptions
        - id: callback
          description: '<span data-ttu-id="da54f-115">Opcional.</span><span class="sxs-lookup"><span data-stu-id="da54f-115">Optional.</span></span> <span data-ttu-id="da54f-116">Uma função que é invocada quando o retorno de chamada retorna, cujo único parâmetro é do tipo [Office. AsyncResult](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="da54f-116">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="da54f-117">.</span><span class="sxs-lookup"><span data-stu-id="da54f-117"></span></span>'
          type:
            - '(result: AsyncResult<void>) => void'
  - uid: office.Office.CustomXmlPart.addHandlerAsync_1
    summary: <span data-ttu-id="da54f-118">Adiciona um manipulador de eventos ao objeto usando o tipo de evento especificado.</span><span class="sxs-lookup"><span data-stu-id="da54f-118">Adds an event handler to the object using the specified event type.</span></span>
    remarks: |-
      <span data-ttu-id="da54f-119">**Conjunto de requisitos**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="da54f-119">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>

      <span data-ttu-id="da54f-120">Você pode adicionar vários manipuladores de eventos para o eventType especificado, desde que o nome de cada função do manipulador de eventos seja exclusivo.</span><span class="sxs-lookup"><span data-stu-id="da54f-120">You can add multiple event handlers for the specified eventType as long as the name of each event handler function is unique.</span></span>

      #### <a name="examples"></a><span data-ttu-id="da54f-121">Exemplos</span><span class="sxs-lookup"><span data-stu-id="da54f-121">Examples</span></span>

      ```javascript
      // To add an event handler for the NodeDeleted event, use the addHandlerAsync method of the CustomXmlPart object.
      function addNodeDeletedEvent() {
          Office.context.document.customXmlParts.getByIdAsync(
              "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
              var xmlPart = result.value;
              xmlPart.addHandlerAsync(Office.EventType.NodeDeleted, function (eventArgs) {
                  write("A node has been deleted.");
              });
          });
      }
      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message;
      }
      ```
      ```javascript
      // To add an event handler for the NodeInserted event, use the addHandlerAsync method of the CustomXmlPart object.
      function addNodeInsertedEvent() {
          Office.context.document.customXmlParts.getByIdAsync(
              "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
              var xmlPart = result.value;
              xmlPart.addHandlerAsync(Office.EventType.NodeInserted, function (eventArgs) {
                  write("A node has been inserted.");
              });
          });
      }
      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message;
      }
      ```
      ```javascript
      // To add an event handler for the NodeReplaced event, use the addHandlerAsync method of the CustomXmlPart object.
      function addNodeReplacedEvent() {
          Office.context.document.customXmlParts.getByIdAsync(
              "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
              var xmlPart = result.value;
              xmlPart.addHandlerAsync(Office.EventType.NodeReplaced, function (eventArgs) {
                  write("A node has been replaced.");
              });
          });
      }
      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message;
      }
      ```
    name: 'addHandlerAsync(eventType, handler, callback)'
    fullName: 'addHandlerAsync(eventType, handler, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addHandlerAsync(eventType: Office.EventType, handler: (result: any) => void, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: eventType
          description: '<span data-ttu-id="da54f-122">Especifica o tipo de evento a ser adicionado.</span><span class="sxs-lookup"><span data-stu-id="da54f-122">Specifies the type of event to add.</span></span> <span data-ttu-id="da54f-123">Para um objeto CustomXmlPart, o parâmetro eventType pode ser especificado como`Office.EventType.NodeDeleted`</span><span class="sxs-lookup"><span data-stu-id="da54f-123">For a CustomXmlPart object, the eventType parameter can be specified as `Office.EventType.NodeDeleted`</span></span><!-- --><span data-ttu-id="da54f-124">, `Office.EventType.NodeInserted`</span><span class="sxs-lookup"><span data-stu-id="da54f-124"></span></span><!-- --><span data-ttu-id="da54f-125">, e`Office.EventType.NodeReplaced`</span><span class="sxs-lookup"><span data-stu-id="da54f-125">, and `Office.EventType.NodeReplaced`</span></span><!-- --><span data-ttu-id="da54f-126">.</span><span class="sxs-lookup"><span data-stu-id="da54f-126"></span></span>'
          type:
            - Office.EventType
        - id: handler
          description: '<span data-ttu-id="da54f-127">A função de manipulador de eventos a ser adicionada, cujo único parâmetro é do tipo [Office. NodeDeletedEventArgs](xref:office.Office.NodeDeletedEventArgs)</span><span class="sxs-lookup"><span data-stu-id="da54f-127">The event handler function to add, whose only parameter is of type [Office.NodeDeletedEventArgs](xref:office.Office.NodeDeletedEventArgs)</span></span><!-- --><span data-ttu-id="da54f-128">, [Office. NodeInsertedEventArgs](xref:office.Office.NodeInsertedEventArgs)</span><span class="sxs-lookup"><span data-stu-id="da54f-128">, [Office.NodeInsertedEventArgs](xref:office.Office.NodeInsertedEventArgs)</span></span><!-- --><span data-ttu-id="da54f-129">, ou [Office. NodeReplacedEventArgs](xref:office.Office.NodeReplacedEventArgs)</span><span class="sxs-lookup"><span data-stu-id="da54f-129">, or [Office.NodeReplacedEventArgs](xref:office.Office.NodeReplacedEventArgs)</span></span>'
          type:
            - '(result: any) => void'
        - id: callback
          description: '<span data-ttu-id="da54f-130">Opcional.</span><span class="sxs-lookup"><span data-stu-id="da54f-130">Optional.</span></span> <span data-ttu-id="da54f-131">Uma função que é invocada quando o retorno de chamada retorna, cujo único parâmetro é do tipo [Office. AsyncResult](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="da54f-131">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="da54f-132">.</span><span class="sxs-lookup"><span data-stu-id="da54f-132"></span></span>'
          type:
            - '(result: AsyncResult<void>) => void'
  - uid: office.Office.CustomXmlPart.deleteAsync
    summary: <span data-ttu-id="da54f-133">Exclui a parte XML personalizada.</span><span class="sxs-lookup"><span data-stu-id="da54f-133">Deletes the Custom XML Part.</span></span>
    remarks: '<span data-ttu-id="da54f-134">**Conjunto de requisitos**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="da54f-134">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>'
    name: 'deleteAsync(options, callback)'
    fullName: 'deleteAsync(options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'deleteAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: '<span data-ttu-id="da54f-135">Fornece uma opção para preservar dados de contexto de qualquer tipo, inalterados, para uso em um retorno de chamada.</span><span class="sxs-lookup"><span data-stu-id="da54f-135">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>'
          type:
            - office.Office.AsyncContextOptions
        - id: callback
          description: '<span data-ttu-id="da54f-136">Opcional.</span><span class="sxs-lookup"><span data-stu-id="da54f-136">Optional.</span></span> <span data-ttu-id="da54f-137">Uma função que é invocada quando o retorno de chamada retorna, cujo único parâmetro é do tipo [Office. AsyncResult](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="da54f-137">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="da54f-138">.</span><span class="sxs-lookup"><span data-stu-id="da54f-138"></span></span>'
          type:
            - '(result: AsyncResult<void>) => void'
  - uid: office.Office.CustomXmlPart.deleteAsync_1
    summary: <span data-ttu-id="da54f-139">Exclui a parte XML personalizada.</span><span class="sxs-lookup"><span data-stu-id="da54f-139">Deletes the Custom XML Part.</span></span>
    remarks: |-
      <span data-ttu-id="da54f-140">**Conjunto de requisitos**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="da54f-140">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>

      #### <a name="examples"></a><span data-ttu-id="da54f-141">Exemplos</span><span class="sxs-lookup"><span data-stu-id="da54f-141">Examples</span></span>

      ```javascript
      function deleteXMLPart() {
          Office.context.document.customXmlParts.getByIdAsync(
              "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
              var xmlPart = result.value;
              xmlPart.deleteAsync(function (eventArgs) {
                  write("The XML Part has been deleted.");
              });
          });
      }
      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message; 
      }
      ```
    name: deleteAsync(callback)
    fullName: deleteAsync(callback)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'deleteAsync(callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: '<span data-ttu-id="da54f-142">Opcional.</span><span class="sxs-lookup"><span data-stu-id="da54f-142">Optional.</span></span> <span data-ttu-id="da54f-143">Uma função que é invocada quando o retorno de chamada retorna, cujo único parâmetro é do tipo [Office. AsyncResult](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="da54f-143">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="da54f-144">.</span><span class="sxs-lookup"><span data-stu-id="da54f-144"></span></span>'
          type:
            - '(result: AsyncResult<void>) => void'
  - uid: office.Office.CustomXmlPart.getNodesAsync
    summary: <span data-ttu-id="da54f-145">Obtém de forma assíncrona quaisquer CustomXmlNodes nesta parte XML personalizada que correspondam ao XPath especificado.</span><span class="sxs-lookup"><span data-stu-id="da54f-145">Asynchronously gets any CustomXmlNodes in this custom XML part which match the specified XPath.</span></span>
    remarks: '<span data-ttu-id="da54f-146">**Conjunto de requisitos**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="da54f-146">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>'
    name: 'getNodesAsync(xPath, options, callback)'
    fullName: 'getNodesAsync(xPath, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getNodesAsync(xPath: string, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<CustomXmlNode[]>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: xPath
          description: <span data-ttu-id="da54f-147">Uma expressão XPath que especifica os nós que você deseja retornar.</span><span class="sxs-lookup"><span data-stu-id="da54f-147">An XPath expression that specifies the nodes you want returned.</span></span> <span data-ttu-id="da54f-148">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="da54f-148">Required.</span></span>
          type:
            - string
        - id: options
          description: '<span data-ttu-id="da54f-149">Fornece uma opção para preservar dados de contexto de qualquer tipo, inalterados, para uso em um retorno de chamada.</span><span class="sxs-lookup"><span data-stu-id="da54f-149">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>'
          type:
            - office.Office.AsyncContextOptions
        - id: callback
          description: '<span data-ttu-id="da54f-150">Opcional.</span><span class="sxs-lookup"><span data-stu-id="da54f-150">Optional.</span></span> <span data-ttu-id="da54f-151">Uma função que é invocada quando o retorno de chamada retorna, cujo único parâmetro é do tipo [Office. AsyncResult](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="da54f-151">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="da54f-152">.</span><span class="sxs-lookup"><span data-stu-id="da54f-152"></span></span> <span data-ttu-id="da54f-153">A `value` Propriedade do resultado é uma matriz de objetos CustomXmlNode que representam os nós especificados pela expressão XPath passada para o parâmetro XPath.</span><span class="sxs-lookup"><span data-stu-id="da54f-153">The `value` property of the result is an array of CustomXmlNode objects that represent the nodes specified by the XPath expression passed to the xPath parameter.</span></span>'
          type:
            - '(result: AsyncResult<CustomXmlNode[]>) => void'
  - uid: office.Office.CustomXmlPart.getNodesAsync_1
    summary: <span data-ttu-id="da54f-154">Obtém de forma assíncrona quaisquer CustomXmlNodes nesta parte XML personalizada que correspondam ao XPath especificado.</span><span class="sxs-lookup"><span data-stu-id="da54f-154">Asynchronously gets any CustomXmlNodes in this custom XML part which match the specified XPath.</span></span>
    remarks: |-
      <span data-ttu-id="da54f-155">**Conjunto de requisitos**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="da54f-155">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>

      #### <a name="examples"></a><span data-ttu-id="da54f-156">Exemplos</span><span class="sxs-lookup"><span data-stu-id="da54f-156">Examples</span></span>

      ```javascript
      function showXmlNodeType() {
          Office.context.document.customXmlParts.getByIdAsync(
              "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
              var xmlPart = result.value;
              xmlPart.getNodesAsync('*/*', function (nodeResults) {
                  for (i = 0; i < nodeResults.value.length; i++) {
                      var node = nodeResults.value[i];
                      write(node.nodeType);
                  }
              });
          });
      }
      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message; 
      }
      ```
    name: 'getNodesAsync(xPath, callback)'
    fullName: 'getNodesAsync(xPath, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getNodesAsync(xPath: string, callback?: (result: AsyncResult<CustomXmlNode[]>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: xPath
          description: <span data-ttu-id="da54f-157">Uma expressão XPath que especifica os nós que você deseja retornar.</span><span class="sxs-lookup"><span data-stu-id="da54f-157">An XPath expression that specifies the nodes you want returned.</span></span> <span data-ttu-id="da54f-158">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="da54f-158">Required.</span></span>
          type:
            - string
        - id: callback
          description: '<span data-ttu-id="da54f-159">Opcional.</span><span class="sxs-lookup"><span data-stu-id="da54f-159">Optional.</span></span> <span data-ttu-id="da54f-160">Uma função que é invocada quando o retorno de chamada retorna, cujo único parâmetro é do tipo [Office. AsyncResult](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="da54f-160">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="da54f-161">.</span><span class="sxs-lookup"><span data-stu-id="da54f-161"></span></span> <span data-ttu-id="da54f-162">A `value` Propriedade do resultado é uma matriz de objetos CustomXmlNode que representam os nós especificados pela expressão XPath passada para o parâmetro XPath.</span><span class="sxs-lookup"><span data-stu-id="da54f-162">The `value` property of the result is an array of CustomXmlNode objects that represent the nodes specified by the XPath expression passed to the xPath parameter.</span></span>'
          type:
            - '(result: AsyncResult<CustomXmlNode[]>) => void'
  - uid: office.Office.CustomXmlPart.getXmlAsync
    summary: <span data-ttu-id="da54f-163">Obtém de forma assíncrona o XML dentro desta parte XML personalizada.</span><span class="sxs-lookup"><span data-stu-id="da54f-163">Asynchronously gets the XML inside this custom XML part.</span></span>
    remarks: '<span data-ttu-id="da54f-164">**Conjunto de requisitos**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="da54f-164">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>'
    name: 'getXmlAsync(options, callback)'
    fullName: 'getXmlAsync(options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getXmlAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: '<span data-ttu-id="da54f-165">Fornece uma opção para preservar dados de contexto de qualquer tipo, inalterados, para uso em um retorno de chamada.</span><span class="sxs-lookup"><span data-stu-id="da54f-165">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>'
          type:
            - office.Office.AsyncContextOptions
        - id: callback
          description: '<span data-ttu-id="da54f-166">Opcional.</span><span class="sxs-lookup"><span data-stu-id="da54f-166">Optional.</span></span> <span data-ttu-id="da54f-167">Uma função que é invocada quando o retorno de chamada retorna, cujo único parâmetro é do tipo [Office. AsyncResult](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="da54f-167">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="da54f-168">.</span><span class="sxs-lookup"><span data-stu-id="da54f-168"></span></span> <span data-ttu-id="da54f-169">A `value` Propriedade do resultado é uma cadeia de caracteres que contém o XML do objeto CustomXMLPart referenciado.</span><span class="sxs-lookup"><span data-stu-id="da54f-169">The `value` property of the result is a string that contains the XML of the referenced CustomXmlPart object.</span></span>'
          type:
            - '(result: AsyncResult<string>) => void'
  - uid: office.Office.CustomXmlPart.getXmlAsync_1
    summary: <span data-ttu-id="da54f-170">Obtém de forma assíncrona o XML dentro desta parte XML personalizada.</span><span class="sxs-lookup"><span data-stu-id="da54f-170">Asynchronously gets the XML inside this custom XML part.</span></span>
    remarks: |-
      <span data-ttu-id="da54f-171">**Conjunto de requisitos**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="da54f-171">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>

      #### <a name="examples"></a><span data-ttu-id="da54f-172">Exemplos</span><span class="sxs-lookup"><span data-stu-id="da54f-172">Examples</span></span>

      ```javascript
      function showXMLPartInnerXML() {
          Office.context.document.customXmlParts.getByIdAsync(
              "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
              var xmlPart = result.value;
              xmlPart.getXmlAsync(function (eventArgs) {
                  write(eventArgs.value);
              });
          });
      }
      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message; 
      }
      ```
    name: getXmlAsync(callback)
    fullName: getXmlAsync(callback)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getXmlAsync(callback?: (result: AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: '<span data-ttu-id="da54f-173">Opcional.</span><span class="sxs-lookup"><span data-stu-id="da54f-173">Optional.</span></span> <span data-ttu-id="da54f-174">Uma função que é invocada quando o retorno de chamada retorna, cujo único parâmetro é do tipo [Office. AsyncResult](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="da54f-174">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="da54f-175">.</span><span class="sxs-lookup"><span data-stu-id="da54f-175"></span></span> <span data-ttu-id="da54f-176">A `value` Propriedade do resultado é uma cadeia de caracteres que contém o XML do objeto CustomXMLPart referenciado.</span><span class="sxs-lookup"><span data-stu-id="da54f-176">The `value` property of the result is a string that contains the XML of the referenced CustomXmlPart object.</span></span>'
          type:
            - '(result: AsyncResult<string>) => void'
  - uid: office.Office.CustomXmlPart.removeHandlerAsync
    summary: <span data-ttu-id="da54f-177">Remove um manipulador de eventos para o tipo de evento especificado.</span><span class="sxs-lookup"><span data-stu-id="da54f-177">Removes an event handler for the specified event type.</span></span>
    remarks: '<span data-ttu-id="da54f-178">**Conjunto de requisitos**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="da54f-178">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>'
    name: 'removeHandlerAsync(eventType, handler, options, callback)'
    fullName: 'removeHandlerAsync(eventType, handler, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removeHandlerAsync(eventType: Office.EventType, handler?: (result: any) => void, options?: RemoveHandlerOptions, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: eventType
          description: '<span data-ttu-id="da54f-179">Especifica o tipo de evento a ser removido.</span><span class="sxs-lookup"><span data-stu-id="da54f-179">Specifies the type of event to remove.</span></span> <span data-ttu-id="da54f-180">Para um objeto CustomXmlPart, o parâmetro eventType pode ser especificado como`Office.EventType.NodeDeleted`</span><span class="sxs-lookup"><span data-stu-id="da54f-180">For a CustomXmlPart object, the eventType parameter can be specified as `Office.EventType.NodeDeleted`</span></span><!-- --><span data-ttu-id="da54f-181">, `Office.EventType.NodeInserted`</span><span class="sxs-lookup"><span data-stu-id="da54f-181"></span></span><!-- --><span data-ttu-id="da54f-182">, e`Office.EventType.NodeReplaced`</span><span class="sxs-lookup"><span data-stu-id="da54f-182">, and `Office.EventType.NodeReplaced`</span></span><!-- --><span data-ttu-id="da54f-183">.</span><span class="sxs-lookup"><span data-stu-id="da54f-183"></span></span>'
          type:
            - Office.EventType
        - id: handler
          description: <span data-ttu-id="da54f-184">O nome do manipulador a ser removido.</span><span class="sxs-lookup"><span data-stu-id="da54f-184">The name of the handler to remove.</span></span>
          type:
            - '(result: any) => void'
        - id: options
          description: <span data-ttu-id="da54f-185">Fornece opções para determinar quais manipuladores de eventos ou manipuladores serão removidos.</span><span class="sxs-lookup"><span data-stu-id="da54f-185">Provides options to determine which event handler or handlers are removed.</span></span>
          type:
            - office.Office.RemoveHandlerOptions
        - id: callback
          description: '<span data-ttu-id="da54f-186">Opcional.</span><span class="sxs-lookup"><span data-stu-id="da54f-186">Optional.</span></span> <span data-ttu-id="da54f-187">Uma função que é invocada quando o retorno de chamada retorna, cujo único parâmetro é do tipo [Office. AsyncResult](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="da54f-187">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="da54f-188">.</span><span class="sxs-lookup"><span data-stu-id="da54f-188"></span></span>'
          type:
            - '(result: AsyncResult<void>) => void'
  - uid: office.Office.CustomXmlPart.removeHandlerAsync_1
    summary: <span data-ttu-id="da54f-189">Remove um manipulador de eventos para o tipo de evento especificado.</span><span class="sxs-lookup"><span data-stu-id="da54f-189">Removes an event handler for the specified event type.</span></span>
    remarks: |-
      <span data-ttu-id="da54f-190">**Conjunto de requisitos**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="da54f-190">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>

      #### <a name="examples"></a><span data-ttu-id="da54f-191">Exemplos</span><span class="sxs-lookup"><span data-stu-id="da54f-191">Examples</span></span>

      ```javascript
      function removeNodeInsertedEventHandler() {
          Office.context.document.customXmlParts.getByIdAsync(
              "{3BC85265-09D6-4205-B665-8EB239A8B9A1}",
              function (result) {
                  var xmlPart = result.value;
                  xmlPart.removeHandlerAsync(Office.EventType.DataNodeInserted, {handler:myHandler});
          });
      }
      ```
    name: 'removeHandlerAsync(eventType, handler, callback)'
    fullName: 'removeHandlerAsync(eventType, handler, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removeHandlerAsync(eventType: Office.EventType, handler?: (result: any) => void, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: eventType
          description: '<span data-ttu-id="da54f-192">Especifica o tipo de evento a ser removido.</span><span class="sxs-lookup"><span data-stu-id="da54f-192">Specifies the type of event to remove.</span></span> <span data-ttu-id="da54f-193">Para um objeto CustomXmlPart, o parâmetro eventType pode ser especificado como`Office.EventType.NodeDeleted`</span><span class="sxs-lookup"><span data-stu-id="da54f-193">For a CustomXmlPart object, the eventType parameter can be specified as `Office.EventType.NodeDeleted`</span></span><!-- --><span data-ttu-id="da54f-194">, `Office.EventType.NodeInserted`</span><span class="sxs-lookup"><span data-stu-id="da54f-194"></span></span><!-- --><span data-ttu-id="da54f-195">, e`Office.EventType.NodeReplaced`</span><span class="sxs-lookup"><span data-stu-id="da54f-195">, and `Office.EventType.NodeReplaced`</span></span><!-- --><span data-ttu-id="da54f-196">.</span><span class="sxs-lookup"><span data-stu-id="da54f-196"></span></span>'
          type:
            - Office.EventType
        - id: handler
          description: <span data-ttu-id="da54f-197">O nome do manipulador a ser removido.</span><span class="sxs-lookup"><span data-stu-id="da54f-197">The name of the handler to remove.</span></span>
          type:
            - '(result: any) => void'
        - id: callback
          description: '<span data-ttu-id="da54f-198">Opcional.</span><span class="sxs-lookup"><span data-stu-id="da54f-198">Optional.</span></span> <span data-ttu-id="da54f-199">Uma função que é invocada quando o retorno de chamada retorna, cujo único parâmetro é do tipo [Office. AsyncResult](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="da54f-199">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="da54f-200">.</span><span class="sxs-lookup"><span data-stu-id="da54f-200"></span></span>'
          type:
            - '(result: AsyncResult<void>) => void'
  - uid: office.Office.CustomXmlPart.builtIn
    summary: '<span data-ttu-id="da54f-201">True, se a parte XML personalizada for interna; caso contrário, false.</span><span class="sxs-lookup"><span data-stu-id="da54f-201">True, if the custom XML part is built in; otherwise false.</span></span>'
    name: builtIn
    fullName: builtIn
    langs:
      - typeScript
    type: property
    syntax:
      content: 'builtIn: boolean;'
      return:
        type:
          - boolean
        description: |-


          #### <a name="examples"></a><span data-ttu-id="da54f-202">Exemplos</span><span class="sxs-lookup"><span data-stu-id="da54f-202">Examples</span></span>

          ```javascript
          function showXMLPartBuiltIn() {
              Office.context.document.customXmlParts.getByIdAsync(
                  "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
                  var xmlPart = result.value;
                  write(xmlPart.builtIn);
              });
          }

          // Function that writes to a div with id='message' on the page.
          function write(message){
              document.getElementById('message').innerText += message; 
          }
          ```
  - uid: office.Office.CustomXmlPart.id
    summary: <span data-ttu-id="da54f-203">Obtém o GUID do CustomXMLPart.</span><span class="sxs-lookup"><span data-stu-id="da54f-203">Gets the GUID of the CustomXMLPart.</span></span>
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'id: string;'
      return:
        type:
          - string
        description: |-


          #### <a name="examples"></a><span data-ttu-id="da54f-204">Exemplos</span><span class="sxs-lookup"><span data-stu-id="da54f-204">Examples</span></span>

          ```javascript
          function showXMLPartBuiltId() {
              Office.context.document.customXmlParts.getByIdAsync(
                  "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
                  var xmlPart = result.value;
                  write(xmlPart.id);
              });
          }
          // Function that writes to a div with id='message' on the page.
          function write(message){
              document.getElementById('message').innerText += message; 
          }
          ```
  - uid: office.Office.CustomXmlPart.namespaceManager
    summary: '<span data-ttu-id="da54f-205">Obtém o conjunto de mapeamentos de prefixo de namespace ([Office. CustomXmlPrefixMappings](xref:office.Office.CustomXmlPrefixMappings)</span><span class="sxs-lookup"><span data-stu-id="da54f-205">Gets the set of namespace prefix mappings ([Office.CustomXmlPrefixMappings](xref:office.Office.CustomXmlPrefixMappings)</span></span><!-- --><span data-ttu-id="da54f-206">) usada em relação ao CustomXmlPart atual.</span><span class="sxs-lookup"><span data-stu-id="da54f-206">) used against the current CustomXmlPart.</span></span>'
    name: namespaceManager
    fullName: namespaceManager
    langs:
      - typeScript
    type: property
    syntax:
      content: 'namespaceManager: CustomXmlPrefixMappings;'
      return:
        type:
          - office.Office.CustomXmlPrefixMappings
        description: |-


          #### <a name="examples"></a><span data-ttu-id="da54f-207">Exemplos</span><span class="sxs-lookup"><span data-stu-id="da54f-207">Examples</span></span>

          ```javascript
          function setXMLPartNamespaceManagerNamespace() {
              Office.context.document.customXmlParts.getByIdAsync(
                  "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
                  var xmlPart = result.value;
                  xmlPart.namespaceManager.addNamespaceAsync("myPrefix", "myNamespace");
              });
          }
          ```