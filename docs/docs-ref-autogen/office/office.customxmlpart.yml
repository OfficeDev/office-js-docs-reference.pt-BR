### YamlMime:UniversalReference
ms.openlocfilehash: 2662ea466e74eb9588f3634d32a2cba1acd1c49b
ms.sourcegitcommit: d356f1545c328d4b59ce814fcab8191e4231f1dc
ms.translationtype: MT
ms.contentlocale: pt-BR
ms.lasthandoff: 02/13/2019
ms.locfileid: "29977241"
items:
- uid: office.Office.CustomXmlPart
  summary: <span data-ttu-id="7515c-101">Representa um único CustomXMLPart em uma coleção de [Office.CustomXmlParts](xref:office.Office.CustomXmlParts) .</span><span class="sxs-lookup"><span data-stu-id="7515c-101">Represents a single CustomXMLPart in an [Office.CustomXmlParts](xref:office.Office.CustomXmlParts) collection.</span></span>
  remarks: >-
    <table><tr><td><span data-ttu-id="7515c-102">Conjuntos de requisito</span><span class="sxs-lookup"><span data-stu-id="7515c-102">Requirement Sets</span></span></td><td><span data-ttu-id="7515c-103">CustomXmlParts</span><span class="sxs-lookup"><span data-stu-id="7515c-103">CustomXmlParts</span></span></td></tr></table>


    <span data-ttu-id="7515c-104">**Detalhes do suporte**</span><span class="sxs-lookup"><span data-stu-id="7515c-104">**Support details**</span></span>


    <span data-ttu-id="7515c-105">Um capital Y a matriz a seguir indica que esta interface é suportado no aplicativo host do Office correspondente.</span><span class="sxs-lookup"><span data-stu-id="7515c-105">A capital Y in the following matrix indicates that this interface is supported in the corresponding Office host application.</span></span> <span data-ttu-id="7515c-106">Uma célula vazia indica que o aplicativo host do Office não dá suporte a essa interface.</span><span class="sxs-lookup"><span data-stu-id="7515c-106">An empty cell indicates that the Office host application doesn't support this interface.</span></span>


    <span data-ttu-id="7515c-107">Para obter mais informações sobre requisitos de aplicativo e servidor de host do Office, consulte [requisitos para a execução de suplementos do Office](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="7515c-107">For more information about Office host application and server requirements, see [Requirements for running Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span></span>


    <span data-ttu-id="7515c-108">*Hosts com suporte, por plataforma*</span><span class="sxs-lookup"><span data-stu-id="7515c-108">*Supported hosts, by platform*</span></span> <table> <tr><th> </th><th> <span data-ttu-id="7515c-109">Office for Windows desktop</span><span class="sxs-lookup"><span data-stu-id="7515c-109">Office for Windows desktop</span></span> </th><th> <span data-ttu-id="7515c-110">Office Online (no navegador)</span><span class="sxs-lookup"><span data-stu-id="7515c-110">Office Online (in browser)</span></span> </th><th> <span data-ttu-id="7515c-111">Office para iPad</span><span class="sxs-lookup"><span data-stu-id="7515c-111">Office for iPad</span></span> </th><th> <span data-ttu-id="7515c-112">Office para Mac</span><span class="sxs-lookup"><span data-stu-id="7515c-112">Office for Mac</span></span> </th></tr> <tr><td><span data-ttu-id="7515c-113"><strong>Word</strong></span><span class="sxs-lookup"><span data-stu-id="7515c-113"><strong> Word </strong></span></span></td><td> <span data-ttu-id="7515c-114">S</span><span class="sxs-lookup"><span data-stu-id="7515c-114">Y</span></span> </td><td> <span data-ttu-id="7515c-115">S</span><span class="sxs-lookup"><span data-stu-id="7515c-115">Y</span></span> </td><td> <span data-ttu-id="7515c-116">S</span><span class="sxs-lookup"><span data-stu-id="7515c-116">Y</span></span> </td><td> <span data-ttu-id="7515c-117">S</span><span class="sxs-lookup"><span data-stu-id="7515c-117">Y</span></span> </td></tr> </table>
  name: Office.CustomXmlPart
  fullName: Office.CustomXmlPart
  langs:
  - typeScript
  type: interface
  package: office
  children:
  - office.Office.CustomXmlPart.addHandlerAsync
  - office.Office.CustomXmlPart.addHandlerAsync_1
  - office.Office.CustomXmlPart.deleteAsync
  - office.Office.CustomXmlPart.deleteAsync_1
  - office.Office.CustomXmlPart.getNodesAsync
  - office.Office.CustomXmlPart.getNodesAsync_1
  - office.Office.CustomXmlPart.getXmlAsync
  - office.Office.CustomXmlPart.getXmlAsync_1
  - office.Office.CustomXmlPart.removeHandlerAsync
  - office.Office.CustomXmlPart.removeHandlerAsync_1
  - office.Office.CustomXmlPart.builtIn
  - office.Office.CustomXmlPart.id
  - office.Office.CustomXmlPart.namespaceManager
- uid: office.Office.CustomXmlPart.addHandlerAsync
  summary: <span data-ttu-id="7515c-118">Adiciona um manipulador de eventos para o objeto usando o tipo de evento especificado.</span><span class="sxs-lookup"><span data-stu-id="7515c-118">Adds an event handler to the object using the specified event type.</span></span>
  remarks: <span data-ttu-id="7515c-119">Você pode adicionar vários manipuladores de eventos para o eventType especificado desde que o nome de cada função do manipulador de eventos é exclusivo.</span><span class="sxs-lookup"><span data-stu-id="7515c-119">You can add multiple event handlers for the specified eventType as long as the name of each event handler function is unique.</span></span>
  name: addHandlerAsync(eventType, handler, options, callback)
  fullName: addHandlerAsync(eventType, handler, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addHandlerAsync(eventType: Office.EventType, handler: (result: any) => void, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: eventType
      description: <span data-ttu-id="7515c-120">Especifica o tipo de evento a ser adicionado.</span><span class="sxs-lookup"><span data-stu-id="7515c-120">Specifies the type of event to add.</span></span> <span data-ttu-id="7515c-121">Para um objeto CustomXmlPart, o parâmetro eventType pode ser especificado como `Office.EventType.NodeDeleted` <!-- -->, `Office.EventType.NodeInserted` <!-- -->, e `Office.EventType.NodeReplaced` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="7515c-121">For a CustomXmlPart object, the eventType parameter can be specified as `Office.EventType.NodeDeleted`<!-- -->, `Office.EventType.NodeInserted`<!-- -->, and `Office.EventType.NodeReplaced`<!-- -->.</span></span>
      type:
      - Office.EventType
    - id: handler
      description: <span data-ttu-id="7515c-122">A função de manipulador de eventos para adicionar, cujo único parâmetro é do tipo [Office.NodeDeletedEventArgs](xref:office.Office.NodeDeletedEventArgs)<!-- -->, [Office.NodeInsertedEventArgs](xref:office.Office.NodeInsertedEventArgs)<!-- -->, ou [Office.NodeReplacedEventArgs](xref:office.Office.NodeReplacedEventArgs)</span><span class="sxs-lookup"><span data-stu-id="7515c-122">The event handler function to add, whose only parameter is of type [Office.NodeDeletedEventArgs](xref:office.Office.NodeDeletedEventArgs)<!-- -->, [Office.NodeInsertedEventArgs](xref:office.Office.NodeInsertedEventArgs)<!-- -->, or [Office.NodeReplacedEventArgs](xref:office.Office.NodeReplacedEventArgs)</span></span>
      type:
      - '(result: any) => void'
    - id: options
      description: <span data-ttu-id="7515c-123">Fornece uma opção para preservar dados de contexto de qualquer tipo, inalterado, para uso em um retorno de chamada.</span><span class="sxs-lookup"><span data-stu-id="7515c-123">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="7515c-124">Opcional.</span><span class="sxs-lookup"><span data-stu-id="7515c-124">Optional.</span></span> <span data-ttu-id="7515c-125">Uma função que é invocado quando o retorno de chamada retorna, cujo único parâmetro é do tipo [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="7515c-125">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span>
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.CustomXmlPart.addHandlerAsync_1
  summary: <span data-ttu-id="7515c-126">Adiciona um manipulador de eventos para o objeto usando o tipo de evento especificado.</span><span class="sxs-lookup"><span data-stu-id="7515c-126">Adds an event handler to the object using the specified event type.</span></span>
  remarks: >-
    <span data-ttu-id="7515c-127">Você pode adicionar vários manipuladores de eventos para o eventType especificado desde que o nome de cada função do manipulador de eventos é exclusivo.</span><span class="sxs-lookup"><span data-stu-id="7515c-127">You can add multiple event handlers for the specified eventType as long as the name of each event handler function is unique.</span></span>

    #### <a name="examples"></a><span data-ttu-id="7515c-128">Exemplos</span><span class="sxs-lookup"><span data-stu-id="7515c-128">Examples</span></span>


    ```javascript

    // To add an event handler for the NodeDeleted event, use the addHandlerAsync method of the CustomXmlPart object.

    function addNodeDeletedEvent() {
        Office.context.document.customXmlParts.getByIdAsync(
            "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
            var xmlPart = result.value;
            xmlPart.addHandlerAsync(Office.EventType.NodeDeleted, function (eventArgs) {
                write("A node has been deleted.");
            });
        });
    }

    // Function that writes to a div with id='message' on the page.

    function write(message){
        document.getElementById('message').innerText += message;
    }

    ```

    ```javascript

    // To add an event handler for the NodeInserted event, use the addHandlerAsync method of the CustomXmlPart object.

    function addNodeInsertedEvent() {
        Office.context.document.customXmlParts.getByIdAsync(
            "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
            var xmlPart = result.value;
            xmlPart.addHandlerAsync(Office.EventType.NodeInserted, function (eventArgs) {
                write("A node has been inserted.");
            });
        });
    }

    // Function that writes to a div with id='message' on the page.

    function write(message){
        document.getElementById('message').innerText += message;
    }

    ```

    ```javascript

    // To add an event handler for the NodeReplaced event, use the addHandlerAsync method of the CustomXmlPart object.

    function addNodeReplacedEvent() {
        Office.context.document.customXmlParts.getByIdAsync(
            "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
            var xmlPart = result.value;
            xmlPart.addHandlerAsync(Office.EventType.NodeReplaced, function (eventArgs) {
                write("A node has been replaced.");
            });
        });
    }

    // Function that writes to a div with id='message' on the page.

    function write(message){
        document.getElementById('message').innerText += message;
    }

    ```
  name: addHandlerAsync(eventType, handler, callback)
  fullName: addHandlerAsync(eventType, handler, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addHandlerAsync(eventType: Office.EventType, handler: (result: any) => void, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: eventType
      description: <span data-ttu-id="7515c-129">Especifica o tipo de evento a ser adicionado.</span><span class="sxs-lookup"><span data-stu-id="7515c-129">Specifies the type of event to add.</span></span> <span data-ttu-id="7515c-130">Para um objeto CustomXmlPart, o parâmetro eventType pode ser especificado como `Office.EventType.NodeDeleted` <!-- -->, `Office.EventType.NodeInserted` <!-- -->, e `Office.EventType.NodeReplaced` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="7515c-130">For a CustomXmlPart object, the eventType parameter can be specified as `Office.EventType.NodeDeleted`<!-- -->, `Office.EventType.NodeInserted`<!-- -->, and `Office.EventType.NodeReplaced`<!-- -->.</span></span>
      type:
      - Office.EventType
    - id: handler
      description: <span data-ttu-id="7515c-131">A função de manipulador de eventos para adicionar, cujo único parâmetro é do tipo [Office.NodeDeletedEventArgs](xref:office.Office.NodeDeletedEventArgs)<!-- -->, [Office.NodeInsertedEventArgs](xref:office.Office.NodeInsertedEventArgs)<!-- -->, ou [Office.NodeReplacedEventArgs](xref:office.Office.NodeReplacedEventArgs)</span><span class="sxs-lookup"><span data-stu-id="7515c-131">The event handler function to add, whose only parameter is of type [Office.NodeDeletedEventArgs](xref:office.Office.NodeDeletedEventArgs)<!-- -->, [Office.NodeInsertedEventArgs](xref:office.Office.NodeInsertedEventArgs)<!-- -->, or [Office.NodeReplacedEventArgs](xref:office.Office.NodeReplacedEventArgs)</span></span>
      type:
      - '(result: any) => void'
    - id: callback
      description: <span data-ttu-id="7515c-132">Opcional.</span><span class="sxs-lookup"><span data-stu-id="7515c-132">Optional.</span></span> <span data-ttu-id="7515c-133">Uma função que é invocado quando o retorno de chamada retorna, cujo único parâmetro é do tipo [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="7515c-133">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span>
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.CustomXmlPart.deleteAsync
  summary: <span data-ttu-id="7515c-134">Exclui a parte XML personalizada.</span><span class="sxs-lookup"><span data-stu-id="7515c-134">Deletes the Custom XML Part.</span></span>
  name: deleteAsync(options, callback)
  fullName: deleteAsync(options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'deleteAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: options
      description: <span data-ttu-id="7515c-135">Fornece uma opção para preservar dados de contexto de qualquer tipo, inalterado, para uso em um retorno de chamada.</span><span class="sxs-lookup"><span data-stu-id="7515c-135">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="7515c-136">Opcional.</span><span class="sxs-lookup"><span data-stu-id="7515c-136">Optional.</span></span> <span data-ttu-id="7515c-137">Uma função que é invocado quando o retorno de chamada retorna, cujo único parâmetro é do tipo [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="7515c-137">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span>
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.CustomXmlPart.deleteAsync_1
  summary: <span data-ttu-id="7515c-138">Exclui a parte XML personalizada.</span><span class="sxs-lookup"><span data-stu-id="7515c-138">Deletes the Custom XML Part.</span></span>
  name: deleteAsync(callback)
  fullName: deleteAsync(callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'deleteAsync(callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"7515c-139\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"7515c-139\">Examples</span></span>\n\n```javascript\nfunction deleteXMLPart() {\n    Office.context.document.customXmlParts.getByIdAsync(\n        \"{3BC85265-09D6-4205-B665-8EB239A8B9A1}\", function (result) {\n        var xmlPart = result.value;\n        xmlPart.deleteAsync(function (eventArgs) {\n            write(\"The XML Part has been deleted.\");\n        });\n    });\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
    parameters:
    - id: callback
      description: <span data-ttu-id="7515c-140">Opcional.</span><span class="sxs-lookup"><span data-stu-id="7515c-140">Optional.</span></span> <span data-ttu-id="7515c-141">Uma função que é invocado quando o retorno de chamada retorna, cujo único parâmetro é do tipo [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="7515c-141">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span>
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.CustomXmlPart.getNodesAsync
  summary: <span data-ttu-id="7515c-142">Obtém de forma assíncrona quaisquer CustomXmlNodes nesta parte XML personalizada que correspondam ao XPath especificado.</span><span class="sxs-lookup"><span data-stu-id="7515c-142">Asynchronously gets any CustomXmlNodes in this custom XML part which match the specified XPath.</span></span>
  name: getNodesAsync(xPath, options, callback)
  fullName: getNodesAsync(xPath, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getNodesAsync(xPath: string, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<CustomXmlNode[]>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: xPath
      description: <span data-ttu-id="7515c-p108">Uma expressão XPath que especifica os nós que você deseja retornar. Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="7515c-p108">An XPath expression that specifies the nodes you want returned. Required.</span></span>
      type:
      - string
    - id: options
      description: <span data-ttu-id="7515c-145">Fornece uma opção para preservar dados de contexto de qualquer tipo, inalterado, para uso em um retorno de chamada.</span><span class="sxs-lookup"><span data-stu-id="7515c-145">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="7515c-146">Opcional.</span><span class="sxs-lookup"><span data-stu-id="7515c-146">Optional.</span></span> <span data-ttu-id="7515c-147">Uma função que é invocado quando o retorno de chamada retorna, cujo único parâmetro é do tipo [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="7515c-147">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="7515c-148">O `value` propriedade do resultado é uma matriz de objetos CustomXmlNode que representa os nós especificado pela expressão XPath passada ao parâmetro xPath.</span><span class="sxs-lookup"><span data-stu-id="7515c-148">The `value` property of the result is an array of CustomXmlNode objects that represent the nodes specified by the XPath expression passed to the xPath parameter.</span></span>
      type:
      - '(result: AsyncResult<CustomXmlNode[]>) => void'
- uid: office.Office.CustomXmlPart.getNodesAsync_1
  summary: <span data-ttu-id="7515c-149">Obtém de forma assíncrona quaisquer CustomXmlNodes nesta parte XML personalizada que correspondam ao XPath especificado.</span><span class="sxs-lookup"><span data-stu-id="7515c-149">Asynchronously gets any CustomXmlNodes in this custom XML part which match the specified XPath.</span></span>
  name: getNodesAsync(xPath, callback)
  fullName: getNodesAsync(xPath, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getNodesAsync(xPath: string, callback?: (result: AsyncResult<CustomXmlNode[]>) => void): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"7515c-150\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"7515c-150\">Examples</span></span>\n\n```javascript\nfunction showXmlNodeType() {\n    Office.context.document.customXmlParts.getByIdAsync(\n        \"{3BC85265-09D6-4205-B665-8EB239A8B9A1}\", function (result) {\n        var xmlPart = result.value;\n        xmlPart.getNodesAsync('*/*', function (nodeResults) {\n            for (i = 0; i < nodeResults.value.length; i++) {\n                var node = nodeResults.value[i];\n                write(node.nodeType);\n            }\n        });\n    });\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
    parameters:
    - id: xPath
      description: <span data-ttu-id="7515c-p110">Uma expressão XPath que especifica os nós que você deseja retornar. Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="7515c-p110">An XPath expression that specifies the nodes you want returned. Required.</span></span>
      type:
      - string
    - id: callback
      description: <span data-ttu-id="7515c-153">Opcional.</span><span class="sxs-lookup"><span data-stu-id="7515c-153">Optional.</span></span> <span data-ttu-id="7515c-154">Uma função que é invocado quando o retorno de chamada retorna, cujo único parâmetro é do tipo [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="7515c-154">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="7515c-155">O `value` propriedade do resultado é uma matriz de objetos CustomXmlNode que representa os nós especificado pela expressão XPath passada ao parâmetro xPath.</span><span class="sxs-lookup"><span data-stu-id="7515c-155">The `value` property of the result is an array of CustomXmlNode objects that represent the nodes specified by the XPath expression passed to the xPath parameter.</span></span>
      type:
      - '(result: AsyncResult<CustomXmlNode[]>) => void'
- uid: office.Office.CustomXmlPart.getXmlAsync
  summary: <span data-ttu-id="7515c-156">Obtém de forma assíncrona o XML dentro desta parte XML personalizada.</span><span class="sxs-lookup"><span data-stu-id="7515c-156">Asynchronously gets the XML inside this custom XML part.</span></span>
  name: getXmlAsync(options, callback)
  fullName: getXmlAsync(options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getXmlAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: options
      description: <span data-ttu-id="7515c-157">Fornece uma opção para preservar dados de contexto de qualquer tipo, inalterado, para uso em um retorno de chamada.</span><span class="sxs-lookup"><span data-stu-id="7515c-157">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="7515c-158">Opcional.</span><span class="sxs-lookup"><span data-stu-id="7515c-158">Optional.</span></span> <span data-ttu-id="7515c-159">Uma função que é invocado quando o retorno de chamada retorna, cujo único parâmetro é do tipo [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="7515c-159">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="7515c-160">O `value` propriedade do resultado é uma cadeia de caracteres que contém o XML do objeto CustomXmlPart referenciado.</span><span class="sxs-lookup"><span data-stu-id="7515c-160">The `value` property of the result is a string that contains the XML of the referenced CustomXmlPart object.</span></span>
      type:
      - '(result: AsyncResult<string>) => void'
- uid: office.Office.CustomXmlPart.getXmlAsync_1
  summary: <span data-ttu-id="7515c-161">Obtém de forma assíncrona o XML dentro desta parte XML personalizada.</span><span class="sxs-lookup"><span data-stu-id="7515c-161">Asynchronously gets the XML inside this custom XML part.</span></span>
  name: getXmlAsync(callback)
  fullName: getXmlAsync(callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getXmlAsync(callback?: (result: AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"7515c-162\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"7515c-162\">Examples</span></span>\n\n```javascript\nfunction showXMLPartInnerXML() {\n    Office.context.document.customXmlParts.getByIdAsync(\n        \"{3BC85265-09D6-4205-B665-8EB239A8B9A1}\", function (result) {\n        var xmlPart = result.value;\n        xmlPart.getXmlAsync(function (eventArgs) {\n            write(eventArgs.value);\n        });\n    });\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
    parameters:
    - id: callback
      description: <span data-ttu-id="7515c-163">Opcional.</span><span class="sxs-lookup"><span data-stu-id="7515c-163">Optional.</span></span> <span data-ttu-id="7515c-164">Uma função que é invocado quando o retorno de chamada retorna, cujo único parâmetro é do tipo [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="7515c-164">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="7515c-165">O `value` propriedade do resultado é uma cadeia de caracteres que contém o XML do objeto CustomXmlPart referenciado.</span><span class="sxs-lookup"><span data-stu-id="7515c-165">The `value` property of the result is a string that contains the XML of the referenced CustomXmlPart object.</span></span>
      type:
      - '(result: AsyncResult<string>) => void'
- uid: office.Office.CustomXmlPart.removeHandlerAsync
  summary: <span data-ttu-id="7515c-166">Remove um manipulador de eventos para o tipo de evento especificado.</span><span class="sxs-lookup"><span data-stu-id="7515c-166">Removes an event handler for the specified event type.</span></span>
  name: removeHandlerAsync(eventType, handler, options, callback)
  fullName: removeHandlerAsync(eventType, handler, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'removeHandlerAsync(eventType: Office.EventType, handler?: (result: any) => void, options?: RemoveHandlerOptions, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: eventType
      description: <span data-ttu-id="7515c-167">Especifica o tipo de evento para remover.</span><span class="sxs-lookup"><span data-stu-id="7515c-167">Specifies the type of event to remove.</span></span> <span data-ttu-id="7515c-168">Para um objeto CustomXmlPart, o parâmetro eventType pode ser especificado como `Office.EventType.NodeDeleted` <!-- -->, `Office.EventType.NodeInserted` <!-- -->, e `Office.EventType.NodeReplaced` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="7515c-168">For a CustomXmlPart object, the eventType parameter can be specified as `Office.EventType.NodeDeleted`<!-- -->, `Office.EventType.NodeInserted`<!-- -->, and `Office.EventType.NodeReplaced`<!-- -->.</span></span>
      type:
      - Office.EventType
    - id: handler
      description: <span data-ttu-id="7515c-169">O nome do manipulador para remover.</span><span class="sxs-lookup"><span data-stu-id="7515c-169">The name of the handler to remove.</span></span>
      type:
      - '(result: any) => void'
    - id: options
      description: <span data-ttu-id="7515c-170">Fornece opções para determinar qual manipulador de eventos ou manipuladores são removidos.</span><span class="sxs-lookup"><span data-stu-id="7515c-170">Provides options to determine which event handler or handlers are removed.</span></span>
      type:
      - office.Office.RemoveHandlerOptions
    - id: callback
      description: <span data-ttu-id="7515c-171">Opcional.</span><span class="sxs-lookup"><span data-stu-id="7515c-171">Optional.</span></span> <span data-ttu-id="7515c-172">Uma função que é invocado quando o retorno de chamada retorna, cujo único parâmetro é do tipo [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="7515c-172">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span>
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.CustomXmlPart.removeHandlerAsync_1
  summary: <span data-ttu-id="7515c-173">Remove um manipulador de eventos para o tipo de evento especificado.</span><span class="sxs-lookup"><span data-stu-id="7515c-173">Removes an event handler for the specified event type.</span></span>
  name: removeHandlerAsync(eventType, handler, callback)
  fullName: removeHandlerAsync(eventType, handler, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'removeHandlerAsync(eventType: Office.EventType, handler?: (result: any) => void, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"7515c-174\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"7515c-174\">Examples</span></span>\n\n```javascript\nfunction removeNodeInsertedEventHandler() {\n    Office.context.document.customXmlParts.getByIdAsync(\n        \"{3BC85265-09D6-4205-B665-8EB239A8B9A1}\",\n        function (result) {\n            var xmlPart = result.value;\n            xmlPart.removeHandlerAsync(Office.EventType.DataNodeInserted, {handler:myHandler});\n    });\n}\n```"
    parameters:
    - id: eventType
      description: <span data-ttu-id="7515c-175">Especifica o tipo de evento para remover.</span><span class="sxs-lookup"><span data-stu-id="7515c-175">Specifies the type of event to remove.</span></span> <span data-ttu-id="7515c-176">Para um objeto CustomXmlPart, o parâmetro eventType pode ser especificado como `Office.EventType.NodeDeleted` <!-- -->, `Office.EventType.NodeInserted` <!-- -->, e `Office.EventType.NodeReplaced` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="7515c-176">For a CustomXmlPart object, the eventType parameter can be specified as `Office.EventType.NodeDeleted`<!-- -->, `Office.EventType.NodeInserted`<!-- -->, and `Office.EventType.NodeReplaced`<!-- -->.</span></span>
      type:
      - Office.EventType
    - id: handler
      description: <span data-ttu-id="7515c-177">O nome do manipulador para remover.</span><span class="sxs-lookup"><span data-stu-id="7515c-177">The name of the handler to remove.</span></span>
      type:
      - '(result: any) => void'
    - id: callback
      description: <span data-ttu-id="7515c-178">Opcional.</span><span class="sxs-lookup"><span data-stu-id="7515c-178">Optional.</span></span> <span data-ttu-id="7515c-179">Uma função que é invocado quando o retorno de chamada retorna, cujo único parâmetro é do tipo [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="7515c-179">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span>
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.CustomXmlPart.builtIn
  summary: <span data-ttu-id="7515c-180">True se a parte XML personalizada é feita no; Caso contrário false.</span><span class="sxs-lookup"><span data-stu-id="7515c-180">True, if the custom XML part is built in; otherwise false.</span></span>
  name: builtIn
  fullName: builtIn
  langs:
  - typeScript
  type: property
  syntax:
    content: 'builtIn: boolean;'
    return:
      type:
      - boolean
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"7515c-181\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"7515c-181\">Examples</span></span>\n\n```javascript\nfunction showXMLPartBuiltIn() {\n    Office.context.document.customXmlParts.getByIdAsync(\n        \"{3BC85265-09D6-4205-B665-8EB239A8B9A1}\", function (result) {\n        var xmlPart = result.value;\n        write(xmlPart.builtIn);\n    });\n}\n\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
- uid: office.Office.CustomXmlPart.id
  summary: <span data-ttu-id="7515c-182">Obtém o GUID do CustomXMLPart.</span><span class="sxs-lookup"><span data-stu-id="7515c-182">Gets the GUID of the CustomXMLPart.</span></span>
  name: id
  fullName: id
  langs:
  - typeScript
  type: property
  syntax:
    content: 'id: string;'
    return:
      type:
      - string
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"7515c-183\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"7515c-183\">Examples</span></span>\n\n```javascript\nfunction showXMLPartBuiltId() {\n    Office.context.document.customXmlParts.getByIdAsync(\n        \"{3BC85265-09D6-4205-B665-8EB239A8B9A1}\", function (result) {\n        var xmlPart = result.value;\n        write(xmlPart.id);\n    });\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
- uid: office.Office.CustomXmlPart.namespaceManager
  summary: <span data-ttu-id="7515c-184">Obtém o conjunto de namespace mapeamentos de prefixo ([Office.CustomXmlPrefixMappings](xref:office.Office.CustomXmlPrefixMappings)<!-- -->) usada contra o CustomXmlPart atual.</span><span class="sxs-lookup"><span data-stu-id="7515c-184">Gets the set of namespace prefix mappings ([Office.CustomXmlPrefixMappings](xref:office.Office.CustomXmlPrefixMappings)<!-- -->) used against the current CustomXmlPart.</span></span>
  name: namespaceManager
  fullName: namespaceManager
  langs:
  - typeScript
  type: property
  syntax:
    content: 'namespaceManager: CustomXmlPrefixMappings;'
    return:
      type:
      - office.Office.CustomXmlPrefixMappings
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"7515c-185\">Examples</span><span class=\"sxs-lookup\"><span data-stu-id=\"7515c-185\">Examples</span></span>\n\n```javascript\nfunction setXMLPartNamespaceManagerNamespace() {\n    Office.context.document.customXmlParts.getByIdAsync(\n        \"{3BC85265-09D6-4205-B665-8EB239A8B9A1}\", function (result) {\n        var xmlPart = result.value;\n        xmlPart.namespaceManager.addNamespaceAsync(\"myPrefix\", \"myNamespace\");\n    });\n}\n```"
