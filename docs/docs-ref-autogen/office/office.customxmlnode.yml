### YamlMime:UniversalReference
ms.openlocfilehash: aef94cedea3e63354fe77beea7a3047d5e8741a3
ms.sourcegitcommit: d356f1545c328d4b59ce814fcab8191e4231f1dc
ms.translationtype: MT
ms.contentlocale: pt-BR
ms.lasthandoff: 02/13/2019
ms.locfileid: "29974896"
items:
- uid: office.Office.CustomXmlNode
  summary: <span data-ttu-id="d6ded-101">Representa um nó XML em uma árvore em um documento.</span><span class="sxs-lookup"><span data-stu-id="d6ded-101">Represents an XML node in a tree in a document.</span></span>
  remarks: >-
    <table><tr><td><span data-ttu-id="d6ded-102">Conjuntos de requisito</span><span class="sxs-lookup"><span data-stu-id="d6ded-102">Requirement Sets</span></span></td><td><span data-ttu-id="d6ded-103">CustomXmlParts</span><span class="sxs-lookup"><span data-stu-id="d6ded-103">CustomXmlParts</span></span></td></tr></table>


    <span data-ttu-id="d6ded-104">**Detalhes do suporte**</span><span class="sxs-lookup"><span data-stu-id="d6ded-104">**Support details**</span></span>


    <span data-ttu-id="d6ded-105">Um capital Y a matriz a seguir indica que esta interface é suportado no aplicativo host do Office correspondente.</span><span class="sxs-lookup"><span data-stu-id="d6ded-105">A capital Y in the following matrix indicates that this interface is supported in the corresponding Office host application.</span></span> <span data-ttu-id="d6ded-106">Uma célula vazia indica que o aplicativo host do Office não dá suporte a essa interface.</span><span class="sxs-lookup"><span data-stu-id="d6ded-106">An empty cell indicates that the Office host application doesn't support this interface.</span></span>


    <span data-ttu-id="d6ded-107">Para obter mais informações sobre requisitos de aplicativo e servidor de host do Office, consulte [requisitos para a execução de suplementos do Office](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="d6ded-107">For more information about Office host application and server requirements, see [Requirements for running Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span></span>


    <span data-ttu-id="d6ded-108">*Hosts com suporte, por plataforma*</span><span class="sxs-lookup"><span data-stu-id="d6ded-108">*Supported hosts, by platform*</span></span> <table> <tr><th> </th><th> <span data-ttu-id="d6ded-109">Office for Windows desktop</span><span class="sxs-lookup"><span data-stu-id="d6ded-109">Office for Windows desktop</span></span> </th><th> <span data-ttu-id="d6ded-110">Office Online (no navegador)</span><span class="sxs-lookup"><span data-stu-id="d6ded-110">Office Online (in browser)</span></span> </th><th> <span data-ttu-id="d6ded-111">Office para iPad</span><span class="sxs-lookup"><span data-stu-id="d6ded-111">Office for iPad</span></span> </th><th> <span data-ttu-id="d6ded-112">Office para Mac</span><span class="sxs-lookup"><span data-stu-id="d6ded-112">Office for Mac</span></span> </th></tr> <tr><td><span data-ttu-id="d6ded-113"><strong>Word</strong></span><span class="sxs-lookup"><span data-stu-id="d6ded-113"><strong> Word </strong></span></span></td><td> <span data-ttu-id="d6ded-114">S</span><span class="sxs-lookup"><span data-stu-id="d6ded-114">Y</span></span> </td><td> <span data-ttu-id="d6ded-115">S</span><span class="sxs-lookup"><span data-stu-id="d6ded-115">Y</span></span> </td><td> <span data-ttu-id="d6ded-116">S</span><span class="sxs-lookup"><span data-stu-id="d6ded-116">Y</span></span> </td><td> <span data-ttu-id="d6ded-117">S</span><span class="sxs-lookup"><span data-stu-id="d6ded-117">Y</span></span> </td></tr> </table>
  name: Office.CustomXmlNode
  fullName: Office.CustomXmlNode
  langs:
  - typeScript
  type: interface
  package: office
  children:
  - office.Office.CustomXmlNode.getNodesAsync
  - office.Office.CustomXmlNode.getNodesAsync_1
  - office.Office.CustomXmlNode.getNodeValueAsync
  - office.Office.CustomXmlNode.getNodeValueAsync_1
  - office.Office.CustomXmlNode.getTextAsync
  - office.Office.CustomXmlNode.getTextAsync_1
  - office.Office.CustomXmlNode.getXmlAsync
  - office.Office.CustomXmlNode.getXmlAsync_1
  - office.Office.CustomXmlNode.setNodeValueAsync
  - office.Office.CustomXmlNode.setNodeValueAsync_1
  - office.Office.CustomXmlNode.setTextAsync
  - office.Office.CustomXmlNode.setTextAsync_1
  - office.Office.CustomXmlNode.setXmlAsync
  - office.Office.CustomXmlNode.setXmlAsync_1
  - office.Office.CustomXmlNode.baseName
  - office.Office.CustomXmlNode.namespaceUri
  - office.Office.CustomXmlNode.nodeType
- uid: office.Office.CustomXmlNode.getNodesAsync
  summary: <span data-ttu-id="d6ded-118">Obtém os nós associado a uma expressão XPath.</span><span class="sxs-lookup"><span data-stu-id="d6ded-118">Gets the nodes associated with the XPath expression.</span></span>
  remarks: <table><tr><td><span data-ttu-id="d6ded-119">Conjuntos de requisito</span><span class="sxs-lookup"><span data-stu-id="d6ded-119">Requirement Sets</span></span></td><td><span data-ttu-id="d6ded-120">CustomXmlParts</span><span class="sxs-lookup"><span data-stu-id="d6ded-120">CustomXmlParts</span></span></td></tr></table>
  name: getNodesAsync(xPath, options, callback)
  fullName: getNodesAsync(xPath, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getNodesAsync(xPath: string, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<CustomXmlNode[]>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: xPath
      description: <span data-ttu-id="d6ded-121">A expressão XPath que especifica os nós ser obtido.</span><span class="sxs-lookup"><span data-stu-id="d6ded-121">The XPath expression that specifies the nodes to get.</span></span> <span data-ttu-id="d6ded-122">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="d6ded-122">Required.</span></span>
      type:
      - string
    - id: options
      description: <span data-ttu-id="d6ded-123">Fornece uma opção para preservar dados de contexto de qualquer tipo, inalterado, para uso em um retorno de chamada.</span><span class="sxs-lookup"><span data-stu-id="d6ded-123">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="d6ded-124">Opcional.</span><span class="sxs-lookup"><span data-stu-id="d6ded-124">Optional.</span></span> <span data-ttu-id="d6ded-125">Uma função que é invocado quando o retorno de chamada retorna, cujo único parâmetro é do tipo [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="d6ded-125">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="d6ded-126">O `value` propriedade do resultado é uma matriz de objetos CustomXmlNode que representa os nós especificado pela expressão XPath passada para o `xPath` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="d6ded-126">The `value` property of the result is an array of CustomXmlNode objects that represent the nodes specified by the XPath expression passed to the `xPath` parameter.</span></span>
      type:
      - '(result: AsyncResult<CustomXmlNode[]>) => void'
- uid: office.Office.CustomXmlNode.getNodesAsync_1
  summary: <span data-ttu-id="d6ded-127">Obtém os nós associado a uma expressão XPath.</span><span class="sxs-lookup"><span data-stu-id="d6ded-127">Gets the nodes associated with the XPath expression.</span></span>
  remarks: "<table><tr><td><span data-ttu-id=\"d6ded-128\">Conjuntos de requisito</span><span class=\"sxs-lookup\"><span data-stu-id=\"d6ded-128\">Requirement Sets</span></span></td><td><span data-ttu-id=\"d6ded-129\">CustomXmlParts</span><span class=\"sxs-lookup\"><span data-stu-id=\"d6ded-129\">CustomXmlParts</span></span></td></tr></table>\n#### <span data-ttu-id=\"d6ded-130\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"d6ded-130\">Examples</span></span>\n\n```javascript\nfunction showXmlChildNodes() {\n    Office.context.document.customXmlParts.getByIdAsync(\n        \"{3BC85265-09D6-4205-B665-8EB239A8B9A1}\", function (result) {\n        var xmlPart = result.value;\n        xmlPart.getNodesAsync('*', function (nodeResults) {\n            for (i = 0; i < nodeResults.value.length; i++) {\n                var node = nodeResults.value[i];\n                node.getNodesAsync('*', function (nodeResults) {\n                    write(nodeResults.value.length + \" childNodes\");\n                });\n            }\n        });\n    });\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  name: getNodesAsync(xPath, callback)
  fullName: getNodesAsync(xPath, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getNodesAsync(xPath: string, callback?: (result: AsyncResult<CustomXmlNode[]>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: xPath
      description: <span data-ttu-id="d6ded-131">A expressão XPath que especifica os nós ser obtido.</span><span class="sxs-lookup"><span data-stu-id="d6ded-131">The XPath expression that specifies the nodes to get.</span></span> <span data-ttu-id="d6ded-132">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="d6ded-132">Required.</span></span>
      type:
      - string
    - id: callback
      description: <span data-ttu-id="d6ded-133">Opcional.</span><span class="sxs-lookup"><span data-stu-id="d6ded-133">Optional.</span></span> <span data-ttu-id="d6ded-134">Uma função que é invocado quando o retorno de chamada retorna, cujo único parâmetro é do tipo [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="d6ded-134">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="d6ded-135">O `value` propriedade do resultado é uma matriz de objetos CustomXmlNode que representa os nós especificado pela expressão XPath passada para o `xPath` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="d6ded-135">The `value` property of the result is an array of CustomXmlNode objects that represent the nodes specified by the XPath expression passed to the `xPath` parameter.</span></span>
      type:
      - '(result: AsyncResult<CustomXmlNode[]>) => void'
- uid: office.Office.CustomXmlNode.getNodeValueAsync
  summary: <span data-ttu-id="d6ded-136">Obtém o valor de nó.</span><span class="sxs-lookup"><span data-stu-id="d6ded-136">Gets the node value.</span></span>
  remarks: <table><tr><td><span data-ttu-id="d6ded-137">Conjuntos de requisito</span><span class="sxs-lookup"><span data-stu-id="d6ded-137">Requirement Sets</span></span></td><td><span data-ttu-id="d6ded-138">CustomXmlParts</span><span class="sxs-lookup"><span data-stu-id="d6ded-138">CustomXmlParts</span></span></td></tr></table>
  name: getNodeValueAsync(options, callback)
  fullName: getNodeValueAsync(options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getNodeValueAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: options
      description: <span data-ttu-id="d6ded-139">Fornece uma opção para preservar dados de contexto de qualquer tipo, inalterado, para uso em um retorno de chamada.</span><span class="sxs-lookup"><span data-stu-id="d6ded-139">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="d6ded-140">Opcional.</span><span class="sxs-lookup"><span data-stu-id="d6ded-140">Optional.</span></span> <span data-ttu-id="d6ded-141">Uma função que é invocado quando o retorno de chamada retorna, cujo único parâmetro é do tipo [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="d6ded-141">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="d6ded-142">O `value` propriedade do resultado é uma cadeia de caracteres que contém o valor do nó referenciado.</span><span class="sxs-lookup"><span data-stu-id="d6ded-142">The `value` property of the result is a string that contains the value of the referenced node.</span></span>
      type:
      - '(result: AsyncResult<string>) => void'
- uid: office.Office.CustomXmlNode.getNodeValueAsync_1
  summary: <span data-ttu-id="d6ded-143">Obtém o valor de nó.</span><span class="sxs-lookup"><span data-stu-id="d6ded-143">Gets the node value.</span></span>
  remarks: "<table><tr><td><span data-ttu-id=\"d6ded-144\">Conjuntos de requisito</span><span class=\"sxs-lookup\"><span data-stu-id=\"d6ded-144\">Requirement Sets</span></span></td><td><span data-ttu-id=\"d6ded-145\">CustomXmlParts</span><span class=\"sxs-lookup\"><span data-stu-id=\"d6ded-145\">CustomXmlParts</span></span></td></tr></table>\n#### <span data-ttu-id=\"d6ded-146\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"d6ded-146\">Examples</span></span>\n\n```javascript\nfunction showXmlNodeValues() {\n    Office.context.document.customXmlParts.getByIdAsync(\n        \"{3BC85265-09D6-4205-B665-8EB239A8B9A1}\", function (result) {\n        var xmlPart = result.value;\n        xmlPart.getNodesAsync('*/*', function (nodeResults) {\n            for (i = 0; i < nodeResults.value.length; i++) {\n                var node = nodeResults.value[i];\n                node.getNodeValueAsync(function (asyncResult) {\n                    write(asyncResult.value);\n                });\n            }\n        });\n    });\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  name: getNodeValueAsync(callback)
  fullName: getNodeValueAsync(callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getNodeValueAsync(callback?: (result: AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: callback
      description: <span data-ttu-id="d6ded-147">Opcional.</span><span class="sxs-lookup"><span data-stu-id="d6ded-147">Optional.</span></span> <span data-ttu-id="d6ded-148">Uma função que é invocado quando o retorno de chamada retorna, cujo único parâmetro é do tipo [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="d6ded-148">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="d6ded-149">O `value` propriedade do resultado é uma cadeia de caracteres que contém o valor do nó referenciado.</span><span class="sxs-lookup"><span data-stu-id="d6ded-149">The `value` property of the result is a string that contains the value of the referenced node.</span></span>
      type:
      - '(result: AsyncResult<string>) => void'
- uid: office.Office.CustomXmlNode.getTextAsync
  summary: <span data-ttu-id="d6ded-150">Obtém o texto de um nó XML em uma parte XML personalizada.</span><span class="sxs-lookup"><span data-stu-id="d6ded-150">Gets the text of an XML node in a custom XML part.</span></span>
  remarks: "<table><tr><td><span data-ttu-id=\"d6ded-151\">Conjuntos de requisito</span><span class=\"sxs-lookup\"><span data-stu-id=\"d6ded-151\">Requirement Sets</span></span></td><td><span data-ttu-id=\"d6ded-152\">CustomXmlParts</span><span class=\"sxs-lookup\"><span data-stu-id=\"d6ded-152\">CustomXmlParts</span></span></td></tr></table>\n#### <span data-ttu-id=\"d6ded-153\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"d6ded-153\">Examples</span></span>\n\n```javascript\n// Get the built-in core properties XML part by using its ID. This results in a call to Word.\nOffice.context.document.customXmlParts.getByIdAsync(\n    \"{6C3C8BC8-F283-45AE-878A-BAB7291924A1}\", function (getByIdAsyncResult) {\n    \n    // Access the XML part.\n    var xmlPart = getByIdAsyncResult.value;\n    \n    // Add namespaces to the namespace manager. These two calls result in two calls to Word.\n    xmlPart.namespaceManager.addNamespaceAsync(\n        'cp',\n        'http://schemas.openxmlformats.org/package/2006/metadata/core-properties',\n        function () {\n        xmlPart.namespaceManager.addNamespaceAsync(\n            'dc', \n            'http://purl.org/dc/elements/1.1/', \n            function () {\n\n            // Get XML nodes by using an Xpath expression. This results in a call to Word.\n            xmlPart.getNodesAsync(\"/cp:coreProperties/dc:title\", function (getNodesAsyncResult) {\n                \n                // Get the first node returned by using the Xpath expression. \n                var node = getNodesAsyncResult.value[0];\n                \n                // Get the text value of the node and use the asyncContext. This results in a call to Word. \n                // The results are logged to the browser console.\n                node.getTextAsync({asyncContext: \"StateNormal\"}, function (getTextAsyncResult) {\n                  console.log(\"Text of the title element = \" + getTextAsyncResult.value;\n                  console.log(\"The asyncContext value = \" + getTextAsyncResult.asyncContext;\n                });\n            });\n        });\n    });\n});\n```"
  name: getTextAsync(options, callback)
  fullName: getTextAsync(options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getTextAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: options
      description: <span data-ttu-id="d6ded-154">Fornece uma opção para preservar dados de contexto de qualquer tipo, inalterado, para uso em um retorno de chamada.</span><span class="sxs-lookup"><span data-stu-id="d6ded-154">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="d6ded-155">Opcional.</span><span class="sxs-lookup"><span data-stu-id="d6ded-155">Optional.</span></span> <span data-ttu-id="d6ded-156">Uma função que é invocado quando o retorno de chamada retorna, cujo único parâmetro é do tipo [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="d6ded-156">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="d6ded-157">O `value` propriedade do resultado é uma cadeia de caracteres que contém o texto interno de nós referenciado.</span><span class="sxs-lookup"><span data-stu-id="d6ded-157">The `value` property of the result is a string that contains the inner text of the referenced nodes.</span></span>
      type:
      - '(result: AsyncResult<string>) => void'
- uid: office.Office.CustomXmlNode.getTextAsync_1
  summary: <span data-ttu-id="d6ded-158">Obtém o texto de um nó XML em uma parte XML personalizada.</span><span class="sxs-lookup"><span data-stu-id="d6ded-158">Gets the text of an XML node in a custom XML part.</span></span>
  remarks: <table><tr><td><span data-ttu-id="d6ded-159">Conjuntos de requisito</span><span class="sxs-lookup"><span data-stu-id="d6ded-159">Requirement Sets</span></span></td><td><span data-ttu-id="d6ded-160">CustomXmlParts</span><span class="sxs-lookup"><span data-stu-id="d6ded-160">CustomXmlParts</span></span></td></tr></table>
  name: getTextAsync(callback)
  fullName: getTextAsync(callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getTextAsync(callback?: (result: AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: callback
      description: <span data-ttu-id="d6ded-161">Opcional.</span><span class="sxs-lookup"><span data-stu-id="d6ded-161">Optional.</span></span> <span data-ttu-id="d6ded-162">Uma função que é invocado quando o retorno de chamada retorna, cujo único parâmetro é do tipo [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="d6ded-162">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="d6ded-163">O `value` propriedade do resultado é uma cadeia de caracteres que contém o texto interno de nós referenciado.</span><span class="sxs-lookup"><span data-stu-id="d6ded-163">The `value` property of the result is a string that contains the inner text of the referenced nodes.</span></span>
      type:
      - '(result: AsyncResult<string>) => void'
- uid: office.Office.CustomXmlNode.getXmlAsync
  summary: <span data-ttu-id="d6ded-164">Obtém XML do nó.</span><span class="sxs-lookup"><span data-stu-id="d6ded-164">Gets the node's XML.</span></span>
  remarks: <table><tr><td><span data-ttu-id="d6ded-165">Conjuntos de requisito</span><span class="sxs-lookup"><span data-stu-id="d6ded-165">Requirement Sets</span></span></td><td><span data-ttu-id="d6ded-166">CustomXmlParts</span><span class="sxs-lookup"><span data-stu-id="d6ded-166">CustomXmlParts</span></span></td></tr></table>
  name: getXmlAsync(options, callback)
  fullName: getXmlAsync(options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getXmlAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: options
      description: <span data-ttu-id="d6ded-167">Fornece uma opção para preservar dados de contexto de qualquer tipo, inalterado, para uso em um retorno de chamada.</span><span class="sxs-lookup"><span data-stu-id="d6ded-167">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="d6ded-168">Opcional.</span><span class="sxs-lookup"><span data-stu-id="d6ded-168">Optional.</span></span> <span data-ttu-id="d6ded-169">Uma função que é invocado quando o retorno de chamada retorna, cujo único parâmetro é do tipo [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="d6ded-169">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="d6ded-170">O `value` propriedade do resultado é uma cadeia de caracteres que contém o XML do nó referenciado.</span><span class="sxs-lookup"><span data-stu-id="d6ded-170">The `value` property of the result is a string that contains the XML of the referenced node.</span></span>
      type:
      - '(result: AsyncResult<string>) => void'
- uid: office.Office.CustomXmlNode.getXmlAsync_1
  summary: <span data-ttu-id="d6ded-171">Obtém XML do nó.</span><span class="sxs-lookup"><span data-stu-id="d6ded-171">Gets the node's XML.</span></span>
  remarks: "<table><tr><td><span data-ttu-id=\"d6ded-172\">Conjuntos de requisito</span><span class=\"sxs-lookup\"><span data-stu-id=\"d6ded-172\">Requirement Sets</span></span></td><td><span data-ttu-id=\"d6ded-173\">CustomXmlParts</span><span class=\"sxs-lookup\"><span data-stu-id=\"d6ded-173\">CustomXmlParts</span></span></td></tr></table>\n#### <span data-ttu-id=\"d6ded-174\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"d6ded-174\">Examples</span></span>\n\n```javascript\nfunction showXmlNodeInnerXml() {\n    Office.context.document.customXmlParts.getByIdAsync(\n        \"{3BC85265-09D6-4205-B665-8EB239A8B9A1}\", function (result) {\n        var xmlPart = result.value;\n        xmlPart.getNodesAsync('*', function (nodeResults) {\n            for (i = 0; i < nodeResults.value.length; i++) {\n                var node = nodeResults.value[i];\n                node.getXmlAsync(function (asyncResult) {\n                    write(asyncResult.value);\n                });\n            }\n        });\n    });\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  name: getXmlAsync(callback)
  fullName: getXmlAsync(callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getXmlAsync(callback?: (result: AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: callback
      description: <span data-ttu-id="d6ded-175">Opcional.</span><span class="sxs-lookup"><span data-stu-id="d6ded-175">Optional.</span></span> <span data-ttu-id="d6ded-176">Uma função que é invocado quando o retorno de chamada retorna, cujo único parâmetro é do tipo [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="d6ded-176">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="d6ded-177">O `value` propriedade do resultado é uma cadeia de caracteres que contém o XML do nó referenciado.</span><span class="sxs-lookup"><span data-stu-id="d6ded-177">The `value` property of the result is a string that contains the XML of the referenced node.</span></span>
      type:
      - '(result: AsyncResult<string>) => void'
- uid: office.Office.CustomXmlNode.setNodeValueAsync
  summary: <span data-ttu-id="d6ded-178">Define o valor de nó.</span><span class="sxs-lookup"><span data-stu-id="d6ded-178">Sets the node value.</span></span>
  remarks: <table><tr><td><span data-ttu-id="d6ded-179">Conjuntos de requisito</span><span class="sxs-lookup"><span data-stu-id="d6ded-179">Requirement Sets</span></span></td><td><span data-ttu-id="d6ded-180">CustomXmlParts</span><span class="sxs-lookup"><span data-stu-id="d6ded-180">CustomXmlParts</span></span></td></tr></table>
  name: setNodeValueAsync(value, options, callback)
  fullName: setNodeValueAsync(value, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setNodeValueAsync(value: string, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: value
      description: <span data-ttu-id="d6ded-181">O valor a ser definida no nó</span><span class="sxs-lookup"><span data-stu-id="d6ded-181">The value to be set on the node</span></span>
      type:
      - string
    - id: options
      description: <span data-ttu-id="d6ded-182">Fornece uma opção para preservar dados de contexto de qualquer tipo, inalterado, para uso em um retorno de chamada.</span><span class="sxs-lookup"><span data-stu-id="d6ded-182">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="d6ded-183">Opcional.</span><span class="sxs-lookup"><span data-stu-id="d6ded-183">Optional.</span></span> <span data-ttu-id="d6ded-184">Uma função que é invocado quando o retorno de chamada retorna, cujo único parâmetro é do tipo [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="d6ded-184">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span>
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.CustomXmlNode.setNodeValueAsync_1
  summary: <span data-ttu-id="d6ded-185">Define o valor de nó.</span><span class="sxs-lookup"><span data-stu-id="d6ded-185">Sets the node value.</span></span>
  remarks: "<table><tr><td><span data-ttu-id=\"d6ded-186\">Conjuntos de requisito</span><span class=\"sxs-lookup\"><span data-stu-id=\"d6ded-186\">Requirement Sets</span></span></td><td><span data-ttu-id=\"d6ded-187\">CustomXmlParts</span><span class=\"sxs-lookup\"><span data-stu-id=\"d6ded-187\">CustomXmlParts</span></span></td></tr></table>\n#### <span data-ttu-id=\"d6ded-188\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"d6ded-188\">Examples</span></span>\n\n```javascript\nfunction setXmlNodeValue() {\n    Office.context.document.customXmlParts.getByIdAsync(\n        \"{3BC85265-09D6-4205-B665-8EB239A8B9A1}\", function (result) {\n        var xmlPart = result.value;\n        xmlPart.getNodesAsync('*/*', function (nodeResults) {\n            for (i = 0; i < nodeResults.value.length; i++) {\n                var node = nodeResults.value[i];\n                write(node);\n                node.setNodeValueAsync(\"item number\" + i, function (result) { });\n            }\n        });\n    });\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  name: setNodeValueAsync(value, callback)
  fullName: setNodeValueAsync(value, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setNodeValueAsync(value: string, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: value
      description: <span data-ttu-id="d6ded-189">O valor a ser definida no nó</span><span class="sxs-lookup"><span data-stu-id="d6ded-189">The value to be set on the node</span></span>
      type:
      - string
    - id: callback
      description: <span data-ttu-id="d6ded-190">Opcional.</span><span class="sxs-lookup"><span data-stu-id="d6ded-190">Optional.</span></span> <span data-ttu-id="d6ded-191">Uma função que é invocado quando o retorno de chamada retorna, cujo único parâmetro é do tipo [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="d6ded-191">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span>
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.CustomXmlNode.setTextAsync
  summary: <span data-ttu-id="d6ded-192">Define de forma assíncrona o texto de um nó XML em uma parte XML personalizada.</span><span class="sxs-lookup"><span data-stu-id="d6ded-192">Asynchronously sets the text of an XML node in a custom XML part.</span></span>
  remarks: "<table><tr><td><span data-ttu-id=\"d6ded-193\">Hosts</span><span class=\"sxs-lookup\"><span data-stu-id=\"d6ded-193\">Hosts</span></span></td><td><span data-ttu-id=\"d6ded-194\">Word</span><span class=\"sxs-lookup\"><span data-stu-id=\"d6ded-194\">Word</span></span></td></tr>\n\n<tr><td><span data-ttu-id=\"d6ded-195\">Conjuntos de requisito</span><span class=\"sxs-lookup\"><span data-stu-id=\"d6ded-195\">Requirement Sets</span></span></td><td><span data-ttu-id=\"d6ded-196\">CustomXmlParts</span><span class=\"sxs-lookup\"><span data-stu-id=\"d6ded-196\">CustomXmlParts</span></span></td></tr></table>\n#### <span data-ttu-id=\"d6ded-197\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"d6ded-197\">Examples</span></span>\n\n```javascript\n// Learn how to set the text value of a node in a custom XML part from the following example.\n\n// Get the built-in core properties XML part by using its ID. This results in a call to Word.\nOffice.context.document.customXmlParts.getByIdAsync(\n    \"{6C3C8BC8-F283-45AE-878A-BAB7291924A1}\",\n    function (getByIdAsyncResult) {\n    \n    // Access the XML part.\n    var xmlPart = getByIdAsyncResult.value;\n    \n    // Add namespaces to the namespace manager. These two calls result in two calls to Word.\n    xmlPart.namespaceManager.addNamespaceAsync(\n        'cp', \n        'http://schemas.openxmlformats.org/package/2006/metadata/core-properties', \n        function () {\n        xmlPart.namespaceManager.addNamespaceAsync(\n            'dc', \n            'http://purl.org/dc/elements/1.1/', \n            function () {\n\n            // Get XML nodes by using an Xpath expression. This results in a call to the host.\n            xmlPart.getNodesAsync(\"/cp:coreProperties/dc:subject\", function (getNodesAsyncResult) {\n                \n                // Get the first node returned by using the Xpath expression.\n                // This will be the subject element in this example.\n                var subjectNode = getNodesAsyncResult.value[0];\n                \n                // Set the text value of the subject node and use the asyncContext. \n                // This results in a call to the host.  The results are logged to the browser console.\n                subjectNode.setTextAsync(\n                    \"newSubject\", \n                    {asyncContext: \"StateNormal\"}, \n                    function (setTextAsyncResult) {\n                        console.log(\"The status of the call: \" + setTextAsyncResult.status);\n                        console.log(\"The asyncContext value = \" + setTextAsyncResult.asyncContext);\n                });\n            });\n        });\n    });\n});\n```"
  name: setTextAsync(text, options, callback)
  fullName: setTextAsync(text, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setTextAsync(text: string, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: text
      description: <span data-ttu-id="d6ded-p114">Obrigatório. O valor do texto do nó XML.</span><span class="sxs-lookup"><span data-stu-id="d6ded-p114">Required. The text value of the XML node.</span></span>
      type:
      - string
    - id: options
      description: <span data-ttu-id="d6ded-200">Fornece uma opção para preservar dados de contexto de qualquer tipo, inalterado, para uso em um retorno de chamada.</span><span class="sxs-lookup"><span data-stu-id="d6ded-200">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="d6ded-201">Opcional.</span><span class="sxs-lookup"><span data-stu-id="d6ded-201">Optional.</span></span> <span data-ttu-id="d6ded-202">Uma função que é invocado quando o retorno de chamada retorna, cujo único parâmetro é do tipo [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="d6ded-202">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span>
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.CustomXmlNode.setTextAsync_1
  summary: <span data-ttu-id="d6ded-203">Define de forma assíncrona o texto de um nó XML em uma parte XML personalizada.</span><span class="sxs-lookup"><span data-stu-id="d6ded-203">Asynchronously sets the text of an XML node in a custom XML part.</span></span>
  remarks: >-
    <table><tr><td><span data-ttu-id="d6ded-204">Hosts</span><span class="sxs-lookup"><span data-stu-id="d6ded-204">Hosts</span></span></td><td><span data-ttu-id="d6ded-205">Word</span><span class="sxs-lookup"><span data-stu-id="d6ded-205">Word</span></span></td></tr>


    <tr><td><span data-ttu-id="d6ded-206">Conjuntos de requisito</span><span class="sxs-lookup"><span data-stu-id="d6ded-206">Requirement Sets</span></span></td><td><span data-ttu-id="d6ded-207">CustomXmlParts</span><span class="sxs-lookup"><span data-stu-id="d6ded-207">CustomXmlParts</span></span></td></tr></table>
  name: setTextAsync(text, callback)
  fullName: setTextAsync(text, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setTextAsync(text: string, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: text
      description: <span data-ttu-id="d6ded-p116">Obrigatório. O valor do texto do nó XML.</span><span class="sxs-lookup"><span data-stu-id="d6ded-p116">Required. The text value of the XML node.</span></span>
      type:
      - string
    - id: callback
      description: <span data-ttu-id="d6ded-210">Opcional.</span><span class="sxs-lookup"><span data-stu-id="d6ded-210">Optional.</span></span> <span data-ttu-id="d6ded-211">Uma função que é invocado quando o retorno de chamada retorna, cujo único parâmetro é do tipo [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="d6ded-211">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span>
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.CustomXmlNode.setXmlAsync
  summary: <span data-ttu-id="d6ded-212">Define o nó XML.</span><span class="sxs-lookup"><span data-stu-id="d6ded-212">Sets the node XML.</span></span>
  remarks: >-
    <table><tr><td><span data-ttu-id="d6ded-213">Conjuntos de requisito</span><span class="sxs-lookup"><span data-stu-id="d6ded-213">Requirement Sets</span></span></td><td><span data-ttu-id="d6ded-214">CustomXmlParts</span><span class="sxs-lookup"><span data-stu-id="d6ded-214">CustomXmlParts</span></span></td></tr></table>

    #### <span data-ttu-id="d6ded-215">Exemplos</span><span class="sxs-lookup"><span data-stu-id="d6ded-215">Examples</span></span>


    ```javascript

    function setXmlNodeInnerXml() {
        Office.context.document.customXmlParts.getByIdAsync(
            "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
            var xmlPart = result.value;
            xmlPart.getNodesAsync('*', function (nodeResults) {
                for (i = 0; i < nodeResults.value.length; i++) {
                    var node = nodeResults.value[i];
                    node.setXmlAsync("<childNode>" + i + "</childNode>");
                }
            });
        });
    }

    ```
  name: setXmlAsync(xml, options, callback)
  fullName: setXmlAsync(xml, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setXmlAsync(xml: string, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: xml
      description: <span data-ttu-id="d6ded-216">O XML a ser definida no nó</span><span class="sxs-lookup"><span data-stu-id="d6ded-216">The XML to be set on the node</span></span>
      type:
      - string
    - id: options
      description: <span data-ttu-id="d6ded-217">Fornece uma opção para preservar dados de contexto de qualquer tipo, inalterado, para uso em um retorno de chamada.</span><span class="sxs-lookup"><span data-stu-id="d6ded-217">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="d6ded-218">Opcional.</span><span class="sxs-lookup"><span data-stu-id="d6ded-218">Optional.</span></span> <span data-ttu-id="d6ded-219">Uma função que é invocado quando o retorno de chamada retorna, cujo único parâmetro é do tipo [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="d6ded-219">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span>
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.CustomXmlNode.setXmlAsync_1
  summary: <span data-ttu-id="d6ded-220">Define o nó XML.</span><span class="sxs-lookup"><span data-stu-id="d6ded-220">Sets the node XML.</span></span>
  remarks: <table><tr><td><span data-ttu-id="d6ded-221">Conjuntos de requisito</span><span class="sxs-lookup"><span data-stu-id="d6ded-221">Requirement Sets</span></span></td><td><span data-ttu-id="d6ded-222">CustomXmlParts</span><span class="sxs-lookup"><span data-stu-id="d6ded-222">CustomXmlParts</span></span></td></tr></table>
  name: setXmlAsync(xml, callback)
  fullName: setXmlAsync(xml, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setXmlAsync(xml: string, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: xml
      description: <span data-ttu-id="d6ded-223">O XML a ser definida no nó</span><span class="sxs-lookup"><span data-stu-id="d6ded-223">The XML to be set on the node</span></span>
      type:
      - string
    - id: callback
      description: <span data-ttu-id="d6ded-224">Opcional.</span><span class="sxs-lookup"><span data-stu-id="d6ded-224">Optional.</span></span> <span data-ttu-id="d6ded-225">Uma função que é invocado quando o retorno de chamada retorna, cujo único parâmetro é do tipo [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="d6ded-225">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span>
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.CustomXmlNode.baseName
  summary: <span data-ttu-id="d6ded-226">Obtém o nome de base do nó sem o prefixo do namespace, caso exista um.</span><span class="sxs-lookup"><span data-stu-id="d6ded-226">Gets the base name of the node without the namespace prefix, if one exists.</span></span>
  remarks: "<table><tr><td><span data-ttu-id=\"d6ded-227\">Conjuntos de requisito</span><span class=\"sxs-lookup\"><span data-stu-id=\"d6ded-227\">Requirement Sets</span></span></td><td><span data-ttu-id=\"d6ded-228\">CustomXmlParts</span><span class=\"sxs-lookup\"><span data-stu-id=\"d6ded-228\">CustomXmlParts</span></span></td></tr></table>\n#### <span data-ttu-id=\"d6ded-229\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"d6ded-229\">Examples</span></span>\n\n```javascript\nfunction showXmlNodeBaseNames() {\n    Office.context.document.customXmlParts.getByIdAsync(\n        \"{3BC85265-09D6-4205-B665-8EB239A8B9A1}\", function (result) {\n        var xmlPart = result.value;\n        xmlPart.getNodesAsync('*/*', function (nodeResults) {\n            for (i = 0; i < nodeResults.value.length; i++) {\n                var node = nodeResults.value[i];\n                write(node.baseName);\n            }\n        });\n    });\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  name: baseName
  fullName: baseName
  langs:
  - typeScript
  type: property
  syntax:
    content: 'baseName: string;'
    return:
      type:
      - string
- uid: office.Office.CustomXmlNode.namespaceUri
  summary: <span data-ttu-id="d6ded-230">Recupera a cadeia de caracteres GUID do CustomXMLPart.</span><span class="sxs-lookup"><span data-stu-id="d6ded-230">Retrieves the string GUID of the CustomXMLPart.</span></span>
  remarks: "<table><tr><td><span data-ttu-id=\"d6ded-231\">Conjuntos de requisito</span><span class=\"sxs-lookup\"><span data-stu-id=\"d6ded-231\">Requirement Sets</span></span></td><td><span data-ttu-id=\"d6ded-232\">CustomXmlParts</span><span class=\"sxs-lookup\"><span data-stu-id=\"d6ded-232\">CustomXmlParts</span></span></td></tr></table>\n#### <span data-ttu-id=\"d6ded-233\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"d6ded-233\">Examples</span></span>\n\n```javascript\nfunction showXmlNamespaceUri() {\n    Office.context.document.customXmlParts.getByIdAsync(\n        \"{3BC85265-09D6-4205-B665-8EB239A8B9A1}\", function (result) {\n        var xmlPart = result.value;\n        xmlPart.getNodesAsync('*/*', function (nodeResults) {\n            for (i = 0; i < nodeResults.value.length; i++) {\n                var node = nodeResults.value[i];\n                write(node.namespaceUri);\n            }\n        });\n    });\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  name: namespaceUri
  fullName: namespaceUri
  langs:
  - typeScript
  type: property
  syntax:
    content: 'namespaceUri: string;'
    return:
      type:
      - string
- uid: office.Office.CustomXmlNode.nodeType
  summary: <span data-ttu-id="d6ded-234">Obtém o tipo do CustomXMLNode.</span><span class="sxs-lookup"><span data-stu-id="d6ded-234">Gets the type of the CustomXMLNode.</span></span>
  remarks: "<table><tr><td><span data-ttu-id=\"d6ded-235\">Conjuntos de requisito</span><span class=\"sxs-lookup\"><span data-stu-id=\"d6ded-235\">Requirement Sets</span></span></td><td><span data-ttu-id=\"d6ded-236\">CustomXmlParts</span><span class=\"sxs-lookup\"><span data-stu-id=\"d6ded-236\">CustomXmlParts</span></span></td></tr></table>\n#### <span data-ttu-id=\"d6ded-237\">Examples</span><span class=\"sxs-lookup\"><span data-stu-id=\"d6ded-237\">Examples</span></span>\n\n```javascript\nfunction showXmlNodeType() {\n    Office.context.document.customXmlParts.getByIdAsync(\n        \"{3BC85265-09D6-4205-B665-8EB239A8B9A1}\", function (result) {\n        var xmlPart = result.value;\n        xmlPart.getNodesAsync('*/*', function (nodeResults) {\n            for (i = 0; i < nodeResults.value.length; i++) {\n                var node = nodeResults.value[i];\n                write(node.nodeType);\n            }\n        });\n    });\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  name: nodeType
  fullName: nodeType
  langs:
  - typeScript
  type: property
  syntax:
    content: 'nodeType: string;'
    return:
      type:
      - string
