### YamlMime:UniversalReference
ms.openlocfilehash: db98f3f5b4e39d5b5662233c54ff302901f90fcb
ms.sourcegitcommit: b05ee546d9dfbc914c8d1c594d9b206b04780bbc
ms.translationtype: MT
ms.contentlocale: pt-BR
ms.lasthandoff: 11/22/2018
ms.locfileid: "26647193"
items:
- uid: office.Office.CustomXmlNode
  summary: <span data-ttu-id="d3c15-101">Representa um nó XML em uma árvore em um documento.</span><span class="sxs-lookup"><span data-stu-id="d3c15-101">Represents an XML node in a tree in a document.</span></span>
  remarks: >-
    <table><tr><td><span data-ttu-id="d3c15-102">Conjuntos de requisito</span><span class="sxs-lookup"><span data-stu-id="d3c15-102">Requirement Sets</span></span></td><td><span data-ttu-id="d3c15-103">CustomXmlParts</span><span class="sxs-lookup"><span data-stu-id="d3c15-103">CustomXmlParts</span></span></td></tr></table>


    <span data-ttu-id="d3c15-104">**Detalhes do suporte**</span><span class="sxs-lookup"><span data-stu-id="d3c15-104">**Support details**</span></span>


    <span data-ttu-id="d3c15-105">Um capital Y a matriz a seguir indica que esta interface é suportado no aplicativo host do Office correspondente.</span><span class="sxs-lookup"><span data-stu-id="d3c15-105">A capital Y in the following matrix indicates that this interface is supported in the corresponding Office host application.</span></span> <span data-ttu-id="d3c15-106">Uma célula vazia indica que o aplicativo host do Office não dá suporte a essa interface.</span><span class="sxs-lookup"><span data-stu-id="d3c15-106">An empty cell indicates that the Office host application doesn't support this interface.</span></span>


    <span data-ttu-id="d3c15-107">Para obter mais informações sobre requisitos de aplicativo e servidor de host do Office, consulte [requisitos para a execução de suplementos do Office](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="d3c15-107">For more information about Office host application and server requirements, see [Requirements for running Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span></span>


    <span data-ttu-id="d3c15-108">*Hosts com suporte, por plataforma*</span><span class="sxs-lookup"><span data-stu-id="d3c15-108">*Supported hosts, by platform*</span></span> <table> <tr><th> </th><th> <span data-ttu-id="d3c15-109">Office for Windows desktop</span><span class="sxs-lookup"><span data-stu-id="d3c15-109">Office for Windows desktop</span></span> </th><th> <span data-ttu-id="d3c15-110">Office Online (no navegador)</span><span class="sxs-lookup"><span data-stu-id="d3c15-110">Office Online (in browser)</span></span> </th><th> <span data-ttu-id="d3c15-111">Office para iPad</span><span class="sxs-lookup"><span data-stu-id="d3c15-111">Office for iPad</span></span> </th><th> <span data-ttu-id="d3c15-112">Office para Mac</span><span class="sxs-lookup"><span data-stu-id="d3c15-112">Office for Mac</span></span> </th></tr> <tr><td><span data-ttu-id="d3c15-113"><strong>Word</strong></span><span class="sxs-lookup"><span data-stu-id="d3c15-113"><strong> Word </strong></span></span></td><td> <span data-ttu-id="d3c15-114">S</span><span class="sxs-lookup"><span data-stu-id="d3c15-114">Y</span></span> </td><td> <span data-ttu-id="d3c15-115">S</span><span class="sxs-lookup"><span data-stu-id="d3c15-115">Y</span></span> </td><td> <span data-ttu-id="d3c15-116">S</span><span class="sxs-lookup"><span data-stu-id="d3c15-116">Y</span></span> </td><td> <span data-ttu-id="d3c15-117">S</span><span class="sxs-lookup"><span data-stu-id="d3c15-117">Y</span></span> </td></tr> </table>
  name: Office.CustomXmlNode
  fullName: Office.CustomXmlNode
  langs:
  - typeScript
  type: interface
  package: office
  children:
  - office.Office.CustomXmlNode.baseName
  - office.Office.CustomXmlNode.getNodesAsync
  - office.Office.CustomXmlNode.getNodeValueAsync
  - office.Office.CustomXmlNode.getTextAsync
  - office.Office.CustomXmlNode.getXmlAsync
  - office.Office.CustomXmlNode.namespaceUri
  - office.Office.CustomXmlNode.nodeType
  - office.Office.CustomXmlNode.setNodeValueAsync
  - office.Office.CustomXmlNode.setTextAsync
  - office.Office.CustomXmlNode.setXmlAsync
- uid: office.Office.CustomXmlNode.baseName
  summary: <span data-ttu-id="d3c15-118">Obtém o nome de base do nó sem o prefixo do namespace, caso exista um.</span><span class="sxs-lookup"><span data-stu-id="d3c15-118">Gets the base name of the node without the namespace prefix, if one exists.</span></span>
  remarks: "<table><tr><td><span data-ttu-id=\"d3c15-119\">Conjuntos de requisito</span><span class=\"sxs-lookup\"><span data-stu-id=\"d3c15-119\">Requirement Sets</span></span></td><td><span data-ttu-id=\"d3c15-120\">CustomXmlParts</span><span class=\"sxs-lookup\"><span data-stu-id=\"d3c15-120\">CustomXmlParts</span></span></td></tr></table>\n#### <span data-ttu-id=\"d3c15-121\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"d3c15-121\">Examples</span></span>\n\n```javascript\nfunction showXmlNodeBaseNames() {\n    Office.context.document.customXmlParts.getByIdAsync(\n        \"{3BC85265-09D6-4205-B665-8EB239A8B9A1}\", function (result) {\n        var xmlPart = result.value;\n        xmlPart.getNodesAsync('*/*', function (nodeResults) {\n            for (i = 0; i < nodeResults.value.length; i++) {\n                var node = nodeResults.value[i];\n                write(node.baseName);\n            }\n        });\n    });\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  name: baseName
  fullName: baseName
  langs:
  - typeScript
  type: property
  syntax:
    content: 'baseName: string;'
    return:
      type:
      - string
- uid: office.Office.CustomXmlNode.getNodesAsync
  summary: <span data-ttu-id="d3c15-122">Obtém os nós associado a uma expressão XPath.</span><span class="sxs-lookup"><span data-stu-id="d3c15-122">Gets the nodes associated with the XPath expression.</span></span>
  remarks: "<table><tr><td><span data-ttu-id=\"d3c15-123\">Conjuntos de requisito</span><span class=\"sxs-lookup\"><span data-stu-id=\"d3c15-123\">Requirement Sets</span></span></td><td><span data-ttu-id=\"d3c15-124\">CustomXmlParts</span><span class=\"sxs-lookup\"><span data-stu-id=\"d3c15-124\">CustomXmlParts</span></span></td></tr></table>\n#### <span data-ttu-id=\"d3c15-125\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"d3c15-125\">Examples</span></span>\n\n```javascript\nfunction showXmlChildNodes() {\n    Office.context.document.customXmlParts.getByIdAsync(\n        \"{3BC85265-09D6-4205-B665-8EB239A8B9A1}\", function (result) {\n        var xmlPart = result.value;\n        xmlPart.getNodesAsync('*', function (nodeResults) {\n            for (i = 0; i < nodeResults.value.length; i++) {\n                var node = nodeResults.value[i];\n                node.getNodesAsync('*', function (nodeResults) {\n                    write(nodeResults.value.length + \" childNodes\");\n                });\n            }\n        });\n    });\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  name: getNodesAsync(xPath, options, callback)
  fullName: getNodesAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getNodesAsync(xPath: string, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<CustomXmlNode[]>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: xPath
      description: <span data-ttu-id="d3c15-126">A expressão XPath que especifica os nós ser obtido.</span><span class="sxs-lookup"><span data-stu-id="d3c15-126">The XPath expression that specifies the nodes to get.</span></span> <span data-ttu-id="d3c15-127">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="d3c15-127">Required.</span></span>
      type:
      - string
    - id: options
      description: <span data-ttu-id="d3c15-128">Fornece uma opção para preservar dados de contexto de qualquer tipo, inalterado, para uso em um retorno de chamada.</span><span class="sxs-lookup"><span data-stu-id="d3c15-128">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="d3c15-129">Opcional.</span><span class="sxs-lookup"><span data-stu-id="d3c15-129">Optional.</span></span> <span data-ttu-id="d3c15-130">Uma função que é invocado quando o retorno de chamada retorna, cujo único parâmetro é do tipo [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="d3c15-130">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="d3c15-131">O `value` propriedade do resultado é uma matriz de objetos CustomXmlNode que representa os nós especificado pela expressão XPath passada para o `xPath` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="d3c15-131">The `value` property of the result is an array of CustomXmlNode objects that represent the nodes specified by the XPath expression passed to the `xPath` parameter.</span></span>
      type:
      - '(result: AsyncResult<CustomXmlNode[]>) => void'
- uid: office.Office.CustomXmlNode.getNodeValueAsync
  summary: <span data-ttu-id="d3c15-132">Obtém o valor de nó.</span><span class="sxs-lookup"><span data-stu-id="d3c15-132">Gets the node value.</span></span>
  remarks: "<table><tr><td><span data-ttu-id=\"d3c15-133\">Conjuntos de requisito</span><span class=\"sxs-lookup\"><span data-stu-id=\"d3c15-133\">Requirement Sets</span></span></td><td><span data-ttu-id=\"d3c15-134\">CustomXmlParts</span><span class=\"sxs-lookup\"><span data-stu-id=\"d3c15-134\">CustomXmlParts</span></span></td></tr></table>\n#### <span data-ttu-id=\"d3c15-135\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"d3c15-135\">Examples</span></span>\n\n```javascript\nfunction showXmlNodeValues() {\n    Office.context.document.customXmlParts.getByIdAsync(\n        \"{3BC85265-09D6-4205-B665-8EB239A8B9A1}\", function (result) {\n        var xmlPart = result.value;\n        xmlPart.getNodesAsync('*/*', function (nodeResults) {\n            for (i = 0; i < nodeResults.value.length; i++) {\n                var node = nodeResults.value[i];\n                node.getNodeValueAsync(function (asyncResult) {\n                    write(asyncResult.value);\n                });\n            }\n        });\n    });\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  name: getNodeValueAsync(options, callback)
  fullName: getNodeValueAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getNodeValueAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: options
      description: <span data-ttu-id="d3c15-136">Fornece uma opção para preservar dados de contexto de qualquer tipo, inalterado, para uso em um retorno de chamada.</span><span class="sxs-lookup"><span data-stu-id="d3c15-136">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="d3c15-137">Opcional.</span><span class="sxs-lookup"><span data-stu-id="d3c15-137">Optional.</span></span> <span data-ttu-id="d3c15-138">Uma função que é invocado quando o retorno de chamada retorna, cujo único parâmetro é do tipo [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="d3c15-138">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="d3c15-139">O `value` propriedade do resultado é uma cadeia de caracteres que contém o valor do nó referenciado.</span><span class="sxs-lookup"><span data-stu-id="d3c15-139">The `value` property of the result is a string that contains the value of the referenced node.</span></span>
      type:
      - '(result: AsyncResult<string>) => void'
- uid: office.Office.CustomXmlNode.getTextAsync
  summary: <span data-ttu-id="d3c15-140">Obtém o texto de um nó XML em uma parte XML personalizada.</span><span class="sxs-lookup"><span data-stu-id="d3c15-140">Gets the text of an XML node in a custom XML part.</span></span>
  remarks: "<table><tr><td><span data-ttu-id=\"d3c15-141\">Conjuntos de requisito</span><span class=\"sxs-lookup\"><span data-stu-id=\"d3c15-141\">Requirement Sets</span></span></td><td><span data-ttu-id=\"d3c15-142\">CustomXmlParts</span><span class=\"sxs-lookup\"><span data-stu-id=\"d3c15-142\">CustomXmlParts</span></span></td></tr></table>\n#### <span data-ttu-id=\"d3c15-143\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"d3c15-143\">Examples</span></span>\n\n```javascript\n// Get the built-in core properties XML part by using its ID. This results in a call to Word.\nOffice.context.document.customXmlParts.getByIdAsync(\n    \"{6C3C8BC8-F283-45AE-878A-BAB7291924A1}\", function (getByIdAsyncResult) {\n    \n    // Access the XML part.\n    var xmlPart = getByIdAsyncResult.value;\n    \n    // Add namespaces to the namespace manager. These two calls result in two calls to Word.\n    xmlPart.namespaceManager.addNamespaceAsync(\n        'cp',\n        'http://schemas.openxmlformats.org/package/2006/metadata/core-properties',\n        function () {\n        xmlPart.namespaceManager.addNamespaceAsync(\n            'dc', \n            'http://purl.org/dc/elements/1.1/', \n            function () {\n\n            // Get XML nodes by using an Xpath expression. This results in a call to Word.\n            xmlPart.getNodesAsync(\"/cp:coreProperties/dc:title\", function (getNodesAsyncResult) {\n                \n                // Get the first node returned by using the Xpath expression. \n                var node = getNodesAsyncResult.value[0];\n                \n                // Get the text value of the node and use the asyncContext. This results in a call to Word. \n                // The results are logged to the browser console.\n                node.getTextAsync({asyncContext: \"StateNormal\"}, function (getTextAsyncResult) {\n                  console.log(\"Text of the title element = \" + getTextAsyncResult.value;\n                  console.log(\"The asyncContext value = \" + getTextAsyncResult.asyncContext;\n                });\n            });\n        });\n    });\n});\n```"
  name: getTextAsync(options, callback)
  fullName: getTextAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getTextAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: options
      description: <span data-ttu-id="d3c15-144">Fornece uma opção para preservar dados de contexto de qualquer tipo, inalterado, para uso em um retorno de chamada.</span><span class="sxs-lookup"><span data-stu-id="d3c15-144">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="d3c15-145">Opcional.</span><span class="sxs-lookup"><span data-stu-id="d3c15-145">Optional.</span></span> <span data-ttu-id="d3c15-146">Uma função que é invocado quando o retorno de chamada retorna, cujo único parâmetro é do tipo [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="d3c15-146">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="d3c15-147">O `value` propriedade do resultado é uma cadeia de caracteres que contém o texto interno de nós referenciado.</span><span class="sxs-lookup"><span data-stu-id="d3c15-147">The `value` property of the result is a string that contains the inner text of the referenced nodes.</span></span>
      type:
      - '(result: AsyncResult<string>) => void'
- uid: office.Office.CustomXmlNode.getXmlAsync
  summary: <span data-ttu-id="d3c15-148">Obtém XML do nó.</span><span class="sxs-lookup"><span data-stu-id="d3c15-148">Gets the node's XML.</span></span>
  remarks: "<table><tr><td><span data-ttu-id=\"d3c15-149\">Conjuntos de requisito</span><span class=\"sxs-lookup\"><span data-stu-id=\"d3c15-149\">Requirement Sets</span></span></td><td><span data-ttu-id=\"d3c15-150\">CustomXmlParts</span><span class=\"sxs-lookup\"><span data-stu-id=\"d3c15-150\">CustomXmlParts</span></span></td></tr></table>\n#### <span data-ttu-id=\"d3c15-151\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"d3c15-151\">Examples</span></span>\n\n```javascript\nfunction showXmlNodeInnerXml() {\n    Office.context.document.customXmlParts.getByIdAsync(\n        \"{3BC85265-09D6-4205-B665-8EB239A8B9A1}\", function (result) {\n        var xmlPart = result.value;\n        xmlPart.getNodesAsync('*', function (nodeResults) {\n            for (i = 0; i < nodeResults.value.length; i++) {\n                var node = nodeResults.value[i];\n                node.getXmlAsync(function (asyncResult) {\n                    write(asyncResult.value);\n                });\n            }\n        });\n    });\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  name: getXmlAsync(options, callback)
  fullName: getXmlAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getXmlAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: options
      description: <span data-ttu-id="d3c15-152">Fornece uma opção para preservar dados de contexto de qualquer tipo, inalterado, para uso em um retorno de chamada.</span><span class="sxs-lookup"><span data-stu-id="d3c15-152">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="d3c15-153">Opcional.</span><span class="sxs-lookup"><span data-stu-id="d3c15-153">Optional.</span></span> <span data-ttu-id="d3c15-154">Uma função que é invocado quando o retorno de chamada retorna, cujo único parâmetro é do tipo [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="d3c15-154">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="d3c15-155">O `value` propriedade do resultado é uma cadeia de caracteres que contém o XML do nó referenciado.</span><span class="sxs-lookup"><span data-stu-id="d3c15-155">The `value` property of the result is a string that contains the XML of the referenced node.</span></span>
      type:
      - '(result: AsyncResult<string>) => void'
- uid: office.Office.CustomXmlNode.namespaceUri
  summary: <span data-ttu-id="d3c15-156">Recupera a cadeia de caracteres GUID do CustomXMLPart.</span><span class="sxs-lookup"><span data-stu-id="d3c15-156">Retrieves the string GUID of the CustomXMLPart.</span></span>
  remarks: "<table><tr><td><span data-ttu-id=\"d3c15-157\">Conjuntos de requisito</span><span class=\"sxs-lookup\"><span data-stu-id=\"d3c15-157\">Requirement Sets</span></span></td><td><span data-ttu-id=\"d3c15-158\">CustomXmlParts</span><span class=\"sxs-lookup\"><span data-stu-id=\"d3c15-158\">CustomXmlParts</span></span></td></tr></table>\n#### <span data-ttu-id=\"d3c15-159\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"d3c15-159\">Examples</span></span>\n\n```javascript\nfunction showXmlNamespaceUri() {\n    Office.context.document.customXmlParts.getByIdAsync(\n        \"{3BC85265-09D6-4205-B665-8EB239A8B9A1}\", function (result) {\n        var xmlPart = result.value;\n        xmlPart.getNodesAsync('*/*', function (nodeResults) {\n            for (i = 0; i < nodeResults.value.length; i++) {\n                var node = nodeResults.value[i];\n                write(node.namespaceUri);\n            }\n        });\n    });\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  name: namespaceUri
  fullName: namespaceUri
  langs:
  - typeScript
  type: property
  syntax:
    content: 'namespaceUri: string;'
    return:
      type:
      - string
- uid: office.Office.CustomXmlNode.nodeType
  summary: <span data-ttu-id="d3c15-160">Obtém o tipo do CustomXMLNode.</span><span class="sxs-lookup"><span data-stu-id="d3c15-160">Gets the type of the CustomXMLNode.</span></span>
  remarks: "<table><tr><td><span data-ttu-id=\"d3c15-161\">Conjuntos de requisito</span><span class=\"sxs-lookup\"><span data-stu-id=\"d3c15-161\">Requirement Sets</span></span></td><td><span data-ttu-id=\"d3c15-162\">CustomXmlParts</span><span class=\"sxs-lookup\"><span data-stu-id=\"d3c15-162\">CustomXmlParts</span></span></td></tr></table>\n#### <span data-ttu-id=\"d3c15-163\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"d3c15-163\">Examples</span></span>\n\n```javascript\nfunction showXmlNodeType() {\n    Office.context.document.customXmlParts.getByIdAsync(\n        \"{3BC85265-09D6-4205-B665-8EB239A8B9A1}\", function (result) {\n        var xmlPart = result.value;\n        xmlPart.getNodesAsync('*/*', function (nodeResults) {\n            for (i = 0; i < nodeResults.value.length; i++) {\n                var node = nodeResults.value[i];\n                write(node.nodeType);\n            }\n        });\n    });\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  name: nodeType
  fullName: nodeType
  langs:
  - typeScript
  type: property
  syntax:
    content: 'nodeType: string;'
    return:
      type:
      - string
- uid: office.Office.CustomXmlNode.setNodeValueAsync
  summary: <span data-ttu-id="d3c15-164">Define o valor de nó.</span><span class="sxs-lookup"><span data-stu-id="d3c15-164">Sets the node value.</span></span>
  remarks: "<table><tr><td><span data-ttu-id=\"d3c15-165\">Conjuntos de requisito</span><span class=\"sxs-lookup\"><span data-stu-id=\"d3c15-165\">Requirement Sets</span></span></td><td><span data-ttu-id=\"d3c15-166\">CustomXmlParts</span><span class=\"sxs-lookup\"><span data-stu-id=\"d3c15-166\">CustomXmlParts</span></span></td></tr></table>\n#### <span data-ttu-id=\"d3c15-167\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"d3c15-167\">Examples</span></span>\n\n```javascript\nfunction setXmlNodeValue() {\n    Office.context.document.customXmlParts.getByIdAsync(\n        \"{3BC85265-09D6-4205-B665-8EB239A8B9A1}\", function (result) {\n        var xmlPart = result.value;\n        xmlPart.getNodesAsync('*/*', function (nodeResults) {\n            for (i = 0; i < nodeResults.value.length; i++) {\n                var node = nodeResults.value[i];\n                write(node);\n                node.setNodeValueAsync(\"item number\" + i, {}, function (result) { });\n            }\n        });\n    });\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  name: setNodeValueAsync(value, options, callback)
  fullName: setNodeValueAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setNodeValueAsync(value: string, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: value
      description: <span data-ttu-id="d3c15-168">O valor a ser definida no nó</span><span class="sxs-lookup"><span data-stu-id="d3c15-168">The value to be set on the node</span></span>
      type:
      - string
    - id: options
      description: <span data-ttu-id="d3c15-169">Fornece uma opção para preservar dados de contexto de qualquer tipo, inalterado, para uso em um retorno de chamada.</span><span class="sxs-lookup"><span data-stu-id="d3c15-169">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="d3c15-170">Opcional.</span><span class="sxs-lookup"><span data-stu-id="d3c15-170">Optional.</span></span> <span data-ttu-id="d3c15-171">Uma função que é invocado quando o retorno de chamada retorna, cujo único parâmetro é do tipo [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="d3c15-171">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span>
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.CustomXmlNode.setTextAsync
  summary: <span data-ttu-id="d3c15-172">Define de forma assíncrona o texto de um nó XML em uma parte XML personalizada.</span><span class="sxs-lookup"><span data-stu-id="d3c15-172">Asynchronously sets the text of an XML node in a custom XML part.</span></span>
  remarks: "<table><tr><td><span data-ttu-id=\"d3c15-173\">Hosts</span><span class=\"sxs-lookup\"><span data-stu-id=\"d3c15-173\">Hosts</span></span></td><td><span data-ttu-id=\"d3c15-174\">Word</span><span class=\"sxs-lookup\"><span data-stu-id=\"d3c15-174\">Word</span></span></td></tr>\n\n<tr><td><span data-ttu-id=\"d3c15-175\">Conjuntos de requisito</span><span class=\"sxs-lookup\"><span data-stu-id=\"d3c15-175\">Requirement Sets</span></span></td><td><span data-ttu-id=\"d3c15-176\">CustomXmlParts</span><span class=\"sxs-lookup\"><span data-stu-id=\"d3c15-176\">CustomXmlParts</span></span></td></tr></table>\n#### <span data-ttu-id=\"d3c15-177\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"d3c15-177\">Examples</span></span>\n\n```javascript\n// Learn how to set the text value of a node in a custom XML part from the following example.\n\n// Get the built-in core properties XML part by using its ID. This results in a call to Word.\nOffice.context.document.customXmlParts.getByIdAsync(\n    \"{6C3C8BC8-F283-45AE-878A-BAB7291924A1}\",\n    function (getByIdAsyncResult) {\n    \n    // Access the XML part.\n    var xmlPart = getByIdAsyncResult.value;\n    \n    // Add namespaces to the namespace manager. These two calls result in two calls to Word.\n    xmlPart.namespaceManager.addNamespaceAsync(\n        'cp', \n        'http://schemas.openxmlformats.org/package/2006/metadata/core-properties', \n        function () {\n        xmlPart.namespaceManager.addNamespaceAsync(\n            'dc', \n            'http://purl.org/dc/elements/1.1/', \n            function () {\n\n            // Get XML nodes by using an Xpath expression. This results in a call to the host.\n            xmlPart.getNodesAsync(\"/cp:coreProperties/dc:subject\", function (getNodesAsyncResult) {\n                \n                // Get the first node returned by using the Xpath expression.\n                // This will be the subject element in this example.\n                var subjectNode = getNodesAsyncResult.value[0];\n                \n                // Set the text value of the subject node and use the asyncContext. \n                // This results in a call to the host.  The results are logged to the browser console.\n                subjectNode.setTextAsync(\n                    \"newSubject\", \n                    {asyncContext: \"StateNormal\"}, \n                    function (setTextAsyncResult) {\n                        console.log(\"The status of the call: \" + setTextAsyncResult.status);\n                        console.log(\"The asyncContext value = \" + setTextAsyncResult.asyncContext);\n                });\n            });\n        });\n    });\n});\n```"
  name: setTextAsync(text, options, callback)
  fullName: setTextAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setTextAsync(text: string, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: text
      description: <span data-ttu-id="d3c15-p108">Obrigatório. O valor do texto do nó XML.</span><span class="sxs-lookup"><span data-stu-id="d3c15-p108">Required. The text value of the XML node.</span></span>
      type:
      - string
    - id: options
      description: <span data-ttu-id="d3c15-180">Fornece uma opção para preservar dados de contexto de qualquer tipo, inalterado, para uso em um retorno de chamada.</span><span class="sxs-lookup"><span data-stu-id="d3c15-180">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="d3c15-181">Opcional.</span><span class="sxs-lookup"><span data-stu-id="d3c15-181">Optional.</span></span> <span data-ttu-id="d3c15-182">Uma função que é invocado quando o retorno de chamada retorna, cujo único parâmetro é do tipo [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="d3c15-182">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span>
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.CustomXmlNode.setXmlAsync
  summary: <span data-ttu-id="d3c15-183">Define o nó XML.</span><span class="sxs-lookup"><span data-stu-id="d3c15-183">Sets the node XML.</span></span>
  remarks: >-
    <table><tr><td><span data-ttu-id="d3c15-184">Conjuntos de requisito</span><span class="sxs-lookup"><span data-stu-id="d3c15-184">Requirement Sets</span></span></td><td><span data-ttu-id="d3c15-185">CustomXmlParts</span><span class="sxs-lookup"><span data-stu-id="d3c15-185">CustomXmlParts</span></span></td></tr></table>

    #### <span data-ttu-id="d3c15-186">Exemplos</span><span class="sxs-lookup"><span data-stu-id="d3c15-186">Examples</span></span>


    ```javascript

    function setXmlNodeInnerXml() {
        Office.context.document.customXmlParts.getByIdAsync(
            "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
            var xmlPart = result.value;
            xmlPart.getNodesAsync('*', function (nodeResults) {
                for (i = 0; i < nodeResults.value.length; i++) {
                    var node = nodeResults.value[i];
                    node.setXmlAsync("<childNode>" + i + "</childNode>");
                }
            });
        });
    }

    ```
  name: setXmlAsync(xml, options, callback)
  fullName: setXmlAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setXmlAsync(xml: string, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: xml
      description: <span data-ttu-id="d3c15-187">O XML a ser definida no nó</span><span class="sxs-lookup"><span data-stu-id="d3c15-187">The XML to be set on the node</span></span>
      type:
      - string
    - id: options
      description: <span data-ttu-id="d3c15-188">Fornece uma opção para preservar dados de contexto de qualquer tipo, inalterado, para uso em um retorno de chamada.</span><span class="sxs-lookup"><span data-stu-id="d3c15-188">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="d3c15-189">Opcional.</span><span class="sxs-lookup"><span data-stu-id="d3c15-189">Optional.</span></span> <span data-ttu-id="d3c15-190">Uma função que é invocado quando o retorno de chamada retorna, cujo único parâmetro é do tipo [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="d3c15-190">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span>
      type:
      - '(result: AsyncResult<void>) => void'
