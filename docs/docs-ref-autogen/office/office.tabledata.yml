### YamlMime:UniversalReference
ms.openlocfilehash: 49201edce0384410a2003e4b75a5e6e39c6a9477
ms.sourcegitcommit: 016e17422cf62dc9f1de1809666e9244e41cc1a9
ms.translationtype: MT
ms.contentlocale: pt-BR
ms.lasthandoff: 11/09/2018
ms.locfileid: "26231178"
items:
- uid: office.Office.TableData
  summary: Representa os dados em uma tabela ou um [Office.TableBinding](xref:office.Office.TableBinding)<!-- -->.
  remarks: >-
    <table><tr><td>Hosts</td><td>Excel, Word</td></tr>


    <tr><td>Conjuntos de requisito</td><td>TableBindings</td></tr></table>
  name: Office.TableData
  fullName: Office.TableData
  langs:
  - typeScript
  type: class
  package: office
  children:
  - office.Office.TableData.constructor
  - office.Office.TableData.headers
  - office.Office.TableData.rows
- uid: office.Office.TableData.constructor
  summary: Constrói uma nova instância da classe [tabela](xref:office.Office.TableData)
  name: constructor(rows, headers)
  fullName: constructor
  langs:
  - typeScript
  type: constructor
  syntax:
    content: 'constructor(rows: any[][], headers: any[]);'
    parameters:
    - id: rows
      description: ''
      type:
      - any[][]
    - id: headers
      description: ''
      type:
      - any[]
- uid: office.Office.TableData.headers
  summary: Obtém ou define os cabeçalhos da tabela.
  remarks: >-
    <table><tr><td>Hosts</td><td>Excel, Word</td></tr>


    <tr><td>Conjuntos de requisito</td><td>TableBindings</td></tr></table>


    Para especificar os cabeçalhos, você deve especificar uma matriz de matrizes que corresponde à estrutura da tabela. Por exemplo, para especificar os cabeçalhos para uma tabela de duas colunas você seria definir a propriedade de cabeçalho \[ \['Oriel1', 'Oriel2'\]\].


    Se você especificar nulo para a propriedade cabeçalhos (ou deixando a propriedade vazia ao construir um objeto tabela), os resultados a seguir ocorrerão quando seu código é executado:


    - Se você inserir uma nova tabela, serão criados os cabeçalhos de coluna padrão para a tabela.


    - Se você substituir ou atualizar uma tabela existente, os cabeçalhos existentes não serão alterados.

    #### <a name="examples"></a>Exemplos


    ```javascript

    // The following example creates a single-column table with a header and three rows.

    function createTableData() {
        var tableData = new Office.TableData();
        tableData.headers = [['header1']];
        tableData.rows = [['row1'], ['row2'], ['row3']];
        return tableData;
    }

    ```
  name: headers
  fullName: headers
  langs:
  - typeScript
  type: property
  syntax:
    content: 'headers: any[];'
    return:
      type:
      - any[]
- uid: office.Office.TableData.rows
  summary: Obtém ou define as linhas na tabela. Retorna uma matriz de matrizes que contém os dados na tabela. Retorna uma matriz vazia se não houver nenhuma linha.
  remarks: >-
    <table><tr><td>Hosts</td><td>Excel, Word</td></tr>


    <tr><td>Conjuntos de requisito</td><td>TableBindings</td></tr></table>


    Para especificar linhas, você deve especificar uma matriz de matrizes que corresponde à estrutura da tabela. Por exemplo, para especificar duas linhas dos valores de cadeia de caracteres em uma tabela de duas colunas você deve definir a propriedade rows \[ \['a', 'b'\], \[distr 'c','\]\].


    Se você especifica a propriedade rows nulo (ou deixe a propriedade vazio ao construir um objeto tabela), os resultados a seguir ocorrerão quando seu código é executado:


    - Se você inserir uma nova tabela, uma linha em branco será inserida.


    - Se você substituir ou atualizar uma tabela existente, as linhas existentes não serão alteradas.

    #### <a name="examples"></a>Examples


    ```javascript

    // The following example creates a single-column table with a header and three rows.

    function createTableData() {
        var tableData = new Office.TableData();
        tableData.headers = [['header1']];
        tableData.rows = [['row1'], ['row2'], ['row3']];
        return tableData;
    }

    ```
  name: rows
  fullName: rows
  langs:
  - typeScript
  type: property
  syntax:
    content: 'rows: any[][];'
    return:
      type:
      - any[][]
