### YamlMime:UniversalReference
items:
  - uid: 'office!Office.CustomXmlPart:interface'
    summary: '<span data-ttu-id="a2339-101">Representa um único CustomXMLPart em uma coleção [Office. CustomXmlParts](xref:office!Office.CustomXmlParts:interface) .</span><span class="sxs-lookup"><span data-stu-id="a2339-101">Represents a single CustomXMLPart in an [Office.CustomXmlParts](xref:office!Office.CustomXmlParts:interface) collection.</span></span>'
    remarks: '<span data-ttu-id="a2339-102">**Hosts**: Word</span><span class="sxs-lookup"><span data-stu-id="a2339-102">**Hosts**: Word</span></span>'
    name: Office.CustomXmlPart
    fullName: Office.CustomXmlPart
    langs:
      - typeScript
    type: interface
    package: office!
    children:
      - 'office!Office.CustomXmlPart#addHandlerAsync:member(1)'
      - 'office!Office.CustomXmlPart#addHandlerAsync:member(2)'
      - 'office!Office.CustomXmlPart#builtIn:member'
      - 'office!Office.CustomXmlPart#deleteAsync:member(1)'
      - 'office!Office.CustomXmlPart#deleteAsync:member(2)'
      - 'office!Office.CustomXmlPart#getNodesAsync:member(1)'
      - 'office!Office.CustomXmlPart#getNodesAsync:member(2)'
      - 'office!Office.CustomXmlPart#getXmlAsync:member(1)'
      - 'office!Office.CustomXmlPart#getXmlAsync:member(2)'
      - 'office!Office.CustomXmlPart#id:member'
      - 'office!Office.CustomXmlPart#namespaceManager:member'
      - 'office!Office.CustomXmlPart#removeHandlerAsync:member(1)'
      - 'office!Office.CustomXmlPart#removeHandlerAsync:member(2)'
  - uid: 'office!Office.CustomXmlPart#addHandlerAsync:member(1)'
    summary: <span data-ttu-id="a2339-103">Adiciona um manipulador de eventos ao objeto usando o tipo de evento especificado.</span><span class="sxs-lookup"><span data-stu-id="a2339-103">Adds an event handler to the object using the specified event type.</span></span>
    remarks: |-
      <span data-ttu-id="a2339-104">**Conjunto de requisitos**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="a2339-104">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>

      <span data-ttu-id="a2339-105">Você pode adicionar vários manipuladores de eventos para o eventType especificado, desde que o nome de cada função do manipulador de eventos seja exclusivo.</span><span class="sxs-lookup"><span data-stu-id="a2339-105">You can add multiple event handlers for the specified eventType as long as the name of each event handler function is unique.</span></span>
    name: 'addHandlerAsync(eventType, handler, options, callback)'
    fullName: 'addHandlerAsync(eventType, handler, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addHandlerAsync(eventType: Office.EventType, handler: (result: any) => void, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: eventType
          description: '<span data-ttu-id="a2339-106">Especifica o tipo de evento a ser adicionado.</span><span class="sxs-lookup"><span data-stu-id="a2339-106">Specifies the type of event to add.</span></span> <span data-ttu-id="a2339-107">Para um objeto CustomXmlPart, o parâmetro eventType pode ser especificado como`Office.EventType.NodeDeleted`</span><span class="sxs-lookup"><span data-stu-id="a2339-107">For a CustomXmlPart object, the eventType parameter can be specified as `Office.EventType.NodeDeleted`</span></span><!-- --><span data-ttu-id="a2339-108">, `Office.EventType.NodeInserted`</span><span class="sxs-lookup"><span data-stu-id="a2339-108"></span></span><!-- --><span data-ttu-id="a2339-109">, e`Office.EventType.NodeReplaced`</span><span class="sxs-lookup"><span data-stu-id="a2339-109">, and `Office.EventType.NodeReplaced`</span></span><!-- --><span data-ttu-id="a2339-110">.</span><span class="sxs-lookup"><span data-stu-id="a2339-110"></span></span>'
          type:
            - 'office!Office.EventType:enum'
        - id: handler
          description: '<span data-ttu-id="a2339-111">A função de manipulador de eventos a ser adicionada, cujo único parâmetro é do tipo [Office. NodeDeletedEventArgs](xref:office!Office.NodeDeletedEventArgs:interface)</span><span class="sxs-lookup"><span data-stu-id="a2339-111">The event handler function to add, whose only parameter is of type [Office.NodeDeletedEventArgs](xref:office!Office.NodeDeletedEventArgs:interface)</span></span><!-- --><span data-ttu-id="a2339-112">, [Office. NodeInsertedEventArgs](xref:office!Office.NodeInsertedEventArgs:interface)</span><span class="sxs-lookup"><span data-stu-id="a2339-112">, [Office.NodeInsertedEventArgs](xref:office!Office.NodeInsertedEventArgs:interface)</span></span><!-- --><span data-ttu-id="a2339-113">, ou [Office. NodeReplacedEventArgs](xref:office!Office.NodeReplacedEventArgs:interface)</span><span class="sxs-lookup"><span data-stu-id="a2339-113">, or [Office.NodeReplacedEventArgs](xref:office!Office.NodeReplacedEventArgs:interface)</span></span>'
          type:
            - '(result: any) => void'
        - id: options
          description: '<span data-ttu-id="a2339-114">Fornece uma opção para preservar dados de contexto de qualquer tipo, inalterados, para uso em um retorno de chamada.</span><span class="sxs-lookup"><span data-stu-id="a2339-114">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>'
          type:
            - 'office!Office.AsyncContextOptions:interface'
        - id: callback
          description: '<span data-ttu-id="a2339-115">Opcional.</span><span class="sxs-lookup"><span data-stu-id="a2339-115">Optional.</span></span> <span data-ttu-id="a2339-116">Uma função que é invocada quando o retorno de chamada retorna, cujo único parâmetro é do tipo [Office. AsyncResult](xref:office!Office.AsyncResult:interface)</span><span class="sxs-lookup"><span data-stu-id="a2339-116">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office!Office.AsyncResult:interface)</span></span><!-- --><span data-ttu-id="a2339-117">.</span><span class="sxs-lookup"><span data-stu-id="a2339-117"></span></span>'
          type:
            - 'office!Office.CustomXmlPart#addHandlerAsync~0:complex'
  - uid: 'office!Office.CustomXmlPart#addHandlerAsync:member(2)'
    summary: <span data-ttu-id="a2339-118">Adiciona um manipulador de eventos ao objeto usando o tipo de evento especificado.</span><span class="sxs-lookup"><span data-stu-id="a2339-118">Adds an event handler to the object using the specified event type.</span></span>
    remarks: |-
      <span data-ttu-id="a2339-119">**Conjunto de requisitos**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="a2339-119">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>

      <span data-ttu-id="a2339-120">Você pode adicionar vários manipuladores de eventos para o eventType especificado, desde que o nome de cada função do manipulador de eventos seja exclusivo.</span><span class="sxs-lookup"><span data-stu-id="a2339-120">You can add multiple event handlers for the specified eventType as long as the name of each event handler function is unique.</span></span>

      #### <a name="examples"></a><span data-ttu-id="a2339-121">Exemplos</span><span class="sxs-lookup"><span data-stu-id="a2339-121">Examples</span></span>

      ```javascript
      // To add an event handler for the NodeDeleted event, use the addHandlerAsync method of the CustomXmlPart object.
      function addNodeDeletedEvent() {
          Office.context.document.customXmlParts.getByIdAsync(
              "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
              var xmlPart = result.value;
              xmlPart.addHandlerAsync(Office.EventType.NodeDeleted, function (eventArgs) {
                  write("A node has been deleted.");
              });
          });
      }
      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message;
      }
      ```
      ```javascript
      // To add an event handler for the NodeInserted event, use the addHandlerAsync method of the CustomXmlPart object.
      function addNodeInsertedEvent() {
          Office.context.document.customXmlParts.getByIdAsync(
              "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
              var xmlPart = result.value;
              xmlPart.addHandlerAsync(Office.EventType.NodeInserted, function (eventArgs) {
                  write("A node has been inserted.");
              });
          });
      }
      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message;
      }
      ```
      ```javascript
      // To add an event handler for the NodeReplaced event, use the addHandlerAsync method of the CustomXmlPart object.
      function addNodeReplacedEvent() {
          Office.context.document.customXmlParts.getByIdAsync(
              "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
              var xmlPart = result.value;
              xmlPart.addHandlerAsync(Office.EventType.NodeReplaced, function (eventArgs) {
                  write("A node has been replaced.");
              });
          });
      }
      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message;
      }
      ```
    name: 'addHandlerAsync(eventType, handler, callback)'
    fullName: 'addHandlerAsync(eventType, handler, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addHandlerAsync(eventType: Office.EventType, handler: (result: any) => void, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: eventType
          description: '<span data-ttu-id="a2339-122">Especifica o tipo de evento a ser adicionado.</span><span class="sxs-lookup"><span data-stu-id="a2339-122">Specifies the type of event to add.</span></span> <span data-ttu-id="a2339-123">Para um objeto CustomXmlPart, o parâmetro eventType pode ser especificado como`Office.EventType.NodeDeleted`</span><span class="sxs-lookup"><span data-stu-id="a2339-123">For a CustomXmlPart object, the eventType parameter can be specified as `Office.EventType.NodeDeleted`</span></span><!-- --><span data-ttu-id="a2339-124">, `Office.EventType.NodeInserted`</span><span class="sxs-lookup"><span data-stu-id="a2339-124"></span></span><!-- --><span data-ttu-id="a2339-125">, e`Office.EventType.NodeReplaced`</span><span class="sxs-lookup"><span data-stu-id="a2339-125">, and `Office.EventType.NodeReplaced`</span></span><!-- --><span data-ttu-id="a2339-126">.</span><span class="sxs-lookup"><span data-stu-id="a2339-126"></span></span>'
          type:
            - 'office!Office.EventType:enum'
        - id: handler
          description: '<span data-ttu-id="a2339-127">A função de manipulador de eventos a ser adicionada, cujo único parâmetro é do tipo [Office. NodeDeletedEventArgs](xref:office!Office.NodeDeletedEventArgs:interface)</span><span class="sxs-lookup"><span data-stu-id="a2339-127">The event handler function to add, whose only parameter is of type [Office.NodeDeletedEventArgs](xref:office!Office.NodeDeletedEventArgs:interface)</span></span><!-- --><span data-ttu-id="a2339-128">, [Office. NodeInsertedEventArgs](xref:office!Office.NodeInsertedEventArgs:interface)</span><span class="sxs-lookup"><span data-stu-id="a2339-128">, [Office.NodeInsertedEventArgs](xref:office!Office.NodeInsertedEventArgs:interface)</span></span><!-- --><span data-ttu-id="a2339-129">, ou [Office. NodeReplacedEventArgs](xref:office!Office.NodeReplacedEventArgs:interface)</span><span class="sxs-lookup"><span data-stu-id="a2339-129">, or [Office.NodeReplacedEventArgs](xref:office!Office.NodeReplacedEventArgs:interface)</span></span>'
          type:
            - '(result: any) => void'
        - id: callback
          description: '<span data-ttu-id="a2339-130">Opcional.</span><span class="sxs-lookup"><span data-stu-id="a2339-130">Optional.</span></span> <span data-ttu-id="a2339-131">Uma função que é invocada quando o retorno de chamada retorna, cujo único parâmetro é do tipo [Office. AsyncResult](xref:office!Office.AsyncResult:interface)</span><span class="sxs-lookup"><span data-stu-id="a2339-131">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office!Office.AsyncResult:interface)</span></span><!-- --><span data-ttu-id="a2339-132">.</span><span class="sxs-lookup"><span data-stu-id="a2339-132"></span></span>'
          type:
            - 'office!Office.CustomXmlPart#addHandlerAsync~1:complex'
  - uid: 'office!Office.CustomXmlPart#builtIn:member'
    summary: '<span data-ttu-id="a2339-133">True, se a parte XML personalizada for interna; caso contrário, false.</span><span class="sxs-lookup"><span data-stu-id="a2339-133">True, if the custom XML part is built in; otherwise false.</span></span>'
    name: builtIn
    fullName: builtIn
    langs:
      - typeScript
    type: property
    syntax:
      content: 'builtIn: boolean;'
      return:
        type:
          - boolean
        description: |-


          #### <a name="examples"></a><span data-ttu-id="a2339-134">Exemplos</span><span class="sxs-lookup"><span data-stu-id="a2339-134">Examples</span></span>

          ```javascript
          function showXMLPartBuiltIn() {
              Office.context.document.customXmlParts.getByIdAsync(
                  "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
                  var xmlPart = result.value;
                  write(xmlPart.builtIn);
              });
          }

          // Function that writes to a div with id='message' on the page.
          function write(message){
              document.getElementById('message').innerText += message; 
          }
          ```
  - uid: 'office!Office.CustomXmlPart#deleteAsync:member(1)'
    summary: <span data-ttu-id="a2339-135">Exclui a parte XML personalizada.</span><span class="sxs-lookup"><span data-stu-id="a2339-135">Deletes the Custom XML Part.</span></span>
    remarks: '<span data-ttu-id="a2339-136">**Conjunto de requisitos**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="a2339-136">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>'
    name: 'deleteAsync(options, callback)'
    fullName: 'deleteAsync(options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'deleteAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: '<span data-ttu-id="a2339-137">Fornece uma opção para preservar dados de contexto de qualquer tipo, inalterados, para uso em um retorno de chamada.</span><span class="sxs-lookup"><span data-stu-id="a2339-137">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>'
          type:
            - 'office!Office.AsyncContextOptions:interface'
        - id: callback
          description: '<span data-ttu-id="a2339-138">Opcional.</span><span class="sxs-lookup"><span data-stu-id="a2339-138">Optional.</span></span> <span data-ttu-id="a2339-139">Uma função que é invocada quando o retorno de chamada retorna, cujo único parâmetro é do tipo [Office. AsyncResult](xref:office!Office.AsyncResult:interface)</span><span class="sxs-lookup"><span data-stu-id="a2339-139">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office!Office.AsyncResult:interface)</span></span><!-- --><span data-ttu-id="a2339-140">.</span><span class="sxs-lookup"><span data-stu-id="a2339-140"></span></span>'
          type:
            - 'office!Office.CustomXmlPart#deleteAsync~0:complex'
  - uid: 'office!Office.CustomXmlPart#deleteAsync:member(2)'
    summary: <span data-ttu-id="a2339-141">Exclui a parte XML personalizada.</span><span class="sxs-lookup"><span data-stu-id="a2339-141">Deletes the Custom XML Part.</span></span>
    remarks: |-
      <span data-ttu-id="a2339-142">**Conjunto de requisitos**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="a2339-142">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>

      #### <a name="examples"></a><span data-ttu-id="a2339-143">Exemplos</span><span class="sxs-lookup"><span data-stu-id="a2339-143">Examples</span></span>

      ```javascript
      function deleteXMLPart() {
          Office.context.document.customXmlParts.getByIdAsync(
              "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
              var xmlPart = result.value;
              xmlPart.deleteAsync(function (eventArgs) {
                  write("The XML Part has been deleted.");
              });
          });
      }
      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message; 
      }
      ```
    name: deleteAsync(callback)
    fullName: deleteAsync(callback)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'deleteAsync(callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: '<span data-ttu-id="a2339-144">Opcional.</span><span class="sxs-lookup"><span data-stu-id="a2339-144">Optional.</span></span> <span data-ttu-id="a2339-145">Uma função que é invocada quando o retorno de chamada retorna, cujo único parâmetro é do tipo [Office. AsyncResult](xref:office!Office.AsyncResult:interface)</span><span class="sxs-lookup"><span data-stu-id="a2339-145">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office!Office.AsyncResult:interface)</span></span><!-- --><span data-ttu-id="a2339-146">.</span><span class="sxs-lookup"><span data-stu-id="a2339-146"></span></span>'
          type:
            - 'office!Office.CustomXmlPart#deleteAsync~1:complex'
  - uid: 'office!Office.CustomXmlPart#getNodesAsync:member(1)'
    summary: <span data-ttu-id="a2339-147">Obtém de forma assíncrona quaisquer CustomXmlNodes nesta parte XML personalizada que correspondam ao XPath especificado.</span><span class="sxs-lookup"><span data-stu-id="a2339-147">Asynchronously gets any CustomXmlNodes in this custom XML part which match the specified XPath.</span></span>
    remarks: '<span data-ttu-id="a2339-148">**Conjunto de requisitos**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="a2339-148">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>'
    name: 'getNodesAsync(xPath, options, callback)'
    fullName: 'getNodesAsync(xPath, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getNodesAsync(xPath: string, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<CustomXmlNode[]>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: xPath
          description: <span data-ttu-id="a2339-149">Uma expressão XPath que especifica os nós que você deseja retornar.</span><span class="sxs-lookup"><span data-stu-id="a2339-149">An XPath expression that specifies the nodes you want returned.</span></span> <span data-ttu-id="a2339-150">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="a2339-150">Required.</span></span>
          type:
            - string
        - id: options
          description: '<span data-ttu-id="a2339-151">Fornece uma opção para preservar dados de contexto de qualquer tipo, inalterados, para uso em um retorno de chamada.</span><span class="sxs-lookup"><span data-stu-id="a2339-151">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>'
          type:
            - 'office!Office.AsyncContextOptions:interface'
        - id: callback
          description: '<span data-ttu-id="a2339-152">Opcional.</span><span class="sxs-lookup"><span data-stu-id="a2339-152">Optional.</span></span> <span data-ttu-id="a2339-153">Uma função que é invocada quando o retorno de chamada retorna, cujo único parâmetro é do tipo [Office. AsyncResult](xref:office!Office.AsyncResult:interface)</span><span class="sxs-lookup"><span data-stu-id="a2339-153">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office!Office.AsyncResult:interface)</span></span><!-- --><span data-ttu-id="a2339-154">.</span><span class="sxs-lookup"><span data-stu-id="a2339-154"></span></span> <span data-ttu-id="a2339-155">A `value` Propriedade do resultado é uma matriz de objetos CustomXmlNode que representam os nós especificados pela expressão XPath passada para o parâmetro XPath.</span><span class="sxs-lookup"><span data-stu-id="a2339-155">The `value` property of the result is an array of CustomXmlNode objects that represent the nodes specified by the XPath expression passed to the xPath parameter.</span></span>'
          type:
            - 'office!Office.CustomXmlPart#getNodesAsync~0:complex'
  - uid: 'office!Office.CustomXmlPart#getNodesAsync:member(2)'
    summary: <span data-ttu-id="a2339-156">Obtém de forma assíncrona quaisquer CustomXmlNodes nesta parte XML personalizada que correspondam ao XPath especificado.</span><span class="sxs-lookup"><span data-stu-id="a2339-156">Asynchronously gets any CustomXmlNodes in this custom XML part which match the specified XPath.</span></span>
    remarks: |-
      <span data-ttu-id="a2339-157">**Conjunto de requisitos**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="a2339-157">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>

      #### <a name="examples"></a><span data-ttu-id="a2339-158">Exemplos</span><span class="sxs-lookup"><span data-stu-id="a2339-158">Examples</span></span>

      ```javascript
      function showXmlNodeType() {
          Office.context.document.customXmlParts.getByIdAsync(
              "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
              var xmlPart = result.value;
              xmlPart.getNodesAsync('*/*', function (nodeResults) {
                  for (i = 0; i < nodeResults.value.length; i++) {
                      var node = nodeResults.value[i];
                      write(node.nodeType);
                  }
              });
          });
      }
      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message; 
      }
      ```
    name: 'getNodesAsync(xPath, callback)'
    fullName: 'getNodesAsync(xPath, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getNodesAsync(xPath: string, callback?: (result: AsyncResult<CustomXmlNode[]>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: xPath
          description: <span data-ttu-id="a2339-159">Uma expressão XPath que especifica os nós que você deseja retornar.</span><span class="sxs-lookup"><span data-stu-id="a2339-159">An XPath expression that specifies the nodes you want returned.</span></span> <span data-ttu-id="a2339-160">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="a2339-160">Required.</span></span>
          type:
            - string
        - id: callback
          description: '<span data-ttu-id="a2339-161">Opcional.</span><span class="sxs-lookup"><span data-stu-id="a2339-161">Optional.</span></span> <span data-ttu-id="a2339-162">Uma função que é invocada quando o retorno de chamada retorna, cujo único parâmetro é do tipo [Office. AsyncResult](xref:office!Office.AsyncResult:interface)</span><span class="sxs-lookup"><span data-stu-id="a2339-162">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office!Office.AsyncResult:interface)</span></span><!-- --><span data-ttu-id="a2339-163">.</span><span class="sxs-lookup"><span data-stu-id="a2339-163"></span></span> <span data-ttu-id="a2339-164">A `value` Propriedade do resultado é uma matriz de objetos CustomXmlNode que representam os nós especificados pela expressão XPath passada para o parâmetro XPath.</span><span class="sxs-lookup"><span data-stu-id="a2339-164">The `value` property of the result is an array of CustomXmlNode objects that represent the nodes specified by the XPath expression passed to the xPath parameter.</span></span>'
          type:
            - 'office!Office.CustomXmlPart#getNodesAsync~1:complex'
  - uid: 'office!Office.CustomXmlPart#getXmlAsync:member(1)'
    summary: <span data-ttu-id="a2339-165">Obtém de forma assíncrona o XML dentro desta parte XML personalizada.</span><span class="sxs-lookup"><span data-stu-id="a2339-165">Asynchronously gets the XML inside this custom XML part.</span></span>
    remarks: '<span data-ttu-id="a2339-166">**Conjunto de requisitos**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="a2339-166">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>'
    name: 'getXmlAsync(options, callback)'
    fullName: 'getXmlAsync(options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getXmlAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: '<span data-ttu-id="a2339-167">Fornece uma opção para preservar dados de contexto de qualquer tipo, inalterados, para uso em um retorno de chamada.</span><span class="sxs-lookup"><span data-stu-id="a2339-167">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>'
          type:
            - 'office!Office.AsyncContextOptions:interface'
        - id: callback
          description: '<span data-ttu-id="a2339-168">Opcional.</span><span class="sxs-lookup"><span data-stu-id="a2339-168">Optional.</span></span> <span data-ttu-id="a2339-169">Uma função que é invocada quando o retorno de chamada retorna, cujo único parâmetro é do tipo [Office. AsyncResult](xref:office!Office.AsyncResult:interface)</span><span class="sxs-lookup"><span data-stu-id="a2339-169">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office!Office.AsyncResult:interface)</span></span><!-- --><span data-ttu-id="a2339-170">.</span><span class="sxs-lookup"><span data-stu-id="a2339-170"></span></span> <span data-ttu-id="a2339-171">A `value` Propriedade do resultado é uma cadeia de caracteres que contém o XML do objeto CustomXMLPart referenciado.</span><span class="sxs-lookup"><span data-stu-id="a2339-171">The `value` property of the result is a string that contains the XML of the referenced CustomXmlPart object.</span></span>'
          type:
            - 'office!Office.CustomXmlPart#getXmlAsync~0:complex'
  - uid: 'office!Office.CustomXmlPart#getXmlAsync:member(2)'
    summary: <span data-ttu-id="a2339-172">Obtém de forma assíncrona o XML dentro desta parte XML personalizada.</span><span class="sxs-lookup"><span data-stu-id="a2339-172">Asynchronously gets the XML inside this custom XML part.</span></span>
    remarks: |-
      <span data-ttu-id="a2339-173">**Conjunto de requisitos**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="a2339-173">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>

      #### <a name="examples"></a><span data-ttu-id="a2339-174">Exemplos</span><span class="sxs-lookup"><span data-stu-id="a2339-174">Examples</span></span>

      ```javascript
      function showXMLPartInnerXML() {
          Office.context.document.customXmlParts.getByIdAsync(
              "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
              var xmlPart = result.value;
              xmlPart.getXmlAsync(function (eventArgs) {
                  write(eventArgs.value);
              });
          });
      }
      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message; 
      }
      ```
    name: getXmlAsync(callback)
    fullName: getXmlAsync(callback)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getXmlAsync(callback?: (result: AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: '<span data-ttu-id="a2339-175">Opcional.</span><span class="sxs-lookup"><span data-stu-id="a2339-175">Optional.</span></span> <span data-ttu-id="a2339-176">Uma função que é invocada quando o retorno de chamada retorna, cujo único parâmetro é do tipo [Office. AsyncResult](xref:office!Office.AsyncResult:interface)</span><span class="sxs-lookup"><span data-stu-id="a2339-176">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office!Office.AsyncResult:interface)</span></span><!-- --><span data-ttu-id="a2339-177">.</span><span class="sxs-lookup"><span data-stu-id="a2339-177"></span></span> <span data-ttu-id="a2339-178">A `value` Propriedade do resultado é uma cadeia de caracteres que contém o XML do objeto CustomXMLPart referenciado.</span><span class="sxs-lookup"><span data-stu-id="a2339-178">The `value` property of the result is a string that contains the XML of the referenced CustomXmlPart object.</span></span>'
          type:
            - 'office!Office.CustomXmlPart#getXmlAsync~1:complex'
  - uid: 'office!Office.CustomXmlPart#id:member'
    summary: <span data-ttu-id="a2339-179">Obtém o GUID do CustomXMLPart.</span><span class="sxs-lookup"><span data-stu-id="a2339-179">Gets the GUID of the CustomXMLPart.</span></span>
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'id: string;'
      return:
        type:
          - string
        description: |-


          #### <a name="examples"></a><span data-ttu-id="a2339-180">Exemplos</span><span class="sxs-lookup"><span data-stu-id="a2339-180">Examples</span></span>

          ```javascript
          function showXMLPartBuiltId() {
              Office.context.document.customXmlParts.getByIdAsync(
                  "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
                  var xmlPart = result.value;
                  write(xmlPart.id);
              });
          }
          // Function that writes to a div with id='message' on the page.
          function write(message){
              document.getElementById('message').innerText += message; 
          }
          ```
  - uid: 'office!Office.CustomXmlPart#namespaceManager:member'
    summary: '<span data-ttu-id="a2339-181">Obtém o conjunto de mapeamentos de prefixo de namespace ([Office. CustomXmlPrefixMappings](xref:office!Office.CustomXmlPrefixMappings:interface)</span><span class="sxs-lookup"><span data-stu-id="a2339-181">Gets the set of namespace prefix mappings ([Office.CustomXmlPrefixMappings](xref:office!Office.CustomXmlPrefixMappings:interface)</span></span><!-- --><span data-ttu-id="a2339-182">) usada em relação ao CustomXmlPart atual.</span><span class="sxs-lookup"><span data-stu-id="a2339-182">) used against the current CustomXmlPart.</span></span>'
    name: namespaceManager
    fullName: namespaceManager
    langs:
      - typeScript
    type: property
    syntax:
      content: 'namespaceManager: CustomXmlPrefixMappings;'
      return:
        type:
          - 'office!Office.CustomXmlPrefixMappings:interface'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="a2339-183">Exemplos</span><span class="sxs-lookup"><span data-stu-id="a2339-183">Examples</span></span>

          ```javascript
          function setXMLPartNamespaceManagerNamespace() {
              Office.context.document.customXmlParts.getByIdAsync(
                  "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
                  var xmlPart = result.value;
                  xmlPart.namespaceManager.addNamespaceAsync("myPrefix", "myNamespace");
              });
          }
          ```
  - uid: 'office!Office.CustomXmlPart#removeHandlerAsync:member(1)'
    summary: <span data-ttu-id="a2339-184">Remove um manipulador de eventos para o tipo de evento especificado.</span><span class="sxs-lookup"><span data-stu-id="a2339-184">Removes an event handler for the specified event type.</span></span>
    remarks: '<span data-ttu-id="a2339-185">**Conjunto de requisitos**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="a2339-185">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>'
    name: 'removeHandlerAsync(eventType, handler, options, callback)'
    fullName: 'removeHandlerAsync(eventType, handler, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removeHandlerAsync(eventType: Office.EventType, handler?: (result: any) => void, options?: RemoveHandlerOptions, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: eventType
          description: '<span data-ttu-id="a2339-186">Especifica o tipo de evento a ser removido.</span><span class="sxs-lookup"><span data-stu-id="a2339-186">Specifies the type of event to remove.</span></span> <span data-ttu-id="a2339-187">Para um objeto CustomXmlPart, o parâmetro eventType pode ser especificado como`Office.EventType.NodeDeleted`</span><span class="sxs-lookup"><span data-stu-id="a2339-187">For a CustomXmlPart object, the eventType parameter can be specified as `Office.EventType.NodeDeleted`</span></span><!-- --><span data-ttu-id="a2339-188">, `Office.EventType.NodeInserted`</span><span class="sxs-lookup"><span data-stu-id="a2339-188"></span></span><!-- --><span data-ttu-id="a2339-189">, e`Office.EventType.NodeReplaced`</span><span class="sxs-lookup"><span data-stu-id="a2339-189">, and `Office.EventType.NodeReplaced`</span></span><!-- --><span data-ttu-id="a2339-190">.</span><span class="sxs-lookup"><span data-stu-id="a2339-190"></span></span>'
          type:
            - 'office!Office.EventType:enum'
        - id: handler
          description: <span data-ttu-id="a2339-191">O nome do manipulador a ser removido.</span><span class="sxs-lookup"><span data-stu-id="a2339-191">The name of the handler to remove.</span></span>
          type:
            - '(result: any) => void'
        - id: options
          description: <span data-ttu-id="a2339-192">Fornece opções para determinar quais manipuladores de eventos ou manipuladores serão removidos.</span><span class="sxs-lookup"><span data-stu-id="a2339-192">Provides options to determine which event handler or handlers are removed.</span></span>
          type:
            - 'office!Office.RemoveHandlerOptions:interface'
        - id: callback
          description: '<span data-ttu-id="a2339-193">Opcional.</span><span class="sxs-lookup"><span data-stu-id="a2339-193">Optional.</span></span> <span data-ttu-id="a2339-194">Uma função que é invocada quando o retorno de chamada retorna, cujo único parâmetro é do tipo [Office. AsyncResult](xref:office!Office.AsyncResult:interface)</span><span class="sxs-lookup"><span data-stu-id="a2339-194">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office!Office.AsyncResult:interface)</span></span><!-- --><span data-ttu-id="a2339-195">.</span><span class="sxs-lookup"><span data-stu-id="a2339-195"></span></span>'
          type:
            - 'office!Office.CustomXmlPart#removeHandlerAsync~0:complex'
  - uid: 'office!Office.CustomXmlPart#removeHandlerAsync:member(2)'
    summary: <span data-ttu-id="a2339-196">Remove um manipulador de eventos para o tipo de evento especificado.</span><span class="sxs-lookup"><span data-stu-id="a2339-196">Removes an event handler for the specified event type.</span></span>
    remarks: |-
      <span data-ttu-id="a2339-197">**Conjunto de requisitos**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="a2339-197">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>

      #### <a name="examples"></a><span data-ttu-id="a2339-198">Exemplos</span><span class="sxs-lookup"><span data-stu-id="a2339-198">Examples</span></span>

      ```javascript
      function removeNodeInsertedEventHandler() {
          Office.context.document.customXmlParts.getByIdAsync(
              "{3BC85265-09D6-4205-B665-8EB239A8B9A1}",
              function (result) {
                  var xmlPart = result.value;
                  xmlPart.removeHandlerAsync(Office.EventType.DataNodeInserted, {handler:myHandler});
          });
      }
      ```
    name: 'removeHandlerAsync(eventType, handler, callback)'
    fullName: 'removeHandlerAsync(eventType, handler, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removeHandlerAsync(eventType: Office.EventType, handler?: (result: any) => void, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: eventType
          description: '<span data-ttu-id="a2339-199">Especifica o tipo de evento a ser removido.</span><span class="sxs-lookup"><span data-stu-id="a2339-199">Specifies the type of event to remove.</span></span> <span data-ttu-id="a2339-200">Para um objeto CustomXmlPart, o parâmetro eventType pode ser especificado como`Office.EventType.NodeDeleted`</span><span class="sxs-lookup"><span data-stu-id="a2339-200">For a CustomXmlPart object, the eventType parameter can be specified as `Office.EventType.NodeDeleted`</span></span><!-- --><span data-ttu-id="a2339-201">, `Office.EventType.NodeInserted`</span><span class="sxs-lookup"><span data-stu-id="a2339-201"></span></span><!-- --><span data-ttu-id="a2339-202">, e`Office.EventType.NodeReplaced`</span><span class="sxs-lookup"><span data-stu-id="a2339-202">, and `Office.EventType.NodeReplaced`</span></span><!-- --><span data-ttu-id="a2339-203">.</span><span class="sxs-lookup"><span data-stu-id="a2339-203"></span></span>'
          type:
            - 'office!Office.EventType:enum'
        - id: handler
          description: <span data-ttu-id="a2339-204">O nome do manipulador a ser removido.</span><span class="sxs-lookup"><span data-stu-id="a2339-204">The name of the handler to remove.</span></span>
          type:
            - '(result: any) => void'
        - id: callback
          description: '<span data-ttu-id="a2339-205">Opcional.</span><span class="sxs-lookup"><span data-stu-id="a2339-205">Optional.</span></span> <span data-ttu-id="a2339-206">Uma função que é invocada quando o retorno de chamada retorna, cujo único parâmetro é do tipo [Office. AsyncResult](xref:office!Office.AsyncResult:interface)</span><span class="sxs-lookup"><span data-stu-id="a2339-206">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office!Office.AsyncResult:interface)</span></span><!-- --><span data-ttu-id="a2339-207">.</span><span class="sxs-lookup"><span data-stu-id="a2339-207"></span></span>'
          type:
            - 'office!Office.CustomXmlPart#removeHandlerAsync~1:complex'
references:
  - uid: 'office!Office.EventType:enum'
    name: Office.EventType
  - uid: 'office!Office.AsyncContextOptions:interface'
    name: Office.AsyncContextOptions
  - uid: 'office!Office.CustomXmlPart#addHandlerAsync~0:complex'
    name: '(result: AsyncResult<void>) => void'
    fullName: '(result: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'office!Office.CustomXmlPart#addHandlerAsync~1:complex'
    name: '(result: AsyncResult<void>) => void'
    fullName: '(result: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'office!Office.CustomXmlPart#deleteAsync~0:complex'
    name: '(result: AsyncResult<void>) => void'
    fullName: '(result: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'office!Office.CustomXmlPart#deleteAsync~1:complex'
    name: '(result: AsyncResult<void>) => void'
    fullName: '(result: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'office!Office.CustomXmlPart#getNodesAsync~0:complex'
    name: '(result: AsyncResult<CustomXmlNode[]>) => void'
    fullName: '(result: Office.AsyncResult<Office.CustomXmlNode[]>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: AsyncResult
        fullName: Office.AsyncResult
      - name: <
        fullName: <
      - uid: 'office!Office.CustomXmlNode:interface'
        name: CustomXmlNode
        fullName: Office.CustomXmlNode
      - name: '[]>) => void'
        fullName: '[]>) => void'
  - uid: 'office!Office.CustomXmlPart#getNodesAsync~1:complex'
    name: '(result: AsyncResult<CustomXmlNode[]>) => void'
    fullName: '(result: Office.AsyncResult<Office.CustomXmlNode[]>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: AsyncResult
        fullName: Office.AsyncResult
      - name: <
        fullName: <
      - uid: 'office!Office.CustomXmlNode:interface'
        name: CustomXmlNode
        fullName: Office.CustomXmlNode
      - name: '[]>) => void'
        fullName: '[]>) => void'
  - uid: 'office!Office.CustomXmlPart#getXmlAsync~0:complex'
    name: '(result: AsyncResult<string>) => void'
    fullName: '(result: Office.AsyncResult<string>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: AsyncResult
        fullName: Office.AsyncResult
      - name: <string>) => void
        fullName: <string>) => void
  - uid: 'office!Office.CustomXmlPart#getXmlAsync~1:complex'
    name: '(result: AsyncResult<string>) => void'
    fullName: '(result: Office.AsyncResult<string>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: AsyncResult
        fullName: Office.AsyncResult
      - name: <string>) => void
        fullName: <string>) => void
  - uid: 'office!Office.CustomXmlPrefixMappings:interface'
    name: CustomXmlPrefixMappings
  - uid: 'office!Office.RemoveHandlerOptions:interface'
    name: RemoveHandlerOptions
  - uid: 'office!Office.CustomXmlPart#removeHandlerAsync~0:complex'
    name: '(result: AsyncResult<void>) => void'
    fullName: '(result: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'office!Office.CustomXmlPart#removeHandlerAsync~1:complex'
    name: '(result: AsyncResult<void>) => void'
    fullName: '(result: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void