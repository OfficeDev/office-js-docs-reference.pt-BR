### YamlMime:TSType
name: Office.IPromiseConstructor
uid: office!Office.IPromiseConstructor:interface
package: office!
fullName: Office.IPromiseConstructor
summary: ''
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
- name: prototype
  uid: office!Office.IPromiseConstructor#prototype:member
  package: office!
  fullName: prototype
  summary: Uma referência ao protótipo.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly prototype: Promise<any>;'
    return:
      type: Promise&lt;any&gt;
methods:
- name: all(values)
  uid: office!Office.IPromiseConstructor#all:member(1)
  package: office!
  fullName: all(values)
  summary: Cria uma promessa que é resolvida com uma matriz de resultados quando todas as promessas fornecidas resolveram ou rejeitaram quando qualquer promessa for rejeitada.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'all<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>, T5 | PromiseLike<T5>, T6 | PromiseLike<T6>, T7 | PromiseLike<T7>, T8 | PromiseLike<T8>, T9 | PromiseLike<T9>, T10 | PromiseLike<T10>]): Promise<[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10]>;'
    parameters:
    - id: values
      description: Uma matriz de promessas.
      type: '[T1 | PromiseLike&lt;T1&gt;, T2 | PromiseLike&lt;T2&gt;, T3 | PromiseLike&lt;T3&gt;, T4 | PromiseLike&lt;T4&gt;, T5 | PromiseLike&lt;T5&gt;, T6 | PromiseLike&lt;T6&gt;, T7 | PromiseLike&lt;T7&gt;, T8 | PromiseLike&lt;T8&gt;, T9 | PromiseLike&lt;T9&gt;, T10 | PromiseLike&lt;T10&gt;]'
    return:
      type: Promise&lt;[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10]&gt;
      description: Uma nova promessa.
- name: all(values)
  uid: office!Office.IPromiseConstructor#all:member(10)
  package: office!
  fullName: all(values)
  summary: Cria uma promessa que é resolvida com uma matriz de resultados quando todas as promessas fornecidas resolveram ou rejeitaram quando qualquer promessa for rejeitada.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'all<T>(values: (T | PromiseLike<T>)[]): Promise<T[]>;'
    parameters:
    - id: values
      description: Uma matriz de promessas.
      type: (T | PromiseLike&lt;T&gt;)[]
    return:
      type: Promise&lt;T[]&gt;
      description: Uma nova promessa.
- name: all(values)
  uid: office!Office.IPromiseConstructor#all:member(2)
  package: office!
  fullName: all(values)
  summary: Cria uma promessa que é resolvida com uma matriz de resultados quando todas as promessas fornecidas resolveram ou rejeitaram quando qualquer promessa for rejeitada.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'all<T1, T2, T3, T4, T5, T6, T7, T8, T9>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>, T5 | PromiseLike<T5>, T6 | PromiseLike<T6>, T7 | PromiseLike<T7>, T8 | PromiseLike<T8>, T9 | PromiseLike<T9>]): Promise<[T1, T2, T3, T4, T5, T6, T7, T8, T9]>;'
    parameters:
    - id: values
      description: Uma matriz de promessas.
      type: '[T1 | PromiseLike&lt;T1&gt;, T2 | PromiseLike&lt;T2&gt;, T3 | PromiseLike&lt;T3&gt;, T4 | PromiseLike&lt;T4&gt;, T5 | PromiseLike&lt;T5&gt;, T6 | PromiseLike&lt;T6&gt;, T7 | PromiseLike&lt;T7&gt;, T8 | PromiseLike&lt;T8&gt;, T9 | PromiseLike&lt;T9&gt;]'
    return:
      type: Promise&lt;[T1, T2, T3, T4, T5, T6, T7, T8, T9]&gt;
      description: Uma nova promessa.
- name: all(values)
  uid: office!Office.IPromiseConstructor#all:member(3)
  package: office!
  fullName: all(values)
  summary: Cria uma promessa que é resolvida com uma matriz de resultados quando todas as promessas fornecidas resolveram ou rejeitaram quando qualquer promessa for rejeitada.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'all<T1, T2, T3, T4, T5, T6, T7, T8>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>, T5 | PromiseLike<T5>, T6 | PromiseLike<T6>, T7 | PromiseLike<T7>, T8 | PromiseLike<T8>]): Promise<[T1, T2, T3, T4, T5, T6, T7, T8]>;'
    parameters:
    - id: values
      description: Uma matriz de promessas.
      type: '[T1 | PromiseLike&lt;T1&gt;, T2 | PromiseLike&lt;T2&gt;, T3 | PromiseLike&lt;T3&gt;, T4 | PromiseLike&lt;T4&gt;, T5 | PromiseLike&lt;T5&gt;, T6 | PromiseLike&lt;T6&gt;, T7 | PromiseLike&lt;T7&gt;, T8 | PromiseLike&lt;T8&gt;]'
    return:
      type: Promise&lt;[T1, T2, T3, T4, T5, T6, T7, T8]&gt;
      description: Uma nova promessa.
- name: all(values)
  uid: office!Office.IPromiseConstructor#all:member(4)
  package: office!
  fullName: all(values)
  summary: Cria uma promessa que é resolvida com uma matriz de resultados quando todas as promessas fornecidas resolveram ou rejeitaram quando qualquer promessa for rejeitada.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'all<T1, T2, T3, T4, T5, T6, T7>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>, T5 | PromiseLike<T5>, T6 | PromiseLike<T6>, T7 | PromiseLike<T7>]): Promise<[T1, T2, T3, T4, T5, T6, T7]>;'
    parameters:
    - id: values
      description: Uma matriz de promessas.
      type: '[T1 | PromiseLike&lt;T1&gt;, T2 | PromiseLike&lt;T2&gt;, T3 | PromiseLike&lt;T3&gt;, T4 | PromiseLike&lt;T4&gt;, T5 | PromiseLike&lt;T5&gt;, T6 | PromiseLike&lt;T6&gt;, T7 | PromiseLike&lt;T7&gt;]'
    return:
      type: Promise&lt;[T1, T2, T3, T4, T5, T6, T7]&gt;
      description: Uma nova promessa.
- name: all(values)
  uid: office!Office.IPromiseConstructor#all:member(5)
  package: office!
  fullName: all(values)
  summary: Cria uma promessa que é resolvida com uma matriz de resultados quando todas as promessas fornecidas resolveram ou rejeitaram quando qualquer promessa for rejeitada.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'all<T1, T2, T3, T4, T5, T6>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>, T5 | PromiseLike<T5>, T6 | PromiseLike<T6>]): Promise<[T1, T2, T3, T4, T5, T6]>;'
    parameters:
    - id: values
      description: Uma matriz de promessas.
      type: '[T1 | PromiseLike&lt;T1&gt;, T2 | PromiseLike&lt;T2&gt;, T3 | PromiseLike&lt;T3&gt;, T4 | PromiseLike&lt;T4&gt;, T5 | PromiseLike&lt;T5&gt;, T6 | PromiseLike&lt;T6&gt;]'
    return:
      type: Promise&lt;[T1, T2, T3, T4, T5, T6]&gt;
      description: Uma nova promessa.
- name: all(values)
  uid: office!Office.IPromiseConstructor#all:member(6)
  package: office!
  fullName: all(values)
  summary: Cria uma promessa que é resolvida com uma matriz de resultados quando todas as promessas fornecidas resolveram ou rejeitaram quando qualquer promessa for rejeitada.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'all<T1, T2, T3, T4, T5>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>, T5 | PromiseLike<T5>]): Promise<[T1, T2, T3, T4, T5]>;'
    parameters:
    - id: values
      description: Uma matriz de promessas.
      type: '[T1 | PromiseLike&lt;T1&gt;, T2 | PromiseLike&lt;T2&gt;, T3 | PromiseLike&lt;T3&gt;, T4 | PromiseLike&lt;T4&gt;, T5 | PromiseLike&lt;T5&gt;]'
    return:
      type: Promise&lt;[T1, T2, T3, T4, T5]&gt;
      description: Uma nova promessa.
- name: all(values)
  uid: office!Office.IPromiseConstructor#all:member(7)
  package: office!
  fullName: all(values)
  summary: Cria uma promessa que é resolvida com uma matriz de resultados quando todas as promessas fornecidas resolveram ou rejeitaram quando qualquer promessa for rejeitada.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'all<T1, T2, T3, T4>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>]): Promise<[T1, T2, T3, T4]>;'
    parameters:
    - id: values
      description: Uma matriz de promessas.
      type: '[T1 | PromiseLike&lt;T1&gt;, T2 | PromiseLike&lt;T2&gt;, T3 | PromiseLike&lt;T3&gt;, T4 | PromiseLike&lt;T4&gt;]'
    return:
      type: Promise&lt;[T1, T2, T3, T4]&gt;
      description: Uma nova promessa.
- name: all(values)
  uid: office!Office.IPromiseConstructor#all:member(8)
  package: office!
  fullName: all(values)
  summary: Cria uma promessa que é resolvida com uma matriz de resultados quando todas as promessas fornecidas resolveram ou rejeitaram quando qualquer promessa for rejeitada.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'all<T1, T2, T3>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>]): Promise<[T1, T2, T3]>;'
    parameters:
    - id: values
      description: Uma matriz de promessas.
      type: '[T1 | PromiseLike&lt;T1&gt;, T2 | PromiseLike&lt;T2&gt;, T3 | PromiseLike&lt;T3&gt;]'
    return:
      type: Promise&lt;[T1, T2, T3]&gt;
      description: Uma nova promessa.
- name: all(values)
  uid: office!Office.IPromiseConstructor#all:member(9)
  package: office!
  fullName: all(values)
  summary: Cria uma promessa que é resolvida com uma matriz de resultados quando todas as promessas fornecidas resolveram ou rejeitaram quando qualquer promessa for rejeitada.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'all<T1, T2>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>]): Promise<[T1, T2]>;'
    parameters:
    - id: values
      description: Uma matriz de promessas.
      type: '[T1 | PromiseLike&lt;T1&gt;, T2 | PromiseLike&lt;T2&gt;]'
    return:
      type: Promise&lt;[T1, T2]&gt;
      description: Uma nova promessa.
- name: race(values)
  uid: office!Office.IPromiseConstructor#race:member(1)
  package: office!
  fullName: race(values)
  summary: Cria uma promessa que é resolvida ou rejeitada quando qualquer uma das promessas fornecidas é resolvida ou rejeitada.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'race<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>, T5 | PromiseLike<T5>, T6 | PromiseLike<T6>, T7 | PromiseLike<T7>, T8 | PromiseLike<T8>, T9 | PromiseLike<T9>, T10 | PromiseLike<T10>]): Promise<T1 | T2 | T3 | T4 | T5 | T6 | T7 | T8 | T9 | T10>;'
    parameters:
    - id: values
      description: Uma matriz de promessas.
      type: '[T1 | PromiseLike&lt;T1&gt;, T2 | PromiseLike&lt;T2&gt;, T3 | PromiseLike&lt;T3&gt;, T4 | PromiseLike&lt;T4&gt;, T5 | PromiseLike&lt;T5&gt;, T6 | PromiseLike&lt;T6&gt;, T7 | PromiseLike&lt;T7&gt;, T8 | PromiseLike&lt;T8&gt;, T9 | PromiseLike&lt;T9&gt;, T10 | PromiseLike&lt;T10&gt;]'
    return:
      type: Promise&lt;T1 | T2 | T3 | T4 | T5 | T6 | T7 | T8 | T9 | T10&gt;
      description: Uma nova promessa.
- name: race(values)
  uid: office!Office.IPromiseConstructor#race:member(10)
  package: office!
  fullName: race(values)
  summary: Cria uma promessa que é resolvida ou rejeitada quando qualquer uma das promessas fornecidas é resolvida ou rejeitada.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'race<T>(values: (T | PromiseLike<T>)[]): Promise<T>;'
    parameters:
    - id: values
      description: Uma matriz de promessas.
      type: (T | PromiseLike&lt;T&gt;)[]
    return:
      type: Promise&lt;T&gt;
      description: Uma nova promessa.
- name: race(values)
  uid: office!Office.IPromiseConstructor#race:member(2)
  package: office!
  fullName: race(values)
  summary: Cria uma promessa que é resolvida ou rejeitada quando qualquer uma das promessas fornecidas é resolvida ou rejeitada.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'race<T1, T2, T3, T4, T5, T6, T7, T8, T9>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>, T5 | PromiseLike<T5>, T6 | PromiseLike<T6>, T7 | PromiseLike<T7>, T8 | PromiseLike<T8>, T9 | PromiseLike<T9>]): Promise<T1 | T2 | T3 | T4 | T5 | T6 | T7 | T8 | T9>;'
    parameters:
    - id: values
      description: Uma matriz de promessas.
      type: '[T1 | PromiseLike&lt;T1&gt;, T2 | PromiseLike&lt;T2&gt;, T3 | PromiseLike&lt;T3&gt;, T4 | PromiseLike&lt;T4&gt;, T5 | PromiseLike&lt;T5&gt;, T6 | PromiseLike&lt;T6&gt;, T7 | PromiseLike&lt;T7&gt;, T8 | PromiseLike&lt;T8&gt;, T9 | PromiseLike&lt;T9&gt;]'
    return:
      type: Promise&lt;T1 | T2 | T3 | T4 | T5 | T6 | T7 | T8 | T9&gt;
      description: Uma nova promessa.
- name: race(values)
  uid: office!Office.IPromiseConstructor#race:member(3)
  package: office!
  fullName: race(values)
  summary: Cria uma promessa que é resolvida ou rejeitada quando qualquer uma das promessas fornecidas é resolvida ou rejeitada.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'race<T1, T2, T3, T4, T5, T6, T7, T8>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>, T5 | PromiseLike<T5>, T6 | PromiseLike<T6>, T7 | PromiseLike<T7>, T8 | PromiseLike<T8>]): Promise<T1 | T2 | T3 | T4 | T5 | T6 | T7 | T8>;'
    parameters:
    - id: values
      description: Uma matriz de promessas.
      type: '[T1 | PromiseLike&lt;T1&gt;, T2 | PromiseLike&lt;T2&gt;, T3 | PromiseLike&lt;T3&gt;, T4 | PromiseLike&lt;T4&gt;, T5 | PromiseLike&lt;T5&gt;, T6 | PromiseLike&lt;T6&gt;, T7 | PromiseLike&lt;T7&gt;, T8 | PromiseLike&lt;T8&gt;]'
    return:
      type: Promise&lt;T1 | T2 | T3 | T4 | T5 | T6 | T7 | T8&gt;
      description: Uma nova promessa.
- name: race(values)
  uid: office!Office.IPromiseConstructor#race:member(4)
  package: office!
  fullName: race(values)
  summary: Cria uma promessa que é resolvida ou rejeitada quando qualquer uma das promessas fornecidas é resolvida ou rejeitada.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'race<T1, T2, T3, T4, T5, T6, T7>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>, T5 | PromiseLike<T5>, T6 | PromiseLike<T6>, T7 | PromiseLike<T7>]): Promise<T1 | T2 | T3 | T4 | T5 | T6 | T7>;'
    parameters:
    - id: values
      description: Uma matriz de promessas.
      type: '[T1 | PromiseLike&lt;T1&gt;, T2 | PromiseLike&lt;T2&gt;, T3 | PromiseLike&lt;T3&gt;, T4 | PromiseLike&lt;T4&gt;, T5 | PromiseLike&lt;T5&gt;, T6 | PromiseLike&lt;T6&gt;, T7 | PromiseLike&lt;T7&gt;]'
    return:
      type: Promise&lt;T1 | T2 | T3 | T4 | T5 | T6 | T7&gt;
      description: Uma nova promessa.
- name: race(values)
  uid: office!Office.IPromiseConstructor#race:member(5)
  package: office!
  fullName: race(values)
  summary: Cria uma promessa que é resolvida ou rejeitada quando qualquer uma das promessas fornecidas é resolvida ou rejeitada.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'race<T1, T2, T3, T4, T5, T6>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>, T5 | PromiseLike<T5>, T6 | PromiseLike<T6>]): Promise<T1 | T2 | T3 | T4 | T5 | T6>;'
    parameters:
    - id: values
      description: Uma matriz de promessas.
      type: '[T1 | PromiseLike&lt;T1&gt;, T2 | PromiseLike&lt;T2&gt;, T3 | PromiseLike&lt;T3&gt;, T4 | PromiseLike&lt;T4&gt;, T5 | PromiseLike&lt;T5&gt;, T6 | PromiseLike&lt;T6&gt;]'
    return:
      type: Promise&lt;T1 | T2 | T3 | T4 | T5 | T6&gt;
      description: Uma nova promessa.
- name: race(values)
  uid: office!Office.IPromiseConstructor#race:member(6)
  package: office!
  fullName: race(values)
  summary: Cria uma promessa que é resolvida ou rejeitada quando qualquer uma das promessas fornecidas é resolvida ou rejeitada.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'race<T1, T2, T3, T4, T5>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>, T5 | PromiseLike<T5>]): Promise<T1 | T2 | T3 | T4 | T5>;'
    parameters:
    - id: values
      description: Uma matriz de promessas.
      type: '[T1 | PromiseLike&lt;T1&gt;, T2 | PromiseLike&lt;T2&gt;, T3 | PromiseLike&lt;T3&gt;, T4 | PromiseLike&lt;T4&gt;, T5 | PromiseLike&lt;T5&gt;]'
    return:
      type: Promise&lt;T1 | T2 | T3 | T4 | T5&gt;
      description: Uma nova promessa.
- name: race(values)
  uid: office!Office.IPromiseConstructor#race:member(7)
  package: office!
  fullName: race(values)
  summary: Cria uma promessa que é resolvida ou rejeitada quando qualquer uma das promessas fornecidas é resolvida ou rejeitada.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'race<T1, T2, T3, T4>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>]): Promise<T1 | T2 | T3 | T4>;'
    parameters:
    - id: values
      description: Uma matriz de promessas.
      type: '[T1 | PromiseLike&lt;T1&gt;, T2 | PromiseLike&lt;T2&gt;, T3 | PromiseLike&lt;T3&gt;, T4 | PromiseLike&lt;T4&gt;]'
    return:
      type: Promise&lt;T1 | T2 | T3 | T4&gt;
      description: Uma nova promessa.
- name: race(values)
  uid: office!Office.IPromiseConstructor#race:member(8)
  package: office!
  fullName: race(values)
  summary: Cria uma promessa que é resolvida ou rejeitada quando qualquer uma das promessas fornecidas é resolvida ou rejeitada.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'race<T1, T2, T3>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>]): Promise<T1 | T2 | T3>;'
    parameters:
    - id: values
      description: Uma matriz de promessas.
      type: '[T1 | PromiseLike&lt;T1&gt;, T2 | PromiseLike&lt;T2&gt;, T3 | PromiseLike&lt;T3&gt;]'
    return:
      type: Promise&lt;T1 | T2 | T3&gt;
      description: Uma nova promessa.
- name: race(values)
  uid: office!Office.IPromiseConstructor#race:member(9)
  package: office!
  fullName: race(values)
  summary: Cria uma promessa que é resolvida ou rejeitada quando qualquer uma das promessas fornecidas é resolvida ou rejeitada.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'race<T1, T2>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>]): Promise<T1 | T2>;'
    parameters:
    - id: values
      description: Uma matriz de promessas.
      type: '[T1 | PromiseLike&lt;T1&gt;, T2 | PromiseLike&lt;T2&gt;]'
    return:
      type: Promise&lt;T1 | T2&gt;
      description: Uma nova promessa.
- name: reject(reason)
  uid: office!Office.IPromiseConstructor#reject:member(1)
  package: office!
  fullName: reject(reason)
  summary: Cria uma nova promessa rejeitada pelo motivo fornecido.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'reject(reason: any): Promise<never>;'
    parameters:
    - id: reason
      description: O motivo pelo qual a promessa foi rejeitada.
      type: any
    return:
      type: Promise&lt;never&gt;
      description: Uma nova promessa rejeitada.
- name: reject(reason)
  uid: office!Office.IPromiseConstructor#reject:member(2)
  package: office!
  fullName: reject(reason)
  summary: Cria uma nova promessa rejeitada pelo motivo fornecido.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'reject<T>(reason: any): Promise<T>;'
    parameters:
    - id: reason
      description: O motivo pelo qual a promessa foi rejeitada.
      type: any
    return:
      type: Promise&lt;T&gt;
      description: Uma nova promessa rejeitada.
- name: resolve(value)
  uid: office!Office.IPromiseConstructor#resolve:member(1)
  package: office!
  fullName: resolve(value)
  summary: Cria uma nova promessa resolvida para o valor fornecido.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'resolve<T>(value: T | PromiseLike<T>): Promise<T>;'
    parameters:
    - id: value
      description: Uma promessa.
      type: T | PromiseLike&lt;T&gt;
    return:
      type: Promise&lt;T&gt;
      description: Uma promessa cujo estado interno corresponde à promessa fornecida.
- name: resolve()
  uid: office!Office.IPromiseConstructor#resolve:member(2)
  package: office!
  fullName: resolve()
  summary: Cria uma nova promessa resolvida.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'resolve(): Promise<void>;'
    return:
      type: Promise&lt;void&gt;
      description: Uma promessa resolvida.
metadata:
  ms.openlocfilehash: 0a034a710d9c396487cfeb9acfeded249d857f41
  ms.sourcegitcommit: 3bab97ab3b91da7cca497f6fc895408a76bd8b46
  ms.translationtype: MT
  ms.contentlocale: pt-BR
  ms.lasthandoff: 11/18/2020
  ms.locfileid: "49151300"
