### YamlMime:UniversalReference
items:
  - uid: 'office!OfficeExtension.TrackedObjects:class'
    summary: 'Coleção de objetos rastreados, contidos em um contexto de solicitação. Consulte "context. trackedObjects" para obter mais informações.'
    name: OfficeExtension.TrackedObjects
    fullName: OfficeExtension.TrackedObjects
    langs:
      - typeScript
    type: class
    package: office!
    children:
      - 'office!OfficeExtension.TrackedObjects#add:member(1)'
      - 'office!OfficeExtension.TrackedObjects#add:member(2)'
      - 'office!OfficeExtension.TrackedObjects#remove:member(1)'
      - 'office!OfficeExtension.TrackedObjects#remove:member(2)'
  - uid: 'office!OfficeExtension.TrackedObjects#add:member(1)'
    summary: |-
      Acompanhar um novo objeto para o ajuste automático com base nas alterações ao redor no documento. Apenas alguns tipos de objeto exigem isso. Se você estiver usando um objeto entre chamadas ". Sync" e fora da execução seqüencial de um lote ". Run" e obter um erro "InvalidObjectPath" ao definir uma propriedade ou invocar um método no objeto, você precisa ter adicionado o objeto à coleção de objetos rastreados quando o objeto foi criado pela primeira vez.

      Este método também tem a seguinte assinatura:

      `add(objects: ClientObject[]): void;`Onde objetos é uma matriz de objetos a serem rastreados.
    name: add(object)
    fullName: add(object)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(object: ClientObject): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: object
          description: ''
          type:
            - 'office!OfficeExtension.ClientObject:class'
  - uid: 'office!OfficeExtension.TrackedObjects#add:member(2)'
    summary: 'Controlar um conjunto de objetos para o ajuste automático com base nas alterações ao redor do documento. Apenas alguns tipos de objeto exigem isso. Se você estiver usando um objeto entre chamadas ". Sync" e fora da execução seqüencial de um lote ". Run" e obter um erro "InvalidObjectPath" ao definir uma propriedade ou invocar um método no objeto, você precisa ter adicionado o objeto à coleção de objetos rastreados quando o objeto foi criado pela primeira vez.'
    name: add(objects)
    fullName: add(objects)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(objects: ClientObject[]): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: objects
          description: ''
          type:
            - 'office!OfficeExtension.TrackedObjects#add~0:complex'
  - uid: 'office!OfficeExtension.TrackedObjects#remove:member(1)'
    summary: |-
      Libera a memória associada a um objeto que foi adicionado anteriormente a essa coleção. Ter muitos objetos rastreados desacelera o aplicativo host, por isso, lembre-se de liberar todos os objetos adicionados após usá-los. Você precisará chamar `context.sync()` antes que o lançamento da memória entre em vigor.

      Este método também tem a seguinte assinatura:

      `remove(objects: ClientObject[]): void;`Onde objetos é uma matriz de objetos a serem removidos.
    name: remove(object)
    fullName: remove(object)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'remove(object: ClientObject): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: object
          description: ''
          type:
            - 'office!OfficeExtension.ClientObject:class'
  - uid: 'office!OfficeExtension.TrackedObjects#remove:member(2)'
    summary: 'Libera a memória associada a um objeto que foi adicionado anteriormente a essa coleção. Ter muitos objetos rastreados desacelera o aplicativo host, por isso, lembre-se de liberar todos os objetos adicionados após usá-los. Você precisará chamar `context.sync()` antes que o lançamento da memória entre em vigor.'
    name: remove(objects)
    fullName: remove(objects)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'remove(objects: ClientObject[]): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: objects
          description: ''
          type:
            - 'office!OfficeExtension.TrackedObjects#remove~0:complex'
references:
  - uid: 'office!OfficeExtension.ClientObject:class'
    name: ClientObject
  - uid: 'office!OfficeExtension.TrackedObjects#add~0:complex'
    name: 'ClientObject[]'
    fullName: 'OfficeExtension.ClientObject[]'
    spec.typeScript:
      - uid: 'office!OfficeExtension.ClientObject:class'
        name: ClientObject
        fullName: OfficeExtension.ClientObject
      - name: '[]'
        fullName: '[]'
  - uid: 'office!OfficeExtension.TrackedObjects#remove~0:complex'
    name: 'ClientObject[]'
    fullName: 'OfficeExtension.ClientObject[]'
    spec.typeScript:
      - uid: 'office!OfficeExtension.ClientObject:class'
        name: ClientObject
        fullName: OfficeExtension.ClientObject
      - name: '[]'
        fullName: '[]'