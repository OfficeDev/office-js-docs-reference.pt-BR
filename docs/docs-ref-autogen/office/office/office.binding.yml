### YamlMime:TSType
name: Office.Binding
uid: office!Office.Binding:interface
package: office!
fullName: Office.Binding
summary: >-
  Representa uma associação a uma seção do documento.


  O objeto Binding expõe a funcionalidade todas por todas as associações, independentemente do tipo.


  O objeto Binding nunca é chamado diretamente. É a classe pai abstrata dos objetos que representam cada tipo de associação: [Office. matrixbinding](xref:office!Office.MatrixBinding:interface)<!-- -->, [Office. TableBinding](xref:office!Office.TableBinding:interface)<!-- -->, ou [Office. TextBinding](xref:office!Office.TextBinding:interface)<!-- -->. Todos esses três objetos herdam os métodos getDataAsync e setDataAsync do objeto Binding que permitem que você interaja com os dados na associação. Eles também herdam as propriedades id e type para consultar os valores de propriedade. Além disso, os objetos MatrixBinding e TableBinding expõem métodos adicionais para recursos específicos de matriz e tabela, como contar o número de linhas e colunas.
remarks: >-
  **Hosts**: Excel, Word


  **Conjuntos de requisitos**:


  - [MatrixBindings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#matrixbindings)


  - [TableBindings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#tablebindings)


  - [TextBindings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textbindings)
isPreview: false
isDeprecated: false
type: interface
properties:
- name: document
  uid: office!Office.Binding#document:member
  package: office!
  fullName: document
  summary: Obter o objeto Document associado à associação.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'document: Office.Document;'
    return:
      type: <xref uid="office!Office.Document:interface" />
      description: "\n\n#### <a name=\"examples\"></a>Exemplos\n\n```javascript\nOffice.context.document.bindings.getByIdAsync(\"myBinding\", function (asyncResult) {\n    write(asyncResult.value.document.url);\n});\n\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
- name: id
  uid: office!Office.Binding#id:member
  package: office!
  fullName: id
  summary: Uma cadeia de caracteres que identifica exclusivamente essa associação entre as associações no mesmo objeto [Office.Document](xref:office!Office.Document:interface) .
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'id: string;'
    return:
      type: string
      description: "\n\n#### <a name=\"examples\"></a>Exemplos\n\n```javascript\nOffice.context.document.bindings.getByIdAsync(\"myBinding\", function (asyncResult) {\n    write(asyncResult.value.id);\n});\n\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
- name: type
  uid: office!Office.Binding#type:member
  package: office!
  fullName: type
  summary: Obtém o tipo de associação.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'type: Office.BindingType;'
    return:
      type: <xref uid="office!Office.BindingType:enum" />
      description: "\n\n#### <a name=\"examples\"></a>Exemplos\n\n```javascript\nOffice.context.document.bindings.getByIdAsync(\"MyBinding\", function (asyncResult) { \n    write(asyncResult.value.type); \n}) \n\n// Function that writes to a div with id='message' on the page. \nfunction write(message){ \n    document.getElementById('message').innerText += message;  \n}\n```"
methods:
- name: addHandlerAsync(eventType, handler, options, callback)
  uid: office!Office.Binding#addHandlerAsync:member(1)
  package: office!
  fullName: addHandlerAsync(eventType, handler, options, callback)
  summary: Adiciona um manipulador de eventos ao objeto para o [Office. EventType](xref:office!Office.EventType:enum) especificado<!-- -->. Os EventType suportados são `Office.EventType.BindingDataChanged` e `Office.EventType.BindingSelectionChanged`<!-- -->.
  remarks: >-
    **Conjunto de requisitos**: [BindingEvents](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#bindingevents)


    Você pode adicionar vários manipuladores de eventos para o eventType especificado, desde que o nome de cada função do manipulador de eventos seja exclusivo.
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'addHandlerAsync(eventType: Office.EventType, handler: any, options?: Office.AsyncContextOptions, callback?: (result: Office.AsyncResult<void>) => void): void;'
    parameters:
    - id: eventType
      description: O tipo de evento. Para associações, pode ser `Office.EventType.BindingDataChanged` ou `Office.EventType.BindingSelectionChanged`<!-- -->.
      type: <xref uid="office!Office.EventType:enum" />
    - id: handler
      description: A função de manipulador de eventos a ser adicionada, cujo único parâmetro é do tipo [Office. BindingDataChangedEventArgs](xref:office!Office.BindingDataChangedEventArgs:interface) ou [Office. BindingSelectionChangedEventArgs](xref:office!Office.BindingSelectionChangedEventArgs:interface)<!-- -->.
      type: any
    - id: options
      description: Fornece uma opção para preservar dados de contexto de qualquer tipo, inalterados, para uso em um retorno de chamada.
      type: <xref uid="office!Office.AsyncContextOptions:interface" />
    - id: callback
      description: Opcional. Uma função que é invocada quando o retorno de chamada retorna, cujo único parâmetro é do tipo [Office. AsyncResult](xref:office!Office.AsyncResult:interface)<!-- -->.
      type: '(result: <xref uid="office!Office.AsyncResult:interface" />&lt;void&gt;) =&gt; void'
    return:
      type: void
      description: ''
- name: addHandlerAsync(eventType, handler, callback)
  uid: office!Office.Binding#addHandlerAsync:member(2)
  package: office!
  fullName: addHandlerAsync(eventType, handler, callback)
  summary: Adiciona um manipulador de eventos ao objeto para o [Office. EventType](xref:office!Office.EventType:enum) especificado<!-- -->. Os EventType suportados são `Office.EventType.BindingDataChanged` e `Office.EventType.BindingSelectionChanged`<!-- -->.
  remarks: "**Conjunto de requisitos**: [BindingEvents](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#bindingevents)\n\nVocê pode adicionar vários manipuladores de eventos para o eventType especificado, desde que o nome de cada função do manipulador de eventos seja exclusivo.\n\n#### <a name=\"examples\"></a>Exemplos\n\n```javascript\n// The following code sample calls the select method of the Office object to access the binding\n// with ID \"MyBinding\", and then calls the addHandlerAsync method to add a handler function \n// for the bindingDataChanged event of that binding.\nfunction addEventHandlerToBinding() {\n    Office.select(\"bindings#MyBinding\").addHandlerAsync(\n        Office.EventType.BindingDataChanged, onBindingDataChanged);\n}\n\nfunction onBindingDataChanged(eventArgs) {\n    write(\"Data has changed in binding: \" + eventArgs.binding.id);\n}\n\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```\n```javascript\n// To add an event handler for the BindingSelectionChanged event of a binding, \n// use the addHandlerAsync method of the Binding object.\n// The event handler receives an argument of type BindingSelectionChangedEventArgs.\nfunction addEventHandlerToBinding() {\n    Office.select(\"bindings#MyBinding\").addHandlerAsync(\n        Office.EventType.BindingSelectionChanged, onBindingSelectionChanged);\n}\n\nfunction onBindingSelectionChanged(eventArgs) {\n    write(eventArgs.binding.id + \" has been selected.\");\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'addHandlerAsync(eventType: Office.EventType, handler: any, callback?: (result: Office.AsyncResult<void>) => void): void;'
    parameters:
    - id: eventType
      description: O tipo de evento. Para associações, pode ser `Office.EventType.BindingDataChanged` ou `Office.EventType.BindingSelectionChanged`<!-- -->.
      type: <xref uid="office!Office.EventType:enum" />
    - id: handler
      description: A função de manipulador de eventos a ser adicionada, cujo único parâmetro é do tipo [Office. BindingDataChangedEventArgs](xref:office!Office.BindingDataChangedEventArgs:interface) ou [Office. BindingSelectionChangedEventArgs](xref:office!Office.BindingSelectionChangedEventArgs:interface)<!-- -->.
      type: any
    - id: callback
      description: Opcional. Uma função que é invocada quando o retorno de chamada retorna, cujo único parâmetro é do tipo [Office. AsyncResult](xref:office!Office.AsyncResult:interface)<!-- -->.
      type: '(result: <xref uid="office!Office.AsyncResult:interface" />&lt;void&gt;) =&gt; void'
    return:
      type: void
      description: ''
- name: getDataAsync(options, callback)
  uid: office!Office.Binding#getDataAsync:member(1)
  package: office!
  fullName: getDataAsync(options, callback)
  summary: Retorna os dados contidos na associação.
  remarks: >-
    **Conjuntos de requisitos**:


    - [HtmlCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#htmlcoercion) (ao usar `Office.CoercionType.Html`<!-- -->)


    - [MatrixBindings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#matrixbindings)


    - [MatrixCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#matrixcoercion) (ao usar `Office.CoercionType.Matrix`<!-- -->)


    - [OoxmlCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#ooxmlcoercion) (ao usar `Office.CoercionType.Ooxml`<!-- -->)


    - [TableBindings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#tablebindings)


    - [TableCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#tablecoercion) (ao usar `Office.CoercionType.Table`<!-- -->)


    - [TextBindings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textbindings)


    - [Textcoerção](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textcoercion) (ao usar `Office.CoercionType.Text`<!-- -->)


    Quando chamado de uma Matrixbinding ou TableBinding, o método getDataAsync retornará um subconjunto dos valores ligados se os parâmetros optional startRow, startColumn, rowCount e columnCount forem especificados (e especificarem um intervalo contíguo e válido).
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getDataAsync<T>(options?: GetBindingDataOptions, callback?: (result: AsyncResult<T>) => void): void;'
    parameters:
    - id: options
      description: Fornece opções sobre como obter os dados em uma associação.
      type: <xref uid="office!Office.GetBindingDataOptions:interface" />
    - id: callback
      description: Opcional. Uma função que é invocada quando o retorno de chamada retorna, cujo único parâmetro é do tipo [Office. AsyncResult](xref:office!Office.AsyncResult:interface)<!-- -->. A `value` Propriedade do resultado é os valores na associação especificada. Se o `coercionType` parâmetro for especificado (e a chamada for bem-sucedida), os dados serão retornados no formato descrito no tópico de enumeração CoercionType.
      type: '(result: <xref uid="office!Office.AsyncResult:interface" />&lt;T&gt;) =&gt; void'
    return:
      type: void
      description: ''
- name: getDataAsync(callback)
  uid: office!Office.Binding#getDataAsync:member(2)
  package: office!
  fullName: getDataAsync(callback)
  summary: Retorna os dados contidos na associação.
  remarks: "**Conjuntos de requisitos**:\n\n- [HtmlCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#htmlcoercion) (ao usar `Office.CoercionType.Html`<!-- -->)\n\n- [MatrixBindings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#matrixbindings)\n\n- [MatrixCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#matrixcoercion) (ao usar `Office.CoercionType.Matrix`<!-- -->)\n\n- [OoxmlCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#ooxmlcoercion) (ao usar `Office.CoercionType.Ooxml`<!-- -->)\n\n- [TableBindings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#tablebindings)\n\n- [TableCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#tablecoercion) (ao usar `Office.CoercionType.Table`<!-- -->)\n\n- [TextBindings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textbindings)\n\n- [Textcoerção](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textcoercion) (ao usar `Office.CoercionType.Text`<!-- -->)\n\nQuando chamado de uma Matrixbinding ou TableBinding, o método getDataAsync retornará um subconjunto dos valores ligados se os parâmetros optional startRow, startColumn, rowCount e columnCount forem especificados (e especificarem um intervalo contíguo e válido).\n\n#### <a name=\"examples\"></a>Exemplos\n\n```javascript\nfunction showBindingData() {\n    Office.select(\"bindings#MyBinding\").getDataAsync(function (asyncResult) {\n        write(asyncResult.value)\n    });\n}\n\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n\n// There is an important difference in behavior between using the \"table\" and \"matrix\" coercionType with the\n// Binding.getDataAsync method, with respect to data formatted with header rows, as shown in the following\n// two examples. These code examples show event handler functions for the Binding.SelectionChanged event.\n\n// If you specify the \"table\" coercionType, the TableData.rows property ( result.value.rows in the following\n// code example) returns an array that contains only the body rows of the table. So, its 0th row will be the\n// first non-header row in the table.\nfunction selectionChanged(evtArgs) { \n    Office.select(\"bindings#TableTranslate\").getDataAsync(\n        { coercionType: 'table', \n          startRow: evtArgs.startRow, \n          startCol: 0, \n          rowCount: 1, \n          columnCount: 1 },  \n        function (result) { \n            if (result.status == 'succeeded') { \n                write(\"Image to find: \" + result.value.rows[0][0]); \n            } \n            else \n                write(result.error.message); \n    }); \n}     \n// Function that writes to a div with id='message' on the page. \nfunction write(message){ \n    document.getElementById('message').innerText += message; \n}\n\n// However, if you specify the \"matrix\" coercionType, result.value in the following code example returns an array\n// that contains the table header in the 0th row. If the table header contains multiple rows, then these are all\n// included in the result.value matrix as separate rows before the table body rows are included.\nfunction selectionChanged(evtArgs) { \n    Office.select(\"bindings#TableTranslate\").getDataAsync(\n        { coercionType: 'matrix', \n          startRow: evtArgs.startRow, \n          startCol: 0, \n          rowCount: 1, \n          columnCount: 1 },  \n        function (result) { \n            if (result.status == 'succeeded') { \n                write(\"Image to find: \" + result.value[1][0]); \n            } \n            else \n                write(result.error.message); \n    }); \n}     \n// Function that writes to a div with id='message' on the page. \nfunction write(message){ \n    document.getElementById('message').innerText += message; \n}\n```"
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getDataAsync<T>(callback?: (result: AsyncResult<T>) => void): void;'
    parameters:
    - id: callback
      description: Opcional. Uma função que é invocada quando o retorno de chamada retorna, cujo único parâmetro é do tipo [Office. AsyncResult](xref:office!Office.AsyncResult:interface)<!-- -->. A `value` Propriedade do resultado é os valores na associação especificada. Se o `coercionType` parâmetro for especificado (e a chamada for bem-sucedida), os dados serão retornados no formato descrito no tópico de enumeração CoercionType.
      type: '(result: <xref uid="office!Office.AsyncResult:interface" />&lt;T&gt;) =&gt; void'
    return:
      type: void
      description: ''
- name: removeHandlerAsync(eventType, options, callback)
  uid: office!Office.Binding#removeHandlerAsync:member(1)
  package: office!
  fullName: removeHandlerAsync(eventType, options, callback)
  summary: Remove o manipulador especificado da associação para o tipo de evento especificado.
  remarks: '**Conjunto de requisitos**: [BindingEvents](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#bindingevents)'
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'removeHandlerAsync(eventType: Office.EventType, options?: RemoveHandlerOptions, callback?: (result: AsyncResult<void>) => void): void;'
    parameters:
    - id: eventType
      description: O tipo de evento. Para associações, pode ser `Office.EventType.BindingDataChanged` ou `Office.EventType.BindingSelectionChanged`<!-- -->.
      type: <xref uid="office!Office.EventType:enum" />
    - id: options
      description: Fornece opções para determinar quais manipuladores de eventos ou manipuladores serão removidos.
      type: <xref uid="office!Office.RemoveHandlerOptions:interface" />
    - id: callback
      description: Opcional. Uma função que é invocada quando o retorno de chamada retorna, cujo único parâmetro é do tipo [Office. AsyncResult](xref:office!Office.AsyncResult:interface)<!-- -->.
      type: '(result: <xref uid="office!Office.AsyncResult:interface" />&lt;void&gt;) =&gt; void'
    return:
      type: void
      description: ''
- name: removeHandlerAsync(eventType, callback)
  uid: office!Office.Binding#removeHandlerAsync:member(2)
  package: office!
  fullName: removeHandlerAsync(eventType, callback)
  summary: Remove o manipulador especificado da associação para o tipo de evento especificado.
  remarks: >-
    **Conjunto de requisitos**: [BindingEvents](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#bindingevents)


    #### <a name="examples"></a>Exemplos


    ```javascript

    function removeEventHandlerFromBinding() {
        Office.select("bindings#MyBinding").removeHandlerAsync(
            Office.EventType.BindingDataChanged, {handler:onBindingDataChanged});
    }

    ```
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'removeHandlerAsync(eventType: Office.EventType, callback?: (result: AsyncResult<void>) => void): void;'
    parameters:
    - id: eventType
      description: O tipo de evento. Para associações, pode ser `Office.EventType.BindingDataChanged` ou `Office.EventType.BindingSelectionChanged`<!-- -->.
      type: <xref uid="office!Office.EventType:enum" />
    - id: callback
      description: Opcional. Uma função que é invocada quando o retorno de chamada retorna, cujo único parâmetro é do tipo [Office. AsyncResult](xref:office!Office.AsyncResult:interface)<!-- -->.
      type: '(result: <xref uid="office!Office.AsyncResult:interface" />&lt;void&gt;) =&gt; void'
    return:
      type: void
      description: ''
- name: setDataAsync(data, options, callback)
  uid: office!Office.Binding#setDataAsync:member(1)
  package: office!
  fullName: setDataAsync(data, options, callback)
  summary: Grava dados na seção associada do documento representado pelo objeto de associação especificado.
  remarks: >-
    **Conjuntos de requisitos**:


    - [HtmlCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#htmlcoercion) (ao usar `Office.CoercionType.Html`<!-- -->)


    - [MatrixBindings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#matrixbindings)


    - [MatrixCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#matrixcoercion) (ao usar `Office.CoercionType.Matrix`<!-- -->)


    - [OoxmlCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#ooxmlcoercion) (ao usar `Office.CoercionType.Ooxml`<!-- -->)


    - [TableBindings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#tablebindings)


    - [TableCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#tablecoercion) (ao usar `Office.CoercionType.Table`<!-- -->)


    - [TextBindings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textbindings)


    - [Textcoerção](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textcoercion) (ao usar `Office.CoercionType.Text`<!-- -->)


    O valor passado para data contém os dados a serem gravados na associação. O tipo do valor passado determina o que será gravado conforme descrito na tabela a seguir.


    <table> <tr> <th>`data` valor</th> <th>Dados gravados</th> </tr> <tr> <td>String</td> <td>O texto sem formatação ou qualquer coisa que possa ser forçada para uma cadeia de caracteres serão gravados.</td> </tr> <tr> <td>Uma matriz de matrizes ("matrix")</td> <td>Tabular data without headers will be written. For example, to write data to three rows in two columns, you can pass an array like this: `[["R1C1", "R1C2"], ["R2C1", "R2C2"], ["R3C1", "R3C2"]]`<!-- -->. Para gravar uma única coluna de três linhas, passe uma matriz como esta: `[["R1C1"], ["R2C1"], ["R3C1"]]`<!-- -->.</td> </tr> <tr> <td>Um `TableData` objeto</td> <td>Será gravada uma tabela com cabeçalhos.</td> </tr> </table>


    Além disso, essas ações específicas do aplicativo se aplicam ao gravar dados em uma associação. Para o Word, os dados especificados são gravados na associação da seguinte maneira:


    <table> <tr> <th>`data` valor</th> <th>Dados gravados</th> </tr> <tr> <td>String</td> <td>O texto especificado é gravado.</td> </tr> <tr> <td>Uma matriz de matrizes ("Matrix") ou um `TableData` objeto</td> <td>Uma tabela do Word é gravada.</td> </tr> <tr> <td>HTML</td> <td>O HTML especificado é gravado. Se qualquer um dos HTML que você escrever for inválido, o Word não irá gerar um erro. Word will write as much of the HTML as it can and will omit any invalid data.</td> </tr> <tr> <td>Office Open XML ("Open XML")</td> <td>O XML especificado é gravado.</td> </tr> </table>


    Para o Excel, os dados especificados são gravados na associação da seguinte maneira:


    <table> <tr> <th>`data` valor</th> <th>Dados gravados</th> </tr> <tr> <td>String</td> <td>O texto especificado é inserido como o valor da primeira célula associada. Você também pode especificar uma fórmula válida para adicionar essa fórmula à célula associada. Por exemplo, definir data como `"=SUM(A1:A5)"` totalizará os valores no intervalo especificado. No entanto, após definir uma fórmula na célula associada, não é possível ler a fórmula adicionada (ou qualquer fórmula preexistente) da célula associada. Se você chamar o método Binding. getDataAsync na célula bound para ler seus dados, o método poderá retornar apenas os dados exibidos na célula (o resultado da fórmula).</td> </tr> <tr> <td>Uma matriz de matrizes ("matrix") e a forma corresponde exatamente à forma da associação especificada</td> <td>O conjunto de linhas e colunas é gravado. Você também pode especificar uma matriz de matrizes que contenham fórmulas válidas para adicioná-las às células associadas. Por exemplo, a definição de dados para `[["=SUM(A1:A5)","=AVERAGE(A1:A5)"]]` adicionará essas duas fórmulas a uma associação que contenha duas células. Assim como na definição de uma fórmula em uma única célula associada, você não pode ler as fórmulas adicionadas (ou qualquer fórmula pré-existente) da associação com o `Binding.getDataAsync` método-ela retorna apenas os dados exibidos nas células associadas.</td> </tr> <tr> <td>Um `TableData` objeto e a forma da tabela corresponde à tabela associada.</td> <td>O conjunto de linhas e/ou cabeçalhos especificado é gravado, se não, outros dados nas células ao redor serão substituídos. **Observação**: se você especificar fórmulas no objeto TableData passado para o parâmetro *Data* , poderá não obter os resultados esperados devido ao recurso "colunas calculadas" do Excel, que duplica automaticamente as fórmulas dentro de uma coluna. Para resolver esse problema quando desejar gravar *data* que contém fórmulas em uma tabela associada, tente especificar os dados como uma matriz de matrizes (em vez de um objeto TableData) e especifique o *coercionType* como Microsoft.Office.Matrix ou "matrix".</td> </tr> </table>


    Para o Excel na Web:


    - O número total de células no valor passado para o parâmetro data não pode exceder 20.000 em uma única chamada para esse método.


    - O número de grupos de formatação passados para o parâmetro cellFormat não pode exceder 100. Um único grupo formatação consiste em um conjunto de formatação aplicado a um intervalo de células especificado.


    Em todos os outros casos, um erro será retornado.


    O método setDataAsync gravará dados em um subconjunto de uma associação de tabela ou matriz se os parâmetros opcionais startRow e startColumn estiverem especificados e especificarem um intervalo válido.


    Na função de retorno de chamada passada para o método setDataAsync, você pode usar as propriedades do objeto AsyncResult para retornar as informações a seguir.


    <table> <tr> <th>Propriedade</th> <th>Use para...</th> </tr> <tr> <td>AsyncResult.value</td> <td>Sempre retorna undefined porque não há objetos ou dados a serem recuperados.</td> </tr> <tr> <td>AsyncResult. status</td> <td>Determinar o sucesso ou falha da operação.</td> </tr> <tr> <td>AsyncResult.error</td> <td>Acessar um objeto Error que fornecerá informações de erro se a operação tiver falhado.</td> </tr> <tr> <td>AsyncResult.asyncContext</td> <td>Um item definido pelo usuário de qualquer tipo que é retornado no objeto AsyncResult sem ser alterado.</td> </tr> </table>
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setDataAsync(data: TableData | any, options?: SetBindingDataOptions, callback?: (result: AsyncResult<void>) => void): void;'
    parameters:
    - id: data
      description: >-
        Os dados a serem definidos na seleção atual. Possíveis tipos de dados por host:


        Cadeia de caracteres: Excel na Web e no Windows e no Word somente na Web e no Windows


        matriz de matrizes: somente Excel e Word


        [Office. TableData](xref:office!Office.TableData:class)<!-- -->: Somente Excel e Word


        HTML: Word somente na Web e no Windows


        Office Open XML: somente Word
      type: <xref uid="office!Office.TableData:class" /> | any
    - id: options
      description: Fornece opções sobre como definir os dados em uma associação.
      type: <xref uid="office!Office.SetBindingDataOptions:interface" />
    - id: callback
      description: Opcional. Uma função que é invocada quando o retorno de chamada retorna, cujo único parâmetro é do tipo [Office. AsyncResult](xref:office!Office.AsyncResult:interface)<!-- -->.
      type: '(result: <xref uid="office!Office.AsyncResult:interface" />&lt;void&gt;) =&gt; void'
    return:
      type: void
      description: ''
- name: setDataAsync(data, callback)
  uid: office!Office.Binding#setDataAsync:member(2)
  package: office!
  fullName: setDataAsync(data, callback)
  summary: Grava dados na seção associada do documento representado pelo objeto de associação especificado.
  remarks: "**Conjuntos de requisitos**:\n\n- [HtmlCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#htmlcoercion) (ao usar `Office.CoercionType.Html`<!-- -->)\n\n- [MatrixBindings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#matrixbindings)\n\n- [MatrixCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#matrixcoercion) (ao usar `Office.CoercionType.Matrix`<!-- -->)\n\n- [OoxmlCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#ooxmlcoercion) (ao usar `Office.CoercionType.Ooxml`<!-- -->)\n\n- [TableBindings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#tablebindings)\n\n- [TableCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#tablecoercion) (ao usar `Office.CoercionType.Table`<!-- -->)\n\n- [TextBindings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textbindings)\n\n- [Textcoerção](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textcoercion) (ao usar `Office.CoercionType.Text`<!-- -->)\n\nO valor passado para data contém os dados a serem gravados na associação. O tipo do valor passado determina o que será gravado conforme descrito na tabela a seguir.\n\n<table> <tr> <th>`data` valor</th> <th>Dados gravados</th> </tr> <tr> <td>String</td> <td>O texto sem formatação ou qualquer coisa que possa ser forçada para uma cadeia de caracteres serão gravados.</td> </tr> <tr> <td>Uma matriz de matrizes (\"matrix\")</td> <td>Tabular data without headers will be written. For example, to write data to three rows in two columns, you can pass an array like this: `[[\"R1C1\", \"R1C2\"], [\"R2C1\", \"R2C2\"], [\"R3C1\", \"R3C2\"]]`<!-- -->. Para gravar uma única coluna de três linhas, passe uma matriz como esta: `[[\"R1C1\"], [\"R2C1\"], [\"R3C1\"]]`<!-- -->.</td> </tr> <tr> <td>Um `TableData` objeto</td> <td>Será gravada uma tabela com cabeçalhos.</td> </tr> </table>\n\nAlém disso, essas ações específicas do aplicativo se aplicam ao gravar dados em uma associação. Para o Word, os dados especificados são gravados na associação da seguinte maneira:\n\n<table> <tr> <th>`data` valor</th> <th>Dados gravados</th> </tr> <tr> <td>String</td> <td>O texto especificado é gravado.</td> </tr> <tr> <td>Uma matriz de matrizes (\"Matrix\") ou um `TableData` objeto</td> <td>Uma tabela do Word é gravada.</td> </tr> <tr> <td>HTML</td> <td>O HTML especificado é gravado. Se qualquer um dos HTML que você escrever for inválido, o Word não irá gerar um erro. Word will write as much of the HTML as it can and will omit any invalid data.</td> </tr> <tr> <td>Office Open XML (\"Open XML\")</td> <td>O XML especificado é gravado.</td> </tr> </table>\n\nPara o Excel, os dados especificados são gravados na associação da seguinte maneira:\n\n<table> <tr> <th>`data` valor</th> <th>Dados gravados</th> </tr> <tr> <td>String</td> <td>O texto especificado é inserido como o valor da primeira célula associada. Você também pode especificar uma fórmula válida para adicionar essa fórmula à célula associada. Por exemplo, definir data como `\"=SUM(A1:A5)\"` totalizará os valores no intervalo especificado. No entanto, após definir uma fórmula na célula associada, não é possível ler a fórmula adicionada (ou qualquer fórmula preexistente) da célula associada. Se você chamar o método Binding. getDataAsync na célula bound para ler seus dados, o método poderá retornar apenas os dados exibidos na célula (o resultado da fórmula).</td> </tr> <tr> <td>Uma matriz de matrizes (\"matrix\") e a forma corresponde exatamente à forma da associação especificada</td> <td>O conjunto de linhas e colunas é gravado. Você também pode especificar uma matriz de matrizes que contenham fórmulas válidas para adicioná-las às células associadas. Por exemplo, a definição de dados para `[[\"=SUM(A1:A5)\",\"=AVERAGE(A1:A5)\"]]` adicionará essas duas fórmulas a uma associação que contenha duas células. Assim como na definição de uma fórmula em uma única célula associada, você não pode ler as fórmulas adicionadas (ou qualquer fórmula pré-existente) da associação com o `Binding.getDataAsync` método-ela retorna apenas os dados exibidos nas células associadas.</td> </tr> <tr> <td>Um `TableData` objeto e a forma da tabela corresponde à tabela associada.</td> <td>O conjunto de linhas e/ou cabeçalhos especificado é gravado, se não, outros dados nas células ao redor serão substituídos. **Observação**: se você especificar fórmulas no objeto TableData passado para o parâmetro *Data* , poderá não obter os resultados esperados devido ao recurso \"colunas calculadas\" do Excel, que duplica automaticamente as fórmulas dentro de uma coluna. Para resolver esse problema quando desejar gravar *data* que contém fórmulas em uma tabela associada, tente especificar os dados como uma matriz de matrizes (em vez de um objeto TableData) e especifique o *coercionType* como Microsoft.Office.Matrix ou \"matrix\".</td> </tr> </table>\n\nPara o Excel na Web:\n\n- O número total de células no valor passado para o parâmetro data não pode exceder 20.000 em uma única chamada para esse método.\n\n- O número de grupos de formatação passados para o parâmetro cellFormat não pode exceder 100. Um único grupo formatação consiste em um conjunto de formatação aplicado a um intervalo de células especificado.\n\nEm todos os outros casos, um erro será retornado.\n\nO método setDataAsync gravará dados em um subconjunto de uma associação de tabela ou matriz se os parâmetros opcionais startRow e startColumn estiverem especificados e especificarem um intervalo válido.\n\nNa função de retorno de chamada passada para o método setDataAsync, você pode usar as propriedades do objeto AsyncResult para retornar as informações a seguir.\n\n<table> <tr> <th>Propriedade</th> <th>Use para...</th> </tr> <tr> <td>AsyncResult.value</td> <td>Sempre retorna undefined porque não há objetos ou dados a serem recuperados.</td> </tr> <tr> <td>AsyncResult. status</td> <td>Determinar o sucesso ou falha da operação.</td> </tr> <tr> <td>AsyncResult.error</td> <td>Acessar um objeto Error que fornecerá informações de erro se a operação tiver falhado.</td> </tr> <tr> <td>AsyncResult.asyncContext</td> <td>Um item definido pelo usuário de qualquer tipo que é retornado no objeto AsyncResult sem ser alterado.</td> </tr> </table>\n\n#### <a name=\"examples\"></a>Exemplos\n\n```javascript\nfunction setBindingData() {\n    Office.select(\"bindings#MyBinding\").setDataAsync('Hello World!', function (asyncResult) { });\n}\n\n// Specifying the optional coercionType parameter lets you specify the kind of data you want to write to a binding.\n// For example, in Word if you want to write HTML to a text binding, you can specify the coercionType parameter \n// as \"html\" as shown in the following example, which uses HTML <b> tags to make \"Hello\" bold.\nfunction writeHtmlData() {\n    Office.select(\"bindings#myBinding\").setDataAsync(\n        \"<b>Hello</b> World!\", {coercionType: \"html\"}, function (asyncResult) {\n        if (asyncResult.status == \"failed\") {\n            write('Error: ' + asyncResult.error.message);\n        }\n    });\n}\n\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n\n// In this example, the call to setDataAsync passes the data parameter as an array of arrays\n// (to create a single column of three rows), and specifies the data structure with the \n// coercionType parameter as a \"matrix\".\nfunction writeBoundDataMatrix() {\n    Office.select(\"bindings#myBinding\").setDataAsync(\n        [['Berlin'],['Munich'],['Duisburg']],{ coercionType: \"matrix\" }, function (asyncResult) {\n        if (asyncResult.status == \"failed\") {\n            write('Error: ' + asyncResult.error.message);\n        } else {\n            write('Bound data: ' + asyncResult.value);\n        }\n    });\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n\n// In the writeBoundDataTable function in this example, the call to setDataAsync passes the data parameter \n// as a TableData object (to write three columns and three rows), and specifies the data structure\n// with the coercionType parameter as a \"table\".\n\n// In the updateTableData function, the call to setDataAsync again passes the data parameter as a TableData object,\n// but as a single column with a new header and three rows, to update the values in the last column \n// of the table created with the writeBoundDataTable function. The optional zero-based startColumn parameter \n// is specified as 2 to replace the values in the third column of the table.\nfunction writeBoundDataTable() {\n    // Create a TableData object.\n    var myTable = new Office.TableData();\n    myTable.headers = ['First Name', 'Last Name', 'Grade'];\n    myTable.rows = [['Kim', 'Abercrombie', 'A'], ['Junmin','Hao', 'C'],['Toni','Poe','B']];\n\n    // Set myTable in the binding.\n    Office.select(\"bindings#myBinding\").setDataAsync(myTable, { coercionType: \"table\" }, \n        function (asyncResult) {\n            if (asyncResult.status == Office.AsyncResultStatus.Failed) {\n                write('Error: '+ asyncResult.error.message);\n        } else {\n            write('Bound data: ' + asyncResult.value);\n        }\n    });\n}\n\n// Replace last column with different data.\nfunction updateTableData() {\n    var newTable = new Office.TableData();\n    newTable.headers = [\"Gender\"];\n    newTable.rows = [[\"M\"],[\"M\"],[\"F\"]];\n    Office.select(\"bindings#myBinding\").setDataAsync(newTable, { coercionType: \"table\", startColumn:2 }, \n        function (asyncResult) {\n            if (asyncResult.status == Office.AsyncResultStatus.Failed) {\n                write('Error: '+ asyncResult.error.message);\n        } else {\n            write('Bound data: ' + asyncResult.value);\n        }     \n    });   \n}\n\n// In this example, the following call passes two formatting groups to cellFormat.\nOffice.select(\"bindings#myBinding\").setDataAsync([['Berlin'],['Munich'],['Duisburg']],\n  {cellFormat:[{cells: {row: 1}, format: {fontColor: \"yellow\"}}, \n      {cells: {row: 3, column: 4}, format: {borderColor: \"white\", fontStyle: \"bold\"}}]}, \n  function (asyncResult){});\n```"
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setDataAsync(data: TableData | any, callback?: (result: AsyncResult<void>) => void): void;'
    parameters:
    - id: data
      description: >-
        Os dados a serem definidos na seleção atual. Possíveis tipos de dados por host:


        Cadeia de caracteres: Excel na Web e no Windows e no Word somente na Web e no Windows


        matriz de matrizes: somente Excel e Word


        `TableData`<!-- -->: Somente Excel e Word


        HTML: Word somente na Web e no Windows


        Office Open XML: somente Word
      type: <xref uid="office!Office.TableData:class" /> | any
    - id: callback
      description: Opcional. Uma função que é invocada quando o retorno de chamada retorna, cujo único parâmetro é do tipo [Office. AsyncResult](xref:office!Office.AsyncResult:interface)<!-- -->.
      type: '(result: <xref uid="office!Office.AsyncResult:interface" />&lt;void&gt;) =&gt; void'
    return:
      type: void
      description: ''
metadata:
  ms.openlocfilehash: 911e6146ab18fe4fbc4129b3e53d72949dbccd6f
  ms.sourcegitcommit: 3bab97ab3b91da7cca497f6fc895408a76bd8b46
  ms.translationtype: MT
  ms.contentlocale: pt-BR
  ms.lasthandoff: 11/18/2020
  ms.locfileid: "49151363"
