### YamlMime:TSType
name: Office.Context
uid: office!Office.Context:interface
package: office!
fullName: Office.Context
summary: Representa o ambiente de tempo de execução do suplemento e fornece acesso a objetos de chave da API. O contexto atual existe como uma propriedade do Office. Ele é acessado usando `Office.context`<!-- -->.
remarks: '**Hosts**: Excel, Outlook, PowerPoint, Project, Word'
isPreview: false
isDeprecated: false
type: interface
properties:
- name: auth
  uid: office!Office.Context#auth:member
  package: office!
  fullName: auth
  summary: Fornece informações e acesso ao usuário conectado.
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'auth: Auth;'
    return:
      type: <xref uid="office!Office.Auth:interface" />
- name: commerceAllowed
  uid: office!Office.Context#commerceAllowed:member
  package: office!
  fullName: commerceAllowed
  summary: True, se a plataforma atual permitir que o add-in exibir uma interface do usuário para venda ou atualização; caso contrário, retorna False.
  remarks: >-
    **Hosts**: Excel, Word


    `commerceAllowed` só tem suporte no Office no iPad.


    A App Store do iOS não dá suporte a aplicativos com suplementos que fornecem links para sistemas de pagamento adicionais. No entanto, os Complementos do Office em execução no Office na área de trabalho do Windows ou no navegador permitem esses links. Se você quiser que a interface do usuário do seu add-in forneça um link para um sistema de pagamento externo em plataformas que não o iOS, você pode usar a propriedade commerceAllowed para controlar quando esse link for exibido.
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'commerceAllowed: boolean;'
    return:
      type: boolean
- name: contentLanguage
  uid: office!Office.Context#contentLanguage:member
  package: office!
  fullName: contentLanguage
  summary: Obtém a localidade (idioma) especificada pelo usuário para editar o documento ou item.
  remarks: "O `contentLanguage` valor reflete a **configuração Linguagem de Edição** especificada com Idioma de Opções de **&gt; &gt; Arquivo** no aplicativo host do Office.\n\n**Detalhes do suporte**\n\nUm Y maiúsculo na matriz a seguir indica que essa propriedade tem suporte no aplicativo host do Office correspondente. Uma célula vazia indica que o aplicativo host do Office não dá suporte a essa enumeração.\n\nPara obter mais informações sobre os requisitos de servidor e aplicativo host do Office, consulte [Requirements for running Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.\n\n*Hosts com suporte, por plataforma* <table> <tr><th> </th><th> Office no Windows </th><th> Office no navegador da Web </th><th> Office no iPad </th><th> Outlook em dispositivos móveis </th><th> Office no Mac </th></tr> <tr><td><strong> Excel </strong></td><td> S </td><td> S </td><td> S </td><td> </td><td> </td></tr> <tr><td><strong> Outlook </strong></td><td> S </td><td> S </td><td> </td><td> S </td><td> S </td></tr> <tr><td><strong> PowerPoint </strong></td><td> S </td><td> S </td><td> S </td><td> </td><td> </td></tr> <tr><td><strong> Project </strong></td><td> S </td><td> </td><td> </td><td> </td><td> </td></tr> <tr><td><strong> Word </strong></td><td> S </td><td> S </td><td> S </td><td> </td><td> </td></tr> </table>\n\n#### <a name=\"examples\"></a>Exemplos\n\n```javascript\nfunction sayHelloWithContentLanguage() {\n    var myContentLanguage = Office.context.contentLanguage;\n    switch (myContentLanguage) {\n        case 'en-US':\n            write('Hello!');\n            break;\n        case 'en-NZ':\n            write('G\\'day mate!');\n            break;\n    }\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'contentLanguage: string;'
    return:
      type: string
- name: diagnostics
  uid: office!Office.Context#diagnostics:member
  package: office!
  fullName: diagnostics
  summary: Obtém informações sobre o ambiente no qual o complemento está sendo executado.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'diagnostics: ContextInformation;'
    return:
      type: <xref uid="office!Office.ContextInformation:interface" />
      description: "\n\n#### <a name=\"examples\"></a>Exemplos\n\n```javascript\nvar contextInfo = Office.context.diagnostics;\nconsole.log(\"Office application: \" + contextInfo.host);\nconsole.log(\"Office version: \" + contextInfo.version);\nconsole.log(\"Platform: \" + contextInfo.platform);\n```"
- name: displayLanguage
  uid: office!Office.Context#displayLanguage:member
  package: office!
  fullName: displayLanguage
  summary: Obtém a localidade (idioma) especificada pelo usuário para a interface do usuário do aplicativo host do Office.
  remarks: "O valor retornado é uma cadeia de caracteres no formato de marca de idioma RFC 1766, como en-US.\n\nO `displayLanguage` valor reflete a configuração atual de Idioma de **Exibição** especificada com Idioma de Opções de **&gt; &gt; Arquivo** no aplicativo host do Office.\n\nAo usar no Outlook, os modos aplicáveis são Redação ou Leitura.\n\n**Detalhes do suporte**\n\nUm Y maiúsculo na matriz a seguir indica que essa propriedade tem suporte no aplicativo host do Office correspondente. Uma célula vazia indica que o aplicativo host do Office não dá suporte a essa enumeração.\n\nPara obter mais informações sobre os requisitos de servidor e aplicativo host do Office, consulte [Requirements for running Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.\n\n*Hosts com suporte, por plataforma* <table> <tr><th> </th><th> Office no Windows </th><th> Office no navegador da Web </th><th> Office no iPad </th><th> Outlook em dispositivos móveis </th><th> Office no Mac </th></tr> <tr><td><strong> Excel </strong></td><td> S </td><td> S </td><td> S </td><td> </td><td> S </td></tr> <tr><td><strong> Outlook </strong></td><td> S </td><td> S </td><td> </td><td> S </td><td> S </td></tr> <tr><td><strong> PowerPoint </strong></td><td> S </td><td> S </td><td> S </td><td> </td><td> S </td></tr> <tr><td><strong> Project </strong></td><td> S </td><td> </td><td> </td><td> </td><td> S </td></tr> <tr><td><strong> Word </strong></td><td> S </td><td> </td><td> S </td><td> </td><td> S </td></tr> </table>\n\n#### <a name=\"examples\"></a>Exemplos\n\n```javascript\nfunction sayHelloWithDisplayLanguage() {\n    var myDisplayLanguage = Office.context.displayLanguage;\n    switch (myDisplayLanguage) {\n        case 'en-US':\n            write('Hello!');\n            break;\n        case 'en-NZ':\n            write('G\\'day mate!');\n            break;\n    }\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'displayLanguage: string;'
    return:
      type: string
- name: document
  uid: office!Office.Context#document:member
  package: office!
  fullName: document
  summary: Obtém um objeto que representa o documento com o qual o suplemento de conteúdo ou painel de tarefas está interagindo.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'document: Office.Document;'
    return:
      type: <xref uid="office!Office.Document:interface" />
      description: "\n\n#### <a name=\"examples\"></a>Exemplos\n\n```javascript\n// Extension initialization code.\nvar _document;\n\n// The initialize function is required for all add-ins.\nOffice.initialize = function () {\n    // Checks for the DOM to load using the jQuery ready function.\n    $(document).ready(function () {\n    // After the DOM is loaded, code specific to the add-in can run.\n    // Initialize instance variables to access API objects.\n    _document = Office.context.document;\n    });\n}\n```"
- name: host
  uid: office!Office.Context#host:member
  package: office!
  fullName: host
  summary: >-
    Contém o host de aplicativos do Office no qual o complemento está sendo executado.


    **Importante**: no Outlook, essa propriedade está disponível no conjunto de requisitos 1.5. Para todos os conjuntos de requisitos de Caixa de Correio, você pode usar a `Office.context.diagnostics` propriedade para obter o host.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'host: HostType;'
    return:
      type: <xref uid="office!Office.HostType:enum" />
- name: license
  uid: office!Office.Context#license:member
  package: office!
  fullName: license
  summary: Obtém as informações de licença para a instalação do Office do usuário.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'license: string;'
    return:
      type: string
- name: mailbox
  uid: office!Office.Context#mailbox:member
  package: office!
  fullName: mailbox
  summary: Fornece acesso ao modelo de objeto de complemento do Microsoft Outlook.
  remarks: >-
    **[Nível mínimo de permissão](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**:`Restricted`


    **[Modo do Outlook aplicável](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- -->**: Redação ou Leitura


    **Propriedades principais:**


    - `diagnostics`<!-- -->: Fornece informações de diagnóstico para um complemento do Outlook.


    - `item`<!-- -->: Fornece métodos e propriedades para acessar uma mensagem ou compromisso em um complemento do Outlook.


    - `userProfile`<!-- -->: Fornece informações sobre o usuário em um complemento do Outlook.


    #### <a name="examples"></a>Exemplos


    ```javascript

    // The following line of code access the item object of the JavaScript API for Office.

    var item = Office.context.mailbox.item;

    ```
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'mailbox: Office.Mailbox;'
    return:
      type: <xref uid="outlook!Office.Mailbox:interface" />
- name: officeTheme
  uid: office!Office.Context#officeTheme:member
  package: office!
  fullName: officeTheme
  summary: Fornece acesso às propriedades de cores de temas do Office.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'officeTheme: OfficeTheme;'
    return:
      type: <xref uid="office!Office.OfficeTheme:interface" />
      description: "\n\n#### <a name=\"examples\"></a>Exemplos\n\n```javascript\nfunction applyOfficeTheme(){\n    // Get office theme colors.\n    var bodyBackgroundColor = Office.context.officeTheme.bodyBackgroundColor;\n    var bodyForegroundColor = Office.context.officeTheme.bodyForegroundColor;\n    var controlBackgroundColor = Office.context.officeTheme.controlBackgroundColor;\n    var controlForegroundColor = Office.context.officeTheme.controlForegroundColor;\n\n    // Apply body background color to a CSS class.\n    $('.body').css('background-color', bodyBackgroundColor);\n}\n```"
- name: platform
  uid: office!Office.Context#platform:member
  package: office!
  fullName: platform
  summary: >-
    Fornece a plataforma na qual o complemento está sendo executado.


    **Importante**: no Outlook, essa propriedade está disponível no conjunto de requisitos 1.5. Para todos os conjuntos de requisitos de Caixa de Correio, você pode usar a `Office.context.diagnostics` propriedade para obter a plataforma.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'platform: PlatformType;'
    return:
      type: <xref uid="office!Office.PlatformType:enum" />
- name: requirements
  uid: office!Office.Context#requirements:member
  package: office!
  fullName: requirements
  summary: Fornece um método para determinar quais conjuntos de requisitos são suportados no host e na plataforma atual.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'requirements: RequirementSetSupport;'
    return:
      type: <xref uid="office!Office.RequirementSetSupport:interface" />
- name: roamingSettings
  uid: office!Office.Context#roamingSettings:member
  package: office!
  fullName: roamingSettings
  summary: >-
    Obtém um objeto que representa as configurações personalizadas ou o estado de um suplemento de email do Outlook salvos na caixa de correio do usuário.


    O objeto permite que você armazene e acesse dados para um complemento de email armazenado na caixa de correio de um usuário, portanto, ele está disponível para esse complemento quando ele está sendo executado de qualquer aplicativo cliente host usado para acessar essa caixa de `RoamingSettings` correio.
  remarks: >-
    **[Nível mínimo de permissão](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**:`Restricted`


    **[Modo do Outlook aplicável](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- -->**: Redação ou Leitura


    #### <a name="examples"></a>Exemplos


    ```javascript

    // Get the current value of the 'myKey' setting.

    var value = Office.context.roamingSettings.get('myKey');

    // Update the value of the 'myKey' setting.

    Office.context.roamingSettings.set('myKey', 'Hello World!');

    // Persist the change.

    Office.context.roamingSettings.saveAsync();

    ```
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'roamingSettings: Office.RoamingSettings;'
    return:
      type: <xref uid="outlook!Office.RoamingSettings:interface" />
- name: touchEnabled
  uid: office!Office.Context#touchEnabled:member
  package: office!
  fullName: touchEnabled
  summary: Especifica se a plataforma e o dispositivo permitem a interação por toque. True se o complemento estiver em execução em um dispositivo touch, como um iPad; false caso contrário.
  remarks: >-
    **Hosts**: Excel, PowerPoint, Word


    `touchEnabled` só tem suporte no Office no iPad.


    Use a propriedade touchEnabled para determinar quando o seu complemento está sendo executado em um dispositivo touch e, se necessário, ajuste o tipo de controles e o tamanho e o espaçamento de elementos na interface do usuário do seu complemento para acomodar interações por toque.
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'touchEnabled: boolean;'
    return:
      type: boolean
- name: ui
  uid: office!Office.Context#ui:member
  package: office!
  fullName: ui
  summary: Fornece objetos e métodos que você pode usar para criar e manipular componentes da interface do usuário, como caixas de diálogo.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'ui: UI;'
    return:
      type: <xref uid="office!Office.UI:interface" />
metadata:
  ms.openlocfilehash: bb251107e949c510db7289525af892db1b2b47af
  ms.sourcegitcommit: a8a86cfcaff5ad7dacc653d63502c76b1fedbebe
  ms.translationtype: MT
  ms.contentlocale: pt-BR
  ms.lasthandoff: 03/26/2021
  ms.locfileid: "51320471"
