### YamlMime:UniversalReference
items:
  - uid: office.Office.TableData
    summary: '<span data-ttu-id="4acba-101">Representa os dados em uma tabela ou em um [Office. TableBinding](xref:office.Office.TableBinding)</span><span class="sxs-lookup"><span data-stu-id="4acba-101">Represents the data in a table or an [Office.TableBinding](xref:office.Office.TableBinding)</span></span><!-- --><span data-ttu-id="4acba-102">.</span><span class="sxs-lookup"><span data-stu-id="4acba-102"></span></span>'
    name: Office.TableData
    fullName: Office.TableData
    langs:
      - typeScript
    type: class
    package: office
    children:
      - office.Office.TableData.(constructor)
      - office.Office.TableData.(constructor)_1
      - office.Office.TableData.headers
      - office.Office.TableData.rows
  - uid: office.Office.TableData.(constructor)
    summary: <span data-ttu-id="4acba-103">Cria uma nova instância da `TableData` classe</span><span class="sxs-lookup"><span data-stu-id="4acba-103">Constructs a new instance of the `TableData` class</span></span>
    name: '(constructor)(rows, headers)'
    fullName: '(constructor)(rows, headers)'
    langs:
      - typeScript
    type: constructor
    syntax:
      content: 'constructor(rows: any[][], headers: any[]);'
      parameters:
        - id: rows
          description: ''
          type:
            - 'any[][]'
        - id: headers
          description: ''
          type:
            - 'any[]'
  - uid: office.Office.TableData.(constructor)_1
    summary: <span data-ttu-id="4acba-104">Cria uma nova instância da `TableData` classe</span><span class="sxs-lookup"><span data-stu-id="4acba-104">Constructs a new instance of the `TableData` class</span></span>
    name: (constructor)()
    fullName: (constructor)()
    langs:
      - typeScript
    type: constructor
    syntax:
      content: constructor();
  - uid: office.Office.TableData.headers
    summary: <span data-ttu-id="4acba-105">Obtém ou define os cabeçalhos da tabela.</span><span class="sxs-lookup"><span data-stu-id="4acba-105">Gets or sets the headers of the table.</span></span>
    remarks: |-
      <span data-ttu-id="4acba-106">Para especificar cabeçalhos, você deve especificar uma matriz de matrizes que corresponde à estrutura da tabela.</span><span class="sxs-lookup"><span data-stu-id="4acba-106">To specify headers, you must specify an array of arrays that corresponds to the structure of the table.</span></span> <span data-ttu-id="4acba-107">Por exemplo, para especificar cabeçalhos para uma tabela de duas colunas, defina a propriedade Header como \[ \[' header1 ', ' header2 '\]\].</span><span class="sxs-lookup"><span data-stu-id="4acba-107">For example, to specify headers for a two-column table you would set the header property to \[\['header1', 'header2'\]\].</span></span>

      <span data-ttu-id="4acba-108">Se você especificar NULL para a propriedade Headers (ou deixar a propriedade vazia quando construir um objeto TableData), os resultados a seguir ocorrerão quando o código for executado:</span><span class="sxs-lookup"><span data-stu-id="4acba-108">If you specify null for the headers property (or leaving the property empty when you construct a TableData object), the following results occur when your code executes:</span></span>

      - <span data-ttu-id="4acba-109">Se você inserir uma nova tabela, serão criados os cabeçalhos de coluna padrão para a tabela.</span><span class="sxs-lookup"><span data-stu-id="4acba-109">If you insert a new table, the default column headers for the table are created.</span></span>

      - <span data-ttu-id="4acba-110">Se você substituir ou atualizar uma tabela existente, os cabeçalhos existentes não serão alterados.</span><span class="sxs-lookup"><span data-stu-id="4acba-110">If you overwrite or update an existing table, the existing headers are not altered.</span></span>

      #### <a name="examples"></a><span data-ttu-id="4acba-111">Exemplos</span><span class="sxs-lookup"><span data-stu-id="4acba-111">Examples</span></span>

      ```javascript
      // The following example creates a single-column table with a header and three rows.
      function createTableData() {
          var tableData = new Office.TableData();
          tableData.headers = [['header1']];
          tableData.rows = [['row1'], ['row2'], ['row3']];
          return tableData;
      }
      ```
    name: headers
    fullName: headers
    langs:
      - typeScript
    type: property
    syntax:
      content: 'headers: any[];'
      return:
        type:
          - 'any[]'
  - uid: office.Office.TableData.rows
    summary: <span data-ttu-id="4acba-112">Obtém ou define as linhas na tabela.</span><span class="sxs-lookup"><span data-stu-id="4acba-112">Gets or sets the rows in the table.</span></span> <span data-ttu-id="4acba-113">Retorna uma matriz de matrizes que contém os dados na tabela.</span><span class="sxs-lookup"><span data-stu-id="4acba-113">Returns an array of arrays that contains the data in the table.</span></span> <span data-ttu-id="4acba-114">Retorna uma matriz vazia se não houver linhas.</span><span class="sxs-lookup"><span data-stu-id="4acba-114">Returns an empty array if there are no rows.</span></span>
    remarks: |-
      <span data-ttu-id="4acba-115">Para especificar linhas, você deve especificar uma matriz de matrizes que corresponde à estrutura da tabela.</span><span class="sxs-lookup"><span data-stu-id="4acba-115">To specify rows, you must specify an array of arrays that corresponds to the structure of the table.</span></span> <span data-ttu-id="4acba-116">Por exemplo, para especificar duas linhas de valores de cadeia de caracteres em uma tabela de duas colunas, você definiria \[ \[a propriedade Rows como ' a '\], \[' b ', ' C'\]\], ' d'.</span><span class="sxs-lookup"><span data-stu-id="4acba-116">For example, to specify two rows of string values in a two-column table you would set the rows property to \[\['a', 'b'\], \['c', 'd'\]\].</span></span>

      <span data-ttu-id="4acba-117">Se você especificar NULL para a propriedade Rows (ou deixar a propriedade vazia quando construir um objeto TableData), os resultados a seguir ocorrerão quando o código for executado:</span><span class="sxs-lookup"><span data-stu-id="4acba-117">If you specify null for the rows property (or leave the property empty when you construct a TableData object), the following results occur when your code executes:</span></span>

      - <span data-ttu-id="4acba-118">Se você inserir uma nova tabela, uma linha em branco será inserida.</span><span class="sxs-lookup"><span data-stu-id="4acba-118">If you insert a new table, a blank row will be inserted.</span></span>

      - <span data-ttu-id="4acba-119">Se você substituir ou atualizar uma tabela existente, as linhas existentes não serão alteradas.</span><span class="sxs-lookup"><span data-stu-id="4acba-119">If you overwrite or update an existing table, the existing rows are not altered.</span></span>

      #### <a name="examples"></a><span data-ttu-id="4acba-120">Exemplos</span><span class="sxs-lookup"><span data-stu-id="4acba-120">Examples</span></span>

      ```javascript
      // The following example creates a single-column table with a header and three rows.
      function createTableData() {
          var tableData = new Office.TableData();
          tableData.headers = [['header1']];
          tableData.rows = [['row1'], ['row2'], ['row3']];
          return tableData;
      }
      ```
    name: rows
    fullName: rows
    langs:
      - typeScript
    type: property
    syntax:
      content: 'rows: any[][];'
      return:
        type:
          - 'any[][]'