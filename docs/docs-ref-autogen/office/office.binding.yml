### YamlMime:UniversalReference
ms.openlocfilehash: c188f127b540706dc459a9ea8dfdec041be486e5
ms.sourcegitcommit: d356f1545c328d4b59ce814fcab8191e4231f1dc
ms.translationtype: MT
ms.contentlocale: pt-BR
ms.lasthandoff: 02/13/2019
ms.locfileid: "29977395"
items:
- uid: office.Office.Binding
  summary: <span data-ttu-id="98d06-101">Representa um vínculo a uma seção do documento.</span><span class="sxs-lookup"><span data-stu-id="98d06-101">Represents a binding to a section of the document.</span></span>
  remarks: >-
    <table><tr><td><span data-ttu-id="98d06-102">Conjuntos de requisito</span><span class="sxs-lookup"><span data-stu-id="98d06-102">Requirement Sets</span></span></td><td><span data-ttu-id="98d06-103">MatrixBindings, TableBindings, TextBindings</span><span class="sxs-lookup"><span data-stu-id="98d06-103">MatrixBindings, TableBindings, TextBindings</span></span></td></tr></table>


    <span data-ttu-id="98d06-104">O objeto de vinculação expõe a funcionalidade de todos os vínculos, independentemente do tipo.</span><span class="sxs-lookup"><span data-stu-id="98d06-104">The Binding object exposes the functionality possessed by all bindings regardless of type.</span></span>


    <span data-ttu-id="98d06-105">O objeto de vinculação nunca é chamado diretamente.</span><span class="sxs-lookup"><span data-stu-id="98d06-105">The Binding object is never called directly.</span></span> <span data-ttu-id="98d06-106">É a classe pai abstrato dos objetos que representam cada tipo de vínculo: [Office.MatrixBinding](xref:office.Office.MatrixBinding)<!-- -->, [Office.TableBinding](xref:office.Office.TableBinding)<!-- -->, ou [Office.TextBinding](xref:office.Office.TextBinding)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="98d06-106">It is the abstract parent class of the objects that represent each type of binding: [Office.MatrixBinding](xref:office.Office.MatrixBinding)<!-- -->, [Office.TableBinding](xref:office.Office.TableBinding)<!-- -->, or [Office.TextBinding](xref:office.Office.TextBinding)<!-- -->.</span></span> <span data-ttu-id="98d06-107">Todos os três desses objetos herdam o getDataAsync e setDataAsync métodos do objeto de ligação que permitem a você interagem com os dados no vínculo.</span><span class="sxs-lookup"><span data-stu-id="98d06-107">All three of these objects inherit the getDataAsync and setDataAsync methods from the Binding object that enable to you interact with the data in the binding.</span></span> <span data-ttu-id="98d06-108">Eles também herdam as propriedades de identificação e tipo para consultar esses valores de propriedade.</span><span class="sxs-lookup"><span data-stu-id="98d06-108">They also inherit the id and type properties for querying those property values.</span></span> <span data-ttu-id="98d06-109">Além disso, os objetos MatrixBinding e TableBinding exponham métodos adicionais para recursos específicos de tabela e de matriz, como contagem do número de linhas e colunas.</span><span class="sxs-lookup"><span data-stu-id="98d06-109">Additionally, the MatrixBinding and TableBinding objects expose additional methods for matrix- and table-specific features, such as counting the number of rows and columns.</span></span>


    <span data-ttu-id="98d06-110">**Detalhes do suporte**</span><span class="sxs-lookup"><span data-stu-id="98d06-110">**Support details**</span></span>


    <span data-ttu-id="98d06-111">Um capital Y a matriz a seguir indica que esta interface é suportado no aplicativo host do Office correspondente.</span><span class="sxs-lookup"><span data-stu-id="98d06-111">A capital Y in the following matrix indicates that this interface is supported in the corresponding Office host application.</span></span> <span data-ttu-id="98d06-112">Uma célula vazia indica que o aplicativo host do Office não dá suporte a essa interface.</span><span class="sxs-lookup"><span data-stu-id="98d06-112">An empty cell indicates that the Office host application doesn't support this interface.</span></span>


    <span data-ttu-id="98d06-113">Para obter mais informações sobre requisitos de aplicativo e servidor de host do Office, consulte [requisitos para a execução de suplementos do Office](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="98d06-113">For more information about Office host application and server requirements, see [Requirements for running Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span></span>


    <span data-ttu-id="98d06-114">*Hosts com suporte, por plataforma*</span><span class="sxs-lookup"><span data-stu-id="98d06-114">*Supported hosts, by platform*</span></span> <table> <tr><th> </th><th> <span data-ttu-id="98d06-115">Office for Windows desktop</span><span class="sxs-lookup"><span data-stu-id="98d06-115">Office for Windows desktop</span></span> </th><th> <span data-ttu-id="98d06-116">Office Online (no navegador)</span><span class="sxs-lookup"><span data-stu-id="98d06-116">Office Online (in browser)</span></span> </th><th> <span data-ttu-id="98d06-117">Office para iPad</span><span class="sxs-lookup"><span data-stu-id="98d06-117">Office for iPad</span></span> </th><th> <span data-ttu-id="98d06-118">Office para Mac</span><span class="sxs-lookup"><span data-stu-id="98d06-118">Office for Mac</span></span> </th></tr> <tr><td><span data-ttu-id="98d06-119"><strong>Acesso</strong></span><span class="sxs-lookup"><span data-stu-id="98d06-119"><strong> Access </strong></span></span></td><td> </td><td> <span data-ttu-id="98d06-120">S</span><span class="sxs-lookup"><span data-stu-id="98d06-120">Y</span></span> </td><td> </td><td> </td></tr> <tr><td><span data-ttu-id="98d06-121"><strong>Excel</strong></span><span class="sxs-lookup"><span data-stu-id="98d06-121"><strong> Excel </strong></span></span></td><td> <span data-ttu-id="98d06-122">S</span><span class="sxs-lookup"><span data-stu-id="98d06-122">Y</span></span> </td><td> <span data-ttu-id="98d06-123">S</span><span class="sxs-lookup"><span data-stu-id="98d06-123">Y</span></span> </td><td> <span data-ttu-id="98d06-124">S</span><span class="sxs-lookup"><span data-stu-id="98d06-124">Y</span></span> </td><td> <span data-ttu-id="98d06-125">S</span><span class="sxs-lookup"><span data-stu-id="98d06-125">Y</span></span> </td></tr> <tr><td><span data-ttu-id="98d06-126"><strong>Word</strong></span><span class="sxs-lookup"><span data-stu-id="98d06-126"><strong> Word </strong></span></span></td><td> <span data-ttu-id="98d06-127">S</span><span class="sxs-lookup"><span data-stu-id="98d06-127">Y</span></span> </td><td> <span data-ttu-id="98d06-128">S</span><span class="sxs-lookup"><span data-stu-id="98d06-128">Y</span></span> </td><td> <span data-ttu-id="98d06-129">S</span><span class="sxs-lookup"><span data-stu-id="98d06-129">Y</span></span> </td><td> <span data-ttu-id="98d06-130">S</span><span class="sxs-lookup"><span data-stu-id="98d06-130">Y</span></span> </td></tr> </table>
  name: Office.Binding
  fullName: Office.Binding
  langs:
  - typeScript
  type: interface
  package: office
  children:
  - office.Office.Binding.addHandlerAsync
  - office.Office.Binding.addHandlerAsync_1
  - office.Office.Binding.getDataAsync
  - office.Office.Binding.getDataAsync_1
  - office.Office.Binding.removeHandlerAsync
  - office.Office.Binding.removeHandlerAsync_1
  - office.Office.Binding.setDataAsync
  - office.Office.Binding.setDataAsync_1
  - office.Office.Binding.document
  - office.Office.Binding.id
  - office.Office.Binding.type
- uid: office.Office.Binding.addHandlerAsync
  summary: <span data-ttu-id="98d06-131">Adiciona um manipulador de eventos para o objeto para o especificado [Office.EventType](xref:office.Office.EventType)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="98d06-131">Adds an event handler to the object for the specified [Office.EventType](xref:office.Office.EventType)<!-- -->.</span></span> <span data-ttu-id="98d06-132">EventTypes suportados são `Office.EventType.BindingDataChanged` e `Office.EventType.BindingSelectionChanged` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="98d06-132">Supported EventTypes are `Office.EventType.BindingDataChanged` and `Office.EventType.BindingSelectionChanged`<!-- -->.</span></span>
  remarks: <span data-ttu-id="98d06-133">Você pode adicionar vários manipuladores de eventos para o eventType especificado desde que o nome de cada função do manipulador de eventos é exclusivo.</span><span class="sxs-lookup"><span data-stu-id="98d06-133">You can add multiple event handlers for the specified eventType as long as the name of each event handler function is unique.</span></span>
  name: addHandlerAsync(eventType, handler, options, callback)
  fullName: addHandlerAsync(eventType, handler, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addHandlerAsync(eventType: Office.EventType, handler: any, options?: Office.AsyncContextOptions, callback?: (result: Office.AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: eventType
      description: <span data-ttu-id="98d06-134">O tipo de evento.</span><span class="sxs-lookup"><span data-stu-id="98d06-134">The event type.</span></span> <span data-ttu-id="98d06-135">Para ligações, pode ser `Office.EventType.BindingDataChanged` ou `Office.EventType.BindingSelectionChanged` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="98d06-135">For bindings, it can be `Office.EventType.BindingDataChanged` or `Office.EventType.BindingSelectionChanged`<!-- -->.</span></span>
      type:
      - Office.EventType
    - id: handler
      description: <span data-ttu-id="98d06-136">A função de manipulador de eventos para adicionar, cujo único parâmetro é do tipo [Office.BindingDataChangedEventArgs](xref:office.Office.BindingDataChangedEventArgs) ou [Office.BindingSelectionChangedEventArgs](xref:office.Office.BindingSelectionChangedEventArgs)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="98d06-136">The event handler function to add, whose only parameter is of type [Office.BindingDataChangedEventArgs](xref:office.Office.BindingDataChangedEventArgs) or [Office.BindingSelectionChangedEventArgs](xref:office.Office.BindingSelectionChangedEventArgs)<!-- -->.</span></span>
      type:
      - any
    - id: options
      description: <span data-ttu-id="98d06-137">Fornece uma opção para preservar dados de contexto de qualquer tipo, inalterado, para uso em um retorno de chamada.</span><span class="sxs-lookup"><span data-stu-id="98d06-137">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="98d06-138">Opcional.</span><span class="sxs-lookup"><span data-stu-id="98d06-138">Optional.</span></span> <span data-ttu-id="98d06-139">Uma função que é invocado quando o retorno de chamada retorna, cujo único parâmetro é do tipo [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="98d06-139">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span>
      type:
      - '(result: Office.AsyncResult<void>) => void'
- uid: office.Office.Binding.addHandlerAsync_1
  summary: <span data-ttu-id="98d06-140">Adiciona um manipulador de eventos para o objeto para o especificado [Office.EventType](xref:office.Office.EventType)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="98d06-140">Adds an event handler to the object for the specified [Office.EventType](xref:office.Office.EventType)<!-- -->.</span></span> <span data-ttu-id="98d06-141">EventTypes suportados são `Office.EventType.BindingDataChanged` e `Office.EventType.BindingSelectionChanged` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="98d06-141">Supported EventTypes are `Office.EventType.BindingDataChanged` and `Office.EventType.BindingSelectionChanged`<!-- -->.</span></span>
  remarks: "<span data-ttu-id=\"98d06-142\">Você pode adicionar vários manipuladores de eventos para o eventType especificado desde que o nome de cada função do manipulador de eventos é exclusivo.</span><span class=\"sxs-lookup\"><span data-stu-id=\"98d06-142\">You can add multiple event handlers for the specified eventType as long as the name of each event handler function is unique.</span></span>\n#### <a name=\"examples\"></a><span data-ttu-id=\"98d06-143\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"98d06-143\">Examples</span></span>\n\n```javascript\n// The following code sample calls the select method of the Office object to access the binding\n// with ID \"MyBinding\", and then calls the addHandlerAsync method to add a handler function \n// for the bindingDataChanged event of that binding.\nfunction addEventHandlerToBinding() {\n    Office.select(\"bindings#MyBinding\").addHandlerAsync(\n        Office.EventType.BindingDataChanged, onBindingDataChanged);\n}\n\nfunction onBindingDataChanged(eventArgs) {\n    write(\"Data has changed in binding: \" + eventArgs.binding.id);\n}\n\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```\n```javascript\n// To add an event handler for the BindingSelectionChanged event of a binding, \n// use the addHandlerAsync method of the Binding object.\n// The event handler receives an argument of type BindingSelectionChangedEventArgs.\nfunction addEventHandlerToBinding() {\n    Office.select(\"bindings#MyBinding\").addHandlerAsync(\n        Office.EventType.BindingSelectionChanged, onBindingSelectionChanged);\n}\n\nfunction onBindingSelectionChanged(eventArgs) {\n    write(eventArgs.binding.id + \" has been selected.\");\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  name: addHandlerAsync(eventType, handler, callback)
  fullName: addHandlerAsync(eventType, handler, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addHandlerAsync(eventType: Office.EventType, handler: any, callback?: (result: Office.AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: eventType
      description: <span data-ttu-id="98d06-144">O tipo de evento.</span><span class="sxs-lookup"><span data-stu-id="98d06-144">The event type.</span></span> <span data-ttu-id="98d06-145">Para ligações, pode ser `Office.EventType.BindingDataChanged` ou `Office.EventType.BindingSelectionChanged` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="98d06-145">For bindings, it can be `Office.EventType.BindingDataChanged` or `Office.EventType.BindingSelectionChanged`<!-- -->.</span></span>
      type:
      - Office.EventType
    - id: handler
      description: <span data-ttu-id="98d06-146">A função de manipulador de eventos para adicionar, cujo único parâmetro é do tipo [Office.BindingDataChangedEventArgs](xref:office.Office.BindingDataChangedEventArgs) ou [Office.BindingSelectionChangedEventArgs](xref:office.Office.BindingSelectionChangedEventArgs)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="98d06-146">The event handler function to add, whose only parameter is of type [Office.BindingDataChangedEventArgs](xref:office.Office.BindingDataChangedEventArgs) or [Office.BindingSelectionChangedEventArgs](xref:office.Office.BindingSelectionChangedEventArgs)<!-- -->.</span></span>
      type:
      - any
    - id: callback
      description: <span data-ttu-id="98d06-147">Opcional.</span><span class="sxs-lookup"><span data-stu-id="98d06-147">Optional.</span></span> <span data-ttu-id="98d06-148">Uma função que é invocado quando o retorno de chamada retorna, cujo único parâmetro é do tipo [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="98d06-148">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span>
      type:
      - '(result: Office.AsyncResult<void>) => void'
- uid: office.Office.Binding.getDataAsync
  summary: <span data-ttu-id="98d06-149">Retorna os dados contidos na associação.</span><span class="sxs-lookup"><span data-stu-id="98d06-149">Returns the data contained within the binding.</span></span>
  remarks: >-
    <table><tr><td><span data-ttu-id="98d06-150">Conjuntos de requisito</span><span class="sxs-lookup"><span data-stu-id="98d06-150">Requirement Sets</span></span></td><td><span data-ttu-id="98d06-151">MatrixBindings, TableBindings, TextBindings</span><span class="sxs-lookup"><span data-stu-id="98d06-151">MatrixBindings, TableBindings, TextBindings</span></span></td></tr></table>


    <span data-ttu-id="98d06-152">Quando chamado a partir de um MatrixBinding ou TableBinding, o método getDataAsync retornará um subconjunto dos valores acoplados se os parâmetros opcionais de startRow, startColumn, rowCount e columnCount são especificados (e especificam um intervalo válido e contíguo).</span><span class="sxs-lookup"><span data-stu-id="98d06-152">When called from a MatrixBinding or TableBinding, the getDataAsync method will return a subset of the bound values if the optional startRow, startColumn, rowCount, and columnCount parameters are specified (and they specify a contiguous and valid range).</span></span>
  name: getDataAsync(options, callback)
  fullName: getDataAsync(options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getDataAsync<T>(options?: GetBindingDataOptions, callback?: (result: AsyncResult<T>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: options
      description: <span data-ttu-id="98d06-153">Fornece opções obter os dados em uma ligação.</span><span class="sxs-lookup"><span data-stu-id="98d06-153">Provides options for how to get the data in a binding.</span></span>
      type:
      - office.Office.GetBindingDataOptions
    - id: callback
      description: <span data-ttu-id="98d06-154">Opcional.</span><span class="sxs-lookup"><span data-stu-id="98d06-154">Optional.</span></span> <span data-ttu-id="98d06-155">Uma função que é invocado quando o retorno de chamada retorna, cujo único parâmetro é do tipo [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="98d06-155">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="98d06-156">O `value` propriedadeé do resultado os valores no vínculo especificado.</span><span class="sxs-lookup"><span data-stu-id="98d06-156">The `value` property of the result is the values in the specified binding.</span></span> <span data-ttu-id="98d06-157">Se o `coercionType` parâmetro for especificado (e a chamada é bem-sucedida), os dados são retornados no formato descrito no tópico enumeração CoercionType.</span><span class="sxs-lookup"><span data-stu-id="98d06-157">If the `coercionType` parameter is specified (and the call is successful), the data is returned in the format described in the CoercionType enumeration topic.</span></span>
      type:
      - '(result: AsyncResult<T>) => void'
- uid: office.Office.Binding.getDataAsync_1
  summary: <span data-ttu-id="98d06-158">Retorna os dados contidos na associação.</span><span class="sxs-lookup"><span data-stu-id="98d06-158">Returns the data contained within the binding.</span></span>
  remarks: "<table><tr><td><span data-ttu-id=\"98d06-159\">Conjuntos de requisito</span><span class=\"sxs-lookup\"><span data-stu-id=\"98d06-159\">Requirement Sets</span></span></td><td><span data-ttu-id=\"98d06-160\">MatrixBindings, TableBindings, TextBindings</span><span class=\"sxs-lookup\"><span data-stu-id=\"98d06-160\">MatrixBindings, TableBindings, TextBindings</span></span></td></tr></table>\n\n<span data-ttu-id=\"98d06-161\">Quando chamado a partir de um MatrixBinding ou TableBinding, o método getDataAsync retornará um subconjunto dos valores acoplados se os parâmetros opcionais de startRow, startColumn, rowCount e columnCount são especificados (e especificam um intervalo válido e contíguo).</span><span class=\"sxs-lookup\"><span data-stu-id=\"98d06-161\">When called from a MatrixBinding or TableBinding, the getDataAsync method will return a subset of the bound values if the optional startRow, startColumn, rowCount, and columnCount parameters are specified (and they specify a contiguous and valid range).</span></span>\n#### <a name=\"examples\"></a><span data-ttu-id=\"98d06-162\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"98d06-162\">Examples</span></span>\n\n```javascript\nfunction showBindingData() {\n    Office.select(\"bindings#MyBinding\").getDataAsync(function (asyncResult) {\n        write(asyncResult.value)\n    });\n}\n\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n\n// There is an important difference in behavior between using the \"table\" and \"matrix\" coercionType with the\n// Binding.getDataAsync method, with respect to data formatted with header rows, as shown in the following\n// two examples. These code examples show event handler functions for the Binding.SelectionChanged event.\n\n// If you specify the \"table\" coercionType, the TableData.rows property ( result.value.rows in the following\n// code example) returns an array that contains only the body rows of the table. So, its 0th row will be the\n// first non-header row in the table.\nfunction selectionChanged(evtArgs) { \n    Office.select(\"bindings#TableTranslate\").getDataAsync(\n        { coercionType: 'table', \n          startRow: evtArgs.startRow, \n          startCol: 0, \n          rowCount: 1, \n          columnCount: 1 },  \n        function (result) { \n            if (result.status == 'succeeded') { \n                write(\"Image to find: \" + result.value.rows[0][0]); \n            } \n            else \n                write(result.error.message); \n    }); \n}     \n// Function that writes to a div with id='message' on the page. \nfunction write(message){ \n    document.getElementById('message').innerText += message; \n}\n\n// However, if you specify the \"matrix\" coercionType, result.value in the following code example returns an array\n// that contains the table header in the 0th row. If the table header contains multiple rows, then these are all\n// included in the result.value matrix as separate rows before the table body rows are included.\nfunction selectionChanged(evtArgs) { \n    Office.select(\"bindings#TableTranslate\").getDataAsync(\n        { coercionType: 'matrix', \n          startRow: evtArgs.startRow, \n          startCol: 0, \n          rowCount: 1, \n          columnCount: 1 },  \n        function (result) { \n            if (result.status == 'succeeded') { \n                write(\"Image to find: \" + result.value[1][0]); \n            } \n            else \n                write(result.error.message); \n    }); \n}     \n// Function that writes to a div with id='message' on the page. \nfunction write(message){ \n    document.getElementById('message').innerText += message; \n}\n```"
  name: getDataAsync(callback)
  fullName: getDataAsync(callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getDataAsync<T>(callback?: (result: AsyncResult<T>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: callback
      description: <span data-ttu-id="98d06-163">Opcional.</span><span class="sxs-lookup"><span data-stu-id="98d06-163">Optional.</span></span> <span data-ttu-id="98d06-164">Uma função que é invocado quando o retorno de chamada retorna, cujo único parâmetro é do tipo [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="98d06-164">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="98d06-165">O `value` propriedadeé do resultado os valores no vínculo especificado.</span><span class="sxs-lookup"><span data-stu-id="98d06-165">The `value` property of the result is the values in the specified binding.</span></span> <span data-ttu-id="98d06-166">Se o `coercionType` parâmetro for especificado (e a chamada é bem-sucedida), os dados são retornados no formato descrito no tópico enumeração CoercionType.</span><span class="sxs-lookup"><span data-stu-id="98d06-166">If the `coercionType` parameter is specified (and the call is successful), the data is returned in the format described in the CoercionType enumeration topic.</span></span>
      type:
      - '(result: AsyncResult<T>) => void'
- uid: office.Office.Binding.removeHandlerAsync
  summary: <span data-ttu-id="98d06-167">Remove o manipulador especificado da associação para o tipo de evento especificado.</span><span class="sxs-lookup"><span data-stu-id="98d06-167">Removes the specified handler from the binding for the specified event type.</span></span>
  remarks: <table><tr><td><span data-ttu-id="98d06-168">Conjuntos de requisito</span><span class="sxs-lookup"><span data-stu-id="98d06-168">Requirement Sets</span></span></td><td><span data-ttu-id="98d06-169">BindingEvents</span><span class="sxs-lookup"><span data-stu-id="98d06-169">BindingEvents</span></span></td></tr></table>
  name: removeHandlerAsync(eventType, options, callback)
  fullName: removeHandlerAsync(eventType, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'removeHandlerAsync(eventType: Office.EventType, options?: RemoveHandlerOptions, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: eventType
      description: <span data-ttu-id="98d06-170">O tipo de evento.</span><span class="sxs-lookup"><span data-stu-id="98d06-170">The event type.</span></span> <span data-ttu-id="98d06-171">Para ligações, pode ser `Office.EventType.BindingDataChanged` ou `Office.EventType.BindingSelectionChanged` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="98d06-171">For bindings, it can be `Office.EventType.BindingDataChanged` or `Office.EventType.BindingSelectionChanged`<!-- -->.</span></span>
      type:
      - Office.EventType
    - id: options
      description: <span data-ttu-id="98d06-172">Fornece opções para determinar qual manipulador de eventos ou manipuladores são removidos.</span><span class="sxs-lookup"><span data-stu-id="98d06-172">Provides options to determine which event handler or handlers are removed.</span></span>
      type:
      - office.Office.RemoveHandlerOptions
    - id: callback
      description: <span data-ttu-id="98d06-173">Opcional.</span><span class="sxs-lookup"><span data-stu-id="98d06-173">Optional.</span></span> <span data-ttu-id="98d06-174">Uma função que é invocado quando o retorno de chamada retorna, cujo único parâmetro é do tipo [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="98d06-174">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span>
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.Binding.removeHandlerAsync_1
  summary: <span data-ttu-id="98d06-175">Remove o manipulador especificado da associação para o tipo de evento especificado.</span><span class="sxs-lookup"><span data-stu-id="98d06-175">Removes the specified handler from the binding for the specified event type.</span></span>
  remarks: >-
    <table><tr><td><span data-ttu-id="98d06-176">Conjuntos de requisito</span><span class="sxs-lookup"><span data-stu-id="98d06-176">Requirement Sets</span></span></td><td><span data-ttu-id="98d06-177">BindingEvents</span><span class="sxs-lookup"><span data-stu-id="98d06-177">BindingEvents</span></span></td></tr></table>

    #### <span data-ttu-id="98d06-178">Exemplos</span><span class="sxs-lookup"><span data-stu-id="98d06-178">Examples</span></span>


    ```javascript

    function removeEventHandlerFromBinding() {
        Office.select("bindings#MyBinding").removeHandlerAsync(
            Office.EventType.BindingDataChanged, {handler:onBindingDataChanged});
    }

    ```
  name: removeHandlerAsync(eventType, callback)
  fullName: removeHandlerAsync(eventType, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'removeHandlerAsync(eventType: Office.EventType, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: eventType
      description: <span data-ttu-id="98d06-179">O tipo de evento.</span><span class="sxs-lookup"><span data-stu-id="98d06-179">The event type.</span></span> <span data-ttu-id="98d06-180">Para ligações, pode ser `Office.EventType.BindingDataChanged` ou `Office.EventType.BindingSelectionChanged` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="98d06-180">For bindings, it can be `Office.EventType.BindingDataChanged` or `Office.EventType.BindingSelectionChanged`<!-- -->.</span></span>
      type:
      - Office.EventType
    - id: callback
      description: <span data-ttu-id="98d06-181">Opcional.</span><span class="sxs-lookup"><span data-stu-id="98d06-181">Optional.</span></span> <span data-ttu-id="98d06-182">Uma função que é invocado quando o retorno de chamada retorna, cujo único parâmetro é do tipo [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="98d06-182">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span>
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.Binding.setDataAsync
  summary: <span data-ttu-id="98d06-183">Grava dados na seção associada do documento representado pelo objeto de associação especificado.</span><span class="sxs-lookup"><span data-stu-id="98d06-183">Writes data to the bound section of the document represented by the specified binding object.</span></span>
  remarks: >-
    <table><tr><td><span data-ttu-id="98d06-184">Conjuntos de requisito</span><span class="sxs-lookup"><span data-stu-id="98d06-184">Requirement Sets</span></span></td><td><span data-ttu-id="98d06-185">MatrixBindings, TableBindings, TextBindings</span><span class="sxs-lookup"><span data-stu-id="98d06-185">MatrixBindings, TableBindings, TextBindings</span></span></td></tr></table>


    <span data-ttu-id="98d06-186">O valor passado para dados contém os dados a serem gravados no vínculo.</span><span class="sxs-lookup"><span data-stu-id="98d06-186">The value passed for data contains the data to be written in the binding.</span></span> <span data-ttu-id="98d06-187">O tipo do valor passado determina o que será gravado conforme descrito na tabela a seguir.</span><span class="sxs-lookup"><span data-stu-id="98d06-187">The kind of value passed determines what will be written as described in the following table.</span></span>


    <table> <tr> <th><span data-ttu-id="98d06-188">`data`valor</span><span class="sxs-lookup"><span data-stu-id="98d06-188">`data` value</span></span></th> <th><span data-ttu-id="98d06-189">Dados gravados</span><span class="sxs-lookup"><span data-stu-id="98d06-189">Data written</span></span></th> </tr> <tr> <td><span data-ttu-id="98d06-190">String</span><span class="sxs-lookup"><span data-stu-id="98d06-190">A string</span></span></td> <td><span data-ttu-id="98d06-191">Texto sem formatação ou qualquer coisa que podem ser forçados para uma cadeia de caracteres será gravada.</span><span class="sxs-lookup"><span data-stu-id="98d06-191">Plain text or anything that can be coerced to a string will be written.</span></span></td> </tr> <tr> <td><span data-ttu-id="98d06-192">Uma matriz de matrizes ("matrix")</span><span class="sxs-lookup"><span data-stu-id="98d06-192">An array of arrays ("matrix")</span></span></td> <td><span data-ttu-id="98d06-193">Dados tabulares sem cabeçalhos serão gravados.</span><span class="sxs-lookup"><span data-stu-id="98d06-193">Tabular data without headers will be written.</span></span> <span data-ttu-id="98d06-194">Por exemplo, para gravar dados em três linhas nas duas colunas, você pode passar uma matriz como essa: `[["R1C1", "R1C2"], ["R2C1", "R2C2"], ["R3C1", "R3C2"]]` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="98d06-194">For example, to write data to three rows in two columns, you can pass an array like this: `[["R1C1", "R1C2"], ["R2C1", "R2C2"], ["R3C1", "R3C2"]]`<!-- -->.</span></span> <span data-ttu-id="98d06-195">Para escrever uma única coluna de três linhas, passe uma matriz como essa: `[["R1C1"], ["R2C1"], ["R3C1"]]` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="98d06-195">To write a single column of three rows, pass an array like this: `[["R1C1"], ["R2C1"], ["R3C1"]]`<!-- -->.</span></span></td> </tr> <tr> <td><span data-ttu-id="98d06-196">Um objeto [Office.TableData](xref:office.Office.TableData)</span><span class="sxs-lookup"><span data-stu-id="98d06-196">An [Office.TableData](xref:office.Office.TableData) object</span></span></td> <td><span data-ttu-id="98d06-197">Será gravada uma tabela com cabeçalhos.</span><span class="sxs-lookup"><span data-stu-id="98d06-197">A table with headers will be written.</span></span></td> </tr> </table>


    <span data-ttu-id="98d06-198">Além disso, essas ações específicas do aplicativo se aplicam ao gravar dados em uma associação.</span><span class="sxs-lookup"><span data-stu-id="98d06-198">Additionally, these application-specific actions apply when writing data to a binding.</span></span> <span data-ttu-id="98d06-199">Para o Word, os dados especificados são gravados a vinculação da seguinte maneira:</span><span class="sxs-lookup"><span data-stu-id="98d06-199">For Word, the specified data is written to the binding as follows:</span></span>


    <table> <tr> <th><span data-ttu-id="98d06-200">`data`valor</span><span class="sxs-lookup"><span data-stu-id="98d06-200">`data` value</span></span></th> <th><span data-ttu-id="98d06-201">Dados gravados</span><span class="sxs-lookup"><span data-stu-id="98d06-201">Data written</span></span></th> </tr> <tr> <td><span data-ttu-id="98d06-202">String</span><span class="sxs-lookup"><span data-stu-id="98d06-202">A string</span></span></td> <td><span data-ttu-id="98d06-203">O texto especificado é gravado.</span><span class="sxs-lookup"><span data-stu-id="98d06-203">The specified text is written.</span></span></td> </tr> <tr> <td><span data-ttu-id="98d06-204">Uma matriz de matrizes ("matrix") ou um objeto de [Office.TableData](xref:office.Office.TableData)</span><span class="sxs-lookup"><span data-stu-id="98d06-204">An array of arrays ("matrix") or an [Office.TableData](xref:office.Office.TableData) object</span></span></td> <td><span data-ttu-id="98d06-205">Uma tabela do Word é gravada.</span><span class="sxs-lookup"><span data-stu-id="98d06-205">A Word table is written.</span></span></td> </tr> <tr> <td><span data-ttu-id="98d06-206">HTML</span><span class="sxs-lookup"><span data-stu-id="98d06-206">HTML</span></span></td> <td><span data-ttu-id="98d06-207">O HTML especificado é gravado.</span><span class="sxs-lookup"><span data-stu-id="98d06-207">The specified HTML is written.</span></span> <span data-ttu-id="98d06-208">Se qualquer HTML você escrever é inválido, o Word não irá gerar um erro.</span><span class="sxs-lookup"><span data-stu-id="98d06-208">If any of the HTML you write is invalid, Word will not raise an error.</span></span> <span data-ttu-id="98d06-209">Word escreverá tanto quanto do HTML como ele pode e será omitir quaisquer dados inválidos.</span><span class="sxs-lookup"><span data-stu-id="98d06-209">Word will write as much of the HTML as it can and will omit any invalid data.</span></span></td> </tr> <tr> <td><span data-ttu-id="98d06-210">Office Open XML ("Open XML")</span><span class="sxs-lookup"><span data-stu-id="98d06-210">Office Open XML ("Open XML")</span></span></td> <td><span data-ttu-id="98d06-211">O XML especificado é gravado.</span><span class="sxs-lookup"><span data-stu-id="98d06-211">The specified the XML is written.</span></span></td> </tr> </table>


    <span data-ttu-id="98d06-212">Para o Excel, os dados especificados são gravados a vinculação da seguinte maneira:</span><span class="sxs-lookup"><span data-stu-id="98d06-212">For Excel, the specified data is written to the binding as follows:</span></span>


    <table> <tr> <th><span data-ttu-id="98d06-213">`data`valor</span><span class="sxs-lookup"><span data-stu-id="98d06-213">`data` value</span></span></th> <th><span data-ttu-id="98d06-214">Dados gravados</span><span class="sxs-lookup"><span data-stu-id="98d06-214">Data written</span></span></th> </tr> <tr> <td><span data-ttu-id="98d06-215">String</span><span class="sxs-lookup"><span data-stu-id="98d06-215">A string</span></span></td> <td><span data-ttu-id="98d06-216">O texto especificado será inserido como o valor da primeira célula acoplado. Você também pode especificar uma fórmula válida para adicionar essa fórmula para a célula acoplada.</span><span class="sxs-lookup"><span data-stu-id="98d06-216">The specified text is inserted as the value of the first bound cell.You can also specify a valid formula to add that formula to the bound cell.</span></span> <span data-ttu-id="98d06-217">Por exemplo, definir data como `"=SUM(A1:A5)"` totalizará os valores no intervalo especificado.</span><span class="sxs-lookup"><span data-stu-id="98d06-217">For example, setting data to `"=SUM(A1:A5)"` will total the values in the specified range.</span></span> <span data-ttu-id="98d06-218">No entanto, após definir uma fórmula na célula associada, não é possível ler a fórmula adicionada (ou qualquer fórmula preexistente) da célula associada.</span><span class="sxs-lookup"><span data-stu-id="98d06-218">However, when you set a formula on the bound cell, after doing so, you can't read the added formula (or any pre-existing formula) from the bound cell.</span></span> <span data-ttu-id="98d06-219">Se você chamar o método Binding.getDataAsync na célula acoplada para ler seus dados, o método pode retornar somente os dados exibidos na célula (resultado da fórmula).</span><span class="sxs-lookup"><span data-stu-id="98d06-219">If you call the Binding.getDataAsync method on the bound cell to read its data, the method can return only the data displayed in the cell (the formula's result).</span></span></td> </tr> <tr> <td><span data-ttu-id="98d06-220">Uma matriz de matrizes ("matrix") e a forma corresponde exatamente à forma da associação especificada</span><span class="sxs-lookup"><span data-stu-id="98d06-220">An array of arrays ("matrix"), and the shape exactly matches the shape of the binding specified</span></span></td> <td><span data-ttu-id="98d06-221">O conjunto de linhas e colunas são gravados. Você também pode especificar uma matriz de matrizes que contêm fórmulas válidas para adicioná-los às células acopladas.</span><span class="sxs-lookup"><span data-stu-id="98d06-221">The set of rows and columns are written.You can also specify an array of arrays that contain valid formulas to add them to the bound cells.</span></span> <span data-ttu-id="98d06-222">Por exemplo, os dados foram definidos `[["=SUM(A1:A5)","=AVERAGE(A1:A5)"]]` adicionará essas duas fórmulas para uma ligação que contém duas células.</span><span class="sxs-lookup"><span data-stu-id="98d06-222">For example, setting data to `[["=SUM(A1:A5)","=AVERAGE(A1:A5)"]]` will add those two formulas to a binding that contains two cells.</span></span> <span data-ttu-id="98d06-223">Assim como ao configurar uma fórmula em uma única célula acoplada, você não consegue ler as fórmulas adicionadas (ou qualquer fórmulas pré-existente) a ligação com a `Binding.getDataAsync` método - retorna apenas os dados exibidos nas células acopladas.</span><span class="sxs-lookup"><span data-stu-id="98d06-223">Just as when setting a formula on a single bound cell, you can't read the added formulas (or any pre-existing formulas) from the binding with the `Binding.getDataAsync` method - it returns only the data displayed in the bound cells.</span></span></td> </tr> <tr> <td><span data-ttu-id="98d06-224">A tabela acoplada corresponde a um objeto [Office.TableData](xref:office.Office.TableData) e a forma da tabela.</span><span class="sxs-lookup"><span data-stu-id="98d06-224">An [Office.TableData](xref:office.Office.TableData) object, and the shape of the table matches the bound table.</span></span></td> <td><span data-ttu-id="98d06-225">O conjunto de linhas e/ou cabeçalhos especificado são gravados, se não há outros dados das células ao redor serão substituídos.</span><span class="sxs-lookup"><span data-stu-id="98d06-225">The specified set of rows and/or headers are written, if no other data in surrounding cells will be overwritten.</span></span> <span data-ttu-id="98d06-226">**Observação**: se você especificar fórmulas no objeto de tabela que você passa para o parâmetro de *dados* , você não pode obter os resultados esperados por causa do recurso "colunas calculadas" do Excel, que automaticamente duplica fórmulas dentro de uma coluna.</span><span class="sxs-lookup"><span data-stu-id="98d06-226">**Note**: If you specify formulas in the TableData object you pass for the *data* parameter, you might not get the results you expect due to the "calculated columns" feature of Excel, which automatically duplicates formulas within a column.</span></span> <span data-ttu-id="98d06-227">Para contornar isso quando você deseja gravar *dados* que contém fórmulas a uma tabela acoplada, tente especificando os dados como uma matriz de matrizes (em vez de um objeto de tabela) e especifique o *coercionType* como Microsoft.Office.Matrix ou "matrix".</span><span class="sxs-lookup"><span data-stu-id="98d06-227">To work around this when you want to write *data* that contains formulas to a bound table, try specifying the data as an array of arrays (instead of a TableData object), and specify the *coercionType* as Microsoft.Office.Matrix or "matrix".</span></span></td> </tr> </table>


    <span data-ttu-id="98d06-228">Para Excel Online:</span><span class="sxs-lookup"><span data-stu-id="98d06-228">For Excel Online:</span></span>


    - <span data-ttu-id="98d06-229">O número total de células em que o valor passado para o parâmetro de dados não pode exceder 20.000 em uma única chamada deste método.</span><span class="sxs-lookup"><span data-stu-id="98d06-229">The total number of cells in the value passed to the data parameter can't exceed 20,000 in a single call to this method.</span></span>


    - <span data-ttu-id="98d06-230">O número de grupos de formatação passados para o parâmetro cellFormat não pode exceder 100.</span><span class="sxs-lookup"><span data-stu-id="98d06-230">The number of formatting groups passed to the cellFormat parameter can't exceed 100.</span></span> <span data-ttu-id="98d06-231">Um único grupo de formatação consiste em um conjunto de formatações aplicado a um intervalo de células específico.</span><span class="sxs-lookup"><span data-stu-id="98d06-231">A single formatting group consists of a set of formatting applied to a specified range of cells.</span></span>


    <span data-ttu-id="98d06-232">Em todos os outros casos, um erro será retornado.</span><span class="sxs-lookup"><span data-stu-id="98d06-232">In all other cases, an error is returned.</span></span>


    <span data-ttu-id="98d06-233">O método setDataAsync gravará os dados em um subconjunto de uma tabela ou matriz associando se os parâmetros opcionais de startRow e startColumn forem especificados e especificam um intervalo válido.</span><span class="sxs-lookup"><span data-stu-id="98d06-233">The setDataAsync method will write data in a subset of a table or matrix binding if the optional startRow and startColumn parameters are specified, and they specify a valid range.</span></span>


    <span data-ttu-id="98d06-234">Na função de retorno de chamada passada para o método setDataAsync, você pode usar as propriedades do objeto AsyncResult para retornar as informações a seguir.</span><span class="sxs-lookup"><span data-stu-id="98d06-234">In the callback function passed to the setDataAsync method, you can use the properties of the AsyncResult object to return the following information.</span></span>


    <table> <tr> <th><span data-ttu-id="98d06-235">Use para...</span><span class="sxs-lookup"><span data-stu-id="98d06-235">Property</span></span></th> <th><span data-ttu-id="98d06-236">Use para...</span><span class="sxs-lookup"><span data-stu-id="98d06-236">Use to...</span></span></th> </tr> <tr> <td><span data-ttu-id="98d06-237">AsyncResult.value</span><span class="sxs-lookup"><span data-stu-id="98d06-237">AsyncResult.value</span></span></td> <td><span data-ttu-id="98d06-238">Sempre retorna indefinido porque não há nenhum objeto ou dados a serem recuperados.</span><span class="sxs-lookup"><span data-stu-id="98d06-238">Always returns undefined because there is no object or data to retrieve.</span></span></td> </tr> <tr> <td><span data-ttu-id="98d06-239">AsyncResult.status</span><span class="sxs-lookup"><span data-stu-id="98d06-239">AsyncResult.status</span></span></td> <td><span data-ttu-id="98d06-240">Determinar o sucesso ou falha da operação.</span><span class="sxs-lookup"><span data-stu-id="98d06-240">Determine the success or failure of the operation.</span></span></td> </tr> <tr> <td><span data-ttu-id="98d06-241">AsyncResult.error</span><span class="sxs-lookup"><span data-stu-id="98d06-241">AsyncResult.error</span></span></td> <td><span data-ttu-id="98d06-242">Acessar um objeto Error que fornecerá informações de erro se a operação tiver falhado.</span><span class="sxs-lookup"><span data-stu-id="98d06-242">Access an Error object that provides error information if the operation failed.</span></span></td> </tr> <tr> <td><span data-ttu-id="98d06-243">AsyncResult.asyncContext</span><span class="sxs-lookup"><span data-stu-id="98d06-243">AsyncResult.asyncContext</span></span></td> <td><span data-ttu-id="98d06-244">Um item definido pelo usuário de qualquer tipo que é retornado no objeto AsyncResult sem ser alterado.</span><span class="sxs-lookup"><span data-stu-id="98d06-244">A user-defined item of any type that is returned in the AsyncResult object without being altered.</span></span></td> </tr> </table>
  name: setDataAsync(data, options, callback)
  fullName: setDataAsync(data, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setDataAsync(data: TableData | any, options?: SetBindingDataOptions, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: data
      description: >-
        <span data-ttu-id="98d06-245">Os dados a serem definidos na seleção atual.</span><span class="sxs-lookup"><span data-stu-id="98d06-245">The data to be set in the current selection.</span></span> <span data-ttu-id="98d06-246">Tipos de dados possíveis por host:</span><span class="sxs-lookup"><span data-stu-id="98d06-246">Possible data types by host:</span></span>


        <span data-ttu-id="98d06-247">cadeia de caracteres: Excel, on-line do Excel, Word e Word Online apenas</span><span class="sxs-lookup"><span data-stu-id="98d06-247">string: Excel, Excel Online, Word, and Word Online only</span></span>


        <span data-ttu-id="98d06-248">matriz de matrizes: somente do Word e Excel</span><span class="sxs-lookup"><span data-stu-id="98d06-248">array of arrays: Excel and Word only</span></span>


        <span data-ttu-id="98d06-249">[Office.TableData](xref:office.Office.TableData)<!-- -->: somente o Word, Excel e Access</span><span class="sxs-lookup"><span data-stu-id="98d06-249">[Office.TableData](xref:office.Office.TableData)<!-- -->: Access, Excel, and Word only</span></span>


        <span data-ttu-id="98d06-250">HTML: Word e Word somente Online</span><span class="sxs-lookup"><span data-stu-id="98d06-250">HTML: Word and Word Online only</span></span>


        <span data-ttu-id="98d06-251">Office Open XML: Somente a palavra</span><span class="sxs-lookup"><span data-stu-id="98d06-251">Office Open XML: Word only</span></span>
      type:
      - TableData | any
    - id: options
      description: <span data-ttu-id="98d06-252">Fornece opções para definir os dados em uma ligação.</span><span class="sxs-lookup"><span data-stu-id="98d06-252">Provides options for how to set the data in a binding.</span></span>
      type:
      - office.Office.SetBindingDataOptions
    - id: callback
      description: <span data-ttu-id="98d06-253">Opcional.</span><span class="sxs-lookup"><span data-stu-id="98d06-253">Optional.</span></span> <span data-ttu-id="98d06-254">Uma função que é invocado quando o retorno de chamada retorna, cujo único parâmetro é do tipo [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="98d06-254">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span>
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.Binding.setDataAsync_1
  summary: <span data-ttu-id="98d06-255">Grava dados na seção associada do documento representado pelo objeto de associação especificado.</span><span class="sxs-lookup"><span data-stu-id="98d06-255">Writes data to the bound section of the document represented by the specified binding object.</span></span>
  remarks: "<table><tr><td><span data-ttu-id=\"98d06-256\">Conjuntos de requisito</span><span class=\"sxs-lookup\"><span data-stu-id=\"98d06-256\">Requirement Sets</span></span></td><td><span data-ttu-id=\"98d06-257\">MatrixBindings, TableBindings, TextBindings</span><span class=\"sxs-lookup\"><span data-stu-id=\"98d06-257\">MatrixBindings, TableBindings, TextBindings</span></span></td></tr></table>\n\n<span data-ttu-id=\"98d06-258\">O valor passado para dados contém os dados a serem gravados no vínculo.</span><span class=\"sxs-lookup\"><span data-stu-id=\"98d06-258\">The value passed for data contains the data to be written in the binding.</span></span> <span data-ttu-id=\"98d06-259\">O tipo do valor passado determina o que será gravado conforme descrito na tabela a seguir.</span><span class=\"sxs-lookup\"><span data-stu-id=\"98d06-259\">The kind of value passed determines what will be written as described in the following table.</span></span>\n\n<table> <tr> <th><span data-ttu-id=\"98d06-260\">`data`valor</span><span class=\"sxs-lookup\"><span data-stu-id=\"98d06-260\">`data` value</span></span></th> <th><span data-ttu-id=\"98d06-261\">Dados gravados</span><span class=\"sxs-lookup\"><span data-stu-id=\"98d06-261\">Data written</span></span></th> </tr> <tr> <td><span data-ttu-id=\"98d06-262\">String</span><span class=\"sxs-lookup\"><span data-stu-id=\"98d06-262\">A string</span></span></td> <td><span data-ttu-id=\"98d06-263\">Texto sem formatação ou qualquer coisa que podem ser forçados para uma cadeia de caracteres será gravada.</span><span class=\"sxs-lookup\"><span data-stu-id=\"98d06-263\">Plain text or anything that can be coerced to a string will be written.</span></span></td> </tr> <tr> <td><span data-ttu-id=\"98d06-264\">Uma matriz de matrizes (\"matrix\")</span><span class=\"sxs-lookup\"><span data-stu-id=\"98d06-264\">An array of arrays (\"matrix\")</span></span></td> <td><span data-ttu-id=\"98d06-265\">Dados tabulares sem cabeçalhos serão gravados.</span><span class=\"sxs-lookup\"><span data-stu-id=\"98d06-265\">Tabular data without headers will be written.</span></span> <span data-ttu-id=\"98d06-266\">Por exemplo, para gravar dados em três linhas nas duas colunas, você pode passar uma matriz como essa: `[[\"R1C1\", \"R1C2\"], [\"R2C1\", \"R2C2\"], [\"R3C1\", \"R3C2\"]]` <!-- -->.</span><span class=\"sxs-lookup\"><span data-stu-id=\"98d06-266\">For example, to write data to three rows in two columns, you can pass an array like this: `[[\"R1C1\", \"R1C2\"], [\"R2C1\", \"R2C2\"], [\"R3C1\", \"R3C2\"]]`<!-- -->.</span></span> <span data-ttu-id=\"98d06-267\">Para escrever uma única coluna de três linhas, passe uma matriz como essa: `[[\"R1C1\"], [\"R2C1\"], [\"R3C1\"]]` <!-- -->.</span><span class=\"sxs-lookup\"><span data-stu-id=\"98d06-267\">To write a single column of three rows, pass an array like this: `[[\"R1C1\"], [\"R2C1\"], [\"R3C1\"]]`<!-- -->.</span></span></td> </tr> <tr> <td><span data-ttu-id=\"98d06-268\">Um objeto [Office.TableData](xref:office.Office.TableData)</span><span class=\"sxs-lookup\"><span data-stu-id=\"98d06-268\">An [Office.TableData](xref:office.Office.TableData) object</span></span></td> <td><span data-ttu-id=\"98d06-269\">Será gravada uma tabela com cabeçalhos.</span><span class=\"sxs-lookup\"><span data-stu-id=\"98d06-269\">A table with headers will be written.</span></span></td> </tr> </table>\n\n<span data-ttu-id=\"98d06-270\">Além disso, essas ações específicas do aplicativo se aplicam ao gravar dados em uma associação.</span><span class=\"sxs-lookup\"><span data-stu-id=\"98d06-270\">Additionally, these application-specific actions apply when writing data to a binding.</span></span> <span data-ttu-id=\"98d06-271\">Para o Word, os dados especificados são gravados a vinculação da seguinte maneira:</span><span class=\"sxs-lookup\"><span data-stu-id=\"98d06-271\">For Word, the specified data is written to the binding as follows:</span></span>\n\n<table> <tr> <th><span data-ttu-id=\"98d06-272\">`data`valor</span><span class=\"sxs-lookup\"><span data-stu-id=\"98d06-272\">`data` value</span></span></th> <th><span data-ttu-id=\"98d06-273\">Dados gravados</span><span class=\"sxs-lookup\"><span data-stu-id=\"98d06-273\">Data written</span></span></th> </tr> <tr> <td><span data-ttu-id=\"98d06-274\">String</span><span class=\"sxs-lookup\"><span data-stu-id=\"98d06-274\">A string</span></span></td> <td><span data-ttu-id=\"98d06-275\">O texto especificado é gravado.</span><span class=\"sxs-lookup\"><span data-stu-id=\"98d06-275\">The specified text is written.</span></span></td> </tr> <tr> <td><span data-ttu-id=\"98d06-276\">Uma matriz de matrizes (\"matrix\") ou um objeto de [Office.TableData](xref:office.Office.TableData)</span><span class=\"sxs-lookup\"><span data-stu-id=\"98d06-276\">An array of arrays (\"matrix\") or an [Office.TableData](xref:office.Office.TableData) object</span></span></td> <td><span data-ttu-id=\"98d06-277\">Uma tabela do Word é gravada.</span><span class=\"sxs-lookup\"><span data-stu-id=\"98d06-277\">A Word table is written.</span></span></td> </tr> <tr> <td><span data-ttu-id=\"98d06-278\">HTML</span><span class=\"sxs-lookup\"><span data-stu-id=\"98d06-278\">HTML</span></span></td> <td><span data-ttu-id=\"98d06-279\">O HTML especificado é gravado.</span><span class=\"sxs-lookup\"><span data-stu-id=\"98d06-279\">The specified HTML is written.</span></span> <span data-ttu-id=\"98d06-280\">Se qualquer HTML você escrever é inválido, o Word não irá gerar um erro.</span><span class=\"sxs-lookup\"><span data-stu-id=\"98d06-280\">If any of the HTML you write is invalid, Word will not raise an error.</span></span> <span data-ttu-id=\"98d06-281\">Word escreverá tanto quanto do HTML como ele pode e será omitir quaisquer dados inválidos.</span><span class=\"sxs-lookup\"><span data-stu-id=\"98d06-281\">Word will write as much of the HTML as it can and will omit any invalid data.</span></span></td> </tr> <tr> <td><span data-ttu-id=\"98d06-282\">Office Open XML (\"Open XML\")</span><span class=\"sxs-lookup\"><span data-stu-id=\"98d06-282\">Office Open XML (\"Open XML\")</span></span></td> <td><span data-ttu-id=\"98d06-283\">O XML especificado é gravado.</span><span class=\"sxs-lookup\"><span data-stu-id=\"98d06-283\">The specified the XML is written.</span></span></td> </tr> </table>\n\n<span data-ttu-id=\"98d06-284\">Para o Excel, os dados especificados são gravados a vinculação da seguinte maneira:</span><span class=\"sxs-lookup\"><span data-stu-id=\"98d06-284\">For Excel, the specified data is written to the binding as follows:</span></span>\n\n<table> <tr> <th><span data-ttu-id=\"98d06-285\">`data`valor</span><span class=\"sxs-lookup\"><span data-stu-id=\"98d06-285\">`data` value</span></span></th> <th><span data-ttu-id=\"98d06-286\">Dados gravados</span><span class=\"sxs-lookup\"><span data-stu-id=\"98d06-286\">Data written</span></span></th> </tr> <tr> <td><span data-ttu-id=\"98d06-287\">String</span><span class=\"sxs-lookup\"><span data-stu-id=\"98d06-287\">A string</span></span></td> <td><span data-ttu-id=\"98d06-288\">O texto especificado será inserido como o valor da primeira célula acoplado. Você também pode especificar uma fórmula válida para adicionar essa fórmula para a célula acoplada.</span><span class=\"sxs-lookup\"><span data-stu-id=\"98d06-288\">The specified text is inserted as the value of the first bound cell.You can also specify a valid formula to add that formula to the bound cell.</span></span> <span data-ttu-id=\"98d06-289\">Por exemplo, definir data como `\"=SUM(A1:A5)\"` totalizará os valores no intervalo especificado.</span><span class=\"sxs-lookup\"><span data-stu-id=\"98d06-289\">For example, setting data to `\"=SUM(A1:A5)\"` will total the values in the specified range.</span></span> <span data-ttu-id=\"98d06-290\">No entanto, após definir uma fórmula na célula associada, não é possível ler a fórmula adicionada (ou qualquer fórmula preexistente) da célula associada.</span><span class=\"sxs-lookup\"><span data-stu-id=\"98d06-290\">However, when you set a formula on the bound cell, after doing so, you can't read the added formula (or any pre-existing formula) from the bound cell.</span></span> <span data-ttu-id=\"98d06-291\">Se você chamar o método Binding.getDataAsync na célula acoplada para ler seus dados, o método pode retornar somente os dados exibidos na célula (resultado da fórmula).</span><span class=\"sxs-lookup\"><span data-stu-id=\"98d06-291\">If you call the Binding.getDataAsync method on the bound cell to read its data, the method can return only the data displayed in the cell (the formula's result).</span></span></td> </tr> <tr> <td><span data-ttu-id=\"98d06-292\">Uma matriz de matrizes (\"matrix\") e a forma corresponde exatamente à forma da associação especificada</span><span class=\"sxs-lookup\"><span data-stu-id=\"98d06-292\">An array of arrays (\"matrix\"), and the shape exactly matches the shape of the binding specified</span></span></td> <td><span data-ttu-id=\"98d06-293\">O conjunto de linhas e colunas são gravados. Você também pode especificar uma matriz de matrizes que contêm fórmulas válidas para adicioná-los às células acopladas.</span><span class=\"sxs-lookup\"><span data-stu-id=\"98d06-293\">The set of rows and columns are written.You can also specify an array of arrays that contain valid formulas to add them to the bound cells.</span></span> <span data-ttu-id=\"98d06-294\">Por exemplo, os dados foram definidos `[[\"=SUM(A1:A5)\",\"=AVERAGE(A1:A5)\"]]` adicionará essas duas fórmulas para uma ligação que contém duas células.</span><span class=\"sxs-lookup\"><span data-stu-id=\"98d06-294\">For example, setting data to `[[\"=SUM(A1:A5)\",\"=AVERAGE(A1:A5)\"]]` will add those two formulas to a binding that contains two cells.</span></span> <span data-ttu-id=\"98d06-295\">Assim como ao configurar uma fórmula em uma única célula acoplada, você não consegue ler as fórmulas adicionadas (ou qualquer fórmulas pré-existente) a ligação com a `Binding.getDataAsync` método - retorna apenas os dados exibidos nas células acopladas.</span><span class=\"sxs-lookup\"><span data-stu-id=\"98d06-295\">Just as when setting a formula on a single bound cell, you can't read the added formulas (or any pre-existing formulas) from the binding with the `Binding.getDataAsync` method - it returns only the data displayed in the bound cells.</span></span></td> </tr> <tr> <td><span data-ttu-id=\"98d06-296\">A tabela acoplada corresponde a um objeto [Office.TableData](xref:office.Office.TableData) e a forma da tabela.</span><span class=\"sxs-lookup\"><span data-stu-id=\"98d06-296\">An [Office.TableData](xref:office.Office.TableData) object, and the shape of the table matches the bound table.</span></span></td> <td><span data-ttu-id=\"98d06-297\">O conjunto de linhas e/ou cabeçalhos especificado são gravados, se não há outros dados das células ao redor serão substituídos.</span><span class=\"sxs-lookup\"><span data-stu-id=\"98d06-297\">The specified set of rows and/or headers are written, if no other data in surrounding cells will be overwritten.</span></span> <span data-ttu-id=\"98d06-298\">**Observação**: se você especificar fórmulas no objeto de tabela que você passa para o parâmetro de *dados* , você não pode obter os resultados esperados por causa do recurso \"colunas calculadas\" do Excel, que automaticamente duplica fórmulas dentro de uma coluna.</span><span class=\"sxs-lookup\"><span data-stu-id=\"98d06-298\">**Note**: If you specify formulas in the TableData object you pass for the *data* parameter, you might not get the results you expect due to the \"calculated columns\" feature of Excel, which automatically duplicates formulas within a column.</span></span> <span data-ttu-id=\"98d06-299\">Para contornar isso quando você deseja gravar *dados* que contém fórmulas a uma tabela acoplada, tente especificando os dados como uma matriz de matrizes (em vez de um objeto de tabela) e especifique o *coercionType* como Microsoft.Office.Matrix ou \"matrix\".</span><span class=\"sxs-lookup\"><span data-stu-id=\"98d06-299\">To work around this when you want to write *data* that contains formulas to a bound table, try specifying the data as an array of arrays (instead of a TableData object), and specify the *coercionType* as Microsoft.Office.Matrix or \"matrix\".</span></span></td> </tr> </table>\n\n<span data-ttu-id=\"98d06-300\">Para Excel Online:</span><span class=\"sxs-lookup\"><span data-stu-id=\"98d06-300\">For Excel Online:</span></span>\n\n- <span data-ttu-id=\"98d06-301\">O número total de células em que o valor passado para o parâmetro de dados não pode exceder 20.000 em uma única chamada deste método.</span><span class=\"sxs-lookup\"><span data-stu-id=\"98d06-301\">The total number of cells in the value passed to the data parameter can't exceed 20,000 in a single call to this method.</span></span>\n\n- <span data-ttu-id=\"98d06-302\">O número de grupos de formatação passados para o parâmetro cellFormat não pode exceder 100.</span><span class=\"sxs-lookup\"><span data-stu-id=\"98d06-302\">The number of formatting groups passed to the cellFormat parameter can't exceed 100.</span></span> <span data-ttu-id=\"98d06-303\">Um único grupo de formatação consiste em um conjunto de formatações aplicado a um intervalo de células específico.</span><span class=\"sxs-lookup\"><span data-stu-id=\"98d06-303\">A single formatting group consists of a set of formatting applied to a specified range of cells.</span></span>\n\n<span data-ttu-id=\"98d06-304\">Em todos os outros casos, um erro será retornado.</span><span class=\"sxs-lookup\"><span data-stu-id=\"98d06-304\">In all other cases, an error is returned.</span></span>\n\n<span data-ttu-id=\"98d06-305\">O método setDataAsync gravará os dados em um subconjunto de uma tabela ou matriz associando se os parâmetros opcionais de startRow e startColumn forem especificados e especificam um intervalo válido.</span><span class=\"sxs-lookup\"><span data-stu-id=\"98d06-305\">The setDataAsync method will write data in a subset of a table or matrix binding if the optional startRow and startColumn parameters are specified, and they specify a valid range.</span></span>\n\n<span data-ttu-id=\"98d06-306\">Na função de retorno de chamada passada para o método setDataAsync, você pode usar as propriedades do objeto AsyncResult para retornar as informações a seguir.</span><span class=\"sxs-lookup\"><span data-stu-id=\"98d06-306\">In the callback function passed to the setDataAsync method, you can use the properties of the AsyncResult object to return the following information.</span></span>\n\n<table> <tr> <th><span data-ttu-id=\"98d06-307\">Use para...</span><span class=\"sxs-lookup\"><span data-stu-id=\"98d06-307\">Property</span></span></th> <th><span data-ttu-id=\"98d06-308\">Use para...</span><span class=\"sxs-lookup\"><span data-stu-id=\"98d06-308\">Use to...</span></span></th> </tr> <tr> <td><span data-ttu-id=\"98d06-309\">AsyncResult.value</span><span class=\"sxs-lookup\"><span data-stu-id=\"98d06-309\">AsyncResult.value</span></span></td> <td><span data-ttu-id=\"98d06-310\">Sempre retorna indefinido porque não há nenhum objeto ou dados a serem recuperados.</span><span class=\"sxs-lookup\"><span data-stu-id=\"98d06-310\">Always returns undefined because there is no object or data to retrieve.</span></span></td> </tr> <tr> <td><span data-ttu-id=\"98d06-311\">AsyncResult.status</span><span class=\"sxs-lookup\"><span data-stu-id=\"98d06-311\">AsyncResult.status</span></span></td> <td><span data-ttu-id=\"98d06-312\">Determinar o sucesso ou falha da operação.</span><span class=\"sxs-lookup\"><span data-stu-id=\"98d06-312\">Determine the success or failure of the operation.</span></span></td> </tr> <tr> <td><span data-ttu-id=\"98d06-313\">AsyncResult.error</span><span class=\"sxs-lookup\"><span data-stu-id=\"98d06-313\">AsyncResult.error</span></span></td> <td><span data-ttu-id=\"98d06-314\">Acessar um objeto Error que fornecerá informações de erro se a operação tiver falhado.</span><span class=\"sxs-lookup\"><span data-stu-id=\"98d06-314\">Access an Error object that provides error information if the operation failed.</span></span></td> </tr> <tr> <td><span data-ttu-id=\"98d06-315\">AsyncResult.asyncContext</span><span class=\"sxs-lookup\"><span data-stu-id=\"98d06-315\">AsyncResult.asyncContext</span></span></td> <td><span data-ttu-id=\"98d06-316\">Um item definido pelo usuário de qualquer tipo que é retornado no objeto AsyncResult sem ser alterado.</span><span class=\"sxs-lookup\"><span data-stu-id=\"98d06-316\">A user-defined item of any type that is returned in the AsyncResult object without being altered.</span></span></td> </tr> </table>\n#### <span data-ttu-id=\"98d06-317\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"98d06-317\">Examples</span></span>\n\n```javascript\nfunction setBindingData() {\n    Office.select(\"bindings#MyBinding\").setDataAsync('Hello World!', function (asyncResult) { });\n}\n\n// Specifying the optional coercionType parameter lets you specify the kind of data you want to write to a binding.\n// For example, in Word if you want to write HTML to a text binding, you can specify the coercionType parameter \n// as \"html\" as shown in the following example, which uses HTML <b> tags to make \"Hello\" bold.\nfunction writeHtmlData() {\n    Office.select(\"bindings#myBinding\").setDataAsync(\n        \"<b>Hello</b> World!\", {coercionType: \"html\"}, function (asyncResult) {\n        if (asyncResult.status == \"failed\") {\n            write('Error: ' + asyncResult.error.message);\n        }\n    });\n}\n\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n\n// In this example, the call to setDataAsync passes the data parameter as an array of arrays\n// (to create a single column of three rows), and specifies the data structure with the \n// coercionType parameter as a \"matrix\".\nfunction writeBoundDataMatrix() {\n    Office.select(\"bindings#myBinding\").setDataAsync(\n        [['Berlin'],['Munich'],['Duisburg']],{ coercionType: \"matrix\" }, function (asyncResult) {\n        if (asyncResult.status == \"failed\") {\n            write('Error: ' + asyncResult.error.message);\n        } else {\n            write('Bound data: ' + asyncResult.value);\n        }\n    });\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n\n// In the writeBoundDataTable function in this example, the call to setDataAsync passes the data parameter \n// as a TableData object (to write three columns and three rows), and specifies the data structure\n// with the coercionType parameter as a \"table\".\n\n// In the updateTableData function, the call to setDataAsync again passes the data parameter as a TableData object,\n// but as a single column with a new header and three rows, to update the values in the last column \n// of the table created with the writeBoundDataTable function. The optional zero-based startColumn parameter \n// is specified as 2 to replace the values in the third column of the table.\nfunction writeBoundDataTable() {\n    // Create a TableData object.\n    var myTable = new Office.TableData();\n    myTable.headers = ['First Name', 'Last Name', 'Grade'];\n    myTable.rows = [['Kim', 'Abercrombie', 'A'], ['Junmin','Hao', 'C'],['Toni','Poe','B']];\n\n    // Set myTable in the binding.\n    Office.select(\"bindings#myBinding\").setDataAsync(myTable, { coercionType: \"table\" }, \n        function (asyncResult) {\n            if (asyncResult.status == Office.AsyncResultStatus.Failed) {\n                write('Error: '+ asyncResult.error.message);\n        } else {\n            write('Bound data: ' + asyncResult.value);\n        }\n    });\n}\n\n// Replace last column with different data.\nfunction updateTableData() {\n    var newTable = new Office.TableData();\n    newTable.headers = [\"Gender\"];\n    newTable.rows = [[\"M\"],[\"M\"],[\"F\"]];\n    Office.select(\"bindings#myBinding\").setDataAsync(newTable, { coercionType: \"table\", startColumn:2 }, \n        function (asyncResult) {\n            if (asyncResult.status == Office.AsyncResultStatus.Failed) {\n                write('Error: '+ asyncResult.error.message);\n        } else {\n            write('Bound data: ' + asyncResult.value);\n        }     \n    });   \n}\n\n// In this example, the following call passes two formatting groups to cellFormat.\nOffice.select(\"bindings#myBinding\").setDataAsync([['Berlin'],['Munich'],['Duisburg']],\n  {cellFormat:[{cells: {row: 1}, format: {fontColor: \"yellow\"}}, \n      {cells: {row: 3, column: 4}, format: {borderColor: \"white\", fontStyle: \"bold\"}}]}, \n  function (asyncResult){});\n```"
  name: setDataAsync(data, callback)
  fullName: setDataAsync(data, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setDataAsync(data: TableData | any, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: data
      description: >-
        <span data-ttu-id="98d06-318">Os dados a serem definidos na seleção atual.</span><span class="sxs-lookup"><span data-stu-id="98d06-318">The data to be set in the current selection.</span></span> <span data-ttu-id="98d06-319">Tipos de dados possíveis por host:</span><span class="sxs-lookup"><span data-stu-id="98d06-319">Possible data types by host:</span></span>


        <span data-ttu-id="98d06-320">cadeia de caracteres: Excel, on-line do Excel, Word e Word Online apenas</span><span class="sxs-lookup"><span data-stu-id="98d06-320">string: Excel, Excel Online, Word, and Word Online only</span></span>


        <span data-ttu-id="98d06-321">matriz de matrizes: somente do Word e Excel</span><span class="sxs-lookup"><span data-stu-id="98d06-321">array of arrays: Excel and Word only</span></span>


        <span data-ttu-id="98d06-322">[Office.TableData](xref:office.Office.TableData)<!-- -->: somente o Word, Excel e Access</span><span class="sxs-lookup"><span data-stu-id="98d06-322">[Office.TableData](xref:office.Office.TableData)<!-- -->: Access, Excel, and Word only</span></span>


        <span data-ttu-id="98d06-323">HTML: Word e Word somente Online</span><span class="sxs-lookup"><span data-stu-id="98d06-323">HTML: Word and Word Online only</span></span>


        <span data-ttu-id="98d06-324">Office Open XML: Somente a palavra</span><span class="sxs-lookup"><span data-stu-id="98d06-324">Office Open XML: Word only</span></span>
      type:
      - TableData | any
    - id: callback
      description: <span data-ttu-id="98d06-325">Opcional.</span><span class="sxs-lookup"><span data-stu-id="98d06-325">Optional.</span></span> <span data-ttu-id="98d06-326">Uma função que é invocado quando o retorno de chamada retorna, cujo único parâmetro é do tipo [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="98d06-326">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span>
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.Binding.document
  summary: <span data-ttu-id="98d06-327">Obtenha o objeto Document associado à vinculação.</span><span class="sxs-lookup"><span data-stu-id="98d06-327">Get the Document object associated with the binding.</span></span>
  name: document
  fullName: document
  langs:
  - typeScript
  type: property
  syntax:
    content: 'document: Office.Document;'
    return:
      type:
      - office.Office.Document
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"98d06-328\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"98d06-328\">Examples</span></span>\n\n```javascript\nOffice.context.document.bindings.getByIdAsync(\"myBinding\", function (asyncResult) {\n    write(asyncResult.value.document.url);\n});\n\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
- uid: office.Office.Binding.id
  summary: <span data-ttu-id="98d06-329">Uma cadeia de caracteres que identifica exclusivamente esse vínculo entre as ligações no mesmo objeto [Office.Document](xref:office.Office.Document) .</span><span class="sxs-lookup"><span data-stu-id="98d06-329">A string that uniquely identifies this binding among the bindings in the same [Office.Document](xref:office.Office.Document) object.</span></span>
  name: id
  fullName: id
  langs:
  - typeScript
  type: property
  syntax:
    content: 'id: string;'
    return:
      type:
      - string
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"98d06-330\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"98d06-330\">Examples</span></span>\n\n```javascript\nOffice.context.document.bindings.getByIdAsync(\"myBinding\", function (asyncResult) {\n    write(asyncResult.value.id);\n});\n\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
- uid: office.Office.Binding.type
  summary: <span data-ttu-id="98d06-331">Obtém o tipo de associação.</span><span class="sxs-lookup"><span data-stu-id="98d06-331">Gets the type of the binding.</span></span>
  name: type
  fullName: type
  langs:
  - typeScript
  type: property
  syntax:
    content: 'type: Office.BindingType;'
    return:
      type:
      - Office.BindingType
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"98d06-332\">Examples</span><span class=\"sxs-lookup\"><span data-stu-id=\"98d06-332\">Examples</span></span>\n\n```javascript\nOffice.context.document.bindings.getByIdAsync(\"MyBinding\", function (asyncResult) { \n    write(asyncResult.value.type); \n}) \n\n// Function that writes to a div with id='message' on the page. \nfunction write(message){ \n    document.getElementById('message').innerText += message;  \n}\n```"
