### YamlMime:UniversalReference
ms.openlocfilehash: 9f778f9261e83c798f632294e60b9beea18f581b
ms.sourcegitcommit: 31847d2ea6be78b8f473dfbfb0a575fdecd877be
ms.translationtype: MT
ms.contentlocale: pt-BR
ms.lasthandoff: 11/13/2018
ms.locfileid: "26298383"
items:
- uid: office.Office.UI
  summary: >-
    Fornece objetos e métodos que você pode usar para criar e manipular os componentes de interface do usuário, como caixas de diálogo, em seus suplementos do Office.


    Visite "[usar a API de diálogo em seus suplementos do Office](https://docs.microsoft.com/office/dev/add-ins/develop/dialog-api-in-office-add-ins)<!-- -->" para obter mais informações.
  name: Office.UI
  fullName: Office.UI
  langs:
  - typeScript
  type: interface
  package: office
  children:
  - office.Office.UI.closeContainer
  - office.Office.UI.displayDialogAsync
  - office.Office.UI.messageParent
- uid: office.Office.UI.closeContainer
  summary: Fecha o contêiner de interface de usuário onde o JavaScript está sendo executado.
  remarks: >-
    <table><tr><td>Hosts</td><td>Excel, Word, PowerPoint, Outlook (conjunto de requisito mínimo: 1,5 de caixa de correio)</td></tr></table>


    O comportamento deste método é especificado pelo seguinte:


    - Chamado a partir de um botão de comando de interface do usuário sem: não terá efeito. Qualquer caixa de diálogo aberta por displayDialogAsync permanecerá aberta.


    - Chamado a partir de um taskpane: fechará o painel de tarefas. Qualquer caixa de diálogo aberta pela displayDialogAsync também será fechado. Se o painel de tarefas der suporte a fixação e tiver sido fixado pelo usuário, ele terá a fixação cancelada.


    - Chamado a partir de uma extensão de módulo: não terá efeito.
  name: closeContainer()
  fullName: closeContainer
  langs:
  - typeScript
  type: method
  syntax:
    content: 'closeContainer(): void;'
    return:
      type:
      - void
      description: ''
- uid: office.Office.UI.displayDialogAsync
  summary: Exibe uma caixa de diálogo para mostrar ou coletar informações do usuário ou para facilitar a navegação da Web.
  remarks: >-
    <table><tr><td>Hosts</td><td>Word, Excel, Outlook, PowerPoint</td></tr>


    <tr><td>Conjuntos de requisitos</td><td>DialogAPI, caixa de correio 1,4</td></tr></table>


    Este método está disponível no requisito de DialogApi definido para suplementos do Excel, Word ou PowerPoint e, na caixa de correio requisito define 1,4 para Outlook. Para obter mais informações sobre como especificar um requisito definido em seu manifesto, consulte [requisitos de API e especificar Office hosts](https://docs.microsoft.com/office/dev/add-ins/develop/specify-office-hosts-and-api-requirements)<!-- -->.


    A página inicial deve estar no mesmo domínio que a página pai (o parâmetro startAddress). Depois que a página inicial for carregada, você poderá ir para outros domínios.


    As chamadas de qualquer página `office.context.ui.messageParent` também deve estar no mesmo domínio que a página pai.


    **Considerações de design**:


    As seguintes considerações de design aplicam-se às caixas de diálogo:


    - Um painel de tarefas do suplemento do Office pode ter apenas uma caixa de diálogo Abrir a qualquer momento. Várias caixas de diálogo podem ser abertas ao mesmo tempo dos comandos de suplemento (botões da faixa de opções personalizada ou itens de menu).


    - Todas as caixas de diálogo podem ser movidas e redimensionadas pelo usuário.


    - Todas as caixas de diálogo são centralizadas na tela quando abertas.


    - As caixas de diálogo aparecem na parte superior do aplicativo host e na ordem em que foram criadas.


    Usar uma caixa de diálogo para:


    - Exibir páginas de autenticação para coletar credenciais de usuário.


    - Exiba uma tela de entrada/de progresso de erro de um comando ShowTaskpane ou ExecuteAction.


    - Aumentar temporariamente a área de superfície de que um usuário dispõe para concluir uma tarefa.


    Não use uma caixa de diálogo para interagir com um documento. Use um painel de tarefas em vez disso.


    Para obter um padrão de design que você pode usar para criar uma caixa de diálogo, confira [Caixa de diálogo de cliente](https://github.com/OfficeDev/Office-Add-in-UX-Design-Patterns/blob/master/Patterns/Client_Dialog.md) no repositório de Padrões de Design da Experiência do Usuário de suplementos do Office no GitHub.


    **displayDialogAsync erros**:


    <table> <tr> <th>Número do código</th> <th>Meaning</th> </tr> <tr> <td>12004</td> <td>O domínio da URL passado para displayDialogAsync não é confiável. O domínio deve ser o mesmo domínio como a página de host (incluindo o número da porta e protocolo) ou ele deve ser registrado no <AppDomains> seção de manifesto do suplemento.</td> </tr> <tr> <td>12005</td> <td>A URL passada para displayDialogAsync usa o protocolo HTTP. HTTPS é necessário. (Em algumas versões do Office, a mensagem de erro retornada com 12005 é o mesmo retornada por uma para 12004.)</td> </tr> <tr> <td>12007</td> <td>Uma caixa de diálogo já está aberta no painel de tarefas. Um suplemento de painel só pode abrir uma caixa de diálogo por vez.</td> </tr> <tr> <td>12009</td> <td>O usuário optou por ignorar a caixa de diálogo. Esse erro pode ocorrer em versões online do Office, onde os usuários podem optar por não permitir que um suplemento apresentar uma caixa de diálogo.</td> </tr> </table>


    Na função de retorno de chamada passada para o método displayDialogAsync, você pode usar as propriedades do objeto AsyncResult para retornar as informações a seguir.


    <table> <tr> <th>Propriedade</th> <th>Use para</th> </tr> <tr> <td>AsyncResult.value</td> <td>Acessar o objeto Diálogo.</td> </tr> <tr> <td>AsyncResult.status</td> <td>Determinar o sucesso ou falha da operação.</td> </tr> <tr> <td>AsyncResult.error</td> <td>Acessar um objeto Error que fornecerá informações de erro se a operação tiver falhado.</td> </tr> <tr> <td>AsyncResult.asyncContext</td> <td>Acesse seu objeto definido pelo usuário ou um valor, se você passar um como o parâmetro asyncContext.</td> </tr> </table>
  name: displayDialogAsync(startAddress, options, callback)
  fullName: displayDialogAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'displayDialogAsync(startAddress: string, options?: DialogOptions, callback?: (result: AsyncResult<Dialog>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: startAddress
      description: Aceita a URL HTTPS inicial que abre na caixa de diálogo.
      type:
      - string
    - id: options
      description: Opcional. Aceita um objeto [Office.DialogOptions](xref:office.Office.DialogOptions) para definir a exibição de diálogo.
      type:
      - office.Office.DialogOptions
    - id: callback
      description: Opcional. Aceita um método de retorno de chamada para manipular a tentativa de criação da caixa de diálogo. Se tiver êxito, o AsyncResult.value é um objeto Dialog.
      type:
      - '(result: AsyncResult<Dialog>) => void'
- uid: office.Office.UI.messageParent
  summary: Fornece uma mensagem da caixa de diálogo a sua página pai/de abertura. A página que chama essa API deve estar no mesmo domínio que a página pai.
  name: messageParent(message)
  fullName: messageParent
  langs:
  - typeScript
  type: method
  syntax:
    content: 'messageParent(message: boolean | string): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: message
      description: Aceita uma mensagem da caixa de diálogo para entregar para o suplemento. Além de um valor booleano, tudo o que pode serializar a uma cadeia de caracteres incluindo JSON e XML pode ser enviado.
      type:
      - boolean | string
