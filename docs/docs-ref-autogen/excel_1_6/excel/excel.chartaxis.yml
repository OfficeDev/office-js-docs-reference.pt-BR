### YamlMime:UniversalReference
items:
  - uid: excel.Excel.ChartAxis
    summary: |-
      Representa um único eixo em um gráfico.

      \[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: Excel.ChartAxis
    fullName: Excel.ChartAxis
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: excel
    children:
      - excel.Excel.ChartAxis.context
      - excel.Excel.ChartAxis.format
      - excel.Excel.ChartAxis.load
      - excel.Excel.ChartAxis.load_1
      - excel.Excel.ChartAxis.load_2
      - excel.Excel.ChartAxis.majorGridlines
      - excel.Excel.ChartAxis.majorUnit
      - excel.Excel.ChartAxis.maximum
      - excel.Excel.ChartAxis.minimum
      - excel.Excel.ChartAxis.minorGridlines
      - excel.Excel.ChartAxis.minorUnit
      - excel.Excel.ChartAxis.set
      - excel.Excel.ChartAxis.set_1
      - excel.Excel.ChartAxis.title
      - excel.Excel.ChartAxis.toJSON
  - uid: excel.Excel.ChartAxis.context
    summary: O contexto de solicitação associado ao objeto. Isso conecta o processo do suplemento ao processo do aplicativo host do Office.
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - excel.Excel.RequestContext
  - uid: excel.Excel.ChartAxis.format
    summary: |-
      Representa a formatação de um objeto Chart, que inclui formatação de linha e de fonte. Somente leitura.

      \[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: format
    fullName: format
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly format: Excel.ChartAxisFormat;'
      return:
        type:
          - excel.Excel.ChartAxisFormat
  - uid: excel.Excel.ChartAxis.load
    summary: Coloca um comando na fila para carregar as propriedades especificadas do objeto. Você deve chamar "context.sync()" antes de ler as propriedades.
    remarks: |-
      Além dessa assinatura, este método tem as seguintes assinaturas:

      `load(option?: string | string[]): Excel.ChartAxis`-Where Option é uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.

      `load(option?: { select?: string; expand?: string; }): Excel.ChartAxis`-Onde Option. Select é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades a serem carregadas, e Options. Expand é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades de navegação a serem carregadas.

      `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ChartAxis`– Disponível somente nos tipos de coleção. É semelhante à assinatura anterior. Option. Top especifica o número máximo de itens de coleta que podem ser incluídos no resultado. Option. Skip especifica o número de itens que devem ser ignorados e não incluídos no resultado. Se Option. Top for especificado, o conjunto de resultados será iniciado depois de ignorar o número de itens especificado.
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.ChartAxisLoadOptions): Excel.ChartAxis;'
      return:
        type:
          - excel.Excel.ChartAxis
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.ChartAxisLoadOptions
  - uid: excel.Excel.ChartAxis.load_1
    summary: Coloca um comando na fila para carregar as propriedades especificadas do objeto. Você deve chamar `context.sync()` antes de ler as propriedades.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.ChartAxis;'
      return:
        type:
          - excel.Excel.ChartAxis
        description: |-


          #### <a name="examples"></a>Exemplos

          ```javascript
          // Get the maximum of Chart Axis from Chart1
          Excel.run(function (ctx) { 
              var chart = ctx.workbook.worksheets.getItem("Sheet1").charts.getItem("Chart1");    
              var axis = chart.axes.valueAxis;
              axis.load('maximum');
              return ctx.sync().then(function() {
                      console.log(axis.maximum);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          // Set the maximum, minimum, majorunit, minorunit of valueaxis. 
          Excel.run(function (ctx) { 
              var chart = ctx.workbook.worksheets.getItem("Sheet1").charts.getItem("Chart1");    
              chart.axes.valueAxis.maximum = 5;
              chart.axes.valueAxis.minimum = 0;
              chart.axes.valueAxis.majorUnit = 1;
              chart.axes.valueAxis.minorUnit = 0.2;
              return ctx.sync().then(function() {
                      console.log("Axis Settings Changed");
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: Uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.
          type:
            - 'string | string[]'
  - uid: excel.Excel.ChartAxis.load_2
    summary: Coloca um comando na fila para carregar as propriedades especificadas do objeto. Você deve chamar `context.sync()` antes de ler as propriedades.
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.ChartAxis;'
      return:
        type:
          - excel.Excel.ChartAxis
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: Onde propertyNamesAndPaths. Select é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades a serem carregadas e propertyNamesAndPaths. Expand é uma sequência de caracteres delimitada por vírgula que especifica as propriedades de navegação a serem carregadas.
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel.Excel.ChartAxis.majorGridlines
    summary: |-
      Retorna um objeto Gridlines que representa as principais linhas de grade do eixo especificado. Somente leitura.

      \[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: majorGridlines
    fullName: majorGridlines
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly majorGridlines: Excel.ChartGridlines;'
      return:
        type:
          - excel.Excel.ChartGridlines
  - uid: excel.Excel.ChartAxis.majorUnit
    summary: |-
      Representa o intervalo entre as duas principais marcas de escala. Pode ser definido como um valor numérico ou uma cadeia de caracteres vazia. O valor retornado sempre é um número.

      \[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: majorUnit
    fullName: majorUnit
    langs:
      - typeScript
    type: property
    syntax:
      content: 'majorUnit: any;'
      return:
        type:
          - any
  - uid: excel.Excel.ChartAxis.maximum
    summary: |-
      Representa o valor máximo no eixo dos valores. Pode ser definido como um valor numérico ou uma cadeia de caracteres vazia (para valores automáticos de eixo). O valor retornado sempre é um número.

      \[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: maximum
    fullName: maximum
    langs:
      - typeScript
    type: property
    syntax:
      content: 'maximum: any;'
      return:
        type:
          - any
  - uid: excel.Excel.ChartAxis.minimum
    summary: |-
      Representa o valor mínimo no eixo dos valores. Pode ser definido como um valor numérico ou uma cadeia de caracteres vazia (para valores automáticos de eixo). O valor retornado sempre é um número.

      \[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: minimum
    fullName: minimum
    langs:
      - typeScript
    type: property
    syntax:
      content: 'minimum: any;'
      return:
        type:
          - any
  - uid: excel.Excel.ChartAxis.minorGridlines
    summary: |-
      Retorna um objeto Gridlines que representa as linhas de grade secundárias do eixo especificado. Somente leitura.

      \[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: minorGridlines
    fullName: minorGridlines
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly minorGridlines: Excel.ChartGridlines;'
      return:
        type:
          - excel.Excel.ChartGridlines
  - uid: excel.Excel.ChartAxis.minorUnit
    summary: |-
      Representa o intervalo entre as duas marcas de escala secundárias. Pode ser definido como um valor numérico ou uma cadeia de caracteres vazia (para valores automáticos de eixo). O valor retornado sempre é um número.

      \[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: minorUnit
    fullName: minorUnit
    langs:
      - typeScript
    type: property
    syntax:
      content: 'minorUnit: any;'
      return:
        type:
          - any
  - uid: excel.Excel.ChartAxis.set
    summary: Define várias propriedades de um objeto ao mesmo tempo. Você pode passar um objeto simples com as propriedades apropriadas ou outro objeto API do mesmo tipo.
    remarks: |-
      Este método tem a seguinte assinatura adicional:

      `set(properties: Excel.ChartAxis): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.ChartAxisUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: Um objeto JavaScript com propriedades que são estruturadas isomorphically para as propriedades do objeto no qual o método é chamado.
          type:
            - Interfaces.ChartAxisUpdateData
        - id: options
          description: Fornece uma opção para suprimir erros se o objeto Properties tentar definir qualquer propriedade somente leitura.
          type:
            - OfficeExtension.UpdateOptions
  - uid: excel.Excel.ChartAxis.set_1
    summary: 'Define várias propriedades no objeto ao mesmo tempo, com base em um objeto carregado existente.'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.ChartAxis): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - excel.Excel.ChartAxis
  - uid: excel.Excel.ChartAxis.title
    summary: |-
      Representa o título do eixo. Somente leitura.

      \[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: title
    fullName: title
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly title: Excel.ChartAxisTitle;'
      return:
        type:
          - excel.Excel.ChartAxisTitle
  - uid: excel.Excel.ChartAxis.toJSON
    summary: 'Substitui o método `toJSON()` JavaScript para fornecer uma saída mais útil quando um objeto API é passado para`JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, por sua vez, chama `toJSON` o método do objeto que é passado para ele.) Enquanto o objeto Excel. ChartAxis original é um objeto API, o `toJSON` método retorna um objeto JavaScript simples (digitado como`Excel.Interfaces.ChartAxisData`<!-- -->) que contém cópias superficiais de qualquer propriedade filho carregada do objeto original.'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.ChartAxisData;'
      return:
        type:
          - excel.Excel.Interfaces.ChartAxisData
        description: ''