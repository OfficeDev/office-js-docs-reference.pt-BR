### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.ConditionalRangeFill:class'
    summary: |-
      <span data-ttu-id="d5ed8-101">Representa o plano de fundo de um objeto de intervalo condicional.</span><span class="sxs-lookup"><span data-stu-id="d5ed8-101">Represents the background of a conditional range object.</span></span>

      <span data-ttu-id="d5ed8-102">\[[Conjunto de APIs: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d5ed8-102">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.ConditionalRangeFill
    fullName: Excel.ConditionalRangeFill
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.ConditionalRangeFill#clear:member(1)'
      - 'excel!Excel.ConditionalRangeFill#color:member'
      - 'excel!Excel.ConditionalRangeFill#context:member'
      - 'excel!Excel.ConditionalRangeFill#load:member(1)'
      - 'excel!Excel.ConditionalRangeFill#load:member(2)'
      - 'excel!Excel.ConditionalRangeFill#load:member(3)'
      - 'excel!Excel.ConditionalRangeFill#set:member(1)'
      - 'excel!Excel.ConditionalRangeFill#set:member(2)'
      - 'excel!Excel.ConditionalRangeFill#toJSON:member(1)'
  - uid: 'excel!Excel.ConditionalRangeFill#clear:member(1)'
    summary: |-
      <span data-ttu-id="d5ed8-103">Redefine o preenchimento.</span><span class="sxs-lookup"><span data-stu-id="d5ed8-103">Resets the fill.</span></span>

      <span data-ttu-id="d5ed8-104">\[[Conjunto de APIs: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d5ed8-104">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: clear()
    fullName: clear()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clear(): void;'
      return:
        type:
          - void
        description: ''
  - uid: 'excel!Excel.ConditionalRangeFill#color:member'
    summary: |-
      <span data-ttu-id="d5ed8-105">Código de cor HTML que representa a cor do preenchimento, da forma \#RRGGBB (por exemplo, "FFA500") ou como uma cor HTML nomeada (por exemplo, "laranja").</span><span class="sxs-lookup"><span data-stu-id="d5ed8-105">HTML color code representing the color of the fill, of the form \#RRGGBB (e.g. "FFA500") or as a named HTML color (e.g. "orange").</span></span>

      <span data-ttu-id="d5ed8-106">\[[Conjunto de APIs: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d5ed8-106">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: color
    fullName: color
    langs:
      - typeScript
    type: property
    syntax:
      content: 'color: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.ConditionalRangeFill#context:member'
    summary: <span data-ttu-id="d5ed8-107">O contexto de solicitação associado ao objeto.</span><span class="sxs-lookup"><span data-stu-id="d5ed8-107">The request context associated with the object.</span></span> <span data-ttu-id="d5ed8-108">Isso conecta o processo do suplemento ao processo do aplicativo host do Office.</span><span class="sxs-lookup"><span data-stu-id="d5ed8-108">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.ConditionalRangeFill#load:member(1)'
    summary: <span data-ttu-id="d5ed8-109">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="d5ed8-109">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="d5ed8-110">Você deve chamar `context.sync()` antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="d5ed8-110">You must call `context.sync()` before reading the properties.</span></span>
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.ConditionalRangeFillLoadOptions): Excel.ConditionalRangeFill;'
      return:
        type:
          - 'excel!Excel.ConditionalRangeFill:class'
        description: ''
      parameters:
        - id: options
          description: <span data-ttu-id="d5ed8-111">Fornece opções para as propriedades do objeto a ser carregado.</span><span class="sxs-lookup"><span data-stu-id="d5ed8-111">Provides options for which properties of the object to load.</span></span>
          type:
            - 'excel!Excel.Interfaces.ConditionalRangeFillLoadOptions:interface'
  - uid: 'excel!Excel.ConditionalRangeFill#load:member(2)'
    summary: <span data-ttu-id="d5ed8-112">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="d5ed8-112">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="d5ed8-113">Você deve chamar `context.sync()` antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="d5ed8-113">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.ConditionalRangeFill;'
      return:
        type:
          - 'excel!Excel.ConditionalRangeFill:class'
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="d5ed8-114">Uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="d5ed8-114">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.ConditionalRangeFill#load:member(3)'
    summary: <span data-ttu-id="d5ed8-115">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="d5ed8-115">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="d5ed8-116">Você deve chamar `context.sync()` antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="d5ed8-116">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.ConditionalRangeFill;
      return:
        type:
          - 'excel!Excel.ConditionalRangeFill:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="d5ed8-117">`propertyNamesAndPaths.select`é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades a serem `propertyNamesAndPaths.expand` carregadas e é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades de navegação a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="d5ed8-117">`propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - |-
              {
                          select?: string;
                          expand?: string;
                      }
  - uid: 'excel!Excel.ConditionalRangeFill#set:member(1)'
    summary: '<span data-ttu-id="d5ed8-118">Define várias propriedades de um objeto ao mesmo tempo.</span><span class="sxs-lookup"><span data-stu-id="d5ed8-118">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="d5ed8-119">Você pode passar um objeto simples com as propriedades apropriadas ou outro objeto API do mesmo tipo.</span><span class="sxs-lookup"><span data-stu-id="d5ed8-119">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="d5ed8-120">Este método tem a seguinte assinatura adicional:</span><span class="sxs-lookup"><span data-stu-id="d5ed8-120">This method has the following additional signature:</span></span>

      `set(properties: Excel.ConditionalRangeFill): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.ConditionalRangeFillUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="d5ed8-121">Um objeto JavaScript com propriedades que são estruturadas isomorphically para as propriedades do objeto no qual o método é chamado.</span><span class="sxs-lookup"><span data-stu-id="d5ed8-121">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - 'excel!Excel.Interfaces.ConditionalRangeFillUpdateData:interface'
        - id: options
          description: <span data-ttu-id="d5ed8-122">Fornece uma opção para suprimir erros se o objeto Properties tentar definir qualquer propriedade somente leitura.</span><span class="sxs-lookup"><span data-stu-id="d5ed8-122">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - 'excel!OfficeExtension.UpdateOptions:interface'
  - uid: 'excel!Excel.ConditionalRangeFill#set:member(2)'
    summary: '<span data-ttu-id="d5ed8-123">Define várias propriedades no objeto ao mesmo tempo, com base em um objeto carregado existente.</span><span class="sxs-lookup"><span data-stu-id="d5ed8-123">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.ConditionalRangeFill): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'excel!Excel.ConditionalRangeFill:class'
  - uid: 'excel!Excel.ConditionalRangeFill#toJSON:member(1)'
    summary: '<span data-ttu-id="d5ed8-124">Substitui o método `toJSON()` JavaScript para fornecer uma saída mais útil quando um objeto API é passado para`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="d5ed8-124">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="d5ed8-125">.</span><span class="sxs-lookup"><span data-stu-id="d5ed8-125"></span></span> <span data-ttu-id="d5ed8-126">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="d5ed8-126"></span></span><!-- --><span data-ttu-id="d5ed8-127">, por sua vez, chama `toJSON` o método do objeto que é passado para ele.) Enquanto o objeto Excel. ConditionalRangeFill original é um objeto API, o `toJSON` método retorna um objeto JavaScript simples (digitado como`Excel.Interfaces.ConditionalRangeFillData`</span><span class="sxs-lookup"><span data-stu-id="d5ed8-127">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.ConditionalRangeFill object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ConditionalRangeFillData`</span></span><!-- --><span data-ttu-id="d5ed8-128">) que contém cópias superficiais de qualquer propriedade filho carregada do objeto original.</span><span class="sxs-lookup"><span data-stu-id="d5ed8-128">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.ConditionalRangeFillData;'
      return:
        type:
          - 'excel!Excel.Interfaces.ConditionalRangeFillData:interface'
        description: ''
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.ConditionalRangeFill:class'
    name: Excel.ConditionalRangeFill
  - uid: 'excel!Excel.Interfaces.ConditionalRangeFillLoadOptions:interface'
    name: Excel.Interfaces.ConditionalRangeFillLoadOptions
  - uid: 'excel!Excel.Interfaces.ConditionalRangeFillUpdateData:interface'
    name: Interfaces.ConditionalRangeFillUpdateData
  - uid: 'excel!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'excel!Excel.Interfaces.ConditionalRangeFillData:interface'
    name: Excel.Interfaces.ConditionalRangeFillData