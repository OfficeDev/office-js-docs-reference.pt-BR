### YamlMime:UniversalReference
items:
  - uid: excel.Excel.ChartSeriesCollection
    summary: |-
      <span data-ttu-id="650d5-101">Representa uma coleção de série do gráfico.</span><span class="sxs-lookup"><span data-stu-id="650d5-101">Represents a collection of chart series.</span></span>

      <span data-ttu-id="650d5-102">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="650d5-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.ChartSeriesCollection
    fullName: Excel.ChartSeriesCollection
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: excel
    children:
      - excel.Excel.ChartSeriesCollection.context
      - excel.Excel.ChartSeriesCollection.count
      - excel.Excel.ChartSeriesCollection.getCount
      - excel.Excel.ChartSeriesCollection.getItemAt
      - excel.Excel.ChartSeriesCollection.items
      - excel.Excel.ChartSeriesCollection.load
      - excel.Excel.ChartSeriesCollection.load_1
      - excel.Excel.ChartSeriesCollection.load_2
      - excel.Excel.ChartSeriesCollection.toJSON
  - uid: excel.Excel.ChartSeriesCollection.context
    summary: <span data-ttu-id="650d5-103">O contexto de solicitação associado ao objeto.</span><span class="sxs-lookup"><span data-stu-id="650d5-103">The request context associated with the object.</span></span> <span data-ttu-id="650d5-104">Isso conecta o processo do suplemento ao processo do aplicativo host do Office.</span><span class="sxs-lookup"><span data-stu-id="650d5-104">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - excel.Excel.RequestContext
  - uid: excel.Excel.ChartSeriesCollection.count
    summary: |-
      <span data-ttu-id="650d5-105">Retorna o número de série da coleção.</span><span class="sxs-lookup"><span data-stu-id="650d5-105">Returns the number of series in the collection.</span></span> <span data-ttu-id="650d5-106">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="650d5-106">Read-only.</span></span>

      <span data-ttu-id="650d5-107">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="650d5-107">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: count
    fullName: count
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly count: number;'
      return:
        type:
          - number
  - uid: excel.Excel.ChartSeriesCollection.getCount
    summary: |-
      <span data-ttu-id="650d5-108">Retorna o número de série da coleção.</span><span class="sxs-lookup"><span data-stu-id="650d5-108">Returns the number of series in the collection.</span></span>

      <span data-ttu-id="650d5-109">\[[Conjunto de APIs: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="650d5-109">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - OfficeExtension.ClientResult<number>
        description: ''
  - uid: excel.Excel.ChartSeriesCollection.getItemAt
    summary: |-
      <span data-ttu-id="650d5-110">Recupera uma série com base na respectiva posição na coleção.</span><span class="sxs-lookup"><span data-stu-id="650d5-110">Retrieves a series based on its position in the collection.</span></span>

      <span data-ttu-id="650d5-111">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="650d5-111">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItemAt(index)
    fullName: getItemAt(index)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemAt(index: number): Excel.ChartSeries;'
      return:
        type:
          - excel.Excel.ChartSeries
        description: |-


          #### <a name="examples"></a><span data-ttu-id="650d5-112">Exemplos</span><span class="sxs-lookup"><span data-stu-id="650d5-112">Examples</span></span>

          ```javascript
          // Get the name of the first series in the series collection.
          Excel.run(function (ctx) { 
              var seriesCollection = ctx.workbook.worksheets.getItem("Sheet1").charts.getItem("Chart1").series;
              seriesCollection.load('items');
              return ctx.sync().then(function() {
                  console.log(seriesCollection.items[0].name);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: index
          description: <span data-ttu-id="650d5-113">Valor de índice do objeto a ser recuperado.</span><span class="sxs-lookup"><span data-stu-id="650d5-113">Index value of the object to be retrieved.</span></span> <span data-ttu-id="650d5-114">Indexados com zero.</span><span class="sxs-lookup"><span data-stu-id="650d5-114">Zero-indexed.</span></span>
          type:
            - number
  - uid: excel.Excel.ChartSeriesCollection.items
    summary: <span data-ttu-id="650d5-115">Obtém os itens filhos carregados nesta coleção.</span><span class="sxs-lookup"><span data-stu-id="650d5-115">Gets the loaded child items in this collection.</span></span>
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.ChartSeries[];'
      return:
        type:
          - 'Excel.ChartSeries[]'
  - uid: excel.Excel.ChartSeriesCollection.load
    summary: <span data-ttu-id="650d5-116">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="650d5-116">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="650d5-117">Você deve chamar "context.sync()" antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="650d5-117">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="650d5-118">Além dessa assinatura, este método tem as seguintes assinaturas:</span><span class="sxs-lookup"><span data-stu-id="650d5-118">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="650d5-119">`load(option?: string | string[]): Excel.ChartSeriesCollection`-Where Option é uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="650d5-119">`load(option?: string | string[]): Excel.ChartSeriesCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="650d5-120">`load(option?: { select?: string; expand?: string; }): Excel.ChartSeriesCollection`-Onde Option. Select é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades a serem carregadas, e Options. Expand é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades de navegação a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="650d5-120">`load(option?: { select?: string; expand?: string; }): Excel.ChartSeriesCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="650d5-121">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ChartSeriesCollection`– Disponível somente nos tipos de coleção.</span><span class="sxs-lookup"><span data-stu-id="650d5-121">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ChartSeriesCollection` - Only available on collection types.</span></span> <span data-ttu-id="650d5-122">É semelhante à assinatura anterior.</span><span class="sxs-lookup"><span data-stu-id="650d5-122">It is similar to the preceding signature.</span></span> <span data-ttu-id="650d5-123">Option. Top especifica o número máximo de itens de coleta que podem ser incluídos no resultado.</span><span class="sxs-lookup"><span data-stu-id="650d5-123">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="650d5-124">Option. Skip especifica o número de itens que devem ser ignorados e não incluídos no resultado.</span><span class="sxs-lookup"><span data-stu-id="650d5-124">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="650d5-125">Se Option. Top for especificado, o conjunto de resultados será iniciado depois de ignorar o número de itens especificado.</span><span class="sxs-lookup"><span data-stu-id="650d5-125">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.ChartSeriesCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.ChartSeriesCollection;'
      return:
        type:
          - excel.Excel.ChartSeriesCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - Excel.Interfaces.ChartSeriesCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
  - uid: excel.Excel.ChartSeriesCollection.load_1
    summary: <span data-ttu-id="650d5-126">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="650d5-126">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="650d5-127">Você deve chamar `context.sync()` antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="650d5-127">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.ChartSeriesCollection;'
      return:
        type:
          - excel.Excel.ChartSeriesCollection
        description: |-


          #### <a name="examples"></a><span data-ttu-id="650d5-128">Exemplos</span><span class="sxs-lookup"><span data-stu-id="650d5-128">Examples</span></span>

          ```javascript
          // Getting the names of series in the series collection.
          Excel.run(function (ctx) { 
              var seriesCollection = ctx.workbook.worksheets.getItem("Sheet1").charts.getItem("Chart1").series;
              seriesCollection.load('items');
              return ctx.sync().then(function() {
                  for (var i = 0; i < seriesCollection.items.length; i++)
                  {
                      console.log(seriesCollection.items[i].name);
                  }
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          // Get the number of chart series in collection.
          Excel.run(function (ctx) { 
              var seriesCollection = ctx.workbook.worksheets.getItem("Sheet1").charts.getItem("Chart1").series;
              seriesCollection.load('count');
              return ctx.sync().then(function() {
                  console.log("series: Count= " + seriesCollection.count);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="650d5-129">Uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="650d5-129">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: excel.Excel.ChartSeriesCollection.load_2
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): Excel.ChartSeriesCollection;'
      return:
        type:
          - excel.Excel.ChartSeriesCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - OfficeExtension.LoadOption
  - uid: excel.Excel.ChartSeriesCollection.toJSON
    summary: '<span data-ttu-id="650d5-130">Substitui o método `toJSON()` JavaScript para fornecer uma saída mais útil quando um objeto API é passado para`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="650d5-130">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="650d5-131">.</span><span class="sxs-lookup"><span data-stu-id="650d5-131"></span></span> <span data-ttu-id="650d5-132">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="650d5-132"></span></span><!-- --><span data-ttu-id="650d5-133">, por sua vez, chama `toJSON` o método do objeto que é passado para ele.) Enquanto o objeto `Excel.ChartSeriesCollection` original é um objeto API, o `toJSON` método retorna um objeto JavaScript simples (digitado como`Excel.Interfaces.ChartSeriesCollectionData`</span><span class="sxs-lookup"><span data-stu-id="650d5-133">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.ChartSeriesCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ChartSeriesCollectionData`</span></span><!-- --><span data-ttu-id="650d5-134">) que contém uma matriz de "itens" com cópias superficiais de qualquer propriedade carregada dos itens da coleção.</span><span class="sxs-lookup"><span data-stu-id="650d5-134">) that contains an "items" array with shallow copies of any loaded properties from the collection''s items.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.ChartSeriesCollectionData;'
      return:
        type:
          - excel.Excel.Interfaces.ChartSeriesCollectionData
        description: ''