### YamlMime:UniversalReference
items:
  - uid: excel.Excel.Filter
    summary: |-
      Gerencia a filtragem da coluna de uma tabela.

      \[[Conjunto de APIs: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: Excel.Filter
    fullName: Excel.Filter
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: excel
    children:
      - excel.Excel.Filter.apply
      - excel.Excel.Filter.applyBottomItemsFilter
      - excel.Excel.Filter.applyBottomPercentFilter
      - excel.Excel.Filter.applyCellColorFilter
      - excel.Excel.Filter.applyCustomFilter
      - excel.Excel.Filter.applyCustomFilter_1
      - excel.Excel.Filter.applyDynamicFilter
      - excel.Excel.Filter.applyDynamicFilter_1
      - excel.Excel.Filter.applyFontColorFilter
      - excel.Excel.Filter.applyIconFilter
      - excel.Excel.Filter.applyTopItemsFilter
      - excel.Excel.Filter.applyTopPercentFilter
      - excel.Excel.Filter.applyValuesFilter
      - excel.Excel.Filter.clear
      - excel.Excel.Filter.context
      - excel.Excel.Filter.criteria
      - excel.Excel.Filter.load
      - excel.Excel.Filter.load_1
      - excel.Excel.Filter.load_2
      - excel.Excel.Filter.toJSON
  - uid: excel.Excel.Filter.apply
    summary: |-
      Aplica os critérios de filtro determinados à coluna fornecida.

      \[[Conjunto de APIs: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: apply(criteria)
    fullName: apply(criteria)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'apply(criteria: Excel.FilterCriteria): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: criteria
          description: O critério a ser aplicado.
          type:
            - excel.Excel.FilterCriteria
  - uid: excel.Excel.Filter.applyBottomItemsFilter
    summary: |-
      Aplica um filtro "Item Inferior" à coluna para obter o número de elementos fornecido.

      \[[Conjunto de APIs: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: applyBottomItemsFilter(count)
    fullName: applyBottomItemsFilter(count)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'applyBottomItemsFilter(count: number): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: count
          description: O número de elementos da parte inferior a serem mostrados.
          type:
            - number
  - uid: excel.Excel.Filter.applyBottomPercentFilter
    summary: |-
      Aplica um filtro "Percentual Inferior" à coluna para obter a porcentagem de elementos fornecida.

      \[[Conjunto de APIs: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: applyBottomPercentFilter(percent)
    fullName: applyBottomPercentFilter(percent)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'applyBottomPercentFilter(percent: number): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: percent
          description: A porcentagem de elementos da parte inferior a serem mostrados.
          type:
            - number
  - uid: excel.Excel.Filter.applyCellColorFilter
    summary: |-
      Aplica um filtro "Cor da Célula" à coluna para obter a cor fornecida.

      \[[Conjunto de APIs: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: applyCellColorFilter(color)
    fullName: applyCellColorFilter(color)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'applyCellColorFilter(color: string): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: color
          description: A cor de tela de fundo das células a serem mostradas.
          type:
            - string
  - uid: excel.Excel.Filter.applyCustomFilter
    summary: |-
      Aplica um filtro "Icon" à coluna para obter as cadeias de caracteres de critérios fornecidas.

      \[[Conjunto de APIs: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: 'applyCustomFilter(criteria1, criteria2, oper)'
    fullName: 'applyCustomFilter(criteria1, criteria2, oper)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'applyCustomFilter(criteria1: string, criteria2?: string, oper?: Excel.FilterOperator): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: criteria1
          description: A primeira cadeia de caracteres de critérios.
          type:
            - string
        - id: criteria2
          description: Opcional. A segunda cadeia de caracteres de critérios.
          type:
            - string
        - id: oper
          description: Opcional. O operador que descreve como os dois critérios são unidos.
          type:
            - excel.Excel.FilterOperator
  - uid: excel.Excel.Filter.applyCustomFilter_1
    summary: |-
      Aplica um filtro "Icon" à coluna para obter as cadeias de caracteres de critérios fornecidas.

      \[[Conjunto de APIs: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: 'applyCustomFilter(criteria1, criteria2, operString)'
    fullName: 'applyCustomFilter(criteria1, criteria2, operString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'applyCustomFilter(criteria1: string, criteria2?: string, operString?: "And" | "Or"): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: criteria1
          description: A primeira cadeia de caracteres de critérios.
          type:
            - string
        - id: criteria2
          description: Opcional. A segunda cadeia de caracteres de critérios.
          type:
            - string
        - id: operString
          description: Opcional. O operador que descreve como os dois critérios são unidos.
          type:
            - '"And" | "Or"'
  - uid: excel.Excel.Filter.applyDynamicFilter
    summary: |-
      Aplica um filtro "Dinâmico" à coluna.

      \[[Conjunto de APIs: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: applyDynamicFilter(criteria)
    fullName: applyDynamicFilter(criteria)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'applyDynamicFilter(criteria: Excel.DynamicFilterCriteria): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: criteria
          description: O critério dinâmico a ser aplicado.
          type:
            - excel.Excel.DynamicFilterCriteria
  - uid: excel.Excel.Filter.applyDynamicFilter_1
    summary: |-
      Aplica um filtro "Dinâmico" à coluna.

      \[[Conjunto de APIs: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: applyDynamicFilter(criteriaString)
    fullName: applyDynamicFilter(criteriaString)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'applyDynamicFilter(criteriaString: "Unknown" | "AboveAverage" | "AllDatesInPeriodApril" | "AllDatesInPeriodAugust" | "AllDatesInPeriodDecember" | "AllDatesInPeriodFebruray" | "AllDatesInPeriodJanuary" | "AllDatesInPeriodJuly" | "AllDatesInPeriodJune" | "AllDatesInPeriodMarch" | "AllDatesInPeriodMay" | "AllDatesInPeriodNovember" | "AllDatesInPeriodOctober" | "AllDatesInPeriodQuarter1" | "AllDatesInPeriodQuarter2" | "AllDatesInPeriodQuarter3" | "AllDatesInPeriodQuarter4" | "AllDatesInPeriodSeptember" | "BelowAverage" | "LastMonth" | "LastQuarter" | "LastWeek" | "LastYear" | "NextMonth" | "NextQuarter" | "NextWeek" | "NextYear" | "ThisMonth" | "ThisQuarter" | "ThisWeek" | "ThisYear" | "Today" | "Tomorrow" | "YearToDate" | "Yesterday"): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: criteriaString
          description: O critério dinâmico a ser aplicado.
          type:
            - '"Unknown" | "AboveAverage" | "AllDatesInPeriodApril" | "AllDatesInPeriodAugust" | "AllDatesInPeriodDecember" | "AllDatesInPeriodFebruray" | "AllDatesInPeriodJanuary" | "AllDatesInPeriodJuly" | "AllDatesInPeriodJune" | "AllDatesInPeriodMarch" | "AllDatesInPeriodMay" | "AllDatesInPeriodNovember" | "AllDatesInPeriodOctober" | "AllDatesInPeriodQuarter1" | "AllDatesInPeriodQuarter2" | "AllDatesInPeriodQuarter3" | "AllDatesInPeriodQuarter4" | "AllDatesInPeriodSeptember" | "BelowAverage" | "LastMonth" | "LastQuarter" | "LastWeek" | "LastYear" | "NextMonth" | "NextQuarter" | "NextWeek" | "NextYear" | "ThisMonth" | "ThisQuarter" | "ThisWeek" | "ThisYear" | "Today" | "Tomorrow" | "YearToDate" | "Yesterday"'
  - uid: excel.Excel.Filter.applyFontColorFilter
    summary: |-
      Aplica um filtro "Cor da Fonte" à coluna para obter a cor fornecida.

      \[[Conjunto de APIs: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: applyFontColorFilter(color)
    fullName: applyFontColorFilter(color)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'applyFontColorFilter(color: string): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: color
          description: A cor da fonte das células a serem mostradas.
          type:
            - string
  - uid: excel.Excel.Filter.applyIconFilter
    summary: |-
      Aplicar um filtro "ícone" à coluna para o ícone dado.

      \[[Conjunto de APIs: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: applyIconFilter(icon)
    fullName: applyIconFilter(icon)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'applyIconFilter(icon: Excel.Icon): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: icon
          description: Os ícones das células a serem mostrados.
          type:
            - excel.Excel.Icon
  - uid: excel.Excel.Filter.applyTopItemsFilter
    summary: |-
      Aplica um filtro "Item Superior" à coluna para obter o número de elementos fornecido.

      \[[Conjunto de APIs: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: applyTopItemsFilter(count)
    fullName: applyTopItemsFilter(count)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'applyTopItemsFilter(count: number): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: count
          description: O número de elementos da parte superior a serem mostrados.
          type:
            - number
  - uid: excel.Excel.Filter.applyTopPercentFilter
    summary: |-
      Aplica um filtro "Percentual Superior" à coluna para obter a porcentagem de elementos fornecida.

      \[[Conjunto de APIs: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: applyTopPercentFilter(percent)
    fullName: applyTopPercentFilter(percent)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'applyTopPercentFilter(percent: number): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: percent
          description: A porcentagem de elementos da parte superior a serem mostrados.
          type:
            - number
  - uid: excel.Excel.Filter.applyValuesFilter
    summary: |-
      Aplica um filtro "Valores" à coluna para obter os valores fornecidos.

      \[[Conjunto de APIs: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: applyValuesFilter(values)
    fullName: applyValuesFilter(values)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'applyValuesFilter(values: Array<string | FilterDatetime>): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: values
          description: A lista de valores a serem mostrados. Deve ser uma matriz de cadeias de caracteres ou uma matriz de objetos Excel. FilterDateTime.
          type:
            - Array<string | FilterDatetime>
  - uid: excel.Excel.Filter.clear
    summary: |-
      Limpa o filtro na coluna fornecida.

      \[[Conjunto de APIs: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: clear()
    fullName: clear()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clear(): void;'
      return:
        type:
          - void
        description: ''
  - uid: excel.Excel.Filter.context
    summary: O contexto de solicitação associado ao objeto. Isso conecta o processo do suplemento ao processo do aplicativo host do Office.
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - excel.Excel.RequestContext
  - uid: excel.Excel.Filter.criteria
    summary: |-
      O filtro aplicado no momento à coluna fornecida. Somente leitura.

      \[[Conjunto de APIs: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: criteria
    fullName: criteria
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly criteria: Excel.FilterCriteria;'
      return:
        type:
          - excel.Excel.FilterCriteria
  - uid: excel.Excel.Filter.load
    summary: Coloca um comando na fila para carregar as propriedades especificadas do objeto. Você deve chamar "context.sync()" antes de ler as propriedades.
    remarks: |-
      Além dessa assinatura, este método tem as seguintes assinaturas:

      `load(option?: string | string[]): Excel.Filter`-Where Option é uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.

      `load(option?: { select?: string; expand?: string; }): Excel.Filter`-Onde Option. Select é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades a serem carregadas, e Options. Expand é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades de navegação a serem carregadas.

      `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Filter`– Disponível somente nos tipos de coleção. É semelhante à assinatura anterior. Option. Top especifica o número máximo de itens de coleta que podem ser incluídos no resultado. Option. Skip especifica o número de itens que devem ser ignorados e não incluídos no resultado. Se Option. Top for especificado, o conjunto de resultados será iniciado depois de ignorar o número de itens especificado.
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.FilterLoadOptions): Excel.Filter;'
      return:
        type:
          - excel.Excel.Filter
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.FilterLoadOptions
  - uid: excel.Excel.Filter.load_1
    summary: Coloca um comando na fila para carregar as propriedades especificadas do objeto. Você deve chamar `context.sync()` antes de ler as propriedades.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.Filter;'
      return:
        type:
          - excel.Excel.Filter
        description: ''
      parameters:
        - id: propertyNames
          description: Uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.
          type:
            - 'string | string[]'
  - uid: excel.Excel.Filter.load_2
    summary: Coloca um comando na fila para carregar as propriedades especificadas do objeto. Você deve chamar `context.sync()` antes de ler as propriedades.
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.Filter;'
      return:
        type:
          - excel.Excel.Filter
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: Onde propertyNamesAndPaths. Select é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades a serem carregadas e propertyNamesAndPaths. Expand é uma sequência de caracteres delimitada por vírgula que especifica as propriedades de navegação a serem carregadas.
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel.Excel.Filter.toJSON
    summary: 'Substitui o método `toJSON()` JavaScript para fornecer uma saída mais útil quando um objeto API é passado para`JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, por sua vez, chama `toJSON` o método do objeto que é passado para ele.) Enquanto o objeto Excel. Filter original é um objeto API, o `toJSON` método retorna um objeto JavaScript simples (digitado como`Excel.Interfaces.FilterData`<!-- -->) que contém cópias superficiais de qualquer propriedade filho carregada do objeto original.'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.FilterData;'
      return:
        type:
          - excel.Excel.Interfaces.FilterData
        description: ''