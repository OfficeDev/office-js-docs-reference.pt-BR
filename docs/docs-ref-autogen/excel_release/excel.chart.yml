### YamlMime:UniversalReference
items:
  - uid: excel_release.Excel.Chart
    summary: |-
      Representa um objeto chart em uma pasta de trabalho.

      \[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: Excel.Chart
    fullName: Excel.Chart
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: excel_release
    children:
      - excel_release.Excel.Chart.activate
      - excel_release.Excel.Chart.axes
      - excel_release.Excel.Chart.categoryLabelLevel
      - excel_release.Excel.Chart.chartType
      - excel_release.Excel.Chart.context
      - excel_release.Excel.Chart.dataLabels
      - excel_release.Excel.Chart.delete
      - excel_release.Excel.Chart.displayBlanksAs
      - excel_release.Excel.Chart.format
      - excel_release.Excel.Chart.getImage
      - excel_release.Excel.Chart.getImage_1
      - excel_release.Excel.Chart.height
      - excel_release.Excel.Chart.id
      - excel_release.Excel.Chart.left
      - excel_release.Excel.Chart.legend
      - excel_release.Excel.Chart.load
      - excel_release.Excel.Chart.load_1
      - excel_release.Excel.Chart.load_2
      - excel_release.Excel.Chart.name
      - excel_release.Excel.Chart.onActivated
      - excel_release.Excel.Chart.onDeactivated
      - excel_release.Excel.Chart.pivotOptions
      - excel_release.Excel.Chart.plotArea
      - excel_release.Excel.Chart.plotBy
      - excel_release.Excel.Chart.plotVisibleOnly
      - excel_release.Excel.Chart.series
      - excel_release.Excel.Chart.seriesNameLevel
      - excel_release.Excel.Chart.set
      - excel_release.Excel.Chart.set_1
      - excel_release.Excel.Chart.setData
      - excel_release.Excel.Chart.setData_1
      - excel_release.Excel.Chart.setPosition
      - excel_release.Excel.Chart.showAllFieldButtons
      - excel_release.Excel.Chart.showDataLabelsOverMaximum
      - excel_release.Excel.Chart.style
      - excel_release.Excel.Chart.title
      - excel_release.Excel.Chart.toJSON
      - excel_release.Excel.Chart.top
      - excel_release.Excel.Chart.width
      - excel_release.Excel.Chart.worksheet
  - uid: excel_release.Excel.Chart.activate
    summary: |-
      Ativa o gráfico na interface do usuário do Excel.

      \[[Conjunto de APIs: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: activate()
    fullName: activate()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'activate(): void;'
      return:
        type:
          - void
        description: ''
  - uid: excel_release.Excel.Chart.axes
    summary: |-
      Representa os eixos de um gráfico. Somente leitura.

      \[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: axes
    fullName: axes
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly axes: Excel.ChartAxes;'
      return:
        type:
          - excel.Excel.ChartAxes
  - uid: excel_release.Excel.Chart.categoryLabelLevel
    summary: |-
      Retorna ou define uma constante de enumeração ChartCategoryLabelLevel referindo-se ao nível de onde os rótulos de categoria estão sendo originados. Leitura/gravação.

      \[[Conjunto de APIs: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: categoryLabelLevel
    fullName: categoryLabelLevel
    langs:
      - typeScript
    type: property
    syntax:
      content: 'categoryLabelLevel: number;'
      return:
        type:
          - number
  - uid: excel_release.Excel.Chart.chartType
    summary: |-
      Representa o tipo de gráfico. Confira Excel. ChartType para obter detalhes.

      \[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: chartType
    fullName: chartType
    langs:
      - typeScript
    type: property
    syntax:
      content: 'chartType: Excel.ChartType | "Invalid" | "ColumnClustered" | "ColumnStacked" | "ColumnStacked100" | "3DColumnClustered" | "3DColumnStacked" | "3DColumnStacked100" | "BarClustered" | "BarStacked" | "BarStacked100" | "3DBarClustered" | "3DBarStacked" | "3DBarStacked100" | "LineStacked" | "LineStacked100" | "LineMarkers" | "LineMarkersStacked" | "LineMarkersStacked100" | "PieOfPie" | "PieExploded" | "3DPieExploded" | "BarOfPie" | "XYScatterSmooth" | "XYScatterSmoothNoMarkers" | "XYScatterLines" | "XYScatterLinesNoMarkers" | "AreaStacked" | "AreaStacked100" | "3DAreaStacked" | "3DAreaStacked100" | "DoughnutExploded" | "RadarMarkers" | "RadarFilled" | "Surface" | "SurfaceWireframe" | "SurfaceTopView" | "SurfaceTopViewWireframe" | "Bubble" | "Bubble3DEffect" | "StockHLC" | "StockOHLC" | "StockVHLC" | "StockVOHLC" | "CylinderColClustered" | "CylinderColStacked" | "CylinderColStacked100" | "CylinderBarClustered" | "CylinderBarStacked" | "CylinderBarStacked100" | "CylinderCol" | "ConeColClustered" | "ConeColStacked" | "ConeColStacked100" | "ConeBarClustered" | "ConeBarStacked" | "ConeBarStacked100" | "ConeCol" | "PyramidColClustered" | "PyramidColStacked" | "PyramidColStacked100" | "PyramidBarClustered" | "PyramidBarStacked" | "PyramidBarStacked100" | "PyramidCol" | "3DColumn" | "Line" | "3DLine" | "3DPie" | "Pie" | "XYScatter" | "3DArea" | "Area" | "Doughnut" | "Radar" | "Histogram" | "Boxwhisker" | "Pareto" | "RegionMap" | "Treemap" | "Waterfall" | "Sunburst" | "Funnel";'
      return:
        type:
          - Excel.ChartType | "Invalid" | "ColumnClustered" | "ColumnStacked" | "ColumnStacked100" | "3DColumnClustered" | "3DColumnStacked" | "3DColumnStacked100" | "BarClustered" | "BarStacked" | "BarStacked100" | "3DBarClustered" | "3DBarStacked" | "3DBarStacked100" | "LineStacked" | "LineStacked100" | "LineMarkers" | "LineMarkersStacked" | "LineMarkersStacked100" | "PieOfPie" | "PieExploded" | "3DPieExploded" | "BarOfPie" | "XYScatterSmooth" | "XYScatterSmoothNoMarkers" | "XYScatterLines" | "XYScatterLinesNoMarkers" | "AreaStacked" | "AreaStacked100" | "3DAreaStacked" | "3DAreaStacked100" | "DoughnutExploded" | "RadarMarkers" | "RadarFilled" | "Surface" | "SurfaceWireframe" | "SurfaceTopView" | "SurfaceTopViewWireframe" | "Bubble" | "Bubble3DEffect" | "StockHLC" | "StockOHLC" | "StockVHLC" | "StockVOHLC" | "CylinderColClustered" | "CylinderColStacked" | "CylinderColStacked100" | "CylinderBarClustered" | "CylinderBarStacked" | "CylinderBarStacked100" | "CylinderCol" | "ConeColClustered" | "ConeColStacked" | "ConeColStacked100" | "ConeBarClustered" | "ConeBarStacked" | "ConeBarStacked100" | "ConeCol" | "PyramidColClustered" | "PyramidColStacked" | "PyramidColStacked100" | "PyramidBarClustered" | "PyramidBarStacked" | "PyramidBarStacked100" | "PyramidCol" | "3DColumn" | "Line" | "3DLine" | "3DPie" | "Pie" | "XYScatter" | "3DArea" | "Area" | "Doughnut" | "Radar" | "Histogram" | "Boxwhisker" | "Pareto" | "RegionMap" | "Treemap" | "Waterfall" | "Sunburst" | "Funnel"
  - uid: excel_release.Excel.Chart.context
    summary: O contexto de solicitação associado ao objeto. Isso conecta o processo do suplemento ao processo do aplicativo host do Office.
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: excel_release.Excel.Chart.dataLabels
    summary: |-
      Representa os rótulos de dados no gráfico. Somente leitura.

      \[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: dataLabels
    fullName: dataLabels
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly dataLabels: Excel.ChartDataLabels;'
      return:
        type:
          - excel.Excel.ChartDataLabels
  - uid: excel_release.Excel.Chart.delete
    summary: |-
      Exclui o objeto de gráfico.

      \[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a>Exemplos

          ```javascript
          Excel.run(function (ctx) { 
              var chart = ctx.workbook.worksheets.getItem("Sheet1").charts.getItem("Chart1");    
              chart.delete();
              return ctx.sync(); 
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: excel_release.Excel.Chart.displayBlanksAs
    summary: |-
      Retorna ou define a maneira como as células em branco são plotadas em um gráfico. Leitura/gravação.

      \[[Conjunto de APIs: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: displayBlanksAs
    fullName: displayBlanksAs
    langs:
      - typeScript
    type: property
    syntax:
      content: 'displayBlanksAs: Excel.ChartDisplayBlanksAs | "NotPlotted" | "Zero" | "Interplotted";'
      return:
        type:
          - Excel.ChartDisplayBlanksAs | "NotPlotted" | "Zero" | "Interplotted"
  - uid: excel_release.Excel.Chart.format
    summary: |-
      Encapsula as propriedades de formato da área do gráfico. Somente leitura.

      \[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: format
    fullName: format
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly format: Excel.ChartAreaFormat;'
      return:
        type:
          - excel.Excel.ChartAreaFormat
  - uid: excel_release.Excel.Chart.getImage
    summary: |-
      Processa o gráfico como uma imagem codificada em base64, dimensionando o gráfico para se ajustar às dimensões especificadas. A taxa de proporção é preservada como parte do redimensionamento.

      \[[Conjunto de APIs: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: 'getImage(width, height, fittingMode)'
    fullName: 'getImage(width, height, fittingMode)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getImage(width?: number, height?: number, fittingMode?: Excel.ImageFittingMode): OfficeExtension.ClientResult<string>;'
      return:
        type:
          - OfficeExtension.ClientResult<string>
        description: |-


          #### <a name="examples"></a>Exemplos

          ```javascript
          Excel.run(function (ctx) { 
              var chart = ctx.workbook.worksheets.getItem("Sheet1").charts.getItem("Chart1");    
              var image = chart.getImage();
              return ctx.sync(); 
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: width
          description: (Opcional) A largura desejada da imagem resultante.
          type:
            - number
        - id: height
          description: (Opcional) A altura desejada da imagem resultante.
          type:
            - number
        - id: fittingMode
          description: Opcion O método usado para dimensionar o gráfico para o especificado para as dimensões especificadas (se a altura e a largura forem definidas).
          type:
            - excel.Excel.ImageFittingMode
  - uid: excel_release.Excel.Chart.getImage_1
    summary: |-
      Processa o gráfico como uma imagem codificada em base64, dimensionando o gráfico para se ajustar às dimensões especificadas. A taxa de proporção é preservada como parte do redimensionamento.

      \[[Conjunto de APIs: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: 'getImage(width, height, fittingModeString)'
    fullName: 'getImage(width, height, fittingModeString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getImage(width?: number, height?: number, fittingModeString?: "Fit" | "FitAndCenter" | "Fill"): OfficeExtension.ClientResult<string>;'
      return:
        type:
          - OfficeExtension.ClientResult<string>
        description: ''
      parameters:
        - id: width
          description: (Opcional) A largura desejada da imagem resultante.
          type:
            - number
        - id: height
          description: (Opcional) A altura desejada da imagem resultante.
          type:
            - number
        - id: fittingModeString
          description: Opcion O método usado para dimensionar o gráfico para o especificado para as dimensões especificadas (se a altura e a largura forem definidas).
          type:
            - '"Fit" | "FitAndCenter" | "Fill"'
  - uid: excel_release.Excel.Chart.height
    summary: |-
      Representa a altura, em pontos, do objeto Chart.

      \[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: height
    fullName: height
    langs:
      - typeScript
    type: property
    syntax:
      content: 'height: number;'
      return:
        type:
          - number
  - uid: excel_release.Excel.Chart.id
    summary: |-
      Id exclusiva do gráfico. Somente leitura.

      \[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: string;'
      return:
        type:
          - string
  - uid: excel_release.Excel.Chart.left
    summary: |-
      A distância, em pontos, da esquerda do gráfico à origem da planilha.

      \[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: left
    fullName: left
    langs:
      - typeScript
    type: property
    syntax:
      content: 'left: number;'
      return:
        type:
          - number
  - uid: excel_release.Excel.Chart.legend
    summary: |-
      Representa a legenda do gráfico. Somente leitura.

      \[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: legend
    fullName: legend
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly legend: Excel.ChartLegend;'
      return:
        type:
          - excel.Excel.ChartLegend
  - uid: excel_release.Excel.Chart.load
    summary: Coloca um comando na fila para carregar as propriedades especificadas do objeto. Você deve chamar "context.sync()" antes de ler as propriedades.
    remarks: |-
      Além dessa assinatura, este método tem as seguintes assinaturas:

      `load(option?: string | string[]): Excel.Chart`-Where Option é uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.

      `load(option?: { select?: string; expand?: string; }): Excel.Chart`-Onde Option. Select é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades a serem carregadas, e Options. Expand é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades de navegação a serem carregadas.

      `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Chart`– Disponível somente nos tipos de coleção. É semelhante à assinatura anterior. Option. Top especifica o número máximo de itens de coleta que podem ser incluídos no resultado. Option. Skip especifica o número de itens que devem ser ignorados e não incluídos no resultado. Se Option. Top for especificado, o conjunto de resultados será iniciado depois de ignorar o número de itens especificado.
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.ChartLoadOptions): Excel.Chart;'
      return:
        type:
          - excel.Excel.Chart
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.ChartLoadOptions
  - uid: excel_release.Excel.Chart.load_1
    summary: Coloca um comando na fila para carregar as propriedades especificadas do objeto. Você deve chamar `context.sync()` antes de ler as propriedades.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.Chart;'
      return:
        type:
          - excel.Excel.Chart
        description: |-


          #### <a name="examples"></a>Exemplos

          ```javascript
          // Get a chart named "Chart1"
          Excel.run(function (ctx) { 
              var chart = ctx.workbook.worksheets.getItem("Sheet1").charts.getItem("Chart1");    
              chart.load('name');
              return ctx.sync().then(function() {
                      console.log(chart.name);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: Uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.
          type:
            - 'string | string[]'
  - uid: excel_release.Excel.Chart.load_2
    summary: Coloca um comando na fila para carregar as propriedades especificadas do objeto. Você deve chamar `context.sync()` antes de ler as propriedades.
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.Chart;'
      return:
        type:
          - excel.Excel.Chart
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: Onde propertyNamesAndPaths. Select é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades a serem carregadas e propertyNamesAndPaths. Expand é uma sequência de caracteres delimitada por vírgula que especifica as propriedades de navegação a serem carregadas.
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel_release.Excel.Chart.name
    summary: |-
      Representa o nome de um objeto Chart.

      \[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: name
    fullName: name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'name: string;'
      return:
        type:
          - string
        description: |-


          #### <a name="examples"></a>Exemplos

          ```javascript
          // Rename the chart to new name, resize the chart to 200 points in both height and weight. 
          // Move Chart1 to 100 points to the top and left. 
          Excel.run(function (ctx) { 
              var chart = ctx.workbook.worksheets.getItem("Sheet1").charts.getItem("Chart1");    
              chart.name = "New Name";
              chart.top = 100;
              chart.left = 100;
              chart.height = 200;
              chart.width = 200;
              return ctx.sync(); 
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: excel_release.Excel.Chart.onActivated
    summary: |-
      Ocorre quando o gráfico é ativado.

      \[[Conjunto de APIs: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: onActivated
    fullName: onActivated
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onActivated: OfficeExtension.EventHandlers<Excel.ChartActivatedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.ChartActivatedEventArgs>
        description: |-


          #### <a name="examples"></a>Exemplos

          ```javascript
          Excel.run(function (context){
              var pieChart = context.workbook.worksheets.getActiveWorksheet().charts.getItem("Pie");
              pieChart.onActivated.add(function (event) {
                  return Excel.run((context) => {
                      console.log("The pie chart is the active chart. ID: " + event.chartId);
                      return context.sync();
                  });
              });
              return context.sync();
          });
          ```
  - uid: excel_release.Excel.Chart.onDeactivated
    summary: |-
      Ocorre quando o gráfico é desativado.

      \[[Conjunto de APIs: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: onDeactivated
    fullName: onDeactivated
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onDeactivated: OfficeExtension.EventHandlers<Excel.ChartDeactivatedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.ChartDeactivatedEventArgs>
        description: |-


          #### <a name="examples"></a>Exemplos

          ```javascript
          Excel.run(function (context){
              var pieChart = context.workbook.worksheets.getActiveWorksheet().charts.getItem("Pie");
              pieChart.onDeactivated.add(function (event) {
                  return Excel.run((context) => {
                      console.log("The pie chart is NOT active.");
                      return context.sync();
                  });
              });
              return context.sync();
          });
          ```
  - uid: excel_release.Excel.Chart.pivotOptions
    summary: |-
      Encapsula as opções de um gráfico dinâmico. Somente leitura.

      \[[Conjunto de APIs: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: pivotOptions
    fullName: pivotOptions
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly pivotOptions: Excel.ChartPivotOptions;'
      return:
        type:
          - excel.Excel.ChartPivotOptions
  - uid: excel_release.Excel.Chart.plotArea
    summary: |-
      Representa a plotArea para o gráfico.

      \[[Conjunto de APIs: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: plotArea
    fullName: plotArea
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly plotArea: Excel.ChartPlotArea;'
      return:
        type:
          - excel.Excel.ChartPlotArea
  - uid: excel_release.Excel.Chart.plotBy
    summary: |-
      Retorna ou define como as colunas ou linhas são usadas como séries de dados no gráfico. Leitura/gravação.

      \[[Conjunto de APIs: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: plotBy
    fullName: plotBy
    langs:
      - typeScript
    type: property
    syntax:
      content: 'plotBy: Excel.ChartPlotBy | "Rows" | "Columns";'
      return:
        type:
          - Excel.ChartPlotBy | "Rows" | "Columns"
  - uid: excel_release.Excel.Chart.plotVisibleOnly
    summary: |-
      Verdadeiro se apenas as células visíveis forem plotadas. Falso se ambas as células visíveis e ocultas forem plotadas.. Leitura/gravação.

      \[[Conjunto de APIs: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: plotVisibleOnly
    fullName: plotVisibleOnly
    langs:
      - typeScript
    type: property
    syntax:
      content: 'plotVisibleOnly: boolean;'
      return:
        type:
          - boolean
  - uid: excel_release.Excel.Chart.series
    summary: |-
      Representa uma única série ou uma coleção de séries no gráfico. Somente leitura.

      \[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: series
    fullName: series
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly series: Excel.ChartSeriesCollection;'
      return:
        type:
          - excel.Excel.ChartSeriesCollection
  - uid: excel_release.Excel.Chart.seriesNameLevel
    summary: |-
      Retorna ou define uma constante de enumeração ChartSeriesNameLevel referente ao nível de origem dos nomes das séries. Leitura/gravação.

      \[[Conjunto de APIs: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: seriesNameLevel
    fullName: seriesNameLevel
    langs:
      - typeScript
    type: property
    syntax:
      content: 'seriesNameLevel: number;'
      return:
        type:
          - number
  - uid: excel_release.Excel.Chart.set
    summary: Define várias propriedades de um objeto ao mesmo tempo. Você pode passar um objeto simples com as propriedades apropriadas ou outro objeto API do mesmo tipo.
    remarks: |-
      Este método tem a seguinte assinatura adicional:

      `set(properties: Excel.Chart): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.ChartUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: Um objeto JavaScript com propriedades que são estruturadas isomorphically para as propriedades do objeto no qual o método é chamado.
          type:
            - Interfaces.ChartUpdateData
        - id: options
          description: Fornece uma opção para suprimir erros se o objeto Properties tentar definir qualquer propriedade somente leitura.
          type:
            - office.OfficeExtension.UpdateOptions
  - uid: excel_release.Excel.Chart.set_1
    summary: 'Define várias propriedades no objeto ao mesmo tempo, com base em um objeto carregado existente.'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.Chart): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - excel.Excel.Chart
  - uid: excel_release.Excel.Chart.setData
    summary: |-
      Redefine os dados de origem do gráfico.

      \[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: 'setData(sourceData, seriesBy)'
    fullName: 'setData(sourceData, seriesBy)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setData(sourceData: Range, seriesBy?: Excel.ChartSeriesBy): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: sourceData
          description: O objeto Range correspondente aos dados de origem.
          type:
            - Range
        - id: seriesBy
          description: 'Especifica a forma como as colunas ou linhas são usadas como série de dados no gráfico. Pode ser uma das seguintes opções: auto (padrão), linhas e colunas. Consulte Excel. ChartSeriesBy para obter detalhes.'
          type:
            - excel.Excel.ChartSeriesBy
  - uid: excel_release.Excel.Chart.setData_1
    summary: |-
      Redefine os dados de origem do gráfico.

      \[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: 'setData(sourceData, seriesByString)'
    fullName: 'setData(sourceData, seriesByString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setData(sourceData: Range, seriesByString?: "Auto" | "Columns" | "Rows"): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a>Exemplos

          ```javascript
          // Set the sourceData to be "A1:B4" and seriesBy to be "Columns"
          Excel.run(function (ctx) { 
              var chart = ctx.workbook.worksheets.getItem("Sheet1").charts.getItem("Chart1");    
              var sourceData = "A1:B4";
              chart.setData(sourceData, "Columns");
              return ctx.sync(); 
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: sourceData
          description: O objeto Range correspondente aos dados de origem.
          type:
            - Range
        - id: seriesByString
          description: 'Especifica a forma como as colunas ou linhas são usadas como série de dados no gráfico. Pode ser uma das seguintes opções: auto (padrão), linhas e colunas. Consulte Excel. ChartSeriesBy para obter detalhes.'
          type:
            - '"Auto" | "Columns" | "Rows"'
  - uid: excel_release.Excel.Chart.setPosition
    summary: |-
      Posiciona o gráfico em relação às células na planilha.

      \[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: 'setPosition(startCell, endCell)'
    fullName: 'setPosition(startCell, endCell)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setPosition(startCell: Range | string, endCell?: Range | string): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a>Exemplos

          ```javascript
          Excel.run(function (ctx) { 
              var sheetName = "Charts";
              var rangeSelection = "A1:B4";
              var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeSelection);
              var sourceData = sheetName + "!" + "A1:B4";
              var chart = ctx.workbook.worksheets.getItem(sheetName).charts.add("pie", range, "auto");
              chart.width = 500;
              chart.height = 300;
              chart.setPosition("C2", null);
              return ctx.sync(); 
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: startCell
          description: 'A célula inicial. Esse é o local para o qual o gráfico será movido. A célula inicial é a célula superior esquerda ou direita, dependendo das configurações de exibição do usuário, da esquerda para a direita.'
          type:
            - Range | string
        - id: endCell
          description: '(Opcional) Na célula final. Quando é especificada, a altura e a largura do gráfico são definidas para cobrirem totalmente essa célula ou intervalo.'
          type:
            - Range | string
  - uid: excel_release.Excel.Chart.showAllFieldButtons
    summary: |-
      Representa se deseja exibir todos os botões de campo em um Gráfico Dinâmico.

      \[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: showAllFieldButtons
    fullName: showAllFieldButtons
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showAllFieldButtons: boolean;'
      return:
        type:
          - boolean
  - uid: excel_release.Excel.Chart.showDataLabelsOverMaximum
    summary: |-
      Representa se os rótulos de dados devem ser mostrados quando o valor for maior que o valor máximo no eixo de valor. Se o eixo dos valores tornar-se menor do que o tamanho dos pontos de dados, você poderá usar essa propriedade para definir se os rótulos de dados serão exibidos. Essa propriedade se aplica somente a gráficos 2D.

      \[[Conjunto de APIs: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: showDataLabelsOverMaximum
    fullName: showDataLabelsOverMaximum
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showDataLabelsOverMaximum: boolean;'
      return:
        type:
          - boolean
  - uid: excel_release.Excel.Chart.style
    summary: |-
      Retorna ou define o estilo do gráfico para o gráfico. Leitura/gravação.

      \[[Conjunto de APIs: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: style
    fullName: style
    langs:
      - typeScript
    type: property
    syntax:
      content: 'style: number;'
      return:
        type:
          - number
  - uid: excel_release.Excel.Chart.title
    summary: |-
      Representa o título do gráfico especificado, incluindo o respectivo texto, a visibilidade, a posição e a formatação. Somente leitura.

      \[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: title
    fullName: title
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly title: Excel.ChartTitle;'
      return:
        type:
          - excel.Excel.ChartTitle
  - uid: excel_release.Excel.Chart.toJSON
    summary: 'Substitui o método `toJSON()` JavaScript para fornecer uma saída mais útil quando um objeto API é passado para`JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, por sua vez, chama `toJSON` o método do objeto que é passado para ele.) Enquanto o objeto Excel. Chart original é um objeto API, o `toJSON` método retorna um objeto JavaScript simples (digitado como`Excel.Interfaces.ChartData`<!-- -->) que contém cópias superficiais de qualquer propriedade filho carregada do objeto original.'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.ChartData;'
      return:
        type:
          - excel.Excel.Interfaces.ChartData
        description: ''
  - uid: excel_release.Excel.Chart.top
    summary: |-
      Representa a distância, em pontos, da borda superior do objeto à parte superior da primeira linha de uma planilha ou da área de um gráfico.

      \[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: top
    fullName: top
    langs:
      - typeScript
    type: property
    syntax:
      content: 'top: number;'
      return:
        type:
          - number
  - uid: excel_release.Excel.Chart.width
    summary: |-
      Representa a largura, em pontos, do objeto de gráfico.

      \[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: width
    fullName: width
    langs:
      - typeScript
    type: property
    syntax:
      content: 'width: number;'
      return:
        type:
          - number
  - uid: excel_release.Excel.Chart.worksheet
    summary: |-
      A planilha que contém o gráfico atual. Somente leitura.

      \[[Conjunto de APIs: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: worksheet
    fullName: worksheet
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly worksheet: Excel.Worksheet;'
      return:
        type:
          - excel.Excel.Worksheet