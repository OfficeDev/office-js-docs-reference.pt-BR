### YamlMime:UniversalReference
ms.openlocfilehash: 49b5b136463b4b8790dac6784f133005d0a73fea
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: pt-BR
ms.lasthandoff: 02/20/2019
ms.locfileid: "30105423"
items:
- uid: excel_release.Excel.ConditionalFormat
  summary: >-
    <span data-ttu-id="48328-101">Um objeto que encapsula o intervalo, o formato, a regra e outras propriedades de um formato condicional.</span><span class="sxs-lookup"><span data-stu-id="48328-101">An object encapsulating a conditional format's range, format, rule, and other properties.</span></span>


    <span data-ttu-id="48328-102">\[[Conjunto de APIs: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="48328-102">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.ConditionalFormat
  fullName: Excel.ConditionalFormat
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel_release
  children:
  - excel_release.Excel.ConditionalFormat.cellValue
  - excel_release.Excel.ConditionalFormat.cellValueOrNullObject
  - excel_release.Excel.ConditionalFormat.colorScale
  - excel_release.Excel.ConditionalFormat.colorScaleOrNullObject
  - excel_release.Excel.ConditionalFormat.context
  - excel_release.Excel.ConditionalFormat.custom
  - excel_release.Excel.ConditionalFormat.customOrNullObject
  - excel_release.Excel.ConditionalFormat.dataBar
  - excel_release.Excel.ConditionalFormat.dataBarOrNullObject
  - excel_release.Excel.ConditionalFormat.delete
  - excel_release.Excel.ConditionalFormat.getRange
  - excel_release.Excel.ConditionalFormat.getRangeOrNullObject
  - excel_release.Excel.ConditionalFormat.iconSet
  - excel_release.Excel.ConditionalFormat.iconSetOrNullObject
  - excel_release.Excel.ConditionalFormat.id
  - excel_release.Excel.ConditionalFormat.load
  - excel_release.Excel.ConditionalFormat.load_1
  - excel_release.Excel.ConditionalFormat.load_2
  - excel_release.Excel.ConditionalFormat.preset
  - excel_release.Excel.ConditionalFormat.presetOrNullObject
  - excel_release.Excel.ConditionalFormat.priority
  - excel_release.Excel.ConditionalFormat.set
  - excel_release.Excel.ConditionalFormat.set_1
  - excel_release.Excel.ConditionalFormat.stopIfTrue
  - excel_release.Excel.ConditionalFormat.textComparison
  - excel_release.Excel.ConditionalFormat.textComparisonOrNullObject
  - excel_release.Excel.ConditionalFormat.toJSON
  - excel_release.Excel.ConditionalFormat.topBottom
  - excel_release.Excel.ConditionalFormat.topBottomOrNullObject
  - excel_release.Excel.ConditionalFormat.type
- uid: excel_release.Excel.ConditionalFormat.cellValue
  summary: >-
    <span data-ttu-id="48328-103">Retorna as propriedades do formato condicional do valor da célula se o formato condicional atual for um tipo Cellvalue.</span><span class="sxs-lookup"><span data-stu-id="48328-103">Returns the cell value conditional format properties if the current conditional format is a CellValue type.</span></span> <span data-ttu-id="48328-104">Por exemplo, para formatar todas as células entre 5 e 10.</span><span class="sxs-lookup"><span data-stu-id="48328-104">For example to format all cells between 5 and 10.</span></span> <span data-ttu-id="48328-105">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="48328-105">Read-only.</span></span>


    <span data-ttu-id="48328-106">\[[Conjunto de APIs: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="48328-106">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: cellValue
  fullName: cellValue
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly cellValue: Excel.CellValueConditionalFormat;'
    return:
      type:
      - excel.Excel.CellValueConditionalFormat
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"48328-107\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"48328-107\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const range = sheet.getRange(\"B21:E23\");\n    const conditionalFormat = range.conditionalFormats\n        .add(Excel.ConditionalFormatType.cellValue);\n    conditionalFormat.cellValue.format.font.color = \"red\";\n    conditionalFormat.cellValue.rule = { formula1: \"=0\", operator: \"LessThan\" };\n\n    await context.sync();\n});\n```"
- uid: excel_release.Excel.ConditionalFormat.cellValueOrNullObject
  summary: >-
    <span data-ttu-id="48328-108">Retorna as propriedades do formato condicional do valor da célula se o formato condicional atual for um tipo Cellvalue.</span><span class="sxs-lookup"><span data-stu-id="48328-108">Returns the cell value conditional format properties if the current conditional format is a CellValue type.</span></span> <span data-ttu-id="48328-109">Por exemplo, para formatar todas as células entre 5 e 10.</span><span class="sxs-lookup"><span data-stu-id="48328-109">For example to format all cells between 5 and 10.</span></span> <span data-ttu-id="48328-110">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="48328-110">Read-only.</span></span>


    <span data-ttu-id="48328-111">\[[Conjunto de APIs: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="48328-111">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: cellValueOrNullObject
  fullName: cellValueOrNullObject
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly cellValueOrNullObject: Excel.CellValueConditionalFormat;'
    return:
      type:
      - excel.Excel.CellValueConditionalFormat
- uid: excel_release.Excel.ConditionalFormat.colorScale
  summary: >-
    <span data-ttu-id="48328-p103">Retornará as propriedades de formato condicional de ColorScale se o formato condicional atual for um tipo de ColorScale. Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="48328-p103">Returns the ColorScale conditional format properties if the current conditional format is an ColorScale type. Read-only.</span></span>


    <span data-ttu-id="48328-114">\[[Conjunto de APIs: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="48328-114">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: colorScale
  fullName: colorScale
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly colorScale: Excel.ColorScaleConditionalFormat;'
    return:
      type:
      - excel.Excel.ColorScaleConditionalFormat
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"48328-115\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"48328-115\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const range = sheet.getRange(\"B2:M5\");\n    const conditionalFormat = range.conditionalFormats\n        .add(Excel.ConditionalFormatType.colorScale);\n    const criteria = {\n        minimum: { formula: null, type: Excel.ConditionalFormatColorCriterionType.lowestValue, color: \"blue\" },\n        midpoint: { formula: \"50\", type: Excel.ConditionalFormatColorCriterionType.percent, color: \"yellow\" },\n        maximum: { formula: null, type: Excel.ConditionalFormatColorCriterionType.highestValue, color: \"red\" }\n    };\n    conditionalFormat.colorScale.criteria = criteria;\n\n    await context.sync();\n});\n```"
- uid: excel_release.Excel.ConditionalFormat.colorScaleOrNullObject
  summary: >-
    <span data-ttu-id="48328-p104">Retornará as propriedades de formato condicional de ColorScale se o formato condicional atual for um tipo de ColorScale. Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="48328-p104">Returns the ColorScale conditional format properties if the current conditional format is an ColorScale type. Read-only.</span></span>


    <span data-ttu-id="48328-118">\[[Conjunto de APIs: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="48328-118">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: colorScaleOrNullObject
  fullName: colorScaleOrNullObject
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly colorScaleOrNullObject: Excel.ColorScaleConditionalFormat;'
    return:
      type:
      - excel.Excel.ColorScaleConditionalFormat
- uid: excel_release.Excel.ConditionalFormat.context
  summary: <span data-ttu-id="48328-119">O contexto de solicitação associado ao objeto.</span><span class="sxs-lookup"><span data-stu-id="48328-119">The request context associated with the object.</span></span> <span data-ttu-id="48328-120">Isso conecta o processo do suplemento ao processo do aplicativo host do Office.</span><span class="sxs-lookup"><span data-stu-id="48328-120">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel_release.Excel.ConditionalFormat.custom
  summary: >-
    <span data-ttu-id="48328-p106">Retornará as propriedades personalizadas do formato condicional se o formato condicional atual for um tipo personalizado. Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="48328-p106">Returns the custom conditional format properties if the current conditional format is a custom type. Read-only.</span></span>


    <span data-ttu-id="48328-123">\[[Conjunto de APIs: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="48328-123">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: custom
  fullName: custom
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly custom: Excel.CustomConditionalFormat;'
    return:
      type:
      - excel.Excel.CustomConditionalFormat
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"48328-124\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"48328-124\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const range = sheet.getRange(\"B8:E13\");\n    const conditionalFormat = range.conditionalFormats.add(Excel.ConditionalFormatType.custom);\n    conditionalFormat.custom.rule.formula = '=IF(B8>INDIRECT(\"RC[-1]\",0),TRUE)';\n    conditionalFormat.custom.format.font.color = \"green\";\n\n    await context.sync();\n});\n```"
- uid: excel_release.Excel.ConditionalFormat.customOrNullObject
  summary: >-
    <span data-ttu-id="48328-p107">Retornará as propriedades personalizadas do formato condicional se o formato condicional atual for um tipo personalizado. Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="48328-p107">Returns the custom conditional format properties if the current conditional format is a custom type. Read-only.</span></span>


    <span data-ttu-id="48328-127">\[[Conjunto de APIs: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="48328-127">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: customOrNullObject
  fullName: customOrNullObject
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly customOrNullObject: Excel.CustomConditionalFormat;'
    return:
      type:
      - excel.Excel.CustomConditionalFormat
- uid: excel_release.Excel.ConditionalFormat.dataBar
  summary: >-
    <span data-ttu-id="48328-p108">Retornará as propriedades da barra de dados se o formato condicional atual for uma barra de dados. Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="48328-p108">Returns the data bar properties if the current conditional format is a data bar. Read-only.</span></span>


    <span data-ttu-id="48328-130">\[[Conjunto de APIs: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="48328-130">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: dataBar
  fullName: dataBar
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly dataBar: Excel.DataBarConditionalFormat;'
    return:
      type:
      - excel.Excel.DataBarConditionalFormat
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"48328-131\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"48328-131\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const range = sheet.getRange(\"B8:E13\");\n    const conditionalFormat = range.conditionalFormats\n        .add(Excel.ConditionalFormatType.dataBar);\n    conditionalFormat.dataBar.barDirection = Excel.ConditionalDataBarDirection.leftToRight;\n\n    await context.sync();\n});\n```"
- uid: excel_release.Excel.ConditionalFormat.dataBarOrNullObject
  summary: >-
    <span data-ttu-id="48328-p109">Retornará as propriedades da barra de dados se o formato condicional atual for uma barra de dados. Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="48328-p109">Returns the data bar properties if the current conditional format is a data bar. Read-only.</span></span>


    <span data-ttu-id="48328-134">\[[Conjunto de APIs: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="48328-134">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: dataBarOrNullObject
  fullName: dataBarOrNullObject
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly dataBarOrNullObject: Excel.DataBarConditionalFormat;'
    return:
      type:
      - excel.Excel.DataBarConditionalFormat
- uid: excel_release.Excel.ConditionalFormat.delete
  summary: >-
    <span data-ttu-id="48328-135">Exclui esse formato condicional.</span><span class="sxs-lookup"><span data-stu-id="48328-135">Deletes this conditional format.</span></span>


    <span data-ttu-id="48328-136">\[[Conjunto de APIs: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="48328-136">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: delete()
  fullName: delete()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'delete(): void;'
    return:
      type:
      - void
      description: ''
- uid: excel_release.Excel.ConditionalFormat.getRange
  summary: >-
    <span data-ttu-id="48328-137">Retorna o intervalo ao qual a formatação condicional é aplicada.</span><span class="sxs-lookup"><span data-stu-id="48328-137">Returns the range the conditonal format is applied to.</span></span> <span data-ttu-id="48328-138">Gera um erro se a formatação condicional for aplicada a vários intervalos.</span><span class="sxs-lookup"><span data-stu-id="48328-138">Throws an error if the conditional format is applied to multiple ranges.</span></span> <span data-ttu-id="48328-139">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="48328-139">Read-only.</span></span>


    <span data-ttu-id="48328-140">\[[Conjunto de APIs: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="48328-140">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getRange()
  fullName: getRange()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getRange(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"48328-141\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"48328-141\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const worksheetRange = sheet.getRange();\n    worksheetRange.conditionalFormats.load(\"type\");\n\n    await context.sync();\n\n    let cfRangePairs: { cf: Excel.ConditionalFormat, range: Excel.Range }[] = [];\n    worksheetRange.conditionalFormats.items.forEach(item => {\n        cfRangePairs.push({\n            cf: item,\n            range: item.getRange().load(\"address\")\n        });\n    });\n\n    await context.sync();\n\n    if (cfRangePairs.length > 0) {\n        cfRangePairs.forEach(item => {\n            console.log(item.cf.type);\n        });\n    } else {\n        console.log(\"No conditional formats applied.\");\n    }\n});\n```"
- uid: excel_release.Excel.ConditionalFormat.getRangeOrNullObject
  summary: >-
    <span data-ttu-id="48328-142">Retorna o intervalo ao qual o formato conditonal é aplicado, ou um objeto NULL, se o formato condicional for aplicado a vários intervalos.</span><span class="sxs-lookup"><span data-stu-id="48328-142">Returns the range the conditonal format is applied to, or a null object if the conditional format is applied to multiple ranges.</span></span> <span data-ttu-id="48328-143">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="48328-143">Read-only.</span></span>


    <span data-ttu-id="48328-144">\[[Conjunto de APIs: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="48328-144">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getRangeOrNullObject()
  fullName: getRangeOrNullObject()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getRangeOrNullObject(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: ''
- uid: excel_release.Excel.ConditionalFormat.iconSet
  summary: >-
    <span data-ttu-id="48328-p112">Retornará as propriedades do formato condicional de IconSet se o formato condicional atual for um tipo de IconSet. Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="48328-p112">Returns the IconSet conditional format properties if the current conditional format is an IconSet type. Read-only.</span></span>


    <span data-ttu-id="48328-147">\[[Conjunto de APIs: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="48328-147">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: iconSet
  fullName: iconSet
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly iconSet: Excel.IconSetConditionalFormat;'
    return:
      type:
      - excel.Excel.IconSetConditionalFormat
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"48328-148\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"48328-148\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const range = sheet.getRange(\"B8:E13\");\n    const conditionalFormat = range.conditionalFormats\n        .add(Excel.ConditionalFormatType.iconSet);\n    const iconSetCF = conditionalFormat.iconSet;\n    iconSetCF.style = Excel.IconSet.threeTriangles;\n\n    /*\n        The iconSetCF.criteria array is automatically prepopulated with\n        criterion elements whose properties have been given default settings.\n        You can't write to each property of a criterion directly. Instead,\n        replace the whole criteria object.\n\n        With a \"three*\" icon set style, such as \"threeTriangles\", the third\n        element in the criteria array (criteria[2]) defines the \"top\" icon;\n        e.g., a green triangle. The second (criteria[1]) defines the \"middle\"\n        icon, The first (criteria[0]) defines the \"low\" icon, but it\n        can often be left empty as this method does below, because every\n        cell that does not match the other two criteria always gets the low\n        icon.            \n    */\n    iconSetCF.criteria = [\n        {} as any,\n        {\n            type: Excel.ConditionalFormatIconRuleType.number,\n            operator: Excel.ConditionalIconCriterionOperator.greaterThanOrEqual,\n            formula: \"=700\"\n        },\n        {\n            type: Excel.ConditionalFormatIconRuleType.number,\n            operator: Excel.ConditionalIconCriterionOperator.greaterThanOrEqual,\n            formula: \"=1000\",\n        }\n    ];\n\n    await context.sync();\n});\n```"
- uid: excel_release.Excel.ConditionalFormat.iconSetOrNullObject
  summary: >-
    <span data-ttu-id="48328-p113">Retornará as propriedades do formato condicional de IconSet se o formato condicional atual for um tipo de IconSet. Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="48328-p113">Returns the IconSet conditional format properties if the current conditional format is an IconSet type. Read-only.</span></span>


    <span data-ttu-id="48328-151">\[[Conjunto de APIs: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="48328-151">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: iconSetOrNullObject
  fullName: iconSetOrNullObject
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly iconSetOrNullObject: Excel.IconSetConditionalFormat;'
    return:
      type:
      - excel.Excel.IconSetConditionalFormat
- uid: excel_release.Excel.ConditionalFormat.id
  summary: >-
    <span data-ttu-id="48328-152">A prioridade do formato condicional na atual ConditionalFormatCollection.</span><span class="sxs-lookup"><span data-stu-id="48328-152">The Priority of the Conditional Format within the current ConditionalFormatCollection.</span></span> <span data-ttu-id="48328-153">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="48328-153">Read-only.</span></span>


    <span data-ttu-id="48328-154">\[[Conjunto de APIs: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="48328-154">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: id
  fullName: id
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly id: string;'
    return:
      type:
      - string
- uid: excel_release.Excel.ConditionalFormat.load
  summary: <span data-ttu-id="48328-155">Enfileira um comando para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="48328-155">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="48328-156">Você deve chamar "context. Sync ()" antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="48328-156">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="48328-157">Além dessa assinatura, este método tem as seguintes assinaturas:</span><span class="sxs-lookup"><span data-stu-id="48328-157">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="48328-158">`load(option?: string | string[]): Excel.ConditionalFormat`-Where Option é uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="48328-158">`load(option?: string | string[]): Excel.ConditionalFormat` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="48328-159">`load(option?: { select?: string; expand?: string; }): Excel.ConditionalFormat`-Onde Option. Select é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades a serem carregadas, e Options. Expand é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades de navegação a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="48328-159">`load(option?: { select?: string; expand?: string; }): Excel.ConditionalFormat` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="48328-160">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ConditionalFormat`– Disponível somente nos tipos de coleção.</span><span class="sxs-lookup"><span data-stu-id="48328-160">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ConditionalFormat` - Only available on collection types.</span></span> <span data-ttu-id="48328-161">É semelhante à assinatura anterior.</span><span class="sxs-lookup"><span data-stu-id="48328-161">It is similar to the preceding signature.</span></span> <span data-ttu-id="48328-162">Option. Top especifica o número máximo de itens de coleta que podem ser incluídos no resultado.</span><span class="sxs-lookup"><span data-stu-id="48328-162">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="48328-163">Option. Skip especifica o número de itens que devem ser ignorados e não incluídos no resultado.</span><span class="sxs-lookup"><span data-stu-id="48328-163">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="48328-164">Se Option. Top for especificado, o conjunto de resultados será iniciado depois de ignorar o número de itens especificado.</span><span class="sxs-lookup"><span data-stu-id="48328-164">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.ConditionalFormatLoadOptions): Excel.ConditionalFormat;'
    return:
      type:
      - excel.Excel.ConditionalFormat
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - excel.Excel.Interfaces.ConditionalFormatLoadOptions
- uid: excel_release.Excel.ConditionalFormat.load_1
  summary: <span data-ttu-id="48328-165">Enfileira um comando para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="48328-165">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="48328-166">Você deve chamar `context.sync()` antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="48328-166">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.ConditionalFormat;'
    return:
      type:
      - excel.Excel.ConditionalFormat
      description: ''
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="48328-167">Uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="48328-167">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel_release.Excel.ConditionalFormat.load_2
  summary: <span data-ttu-id="48328-168">Enfileira um comando para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="48328-168">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="48328-169">Você deve chamar `context.sync()` antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="48328-169">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.ConditionalFormat;'
    return:
      type:
      - excel.Excel.ConditionalFormat
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: <span data-ttu-id="48328-170">Onde propertyNamesAndPaths. Select é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades a serem carregadas e propertyNamesAndPaths. Expand é uma sequência de caracteres delimitada por vírgula que especifica as propriedades de navegação a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="48328-170">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>
      type:
      - '{ select?: string; expand?: string; }'
- uid: excel_release.Excel.ConditionalFormat.preset
  summary: >-
    <span data-ttu-id="48328-171">Retorna o formato condicional de critérios predefinidos.</span><span class="sxs-lookup"><span data-stu-id="48328-171">Returns the preset criteria conditional format.</span></span> <span data-ttu-id="48328-172">ConFira Excel. PresetCriteriaConditionalFormat para obter mais detalhes.</span><span class="sxs-lookup"><span data-stu-id="48328-172">See Excel.PresetCriteriaConditionalFormat for more details.</span></span>


    <span data-ttu-id="48328-173">\[[Conjunto de APIs: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="48328-173">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: preset
  fullName: preset
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly preset: Excel.PresetCriteriaConditionalFormat;'
    return:
      type:
      - excel.Excel.PresetCriteriaConditionalFormat
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"48328-174\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"48328-174\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const range = sheet.getRange(\"B2:M5\");\n    const conditionalFormat = range.conditionalFormats\n        .add(Excel.ConditionalFormatType.presetCriteria);\n    conditionalFormat.preset.format.font.color = \"white\";\n    conditionalFormat.preset.rule = { criterion: Excel.ConditionalFormatPresetCriterion.oneStdDevAboveAverage };\n\n    await context.sync();\n});\n```"
- uid: excel_release.Excel.ConditionalFormat.presetOrNullObject
  summary: >-
    <span data-ttu-id="48328-175">Retorna o formato condicional de critérios predefinidos.</span><span class="sxs-lookup"><span data-stu-id="48328-175">Returns the preset criteria conditional format.</span></span> <span data-ttu-id="48328-176">ConFira Excel. PresetCriteriaConditionalFormat para obter mais detalhes.</span><span class="sxs-lookup"><span data-stu-id="48328-176">See Excel.PresetCriteriaConditionalFormat for more details.</span></span>


    <span data-ttu-id="48328-177">\[[Conjunto de APIs: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="48328-177">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: presetOrNullObject
  fullName: presetOrNullObject
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly presetOrNullObject: Excel.PresetCriteriaConditionalFormat;'
    return:
      type:
      - excel.Excel.PresetCriteriaConditionalFormat
- uid: excel_release.Excel.ConditionalFormat.priority
  summary: >-
    <span data-ttu-id="48328-178">A prioridade (ou índice) dentro da coleção de formato condicional em que esse formato condicional existe atualmente no.</span><span class="sxs-lookup"><span data-stu-id="48328-178">The priority (or index) within the conditional format collection that this conditional format currently exists in.</span></span> <span data-ttu-id="48328-179">Alterar isso também altera as prioridades de formatos condicionais, para permitir uma ordem de prioridade contígua.</span><span class="sxs-lookup"><span data-stu-id="48328-179">Changing this also changes other conditional formats' priorities, to allow for a contiguous priority order.</span></span> <span data-ttu-id="48328-180">Use uma prioridade negativa para começar de trás.</span><span class="sxs-lookup"><span data-stu-id="48328-180">Use a negative priority to begin from the back.</span></span> <span data-ttu-id="48328-181">As prioridades maiores do que os limites serão obtidas e definidas com a prioridade máxima (ou mínima se negativa).</span><span class="sxs-lookup"><span data-stu-id="48328-181">Priorities greater than than bounds will get and set to the maximum (or minimum if negative) priority.</span></span> <span data-ttu-id="48328-182">Observe também que, se você alterar a prioridade, será necessário buscar novamente uma nova cópia do objeto nesse novo local de prioridade, se quiser fazer outras alterações.</span><span class="sxs-lookup"><span data-stu-id="48328-182">Also note that if you change the priority, you have to re-fetch a new copy of the object at that new priority location if you want to make further changes to it.</span></span> <span data-ttu-id="48328-183">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="48328-183">Read-only.</span></span>


    <span data-ttu-id="48328-184">\[[Conjunto de APIs: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="48328-184">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: priority
  fullName: priority
  langs:
  - typeScript
  type: property
  syntax:
    content: 'priority: number;'
    return:
      type:
      - number
- uid: excel_release.Excel.ConditionalFormat.set
  summary: <span data-ttu-id="48328-185">Define várias propriedades de um objeto ao mesmo tempo.</span><span class="sxs-lookup"><span data-stu-id="48328-185">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="48328-186">Você pode passar um objeto simples com as propriedades apropriadas ou outro objeto API do mesmo tipo.</span><span class="sxs-lookup"><span data-stu-id="48328-186">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>
  remarks: >-
    <span data-ttu-id="48328-187">Este método tem a seguinte assinatura adicional:</span><span class="sxs-lookup"><span data-stu-id="48328-187">This method has the following additional signature:</span></span>


    `set(properties: Excel.ConditionalFormat): void`
  name: set(properties, options)
  fullName: set(properties, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Interfaces.ConditionalFormatUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: <span data-ttu-id="48328-188">Um objeto JavaScript com propriedades que são estruturadas isomorphically para as propriedades do objeto no qual o método é chamado.</span><span class="sxs-lookup"><span data-stu-id="48328-188">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
      type:
      - Interfaces.ConditionalFormatUpdateData
    - id: options
      description: <span data-ttu-id="48328-189">Fornece uma opção para suprimir erros se o objeto Properties tentar definir qualquer propriedade somente leitura.</span><span class="sxs-lookup"><span data-stu-id="48328-189">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
      type:
      - office.OfficeExtension.UpdateOptions
- uid: excel_release.Excel.ConditionalFormat.set_1
  summary: <span data-ttu-id="48328-190">Define várias propriedades no objeto ao mesmo tempo, com base em um objeto carregado existente.</span><span class="sxs-lookup"><span data-stu-id="48328-190">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>
  name: set(properties)
  fullName: set(properties)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Excel.ConditionalFormat): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: ''
      type:
      - excel.Excel.ConditionalFormat
- uid: excel_release.Excel.ConditionalFormat.stopIfTrue
  summary: >-
    <span data-ttu-id="48328-191">Se as condições desse formato condicional forem atendidas, nenhum formato de prioridade mais baixa terá efeito nessa célula.</span><span class="sxs-lookup"><span data-stu-id="48328-191">If the conditions of this conditional format are met, no lower-priority formats shall take effect on that cell.</span></span> <span data-ttu-id="48328-192">Nulo em databars, conjuntos de ícones e colorscales como não há o conceito de StopIfTrue para estes</span><span class="sxs-lookup"><span data-stu-id="48328-192">Null on databars, icon sets, and colorscales as there's no concept of StopIfTrue for these</span></span>


    <span data-ttu-id="48328-193">\[[Conjunto de APIs: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="48328-193">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: stopIfTrue
  fullName: stopIfTrue
  langs:
  - typeScript
  type: property
  syntax:
    content: 'stopIfTrue: boolean;'
    return:
      type:
      - boolean
- uid: excel_release.Excel.ConditionalFormat.textComparison
  summary: >-
    <span data-ttu-id="48328-194">Retorna as propriedades de formato condicional de texto específico se o formato condicional atual for um tipo de texto.</span><span class="sxs-lookup"><span data-stu-id="48328-194">Returns the specific text conditional format properties if the current conditional format is a text type.</span></span> <span data-ttu-id="48328-195">Por exemplo, para formatar células que correspondem à palavra "text".</span><span class="sxs-lookup"><span data-stu-id="48328-195">For example to format cells matching the word "Text".</span></span> <span data-ttu-id="48328-196">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="48328-196">Read-only.</span></span>


    <span data-ttu-id="48328-197">\[[Conjunto de APIs: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="48328-197">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: textComparison
  fullName: textComparison
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly textComparison: Excel.TextConditionalFormat;'
    return:
      type:
      - excel.Excel.TextConditionalFormat
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"48328-198\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"48328-198\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const range = sheet.getRange(\"B16:D18\");\n    const conditionalFormat = range.conditionalFormats\n        .add(Excel.ConditionalFormatType.containsText);\n    conditionalFormat.textComparison.format.font.color = \"red\";\n    conditionalFormat.textComparison.rule = { operator: Excel.ConditionalTextOperator.contains, text: \"Delayed\" };\n\n    await context.sync();\n});\n```"
- uid: excel_release.Excel.ConditionalFormat.textComparisonOrNullObject
  summary: >-
    <span data-ttu-id="48328-199">Retorna as propriedades de formato condicional de texto específico se o formato condicional atual for um tipo de texto.</span><span class="sxs-lookup"><span data-stu-id="48328-199">Returns the specific text conditional format properties if the current conditional format is a text type.</span></span> <span data-ttu-id="48328-200">Por exemplo, para formatar células que correspondem à palavra "text".</span><span class="sxs-lookup"><span data-stu-id="48328-200">For example to format cells matching the word "Text".</span></span> <span data-ttu-id="48328-201">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="48328-201">Read-only.</span></span>


    <span data-ttu-id="48328-202">\[[Conjunto de APIs: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="48328-202">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: textComparisonOrNullObject
  fullName: textComparisonOrNullObject
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly textComparisonOrNullObject: Excel.TextConditionalFormat;'
    return:
      type:
      - excel.Excel.TextConditionalFormat
- uid: excel_release.Excel.ConditionalFormat.toJSON
  summary: <span data-ttu-id="48328-203">Substitui o método `toJSON()` JavaScript para fornecer uma saída mais útil quando um objeto API é passado para `JSON.stringify()` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="48328-203">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="48328-204">(`JSON.stringify`<!-- -->, por sua vez, chama `toJSON` o método do objeto que é passado para ele). Enquanto o objeto Excel. ConditionalFormat original é um objeto API, o `toJSON` método retorna um objeto JavaScript simples (digitado `Excel.Interfaces.ConditionalFormatData` <!-- -->como) que contém cópias superficiais de qualquer propriedade filho carregada do objeto original.</span><span class="sxs-lookup"><span data-stu-id="48328-204">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.ConditionalFormat object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ConditionalFormatData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.ConditionalFormatData;'
    return:
      type:
      - excel.Excel.Interfaces.ConditionalFormatData
      description: ''
- uid: excel_release.Excel.ConditionalFormat.topBottom
  summary: >-
    <span data-ttu-id="48328-205">Retorna as propriedades de formato condicional superior/inferior se o formato condicional atual for um tipo TopBottom.</span><span class="sxs-lookup"><span data-stu-id="48328-205">Returns the Top/Bottom conditional format properties if the current conditional format is an TopBottom type.</span></span> <span data-ttu-id="48328-206">Por exemplo para formatar os primeiros 10% ou 10 itens inferiores.</span><span class="sxs-lookup"><span data-stu-id="48328-206">For example to format the top 10% or bottom 10 items.</span></span> <span data-ttu-id="48328-207">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="48328-207">Read-only.</span></span>


    <span data-ttu-id="48328-208">\[[Conjunto de APIs: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="48328-208">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: topBottom
  fullName: topBottom
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly topBottom: Excel.TopBottomConditionalFormat;'
    return:
      type:
      - excel.Excel.TopBottomConditionalFormat
- uid: excel_release.Excel.ConditionalFormat.topBottomOrNullObject
  summary: >-
    <span data-ttu-id="48328-209">Retorna as propriedades de formato condicional superior/inferior se o formato condicional atual for um tipo TopBottom.</span><span class="sxs-lookup"><span data-stu-id="48328-209">Returns the Top/Bottom conditional format properties if the current conditional format is an TopBottom type.</span></span> <span data-ttu-id="48328-210">Por exemplo para formatar os primeiros 10% ou 10 itens inferiores.</span><span class="sxs-lookup"><span data-stu-id="48328-210">For example to format the top 10% or bottom 10 items.</span></span> <span data-ttu-id="48328-211">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="48328-211">Read-only.</span></span>


    <span data-ttu-id="48328-212">\[[Conjunto de APIs: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="48328-212">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: topBottomOrNullObject
  fullName: topBottomOrNullObject
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly topBottomOrNullObject: Excel.TopBottomConditionalFormat;'
    return:
      type:
      - excel.Excel.TopBottomConditionalFormat
- uid: excel_release.Excel.ConditionalFormat.type
  summary: >-
    <span data-ttu-id="48328-213">Um tipo de formato condicional.</span><span class="sxs-lookup"><span data-stu-id="48328-213">A type of conditional format.</span></span> <span data-ttu-id="48328-214">Apenas um pode ser definido por vez.</span><span class="sxs-lookup"><span data-stu-id="48328-214">Only one can be set at a time.</span></span> <span data-ttu-id="48328-215">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="48328-215">Read-only.</span></span>


    <span data-ttu-id="48328-216">\[[Conjunto de APIs: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="48328-216">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: type
  fullName: type
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly type: Excel.ConditionalFormatType | "Custom" | "DataBar" | "ColorScale" | "IconSet" | "TopBottom" | "PresetCriteria" | "ContainsText" | "CellValue";'
    return:
      type:
      - Excel.ConditionalFormatType | "Custom" | "DataBar" | "ColorScale" | "IconSet" | "TopBottom" | "PresetCriteria" | "ContainsText" | "CellValue"
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"48328-217\">Examples</span><span class=\"sxs-lookup\"><span data-stu-id=\"48328-217\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const worksheetRange = sheet.getRange();\n    worksheetRange.conditionalFormats.load(\"type\");\n\n    await context.sync();\n\n    let cfRangePairs: { cf: Excel.ConditionalFormat, range: Excel.Range }[] = [];\n    worksheetRange.conditionalFormats.items.forEach(item => {\n        cfRangePairs.push({\n            cf: item,\n            range: item.getRange().load(\"address\")\n        });\n    });\n\n    await context.sync();\n\n    if (cfRangePairs.length > 0) {\n        cfRangePairs.forEach(item => {\n            console.log(item.cf.type);\n        });\n    } else {\n        console.log(\"No conditional formats applied.\");\n    }\n});\n```"
