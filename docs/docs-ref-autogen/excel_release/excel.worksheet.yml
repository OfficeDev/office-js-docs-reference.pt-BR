### YamlMime:UniversalReference
items:
  - uid: excel_release.Excel.Worksheet
    summary: |-
      <span data-ttu-id="438a2-101">Uma planilha do Excel é uma grade de células.</span><span class="sxs-lookup"><span data-stu-id="438a2-101">An Excel worksheet is a grid of cells.</span></span> <span data-ttu-id="438a2-102">Ele pode conter dados, tabelas, gráficos, etc. Para saber mais sobre o modelo de objeto de planilha, leia [trabalhar com planilhas usando a API JavaScript do Excel](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-worksheets)</span><span class="sxs-lookup"><span data-stu-id="438a2-102">It can contain data, tables, charts, etc. To learn more about the worksheet object model, read [Work with worksheets using the Excel JavaScript API](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-worksheets)</span></span><!-- --><span data-ttu-id="438a2-103">.</span><span class="sxs-lookup"><span data-stu-id="438a2-103"></span></span>

      <span data-ttu-id="438a2-104">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="438a2-104">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.Worksheet
    fullName: Excel.Worksheet
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: excel_release
    children:
      - excel_release.Excel.Worksheet.activate
      - excel_release.Excel.Worksheet.autoFilter
      - excel_release.Excel.Worksheet.calculate
      - excel_release.Excel.Worksheet.charts
      - excel_release.Excel.Worksheet.context
      - excel_release.Excel.Worksheet.copy
      - excel_release.Excel.Worksheet.copy_1
      - excel_release.Excel.Worksheet.delete
      - excel_release.Excel.Worksheet.enableCalculation
      - excel_release.Excel.Worksheet.findAll
      - excel_release.Excel.Worksheet.findAllOrNullObject
      - excel_release.Excel.Worksheet.freezePanes
      - excel_release.Excel.Worksheet.getCell
      - excel_release.Excel.Worksheet.getNext
      - excel_release.Excel.Worksheet.getNextOrNullObject
      - excel_release.Excel.Worksheet.getPrevious
      - excel_release.Excel.Worksheet.getPreviousOrNullObject
      - excel_release.Excel.Worksheet.getRange
      - excel_release.Excel.Worksheet.getRangeByIndexes
      - excel_release.Excel.Worksheet.getRanges
      - excel_release.Excel.Worksheet.getUsedRange
      - excel_release.Excel.Worksheet.getUsedRangeOrNullObject
      - excel_release.Excel.Worksheet.horizontalPageBreaks
      - excel_release.Excel.Worksheet.id
      - excel_release.Excel.Worksheet.load
      - excel_release.Excel.Worksheet.load_1
      - excel_release.Excel.Worksheet.load_2
      - excel_release.Excel.Worksheet.name
      - excel_release.Excel.Worksheet.names
      - excel_release.Excel.Worksheet.onActivated
      - excel_release.Excel.Worksheet.onCalculated
      - excel_release.Excel.Worksheet.onChanged
      - excel_release.Excel.Worksheet.onDeactivated
      - excel_release.Excel.Worksheet.onFormatChanged
      - excel_release.Excel.Worksheet.onSelectionChanged
      - excel_release.Excel.Worksheet.pageLayout
      - excel_release.Excel.Worksheet.pivotTables
      - excel_release.Excel.Worksheet.position
      - excel_release.Excel.Worksheet.protection
      - excel_release.Excel.Worksheet.replaceAll
      - excel_release.Excel.Worksheet.set
      - excel_release.Excel.Worksheet.set_1
      - excel_release.Excel.Worksheet.shapes
      - excel_release.Excel.Worksheet.showGridlines
      - excel_release.Excel.Worksheet.showHeadings
      - excel_release.Excel.Worksheet.standardHeight
      - excel_release.Excel.Worksheet.standardWidth
      - excel_release.Excel.Worksheet.tabColor
      - excel_release.Excel.Worksheet.tables
      - excel_release.Excel.Worksheet.toJSON
      - excel_release.Excel.Worksheet.verticalPageBreaks
      - excel_release.Excel.Worksheet.visibility
  - uid: excel_release.Excel.Worksheet.activate
    summary: |-
      <span data-ttu-id="438a2-105">Ative a planilha na interface do usuário do Excel.</span><span class="sxs-lookup"><span data-stu-id="438a2-105">Activate the worksheet in the Excel UI.</span></span>

      <span data-ttu-id="438a2-106">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="438a2-106">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: activate()
    fullName: activate()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'activate(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="438a2-107">Exemplos</span><span class="sxs-lookup"><span data-stu-id="438a2-107">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var wSheetName = 'Sheet1';
              var worksheet = ctx.workbook.worksheets.getItem(wSheetName);
              worksheet.activate();
              return ctx.sync(); 
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: excel_release.Excel.Worksheet.autoFilter
    summary: |-
      <span data-ttu-id="438a2-108">Representa o objeto AutoFilter da planilha.</span><span class="sxs-lookup"><span data-stu-id="438a2-108">Represents the AutoFilter object of the worksheet.</span></span> <span data-ttu-id="438a2-109">Somente Leitura.</span><span class="sxs-lookup"><span data-stu-id="438a2-109">Read-Only.</span></span>

      <span data-ttu-id="438a2-110">\[[Conjunto de APIs: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="438a2-110">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: autoFilter
    fullName: autoFilter
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly autoFilter: Excel.AutoFilter;'
      return:
        type:
          - excel.Excel.AutoFilter
        description: |-


          #### <a name="examples"></a><span data-ttu-id="438a2-111">Exemplos</span><span class="sxs-lookup"><span data-stu-id="438a2-111">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getActiveWorksheet();
              const farmData = sheet.getUsedRange();

              // This filter will only show the rows with the top 25% of values in column 3.
              sheet.autoFilter.apply(farmData, 3, { criterion1: "25", filterOn: Excel.FilterOn.topPercent });
              await context.sync();
          });
          ```
  - uid: excel_release.Excel.Worksheet.calculate
    summary: |-
      <span data-ttu-id="438a2-112">Calcula todas as células em uma planilha.</span><span class="sxs-lookup"><span data-stu-id="438a2-112">Calculates all cells on a worksheet.</span></span>

      <span data-ttu-id="438a2-113">\[[Conjunto de APIs: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="438a2-113">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: calculate(markAllDirty)
    fullName: calculate(markAllDirty)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'calculate(markAllDirty: boolean): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: markAllDirty
          description: '<span data-ttu-id="438a2-114">True, para marcar tudo como sujo.</span><span class="sxs-lookup"><span data-stu-id="438a2-114">True, to mark all as dirty.</span></span>'
          type:
            - boolean
  - uid: excel_release.Excel.Worksheet.charts
    summary: |-
      <span data-ttu-id="438a2-115">Retorna uma coleção de gráficos que fazem parte da planilha.</span><span class="sxs-lookup"><span data-stu-id="438a2-115">Returns collection of charts that are part of the worksheet.</span></span> <span data-ttu-id="438a2-116">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="438a2-116">Read-only.</span></span>

      <span data-ttu-id="438a2-117">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="438a2-117">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: charts
    fullName: charts
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly charts: Excel.ChartCollection;'
      return:
        type:
          - excel.Excel.ChartCollection
  - uid: excel_release.Excel.Worksheet.context
    summary: <span data-ttu-id="438a2-118">O contexto de solicitação associado ao objeto.</span><span class="sxs-lookup"><span data-stu-id="438a2-118">The request context associated with the object.</span></span> <span data-ttu-id="438a2-119">Isso conecta o processo do suplemento ao processo do aplicativo host do Office.</span><span class="sxs-lookup"><span data-stu-id="438a2-119">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: excel_release.Excel.Worksheet.copy
    summary: |-
      <span data-ttu-id="438a2-120">Copia uma planilha e a coloca na posição especificada.</span><span class="sxs-lookup"><span data-stu-id="438a2-120">Copy a worksheet and place it at the specified position.</span></span> <span data-ttu-id="438a2-121">Retorna à planilha copiada.</span><span class="sxs-lookup"><span data-stu-id="438a2-121">Return the copied worksheet.</span></span>

      <span data-ttu-id="438a2-122">\[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="438a2-122">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'copy(positionType, relativeTo)'
    fullName: 'copy(positionType, relativeTo)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'copy(positionType?: Excel.WorksheetPositionType, relativeTo?: Excel.Worksheet): Excel.Worksheet;'
      return:
        type:
          - excel.Excel.Worksheet
        description: |-


          #### <a name="examples"></a><span data-ttu-id="438a2-123">Exemplos</span><span class="sxs-lookup"><span data-stu-id="438a2-123">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {

              let myWorkbook = context.workbook;
              let sampleSheet = myWorkbook.worksheets.getActiveWorksheet();
              let copiedSheet = sampleSheet.copy("End")

              sampleSheet.load("name");
              copiedSheet.load("name");

              await context.sync();

              console.log("'" + sampleSheet.name + "' was copied to '" + copiedSheet.name + "'")
          });
          ```
      parameters:
        - id: positionType
          description: <span data-ttu-id="438a2-124">Opcional.</span><span class="sxs-lookup"><span data-stu-id="438a2-124">Optional.</span></span>
          type:
            - excel.Excel.WorksheetPositionType
        - id: relativeTo
          description: <span data-ttu-id="438a2-125">Opcional.</span><span class="sxs-lookup"><span data-stu-id="438a2-125">Optional.</span></span>
          type:
            - excel.Excel.Worksheet
  - uid: excel_release.Excel.Worksheet.copy_1
    summary: |-
      <span data-ttu-id="438a2-126">Copia uma planilha e a coloca na posição especificada.</span><span class="sxs-lookup"><span data-stu-id="438a2-126">Copy a worksheet and place it at the specified position.</span></span> <span data-ttu-id="438a2-127">Retorna à planilha copiada.</span><span class="sxs-lookup"><span data-stu-id="438a2-127">Return the copied worksheet.</span></span>

      <span data-ttu-id="438a2-128">\[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="438a2-128">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'copy(positionTypeString, relativeTo)'
    fullName: 'copy(positionTypeString, relativeTo)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'copy(positionTypeString?: "None" | "Before" | "After" | "Beginning" | "End", relativeTo?: Excel.Worksheet): Excel.Worksheet;'
      return:
        type:
          - excel.Excel.Worksheet
        description: ''
      parameters:
        - id: positionTypeString
          description: <span data-ttu-id="438a2-129">Opcional.</span><span class="sxs-lookup"><span data-stu-id="438a2-129">Optional.</span></span>
          type:
            - '"None" | "Before" | "After" | "Beginning" | "End"'
        - id: relativeTo
          description: <span data-ttu-id="438a2-130">Opcional.</span><span class="sxs-lookup"><span data-stu-id="438a2-130">Optional.</span></span>
          type:
            - excel.Excel.Worksheet
  - uid: excel_release.Excel.Worksheet.delete
    summary: |-
      <span data-ttu-id="438a2-131">Exclui a planilha da pasta de trabalho.</span><span class="sxs-lookup"><span data-stu-id="438a2-131">Deletes the worksheet from the workbook.</span></span> <span data-ttu-id="438a2-132">Observe que, se a visibilidade da planilha estiver definida como "VeryHidden", a operação de exclusão falhará com uma Generalexception.</span><span class="sxs-lookup"><span data-stu-id="438a2-132">Note that if the worksheet's visibility is set to "VeryHidden", the delete operation will fail with a GeneralException.</span></span>

      <span data-ttu-id="438a2-133">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="438a2-133">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="438a2-134">Exemplos</span><span class="sxs-lookup"><span data-stu-id="438a2-134">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var wSheetName = 'Sheet1';
              var worksheet = ctx.workbook.worksheets.getItem(wSheetName);
              worksheet.delete();
              return ctx.sync(); 
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: excel_release.Excel.Worksheet.enableCalculation
    summary: |-
      <span data-ttu-id="438a2-135">Obtém ou define a propriedade enableCalculation da planilha.</span><span class="sxs-lookup"><span data-stu-id="438a2-135">Gets or sets the enableCalculation property of the worksheet.</span></span> <span data-ttu-id="438a2-136">True se o Excel recalcular a planilha quando necessário.</span><span class="sxs-lookup"><span data-stu-id="438a2-136">True if Excel recalculates the worksheet when necessary.</span></span> <span data-ttu-id="438a2-137">False se o Excel não recalcular a planilha.</span><span class="sxs-lookup"><span data-stu-id="438a2-137">False if Excel doesn't recalculate the sheet.</span></span>

      <span data-ttu-id="438a2-138">\[[Conjunto de APIs: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="438a2-138">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: enableCalculation
    fullName: enableCalculation
    langs:
      - typeScript
    type: property
    syntax:
      content: 'enableCalculation: boolean;'
      return:
        type:
          - boolean
  - uid: excel_release.Excel.Worksheet.findAll
    summary: |-
      <span data-ttu-id="438a2-139">Encontra todas as ocorrências de determinada cadeia de caracteres com base nos critérios especificados e as retorna como um objeto RangeAreas, compreendendo um ou mais intervalos retangulares.</span><span class="sxs-lookup"><span data-stu-id="438a2-139">Finds all occurrences of the given string based on the criteria specified and returns them as a RangeAreas object, comprising one or more rectangular ranges.</span></span>

      <span data-ttu-id="438a2-140">\[[Conjunto de APIs: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="438a2-140">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'findAll(text, criteria)'
    fullName: 'findAll(text, criteria)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'findAll(text: string, criteria: Excel.WorksheetSearchCriteria): Excel.RangeAreas;'
      return:
        type:
          - excel.Excel.RangeAreas
        description: '<span data-ttu-id="438a2-141">Um objeto RangeArea, incluindo um ou mais intervalos retangulares, que corresponde aos critérios de pesquisa.</span><span class="sxs-lookup"><span data-stu-id="438a2-141">A RangeArea object, comprising one or more rectangular ranges, that matches the search criteria.</span></span> <span data-ttu-id="438a2-142">Se nenhuma célula atender a esses critérios, um erro ItemNotFound será gerado.</span><span class="sxs-lookup"><span data-stu-id="438a2-142">If no cells meet this criteria, an ItemNotFound error will be thrown.</span></span>'
      parameters:
        - id: text
          description: <span data-ttu-id="438a2-143">A cadeia de caracteres a ser localizada.</span><span class="sxs-lookup"><span data-stu-id="438a2-143">The string to find.</span></span>
          type:
            - string
        - id: criteria
          description: '<span data-ttu-id="438a2-144">Critérios de pesquisa adicionais, incluindo se a pesquisa precisa corresponder à célula inteira ou diferenciar maiúsculas de minúsculas.</span><span class="sxs-lookup"><span data-stu-id="438a2-144">Additional search criteria, including whether the search needs to match the entire cell or be case sensitive.</span></span>'
          type:
            - excel.Excel.WorksheetSearchCriteria
  - uid: excel_release.Excel.Worksheet.findAllOrNullObject
    summary: |-
      <span data-ttu-id="438a2-145">Encontra todas as ocorrências de determinada cadeia de caracteres com base nos critérios especificados e as retorna como um objeto RangeAreas, compreendendo um ou mais intervalos retangulares.</span><span class="sxs-lookup"><span data-stu-id="438a2-145">Finds all occurrences of the given string based on the criteria specified and returns them as a RangeAreas object, comprising one or more rectangular ranges.</span></span>

      <span data-ttu-id="438a2-146">\[[Conjunto de APIs: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="438a2-146">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'findAllOrNullObject(text, criteria)'
    fullName: 'findAllOrNullObject(text, criteria)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'findAllOrNullObject(text: string, criteria: Excel.WorksheetSearchCriteria): Excel.RangeAreas;'
      return:
        type:
          - excel.Excel.RangeAreas
        description: |-
          <span data-ttu-id="438a2-147">Um objeto RangeArea, incluindo um ou mais intervalos retangulares, que corresponde aos critérios de pesquisa.</span><span class="sxs-lookup"><span data-stu-id="438a2-147">A RangeArea object, comprising one or more rectangular ranges, that matches the search criteria.</span></span> <span data-ttu-id="438a2-148">Se não houver nenhuma correspondência, esta função retornará um objeto NULL.</span><span class="sxs-lookup"><span data-stu-id="438a2-148">If there are no matches, this function will return a null object.</span></span>

          #### <a name="examples"></a><span data-ttu-id="438a2-149">Exemplos</span><span class="sxs-lookup"><span data-stu-id="438a2-149">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Sample");
              const foundRanges = sheet.findAllOrNullObject("Complete", {
                  completeMatch: true,
                  matchCase: false
              });

              await context.sync();

              if (foundRanges.isNullObject) {
                  console.log("No complete projects");
              } else {
                  foundRanges.format.fill.color = "green"
              }
          });
          ```
      parameters:
        - id: text
          description: <span data-ttu-id="438a2-150">A cadeia de caracteres a ser localizada.</span><span class="sxs-lookup"><span data-stu-id="438a2-150">The string to find.</span></span>
          type:
            - string
        - id: criteria
          description: '<span data-ttu-id="438a2-151">Critérios de pesquisa adicionais, incluindo se a pesquisa precisa corresponder à célula inteira ou diferenciar maiúsculas de minúsculas.</span><span class="sxs-lookup"><span data-stu-id="438a2-151">Additional search criteria, including whether the search needs to match the entire cell or be case sensitive.</span></span>'
          type:
            - excel.Excel.WorksheetSearchCriteria
  - uid: excel_release.Excel.Worksheet.freezePanes
    summary: |-
      <span data-ttu-id="438a2-152">Obtém um objeto que pode ser usado para manipular painéis congelados na planilha.</span><span class="sxs-lookup"><span data-stu-id="438a2-152">Gets an object that can be used to manipulate frozen panes on the worksheet.</span></span> <span data-ttu-id="438a2-153">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="438a2-153">Read-only.</span></span>

      <span data-ttu-id="438a2-154">\[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="438a2-154">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: freezePanes
    fullName: freezePanes
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly freezePanes: Excel.WorksheetFreezePanes;'
      return:
        type:
          - excel.Excel.WorksheetFreezePanes
  - uid: excel_release.Excel.Worksheet.getCell
    summary: |-
      <span data-ttu-id="438a2-155">Obtém o objeto de intervalo que contém a célula única com base nos números de linha e de coluna.</span><span class="sxs-lookup"><span data-stu-id="438a2-155">Gets the range object containing the single cell based on row and column numbers.</span></span> <span data-ttu-id="438a2-156">A célula pode estar fora dos limites de seu intervalo pai, desde que ela permaneça dentro da grade da planilha.</span><span class="sxs-lookup"><span data-stu-id="438a2-156">The cell can be outside the bounds of its parent range, so long as it stays within the worksheet grid.</span></span>

      <span data-ttu-id="438a2-157">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="438a2-157">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'getCell(row, column)'
    fullName: 'getCell(row, column)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCell(row: number, column: number): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="438a2-158">Exemplos</span><span class="sxs-lookup"><span data-stu-id="438a2-158">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var sheetName = "Sheet1";
              var rangeAddress = "A1:F8";
              var worksheet = ctx.workbook.worksheets.getItem(sheetName);
              var cell = worksheet.getCell(0,0);
              cell.load('address');
              return ctx.sync().then(function() {
                  console.log(cell.address);
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: row
          description: <span data-ttu-id="438a2-159">O número da linha da célula a ser recuperada.</span><span class="sxs-lookup"><span data-stu-id="438a2-159">The row number of the cell to be retrieved.</span></span> <span data-ttu-id="438a2-160">Indexados com zero.</span><span class="sxs-lookup"><span data-stu-id="438a2-160">Zero-indexed.</span></span>
          type:
            - number
        - id: column
          description: <span data-ttu-id="438a2-161">O número da coluna da célula a ser recuperada.</span><span class="sxs-lookup"><span data-stu-id="438a2-161">the column number of the cell to be retrieved.</span></span> <span data-ttu-id="438a2-162">Indexado com zero.</span><span class="sxs-lookup"><span data-stu-id="438a2-162">Zero-indexed.</span></span>
          type:
            - number
  - uid: excel_release.Excel.Worksheet.getNext
    summary: |-
      <span data-ttu-id="438a2-163">Obtém a planilha que segue esta.</span><span class="sxs-lookup"><span data-stu-id="438a2-163">Gets the worksheet that follows this one.</span></span> <span data-ttu-id="438a2-164">Se não houver planilhas após esta, este método gerará um erro.</span><span class="sxs-lookup"><span data-stu-id="438a2-164">If there are no worksheets following this one, this method will throw an error.</span></span>

      <span data-ttu-id="438a2-165">\[[Conjunto de APIs: ExcelApi 1,5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="438a2-165">\[ [API set: ExcelApi 1.5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getNext(visibleOnly)
    fullName: getNext(visibleOnly)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getNext(visibleOnly?: boolean): Excel.Worksheet;'
      return:
        type:
          - excel.Excel.Worksheet
        description: |-


          #### <a name="examples"></a><span data-ttu-id="438a2-166">Exemplos</span><span class="sxs-lookup"><span data-stu-id="438a2-166">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheets = context.workbook.worksheets;

              // We don't want to include the default worksheet that was created
              // when the workbook was created, so our "firstSheet" will be the one
              // after the literal first. Note chaining of navigation methods.
              const firstSheet = sheets.getFirst().getNext();
              const lastSheet = sheets.getLast();
              const firstTaxRateRange = firstSheet.getRange("B2");
              const lastTaxRateRange = lastSheet.getRange("B2");

              firstSheet.load("name");
              lastSheet.load("name");
              firstTaxRateRange.load("text");
              lastTaxRateRange.load("text");

              await context.sync();

              let firstYear = firstSheet.name.substr(5, 4);
              let lastYear = lastSheet.name.substr(5, 4);
              console.log(`Tax Rate change from ${firstYear} to ${lastYear}`, `Tax rate for ${firstYear}: ${firstTaxRateRange.text[0][0]}\nTax rate for ${lastYear}: ${lastTaxRateRange.text[0][0]}`)

              await context.sync();
          });
          ```
      parameters:
        - id: visibleOnly
          description: '<span data-ttu-id="438a2-167">Opcional.</span><span class="sxs-lookup"><span data-stu-id="438a2-167">Optional.</span></span> <span data-ttu-id="438a2-168">Se true, só considera planilhas visíveis, ignorando as ocultas.</span><span class="sxs-lookup"><span data-stu-id="438a2-168">If true, considers only visible worksheets, skipping over any hidden ones.</span></span>'
          type:
            - boolean
  - uid: excel_release.Excel.Worksheet.getNextOrNullObject
    summary: |-
      <span data-ttu-id="438a2-169">Obtém a planilha que segue esta.</span><span class="sxs-lookup"><span data-stu-id="438a2-169">Gets the worksheet that follows this one.</span></span> <span data-ttu-id="438a2-170">Se não houver planilhas após esta, este método retornará um objeto NULL.</span><span class="sxs-lookup"><span data-stu-id="438a2-170">If there are no worksheets following this one, this method will return a null object.</span></span>

      <span data-ttu-id="438a2-171">\[[Conjunto de APIs: ExcelApi 1,5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="438a2-171">\[ [API set: ExcelApi 1.5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getNextOrNullObject(visibleOnly)
    fullName: getNextOrNullObject(visibleOnly)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getNextOrNullObject(visibleOnly?: boolean): Excel.Worksheet;'
      return:
        type:
          - excel.Excel.Worksheet
        description: ''
      parameters:
        - id: visibleOnly
          description: '<span data-ttu-id="438a2-172">Opcional.</span><span class="sxs-lookup"><span data-stu-id="438a2-172">Optional.</span></span> <span data-ttu-id="438a2-173">Se true, só considera planilhas visíveis, ignorando as ocultas.</span><span class="sxs-lookup"><span data-stu-id="438a2-173">If true, considers only visible worksheets, skipping over any hidden ones.</span></span>'
          type:
            - boolean
  - uid: excel_release.Excel.Worksheet.getPrevious
    summary: |-
      <span data-ttu-id="438a2-174">Obtém a planilha que precede esta.</span><span class="sxs-lookup"><span data-stu-id="438a2-174">Gets the worksheet that precedes this one.</span></span> <span data-ttu-id="438a2-175">Se não houver planilhas anteriores, este método gerará um erro.</span><span class="sxs-lookup"><span data-stu-id="438a2-175">If there are no previous worksheets, this method will throw an error.</span></span>

      <span data-ttu-id="438a2-176">\[[Conjunto de APIs: ExcelApi 1,5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="438a2-176">\[ [API set: ExcelApi 1.5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getPrevious(visibleOnly)
    fullName: getPrevious(visibleOnly)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getPrevious(visibleOnly?: boolean): Excel.Worksheet;'
      return:
        type:
          - excel.Excel.Worksheet
        description: |-


          #### <a name="examples"></a><span data-ttu-id="438a2-177">Exemplos</span><span class="sxs-lookup"><span data-stu-id="438a2-177">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheets = context.workbook.worksheets;
              const currentSheet = sheets.getActiveWorksheet();
              const previousYearSheet = currentSheet.getPrevious();
              const currentTaxDueRange = currentSheet.getRange("C2");
              const previousTaxDueRange = previousYearSheet.getRange("C2");

              currentSheet.load("name");
              previousYearSheet.load("name");
              currentTaxDueRange.load("text");
              previousTaxDueRange.load("text");

              await context.sync();

              let currentYear = currentSheet.name.substr(5, 4);
              let previousYear = previousYearSheet.name.substr(5, 4);
              console.log("Two Year Tax Due Comparison", `Tax due for ${currentYear} was ${currentTaxDueRange.text[0][0]}\nTax due for ${previousYear} was ${previousTaxDueRange.text[0][0]}`)

              await context.sync();
          });
          ```
      parameters:
        - id: visibleOnly
          description: '<span data-ttu-id="438a2-178">Opcional.</span><span class="sxs-lookup"><span data-stu-id="438a2-178">Optional.</span></span> <span data-ttu-id="438a2-179">Se true, só considera planilhas visíveis, ignorando as ocultas.</span><span class="sxs-lookup"><span data-stu-id="438a2-179">If true, considers only visible worksheets, skipping over any hidden ones.</span></span>'
          type:
            - boolean
  - uid: excel_release.Excel.Worksheet.getPreviousOrNullObject
    summary: |-
      <span data-ttu-id="438a2-180">Obtém a planilha que precede esta.</span><span class="sxs-lookup"><span data-stu-id="438a2-180">Gets the worksheet that precedes this one.</span></span> <span data-ttu-id="438a2-181">Se não houver planilhas anteriores, este método retornará um objeto NULL.</span><span class="sxs-lookup"><span data-stu-id="438a2-181">If there are no previous worksheets, this method will return a null objet.</span></span>

      <span data-ttu-id="438a2-182">\[[Conjunto de APIs: ExcelApi 1,5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="438a2-182">\[ [API set: ExcelApi 1.5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getPreviousOrNullObject(visibleOnly)
    fullName: getPreviousOrNullObject(visibleOnly)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getPreviousOrNullObject(visibleOnly?: boolean): Excel.Worksheet;'
      return:
        type:
          - excel.Excel.Worksheet
        description: ''
      parameters:
        - id: visibleOnly
          description: '<span data-ttu-id="438a2-183">Opcional.</span><span class="sxs-lookup"><span data-stu-id="438a2-183">Optional.</span></span> <span data-ttu-id="438a2-184">Se true, só considera planilhas visíveis, ignorando as ocultas.</span><span class="sxs-lookup"><span data-stu-id="438a2-184">If true, considers only visible worksheets, skipping over any hidden ones.</span></span>'
          type:
            - boolean
  - uid: excel_release.Excel.Worksheet.getRange
    summary: |-
      <span data-ttu-id="438a2-185">Obtém o objeto Range, representando um único bloco retangular de células, especificado pelo endereço ou nome.</span><span class="sxs-lookup"><span data-stu-id="438a2-185">Gets the range object, representing a single rectangular block of cells, specified by the address or name.</span></span>

      <span data-ttu-id="438a2-186">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="438a2-186">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getRange(address)
    fullName: getRange(address)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRange(address?: string): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="438a2-187">Exemplos</span><span class="sxs-lookup"><span data-stu-id="438a2-187">Examples</span></span>

          ```javascript
          // Below example uses range address to get the range object.
          Excel.run(function (ctx) { 
              var sheetName = "Sheet1";
              var rangeAddress = "A1:F8";
              var worksheet = ctx.workbook.worksheets.getItem(sheetName);
              var range = worksheet.getRange(rangeAddress);
              range.load('cellCount');
              return ctx.sync().then(function() {
                  console.log(range.cellCount);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          // Below example uses a named-range to get the range object.
          Excel.run(function (ctx) { 
              var sheetName = "Sheet1";
              var rangeName = 'MyRange';
              var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeName);
              range.load('address');
              return ctx.sync().then(function() {
                  console.log(range.address);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: address
          description: '<span data-ttu-id="438a2-188">Opcional.</span><span class="sxs-lookup"><span data-stu-id="438a2-188">Optional.</span></span> <span data-ttu-id="438a2-189">A cadeia de caracteres que representa o endereço ou o nome do intervalo.</span><span class="sxs-lookup"><span data-stu-id="438a2-189">The string representing the address or name of the range.</span></span> <span data-ttu-id="438a2-190">Por exemplo, "a1: B2".</span><span class="sxs-lookup"><span data-stu-id="438a2-190">For example, "A1:B2".</span></span> <span data-ttu-id="438a2-191">Caso não seja especificado, todo o intervalo da planilha será retornado.</span><span class="sxs-lookup"><span data-stu-id="438a2-191">If not specified, the entire worksheet range is returned.</span></span>'
          type:
            - string
  - uid: excel_release.Excel.Worksheet.getRangeByIndexes
    summary: |-
      <span data-ttu-id="438a2-192">Obtém o objeto Range que começa em um determinado índice de linha e índice de coluna e que abrange um determinado número de linhas e colunas.</span><span class="sxs-lookup"><span data-stu-id="438a2-192">Gets the range object beginning at a particular row index and column index, and spanning a certain number of rows and columns.</span></span>

      <span data-ttu-id="438a2-193">\[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="438a2-193">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'getRangeByIndexes(startRow, startColumn, rowCount, columnCount)'
    fullName: 'getRangeByIndexes(startRow, startColumn, rowCount, columnCount)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRangeByIndexes(startRow: number, startColumn: number, rowCount: number, columnCount: number): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: ''
      parameters:
        - id: startRow
          description: <span data-ttu-id="438a2-194">Linha inicial (indexada por zero).</span><span class="sxs-lookup"><span data-stu-id="438a2-194">Start row (zero-indexed).</span></span>
          type:
            - number
        - id: startColumn
          description: <span data-ttu-id="438a2-195">Coluna inicial (indexada por zero).</span><span class="sxs-lookup"><span data-stu-id="438a2-195">Start column (zero-indexed).</span></span>
          type:
            - number
        - id: rowCount
          description: <span data-ttu-id="438a2-196">Número de linhas a serem incluídas no intervalo.</span><span class="sxs-lookup"><span data-stu-id="438a2-196">Number of rows to include in the range.</span></span>
          type:
            - number
        - id: columnCount
          description: <span data-ttu-id="438a2-197">Número de colunas a serem incluídas no intervalo.</span><span class="sxs-lookup"><span data-stu-id="438a2-197">Number of columns to include in the range.</span></span>
          type:
            - number
  - uid: excel_release.Excel.Worksheet.getRanges
    summary: |-
      <span data-ttu-id="438a2-198">Obtém o objeto RangeAreas que representa um ou mais blocos de intervalos retangulares especificados pelo endereço ou nome.</span><span class="sxs-lookup"><span data-stu-id="438a2-198">Gets the RangeAreas object, representing one or more blocks of rectangular ranges, specified by the address or name.</span></span>

      <span data-ttu-id="438a2-199">\[[Conjunto de APIs: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="438a2-199">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getRanges(address)
    fullName: getRanges(address)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRanges(address?: string): Excel.RangeAreas;'
      return:
        type:
          - excel.Excel.RangeAreas
        description: |-


          #### <a name="examples"></a><span data-ttu-id="438a2-200">Exemplos</span><span class="sxs-lookup"><span data-stu-id="438a2-200">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {

              const sheet = context.workbook.worksheets.getActiveWorksheet();
              const specifiedRanges = sheet.getRanges("D3:D5, G3:G5");
              specifiedRanges.format.fill.color = "pink";

              await context.sync();
          })
          ```
      parameters:
        - id: address
          description: '<span data-ttu-id="438a2-201">Opcional.</span><span class="sxs-lookup"><span data-stu-id="438a2-201">Optional.</span></span> <span data-ttu-id="438a2-202">Uma cadeia de caracteres que contém os endereços ou nomes separados por vírgulas de intervalos individuais.</span><span class="sxs-lookup"><span data-stu-id="438a2-202">A string containing the comma-separated addresses or names of the individual ranges.</span></span> <span data-ttu-id="438a2-203">Por exemplo, "a1: B2, A5: B5".</span><span class="sxs-lookup"><span data-stu-id="438a2-203">For example, "A1:B2, A5:B5".</span></span> <span data-ttu-id="438a2-204">Se não for especificado, será retornado um objeto RangeArea para a planilha inteira.</span><span class="sxs-lookup"><span data-stu-id="438a2-204">If not specified, an RangeArea object for the entire worksheet is returned.</span></span>'
          type:
            - string
  - uid: excel_release.Excel.Worksheet.getUsedRange
    summary: |-
      <span data-ttu-id="438a2-205">O intervalo usado é o menor intervalo que abrange todas as células que têm um valor ou uma formatação atribuída a elas.</span><span class="sxs-lookup"><span data-stu-id="438a2-205">The used range is the smallest range that encompasses any cells that have a value or formatting assigned to them.</span></span> <span data-ttu-id="438a2-206">Se a planilha inteira estiver em branco, essa função retornará a célula superior esquerda (ou seja, *não* gerará um erro).</span><span class="sxs-lookup"><span data-stu-id="438a2-206">If the entire worksheet is blank, this function will return the top left cell (i.e. it will *not* throw an error).</span></span>

      <span data-ttu-id="438a2-207">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="438a2-207">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getUsedRange(valuesOnly)
    fullName: getUsedRange(valuesOnly)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getUsedRange(valuesOnly?: boolean): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="438a2-208">Exemplos</span><span class="sxs-lookup"><span data-stu-id="438a2-208">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var wSheetName = 'Sheet1';
              var worksheet = ctx.workbook.worksheets.getItem(wSheetName);
              var usedRange = worksheet.getUsedRange();
              usedRange.load('address');
              return ctx.sync().then(function() {
                      console.log(usedRange.address);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: valuesOnly
          description: '<span data-ttu-id="438a2-209">Opcional.</span><span class="sxs-lookup"><span data-stu-id="438a2-209">Optional.</span></span> <span data-ttu-id="438a2-210">Se true, considera apenas as células com valores como células usadas (ignorando a formatação).</span><span class="sxs-lookup"><span data-stu-id="438a2-210">If true, considers only cells with values as used cells (ignoring formatting).</span></span> <span data-ttu-id="438a2-211">\[Conjunto de APIs: ExcelApi 1,2\]</span><span class="sxs-lookup"><span data-stu-id="438a2-211">\[Api set: ExcelApi 1.2\]</span></span>'
          type:
            - boolean
  - uid: excel_release.Excel.Worksheet.getUsedRangeOrNullObject
    summary: |-
      <span data-ttu-id="438a2-p127">O intervalo usado é o menor intervalo que abrange todas as células que têm um valor ou uma formatação atribuída a elas. Se a planilha inteira estiver em branco, esta função retornará um objeto null.</span><span class="sxs-lookup"><span data-stu-id="438a2-p127">The used range is the smallest range that encompasses any cells that have a value or formatting assigned to them. If the entire worksheet is blank, this function will return a null object.</span></span>

      <span data-ttu-id="438a2-214">\[[Conjunto de APIs: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="438a2-214">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getUsedRangeOrNullObject(valuesOnly)
    fullName: getUsedRangeOrNullObject(valuesOnly)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getUsedRangeOrNullObject(valuesOnly?: boolean): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: ''
      parameters:
        - id: valuesOnly
          description: <span data-ttu-id="438a2-215">Opcional.</span><span class="sxs-lookup"><span data-stu-id="438a2-215">Optional.</span></span> <span data-ttu-id="438a2-216">Considera apenas as células com valores como células usadas.</span><span class="sxs-lookup"><span data-stu-id="438a2-216">Considers only cells with values as used cells.</span></span>
          type:
            - boolean
  - uid: excel_release.Excel.Worksheet.horizontalPageBreaks
    summary: |-
      <span data-ttu-id="438a2-217">Obtém a coleção de quebra de página horizontal da planilha.</span><span class="sxs-lookup"><span data-stu-id="438a2-217">Gets the horizontal page break collection for the worksheet.</span></span> <span data-ttu-id="438a2-218">Esta coleção contém apenas quebras de página manuais.</span><span class="sxs-lookup"><span data-stu-id="438a2-218">This collection only contains manual page breaks.</span></span>

      <span data-ttu-id="438a2-219">\[[Conjunto de APIs: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="438a2-219">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: horizontalPageBreaks
    fullName: horizontalPageBreaks
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly horizontalPageBreaks: Excel.PageBreakCollection;'
      return:
        type:
          - excel.Excel.PageBreakCollection
  - uid: excel_release.Excel.Worksheet.id
    summary: |-
      <span data-ttu-id="438a2-p130">Retorna um valor que identifica de forma exclusiva a planilha em uma determinada pasta de trabalho. O valor do identificador permanece o mesmo, ainda que a planilha seja renomeada ou movida. Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="438a2-p130">Returns a value that uniquely identifies the worksheet in a given workbook. The value of the identifier remains the same even when the worksheet is renamed or moved. Read-only.</span></span>

      <span data-ttu-id="438a2-223">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="438a2-223">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: string;'
      return:
        type:
          - string
  - uid: excel_release.Excel.Worksheet.load
    summary: <span data-ttu-id="438a2-224">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="438a2-224">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="438a2-225">Você deve chamar "context.sync()" antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="438a2-225">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="438a2-226">Além dessa assinatura, este método tem as seguintes assinaturas:</span><span class="sxs-lookup"><span data-stu-id="438a2-226">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="438a2-227">`load(option?: string | string[]): Excel.Worksheet`-Where Option é uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="438a2-227">`load(option?: string | string[]): Excel.Worksheet` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="438a2-228">`load(option?: { select?: string; expand?: string; }): Excel.Worksheet`-Onde Option. Select é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades a serem carregadas, e Options. Expand é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades de navegação a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="438a2-228">`load(option?: { select?: string; expand?: string; }): Excel.Worksheet` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="438a2-229">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Worksheet`– Disponível somente nos tipos de coleção.</span><span class="sxs-lookup"><span data-stu-id="438a2-229">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Worksheet` - Only available on collection types.</span></span> <span data-ttu-id="438a2-230">É semelhante à assinatura anterior.</span><span class="sxs-lookup"><span data-stu-id="438a2-230">It is similar to the preceding signature.</span></span> <span data-ttu-id="438a2-231">Option. Top especifica o número máximo de itens de coleta que podem ser incluídos no resultado.</span><span class="sxs-lookup"><span data-stu-id="438a2-231">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="438a2-232">Option. Skip especifica o número de itens que devem ser ignorados e não incluídos no resultado.</span><span class="sxs-lookup"><span data-stu-id="438a2-232">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="438a2-233">Se Option. Top for especificado, o conjunto de resultados será iniciado depois de ignorar o número de itens especificado.</span><span class="sxs-lookup"><span data-stu-id="438a2-233">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.WorksheetLoadOptions): Excel.Worksheet;'
      return:
        type:
          - excel.Excel.Worksheet
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.WorksheetLoadOptions
  - uid: excel_release.Excel.Worksheet.load_1
    summary: <span data-ttu-id="438a2-234">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="438a2-234">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="438a2-235">Você deve chamar `context.sync()` antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="438a2-235">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.Worksheet;'
      return:
        type:
          - excel.Excel.Worksheet
        description: |-


          #### <a name="examples"></a><span data-ttu-id="438a2-236">Exemplos</span><span class="sxs-lookup"><span data-stu-id="438a2-236">Examples</span></span>

          ```javascript
          // Get worksheet properties based on sheet name.
          Excel.run(function (ctx) { 
              var wSheetName = 'Sheet1';
              var worksheet = ctx.workbook.worksheets.getItem(wSheetName);
              worksheet.load('position')
              return ctx.sync().then(function() {
                      console.log(worksheet.position);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          // Set worksheet position. 
          Excel.run(function (ctx) { 
              var wSheetName = 'Sheet1';
              var worksheet = ctx.workbook.worksheets.getItem(wSheetName);
              worksheet.position = 2;
              return ctx.sync(); 
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="438a2-237">Uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="438a2-237">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: excel_release.Excel.Worksheet.load_2
    summary: <span data-ttu-id="438a2-238">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="438a2-238">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="438a2-239">Você deve chamar `context.sync()` antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="438a2-239">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.Worksheet;'
      return:
        type:
          - excel.Excel.Worksheet
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="438a2-240">Onde propertyNamesAndPaths. Select é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades a serem carregadas e propertyNamesAndPaths. Expand é uma sequência de caracteres delimitada por vírgula que especifica as propriedades de navegação a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="438a2-240">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel_release.Excel.Worksheet.name
    summary: |-
      <span data-ttu-id="438a2-241">O nome de exibição da planilha.</span><span class="sxs-lookup"><span data-stu-id="438a2-241">The display name of the worksheet.</span></span>

      <span data-ttu-id="438a2-242">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="438a2-242">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: name
    fullName: name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'name: string;'
      return:
        type:
          - string
  - uid: excel_release.Excel.Worksheet.names
    summary: |-
      <span data-ttu-id="438a2-243">Coleção de nomes com escopo para a planilha atual.</span><span class="sxs-lookup"><span data-stu-id="438a2-243">Collection of names scoped to the current worksheet.</span></span> <span data-ttu-id="438a2-244">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="438a2-244">Read-only.</span></span>

      <span data-ttu-id="438a2-245">\[[Conjunto de APIs: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="438a2-245">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: names
    fullName: names
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly names: Excel.NamedItemCollection;'
      return:
        type:
          - excel.Excel.NamedItemCollection
  - uid: excel_release.Excel.Worksheet.onActivated
    summary: |-
      <span data-ttu-id="438a2-246">Ocorre quando a planilha é ativada.</span><span class="sxs-lookup"><span data-stu-id="438a2-246">Occurs when the worksheet is activated.</span></span>

      <span data-ttu-id="438a2-247">\[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="438a2-247">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: onActivated
    fullName: onActivated
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onActivated: OfficeExtension.EventHandlers<Excel.WorksheetActivatedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.WorksheetActivatedEventArgs>
        description: |-


          #### <a name="examples"></a><span data-ttu-id="438a2-248">Exemplos</span><span class="sxs-lookup"><span data-stu-id="438a2-248">Examples</span></span>

          ```javascript
          Excel.run(function (context) {
              var sheet = context.workbook.worksheets.getItem("Sample");
              sheet.onActivated.add(function (event) {
                  return Excel.run((context) => {
                      console.log("The activated worksheet ID is: " + event.worksheetId);
                      return context.sync();
                  });
              });
              return context.sync();
          });
          ```
  - uid: excel_release.Excel.Worksheet.onCalculated
    summary: |-
      <span data-ttu-id="438a2-249">Ocorre quando a planilha é calculada.</span><span class="sxs-lookup"><span data-stu-id="438a2-249">Occurs when the worksheet is calculated.</span></span>

      <span data-ttu-id="438a2-250">\[[Conjunto de APIs: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="438a2-250">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: onCalculated
    fullName: onCalculated
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onCalculated: OfficeExtension.EventHandlers<Excel.WorksheetCalculatedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.WorksheetCalculatedEventArgs>
        description: |-


          #### <a name="examples"></a><span data-ttu-id="438a2-251">Exemplos</span><span class="sxs-lookup"><span data-stu-id="438a2-251">Examples</span></span>

          ```javascript
          Excel.run(function (context) {
              var sheet = context.workbook.worksheets.getItem("Sample");
              sheet.onCalculated.add(function (event) {
                  return Excel.run((context) => {
                      console.log("The worksheet has recalculated.");
                      return context.sync();
                  });
              });
              return context.sync();
          });
          ```
  - uid: excel_release.Excel.Worksheet.onChanged
    summary: |-
      <span data-ttu-id="438a2-252">Ocorre quando os dados são alterados em uma planilha específica.</span><span class="sxs-lookup"><span data-stu-id="438a2-252">Occurs when data changed on a specific worksheet.</span></span>

      <span data-ttu-id="438a2-253">\[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="438a2-253">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: onChanged
    fullName: onChanged
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onChanged: OfficeExtension.EventHandlers<Excel.WorksheetChangedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.WorksheetChangedEventArgs>
        description: |-


          #### <a name="examples"></a><span data-ttu-id="438a2-254">Exemplos</span><span class="sxs-lookup"><span data-stu-id="438a2-254">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              let sheet = context.workbook.worksheets.getItem("Sample");
              sheet.onChanged.add(onChange);

              await context.sync();
              console.log("A handler has been registered for the onChanged event.");
          });
          ```
  - uid: excel_release.Excel.Worksheet.onDeactivated
    summary: |-
      <span data-ttu-id="438a2-255">Ocorre quando a planilha é desativada.</span><span class="sxs-lookup"><span data-stu-id="438a2-255">Occurs when the worksheet is deactivated.</span></span>

      <span data-ttu-id="438a2-256">\[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="438a2-256">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: onDeactivated
    fullName: onDeactivated
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onDeactivated: OfficeExtension.EventHandlers<Excel.WorksheetDeactivatedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.WorksheetDeactivatedEventArgs>
        description: |-


          #### <a name="examples"></a><span data-ttu-id="438a2-257">Exemplos</span><span class="sxs-lookup"><span data-stu-id="438a2-257">Examples</span></span>

          ```javascript
          Excel.run(function (context) {
              var sheet = context.workbook.worksheets.getItem("Sample");
              sheet.onDeactivated.add(function (event) {
                  return Excel.run((context) => {
                      console.log("The deactivated worksheet is: " + event.worksheetId);
                      return context.sync();
                  });
              });
              return context.sync();
          });
          ```
  - uid: excel_release.Excel.Worksheet.onFormatChanged
    summary: |-
      <span data-ttu-id="438a2-258">Ocorre quando o formato é alterado em uma planilha específica.</span><span class="sxs-lookup"><span data-stu-id="438a2-258">Occurs when format changed on a specific worksheet.</span></span>

      <span data-ttu-id="438a2-259">\[[Conjunto de APIs: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="438a2-259">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: onFormatChanged
    fullName: onFormatChanged
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onFormatChanged: OfficeExtension.EventHandlers<Excel.WorksheetFormatChangedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.WorksheetFormatChangedEventArgs>
  - uid: excel_release.Excel.Worksheet.onSelectionChanged
    summary: |-
      <span data-ttu-id="438a2-260">Ocorre quando a seleção é alterada em uma planilha específica.</span><span class="sxs-lookup"><span data-stu-id="438a2-260">Occurs when the selection changes on a specific worksheet.</span></span>

      <span data-ttu-id="438a2-261">\[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="438a2-261">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: onSelectionChanged
    fullName: onSelectionChanged
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onSelectionChanged: OfficeExtension.EventHandlers<Excel.WorksheetSelectionChangedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.WorksheetSelectionChangedEventArgs>
        description: |-


          #### <a name="examples"></a><span data-ttu-id="438a2-262">Exemplos</span><span class="sxs-lookup"><span data-stu-id="438a2-262">Examples</span></span>

          ```javascript
          Excel.run(function (context) {
              var sheet = context.workbook.worksheets.getItem("Sample");
              sheet.onSelectionChanged.add(function (event) {
                  return Excel.run((context) => {
                      console.log("The selected range has changed to: " + event.address);
                      return context.sync();
                  });
              });
              return context.sync();
          });
          ```
  - uid: excel_release.Excel.Worksheet.pageLayout
    summary: |-
      <span data-ttu-id="438a2-263">Obtém o objeto PageLayout da planilha.</span><span class="sxs-lookup"><span data-stu-id="438a2-263">Gets the PageLayout object of the worksheet.</span></span>

      <span data-ttu-id="438a2-264">\[[Conjunto de APIs: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="438a2-264">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: pageLayout
    fullName: pageLayout
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly pageLayout: Excel.PageLayout;'
      return:
        type:
          - excel.Excel.PageLayout
  - uid: excel_release.Excel.Worksheet.pivotTables
    summary: |-
      <span data-ttu-id="438a2-265">Coleção de Tabelas Dinâmicas que fazem parte da planilha.</span><span class="sxs-lookup"><span data-stu-id="438a2-265">Collection of PivotTables that are part of the worksheet.</span></span> <span data-ttu-id="438a2-266">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="438a2-266">Read-only.</span></span>

      <span data-ttu-id="438a2-267">\[[Conjunto de APIs: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="438a2-267">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: pivotTables
    fullName: pivotTables
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly pivotTables: Excel.PivotTableCollection;'
      return:
        type:
          - excel.Excel.PivotTableCollection
  - uid: excel_release.Excel.Worksheet.position
    summary: |-
      <span data-ttu-id="438a2-268">A posição baseada em zero da planilha na pasta de trabalho.</span><span class="sxs-lookup"><span data-stu-id="438a2-268">The zero-based position of the worksheet within the workbook.</span></span>

      <span data-ttu-id="438a2-269">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="438a2-269">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: position
    fullName: position
    langs:
      - typeScript
    type: property
    syntax:
      content: 'position: number;'
      return:
        type:
          - number
  - uid: excel_release.Excel.Worksheet.protection
    summary: |-
      <span data-ttu-id="438a2-270">Retorna o objeto de proteção da planilha para uma planilha.</span><span class="sxs-lookup"><span data-stu-id="438a2-270">Returns sheet protection object for a worksheet.</span></span> <span data-ttu-id="438a2-271">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="438a2-271">Read-only.</span></span>

      <span data-ttu-id="438a2-272">\[[Conjunto de APIs: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="438a2-272">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: protection
    fullName: protection
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly protection: Excel.WorksheetProtection;'
      return:
        type:
          - excel.Excel.WorksheetProtection
  - uid: excel_release.Excel.Worksheet.replaceAll
    summary: |-
      <span data-ttu-id="438a2-273">Localiza e substitui a cadeia de caracteres fornecida com base nos critérios especificados na planilha atual.</span><span class="sxs-lookup"><span data-stu-id="438a2-273">Finds and replaces the given string based on the criteria specified within the current worksheet.</span></span>

      <span data-ttu-id="438a2-274">\[[Conjunto de APIs: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="438a2-274">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'replaceAll(text, replacement, criteria)'
    fullName: 'replaceAll(text, replacement, criteria)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'replaceAll(text: string, replacement: string, criteria: Excel.ReplaceCriteria): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - OfficeExtension.ClientResult<number>
        description: <span data-ttu-id="438a2-275">O número de substituições realizadas.</span><span class="sxs-lookup"><span data-stu-id="438a2-275">The number of replacements performed.</span></span>
      parameters:
        - id: text
          description: <span data-ttu-id="438a2-276">Cadeia de caracteres a ser localizada.</span><span class="sxs-lookup"><span data-stu-id="438a2-276">String to find.</span></span>
          type:
            - string
        - id: replacement
          description: <span data-ttu-id="438a2-277">Cadeia de caracteres para substituir o original por.</span><span class="sxs-lookup"><span data-stu-id="438a2-277">String to replace the original with.</span></span>
          type:
            - string
        - id: criteria
          description: <span data-ttu-id="438a2-278">Critérios adicionais de substituição.</span><span class="sxs-lookup"><span data-stu-id="438a2-278">Additional Replace Criteria.</span></span>
          type:
            - excel.Excel.ReplaceCriteria
  - uid: excel_release.Excel.Worksheet.set
    summary: '<span data-ttu-id="438a2-279">Define várias propriedades de um objeto ao mesmo tempo.</span><span class="sxs-lookup"><span data-stu-id="438a2-279">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="438a2-280">Você pode passar um objeto simples com as propriedades apropriadas ou outro objeto API do mesmo tipo.</span><span class="sxs-lookup"><span data-stu-id="438a2-280">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="438a2-281">Este método tem a seguinte assinatura adicional:</span><span class="sxs-lookup"><span data-stu-id="438a2-281">This method has the following additional signature:</span></span>

      `set(properties: Excel.Worksheet): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.WorksheetUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="438a2-282">Um objeto JavaScript com propriedades que são estruturadas isomorphically para as propriedades do objeto no qual o método é chamado.</span><span class="sxs-lookup"><span data-stu-id="438a2-282">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - Interfaces.WorksheetUpdateData
        - id: options
          description: <span data-ttu-id="438a2-283">Fornece uma opção para suprimir erros se o objeto Properties tentar definir qualquer propriedade somente leitura.</span><span class="sxs-lookup"><span data-stu-id="438a2-283">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - office.OfficeExtension.UpdateOptions
  - uid: excel_release.Excel.Worksheet.set_1
    summary: '<span data-ttu-id="438a2-284">Define várias propriedades no objeto ao mesmo tempo, com base em um objeto carregado existente.</span><span class="sxs-lookup"><span data-stu-id="438a2-284">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.Worksheet): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - excel.Excel.Worksheet
  - uid: excel_release.Excel.Worksheet.shapes
    summary: |-
      <span data-ttu-id="438a2-285">Retorna a coleção de todos os objetos Shape na planilha.</span><span class="sxs-lookup"><span data-stu-id="438a2-285">Returns the collection of all the Shape objects on the worksheet.</span></span> <span data-ttu-id="438a2-286">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="438a2-286">Read-only.</span></span>

      <span data-ttu-id="438a2-287">\[[Conjunto de APIs: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="438a2-287">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: shapes
    fullName: shapes
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly shapes: Excel.ShapeCollection;'
      return:
        type:
          - excel.Excel.ShapeCollection
  - uid: excel_release.Excel.Worksheet.showGridlines
    summary: |-
      <span data-ttu-id="438a2-288">Obtém ou define um sinalizador de linhas de grade da planilha.</span><span class="sxs-lookup"><span data-stu-id="438a2-288">Gets or sets the worksheet's gridlines flag.</span></span> <span data-ttu-id="438a2-289">Este sinalizador determina se as linhas de grade são visíveis para o usuário.</span><span class="sxs-lookup"><span data-stu-id="438a2-289">This flag determines whether gridlines are visible to the user.</span></span>

      <span data-ttu-id="438a2-290">\[[Conjunto de APIs: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="438a2-290">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: showGridlines
    fullName: showGridlines
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showGridlines: boolean;'
      return:
        type:
          - boolean
        description: |-


          #### <a name="examples"></a><span data-ttu-id="438a2-291">Exemplos</span><span class="sxs-lookup"><span data-stu-id="438a2-291">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getActiveWorksheet();
              sheet.showGridlines = true;

              await context.sync();
          });
          ```
  - uid: excel_release.Excel.Worksheet.showHeadings
    summary: |-
      <span data-ttu-id="438a2-292">É ou define um sinalizador de cabeçalhos da planilha.</span><span class="sxs-lookup"><span data-stu-id="438a2-292">Gets or sets the worksheet's headings flag.</span></span> <span data-ttu-id="438a2-293">Esse sinalizador determina se os títulos são visíveis para o usuário.</span><span class="sxs-lookup"><span data-stu-id="438a2-293">This flag determines whether headings are visible to the user.</span></span>

      <span data-ttu-id="438a2-294">\[[Conjunto de APIs: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="438a2-294">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: showHeadings
    fullName: showHeadings
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showHeadings: boolean;'
      return:
        type:
          - boolean
  - uid: excel_release.Excel.Worksheet.standardHeight
    summary: |-
      <span data-ttu-id="438a2-295">Retorna a altura padrão de todas as linhas na planilha, em pontos.</span><span class="sxs-lookup"><span data-stu-id="438a2-295">Returns the standard (default) height of all the rows in the worksheet, in points.</span></span> <span data-ttu-id="438a2-296">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="438a2-296">Read-only.</span></span>

      <span data-ttu-id="438a2-297">\[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="438a2-297">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: standardHeight
    fullName: standardHeight
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly standardHeight: number;'
      return:
        type:
          - number
  - uid: excel_release.Excel.Worksheet.standardWidth
    summary: |-
      <span data-ttu-id="438a2-298">Retorna ou define a largura padrão de todas as colunas na planilha.</span><span class="sxs-lookup"><span data-stu-id="438a2-298">Returns or sets the standard (default) width of all the columns in the worksheet.</span></span> <span data-ttu-id="438a2-299">Uma unidade de largura de coluna equivale à largura de um caractere no estilo Normal.</span><span class="sxs-lookup"><span data-stu-id="438a2-299">One unit of column width is equal to the width of one character in the Normal style.</span></span> <span data-ttu-id="438a2-300">Para fontes proporcionais, será usada a largura do caractere 0 (zero).</span><span class="sxs-lookup"><span data-stu-id="438a2-300">For proportional fonts, the width of the character 0 (zero) is used.</span></span>

      <span data-ttu-id="438a2-301">\[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="438a2-301">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: standardWidth
    fullName: standardWidth
    langs:
      - typeScript
    type: property
    syntax:
      content: 'standardWidth: number;'
      return:
        type:
          - number
  - uid: excel_release.Excel.Worksheet.tabColor
    summary: |-
      <span data-ttu-id="438a2-302">Obtém ou define a cor da guia de planilha.</span><span class="sxs-lookup"><span data-stu-id="438a2-302">Gets or sets the worksheet tab color.</span></span> <span data-ttu-id="438a2-303">Ao recuperar a cor de tabulação, se a planilha estiver invisível, o valor será NULL.</span><span class="sxs-lookup"><span data-stu-id="438a2-303">When retrieving the tab color, if the worksheet is invisible, the value will be null.</span></span> <span data-ttu-id="438a2-304">Se a planilha estiver visível, mas a cor da guia estiver definida como auto, uma cadeia de caracteres vazia será retornada.</span><span class="sxs-lookup"><span data-stu-id="438a2-304">If the worksheet is visible but the tab color is set to auto, an empty string will be returned.</span></span> <span data-ttu-id="438a2-305">Caso contrário, a propriedade será definida como uma cor, no formato "\#123456" ao definir a cor, usar uma cadeia de caracteres vazia para definir uma cor "auto" ou uma cor real caso contrário.</span><span class="sxs-lookup"><span data-stu-id="438a2-305">Otherwise, the property will be set to a color, in the form "\#123456" When setting the color, use an empty-string to set an "auto" color, or a real color otherwise.</span></span>

      <span data-ttu-id="438a2-306">\[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="438a2-306">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: tabColor
    fullName: tabColor
    langs:
      - typeScript
    type: property
    syntax:
      content: 'tabColor: string;'
      return:
        type:
          - string
        description: |-


          #### <a name="examples"></a><span data-ttu-id="438a2-307">Exemplos</span><span class="sxs-lookup"><span data-stu-id="438a2-307">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const activeSheet = context.workbook.worksheets.getActiveWorksheet();
              activeSheet.tabColor = "#FF0000";

              await context.sync();
          });
          ```
  - uid: excel_release.Excel.Worksheet.tables
    summary: |-
      <span data-ttu-id="438a2-308">Coleção de tabelas que fazem parte da planilha.</span><span class="sxs-lookup"><span data-stu-id="438a2-308">Collection of tables that are part of the worksheet.</span></span> <span data-ttu-id="438a2-309">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="438a2-309">Read-only.</span></span>

      <span data-ttu-id="438a2-310">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="438a2-310">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: tables
    fullName: tables
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly tables: Excel.TableCollection;'
      return:
        type:
          - excel.Excel.TableCollection
  - uid: excel_release.Excel.Worksheet.toJSON
    summary: '<span data-ttu-id="438a2-311">Substitui o método `toJSON()` JavaScript para fornecer uma saída mais útil quando um objeto API é passado para`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="438a2-311">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="438a2-312">.</span><span class="sxs-lookup"><span data-stu-id="438a2-312"></span></span> <span data-ttu-id="438a2-313">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="438a2-313"></span></span><!-- --><span data-ttu-id="438a2-314">, por sua vez, chama `toJSON` o método do objeto que é passado para ele.) Enquanto o objeto Excel. Worksheet original é um objeto API, o `toJSON` método retorna um objeto JavaScript simples (digitado como`Excel.Interfaces.WorksheetData`</span><span class="sxs-lookup"><span data-stu-id="438a2-314">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.Worksheet object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.WorksheetData`</span></span><!-- --><span data-ttu-id="438a2-315">) que contém cópias superficiais de qualquer propriedade filho carregada do objeto original.</span><span class="sxs-lookup"><span data-stu-id="438a2-315">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.WorksheetData;'
      return:
        type:
          - excel.Excel.Interfaces.WorksheetData
        description: ''
  - uid: excel_release.Excel.Worksheet.verticalPageBreaks
    summary: |-
      <span data-ttu-id="438a2-316">Obtém a coleção de quebra de página vertical da planilha.</span><span class="sxs-lookup"><span data-stu-id="438a2-316">Gets the vertical page break collection for the worksheet.</span></span> <span data-ttu-id="438a2-317">Esta coleção contém apenas quebras de página manuais.</span><span class="sxs-lookup"><span data-stu-id="438a2-317">This collection only contains manual page breaks.</span></span>

      <span data-ttu-id="438a2-318">\[[Conjunto de APIs: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="438a2-318">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: verticalPageBreaks
    fullName: verticalPageBreaks
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly verticalPageBreaks: Excel.PageBreakCollection;'
      return:
        type:
          - excel.Excel.PageBreakCollection
  - uid: excel_release.Excel.Worksheet.visibility
    summary: |-
      <span data-ttu-id="438a2-319">A visibilidade da planilha.</span><span class="sxs-lookup"><span data-stu-id="438a2-319">The Visibility of the worksheet.</span></span>

      <span data-ttu-id="438a2-320">\[[Conjunto de APIs: ExcelApi 1,1 para ler a visibilidade; 1,2 para configurá-la.](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)</span><span class="sxs-lookup"><span data-stu-id="438a2-320">\[ [API set: ExcelApi 1.1 for reading visibility; 1.2 for setting it.](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)</span></span> <span data-ttu-id="438a2-321">\]</span><span class="sxs-lookup"><span data-stu-id="438a2-321"></span></span>
    name: visibility
    fullName: visibility
    langs:
      - typeScript
    type: property
    syntax:
      content: 'visibility: Excel.SheetVisibility | "Visible" | "Hidden" | "VeryHidden";'
      return:
        type:
          - Excel.SheetVisibility | "Visible" | "Hidden" | "VeryHidden"