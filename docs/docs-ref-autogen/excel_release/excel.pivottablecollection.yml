### YamlMime:UniversalReference
items:
  - uid: excel_release.Excel.PivotTableCollection
    summary: |-
      <span data-ttu-id="8a4ed-101">Representa uma coleção de todas as Tabelas Dinâmicas que fazem parte da pasta de trabalho ou planilha.</span><span class="sxs-lookup"><span data-stu-id="8a4ed-101">Represents a collection of all the PivotTables that are part of the workbook or worksheet.</span></span>

      <span data-ttu-id="8a4ed-102">\[[Conjunto de APIs: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8a4ed-102">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.PivotTableCollection
    fullName: Excel.PivotTableCollection
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: excel_release
    children:
      - excel_release.Excel.PivotTableCollection.add
      - excel_release.Excel.PivotTableCollection.context
      - excel_release.Excel.PivotTableCollection.getCount
      - excel_release.Excel.PivotTableCollection.getItem
      - excel_release.Excel.PivotTableCollection.getItemOrNullObject
      - excel_release.Excel.PivotTableCollection.items
      - excel_release.Excel.PivotTableCollection.load
      - excel_release.Excel.PivotTableCollection.load_1
      - excel_release.Excel.PivotTableCollection.load_2
      - excel_release.Excel.PivotTableCollection.refreshAll
      - excel_release.Excel.PivotTableCollection.toJSON
  - uid: excel_release.Excel.PivotTableCollection.add
    summary: |-
      <span data-ttu-id="8a4ed-103">Adiciona um Pivottable com base nos dados de origem especificados e insere-o na célula superior esquerda do intervalo de destino.</span><span class="sxs-lookup"><span data-stu-id="8a4ed-103">Add a Pivottable based on the specified source data and insert it at the top left cell of the destination range.</span></span>

      <span data-ttu-id="8a4ed-104">\[[Conjunto de APIs: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8a4ed-104">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'add(name, source, destination)'
    fullName: 'add(name, source, destination)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(name: string, source: Range | string | Table, destination: Range | string): Excel.PivotTable;'
      return:
        type:
          - excel.Excel.PivotTable
        description: |-
          <span data-ttu-id="8a4ed-105">Retorna a tabela dinâmica recentemente inserida.</span><span class="sxs-lookup"><span data-stu-id="8a4ed-105">Returns the newly inserted PivotTable.</span></span>

          #### <a name="examples"></a><span data-ttu-id="8a4ed-106">Exemplos</span><span class="sxs-lookup"><span data-stu-id="8a4ed-106">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const rangeToAnalyze = context.workbook.worksheets.getItem("Data").getRange("A1:E21");
              const rangeToPlacePivot = context.workbook.worksheets.getItem("Pivot").getRange("A2");
              context.workbook.worksheets.getItem("Pivot").pivotTables.add("Farm Sales", rangeToAnalyze, rangeToPlacePivot);

              await context.sync();
          });
          ```
      parameters:
        - id: name
          description: <span data-ttu-id="8a4ed-107">O nome da nova tabela dinâmica.</span><span class="sxs-lookup"><span data-stu-id="8a4ed-107">The name of the new PivotTable.</span></span>
          type:
            - string
        - id: source
          description: '<span data-ttu-id="8a4ed-108">Os dados de origem da nova tabela dinâmica, podem ser um intervalo (ou um endereço de cadeia de caracteres incluindo o nome da planilha) ou uma tabela.</span><span class="sxs-lookup"><span data-stu-id="8a4ed-108">The source data for the new PivotTable, this can either be a range (or string address including the worksheet name) or a table.</span></span>'
          type:
            - Range | string | Table
        - id: destination
          description: <span data-ttu-id="8a4ed-109">A célula no canto superior esquerdo do intervalo de destino do relatório de tabela dinâmica (o intervalo na planilha em que o relatório resultante será inserido).</span><span class="sxs-lookup"><span data-stu-id="8a4ed-109">The cell in the upper-left corner of the PivotTable report's destination range (the range on the worksheet where the resulting report will be placed).</span></span>
          type:
            - Range | string
  - uid: excel_release.Excel.PivotTableCollection.context
    summary: <span data-ttu-id="8a4ed-110">O contexto de solicitação associado ao objeto.</span><span class="sxs-lookup"><span data-stu-id="8a4ed-110">The request context associated with the object.</span></span> <span data-ttu-id="8a4ed-111">Isso conecta o processo do suplemento ao processo do aplicativo host do Office.</span><span class="sxs-lookup"><span data-stu-id="8a4ed-111">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: excel_release.Excel.PivotTableCollection.getCount
    summary: |-
      <span data-ttu-id="8a4ed-112">Obtém o número de tabelas dinâmicas na coleção.</span><span class="sxs-lookup"><span data-stu-id="8a4ed-112">Gets the number of pivot tables in the collection.</span></span>

      <span data-ttu-id="8a4ed-113">\[[Conjunto de APIs: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8a4ed-113">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - OfficeExtension.ClientResult<number>
        description: ''
  - uid: excel_release.Excel.PivotTableCollection.getItem
    summary: |-
      <span data-ttu-id="8a4ed-114">Obtém uma Tabela Dinâmica por nome.</span><span class="sxs-lookup"><span data-stu-id="8a4ed-114">Gets a PivotTable by name.</span></span>

      <span data-ttu-id="8a4ed-115">\[[Conjunto de APIs: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8a4ed-115">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItem(name)
    fullName: getItem(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(name: string): Excel.PivotTable;'
      return:
        type:
          - excel.Excel.PivotTable
        description: ''
      parameters:
        - id: name
          description: <span data-ttu-id="8a4ed-116">Nome da Tabela Dinâmica a ser recuperada.</span><span class="sxs-lookup"><span data-stu-id="8a4ed-116">Name of the PivotTable to be retrieved.</span></span>
          type:
            - string
  - uid: excel_release.Excel.PivotTableCollection.getItemOrNullObject
    summary: |-
      <span data-ttu-id="8a4ed-117">Obtém uma Tabela Dinâmica por nome.</span><span class="sxs-lookup"><span data-stu-id="8a4ed-117">Gets a PivotTable by name.</span></span> <span data-ttu-id="8a4ed-118">Se a tabela dinâmica não existir, retornará um objeto null.</span><span class="sxs-lookup"><span data-stu-id="8a4ed-118">If the PivotTable does not exist, will return a null object.</span></span>

      <span data-ttu-id="8a4ed-119">\[[Conjunto de APIs: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8a4ed-119">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItemOrNullObject(name)
    fullName: getItemOrNullObject(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemOrNullObject(name: string): Excel.PivotTable;'
      return:
        type:
          - excel.Excel.PivotTable
        description: ''
      parameters:
        - id: name
          description: <span data-ttu-id="8a4ed-120">Nome da Tabela Dinâmica a ser recuperada.</span><span class="sxs-lookup"><span data-stu-id="8a4ed-120">Name of the PivotTable to be retrieved.</span></span>
          type:
            - string
  - uid: excel_release.Excel.PivotTableCollection.items
    summary: <span data-ttu-id="8a4ed-121">Obtém os itens filhos carregados nesta coleção.</span><span class="sxs-lookup"><span data-stu-id="8a4ed-121">Gets the loaded child items in this collection.</span></span>
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.PivotTable[];'
      return:
        type:
          - 'Excel.PivotTable[]'
  - uid: excel_release.Excel.PivotTableCollection.load
    summary: <span data-ttu-id="8a4ed-122">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="8a4ed-122">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="8a4ed-123">Você deve chamar "context.sync()" antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="8a4ed-123">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="8a4ed-124">Além dessa assinatura, este método tem as seguintes assinaturas:</span><span class="sxs-lookup"><span data-stu-id="8a4ed-124">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="8a4ed-125">`load(option?: string | string[]): Excel.PivotTableCollection`-Where Option é uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="8a4ed-125">`load(option?: string | string[]): Excel.PivotTableCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="8a4ed-126">`load(option?: { select?: string; expand?: string; }): Excel.PivotTableCollection`-Onde Option. Select é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades a serem carregadas, e Options. Expand é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades de navegação a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="8a4ed-126">`load(option?: { select?: string; expand?: string; }): Excel.PivotTableCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="8a4ed-127">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.PivotTableCollection`– Disponível somente nos tipos de coleção.</span><span class="sxs-lookup"><span data-stu-id="8a4ed-127">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.PivotTableCollection` - Only available on collection types.</span></span> <span data-ttu-id="8a4ed-128">É semelhante à assinatura anterior.</span><span class="sxs-lookup"><span data-stu-id="8a4ed-128">It is similar to the preceding signature.</span></span> <span data-ttu-id="8a4ed-129">Option. Top especifica o número máximo de itens de coleta que podem ser incluídos no resultado.</span><span class="sxs-lookup"><span data-stu-id="8a4ed-129">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="8a4ed-130">Option. Skip especifica o número de itens que devem ser ignorados e não incluídos no resultado.</span><span class="sxs-lookup"><span data-stu-id="8a4ed-130">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="8a4ed-131">Se Option. Top for especificado, o conjunto de resultados será iniciado depois de ignorar o número de itens especificado.</span><span class="sxs-lookup"><span data-stu-id="8a4ed-131">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.PivotTableCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.PivotTableCollection;'
      return:
        type:
          - excel.Excel.PivotTableCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - Excel.Interfaces.PivotTableCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
  - uid: excel_release.Excel.PivotTableCollection.load_1
    summary: <span data-ttu-id="8a4ed-132">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="8a4ed-132">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="8a4ed-133">Você deve chamar `context.sync()` antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="8a4ed-133">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.PivotTableCollection;'
      return:
        type:
          - excel.Excel.PivotTableCollection
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="8a4ed-134">Uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="8a4ed-134">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: excel_release.Excel.PivotTableCollection.load_2
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): Excel.PivotTableCollection;'
      return:
        type:
          - excel.Excel.PivotTableCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - office.OfficeExtension.LoadOption
  - uid: excel_release.Excel.PivotTableCollection.refreshAll
    summary: |-
      <span data-ttu-id="8a4ed-135">Atualiza todas as tabelas dinâmicas da coleção.</span><span class="sxs-lookup"><span data-stu-id="8a4ed-135">Refreshes all the pivot tables in the collection.</span></span>

      <span data-ttu-id="8a4ed-136">\[[Conjunto de APIs: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8a4ed-136">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: refreshAll()
    fullName: refreshAll()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'refreshAll(): void;'
      return:
        type:
          - void
        description: ''
  - uid: excel_release.Excel.PivotTableCollection.toJSON
    summary: '<span data-ttu-id="8a4ed-137">Substitui o método `toJSON()` JavaScript para fornecer uma saída mais útil quando um objeto API é passado para`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="8a4ed-137">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="8a4ed-138">.</span><span class="sxs-lookup"><span data-stu-id="8a4ed-138"></span></span> <span data-ttu-id="8a4ed-139">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="8a4ed-139"></span></span><!-- --><span data-ttu-id="8a4ed-140">, por sua vez, chama `toJSON` o método do objeto que é passado para ele.) Enquanto o objeto `Excel.PivotTableCollection` original é um objeto API, o `toJSON` método retorna um objeto JavaScript simples (digitado como`Excel.Interfaces.PivotTableCollectionData`</span><span class="sxs-lookup"><span data-stu-id="8a4ed-140">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.PivotTableCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.PivotTableCollectionData`</span></span><!-- --><span data-ttu-id="8a4ed-141">) que contém uma matriz de "itens" com cópias superficiais de qualquer propriedade carregada dos itens da coleção.</span><span class="sxs-lookup"><span data-stu-id="8a4ed-141">) that contains an "items" array with shallow copies of any loaded properties from the collection''s items.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.PivotTableCollectionData;'
      return:
        type:
          - excel.Excel.Interfaces.PivotTableCollectionData
        description: ''