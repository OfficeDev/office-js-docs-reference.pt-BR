### YamlMime:UniversalReference
items:
  - uid: excel_release.Excel.ChartSeries
    summary: |-
      Representa uma série de um gráfico.

      \[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: Excel.ChartSeries
    fullName: Excel.ChartSeries
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: excel_release
    children:
      - excel_release.Excel.ChartSeries.axisGroup
      - excel_release.Excel.ChartSeries.binOptions
      - excel_release.Excel.ChartSeries.boxwhiskerOptions
      - excel_release.Excel.ChartSeries.bubbleScale
      - excel_release.Excel.ChartSeries.chartType
      - excel_release.Excel.ChartSeries.context
      - excel_release.Excel.ChartSeries.dataLabels
      - excel_release.Excel.ChartSeries.delete
      - excel_release.Excel.ChartSeries.doughnutHoleSize
      - excel_release.Excel.ChartSeries.explosion
      - excel_release.Excel.ChartSeries.filtered
      - excel_release.Excel.ChartSeries.firstSliceAngle
      - excel_release.Excel.ChartSeries.format
      - excel_release.Excel.ChartSeries.gapWidth
      - excel_release.Excel.ChartSeries.gradientMaximumColor
      - excel_release.Excel.ChartSeries.gradientMaximumType
      - excel_release.Excel.ChartSeries.gradientMaximumValue
      - excel_release.Excel.ChartSeries.gradientMidpointColor
      - excel_release.Excel.ChartSeries.gradientMidpointType
      - excel_release.Excel.ChartSeries.gradientMidpointValue
      - excel_release.Excel.ChartSeries.gradientMinimumColor
      - excel_release.Excel.ChartSeries.gradientMinimumType
      - excel_release.Excel.ChartSeries.gradientMinimumValue
      - excel_release.Excel.ChartSeries.gradientStyle
      - excel_release.Excel.ChartSeries.hasDataLabels
      - excel_release.Excel.ChartSeries.invertColor
      - excel_release.Excel.ChartSeries.invertIfNegative
      - excel_release.Excel.ChartSeries.load
      - excel_release.Excel.ChartSeries.load_1
      - excel_release.Excel.ChartSeries.load_2
      - excel_release.Excel.ChartSeries.mapOptions
      - excel_release.Excel.ChartSeries.markerBackgroundColor
      - excel_release.Excel.ChartSeries.markerForegroundColor
      - excel_release.Excel.ChartSeries.markerSize
      - excel_release.Excel.ChartSeries.markerStyle
      - excel_release.Excel.ChartSeries.name
      - excel_release.Excel.ChartSeries.overlap
      - excel_release.Excel.ChartSeries.parentLabelStrategy
      - excel_release.Excel.ChartSeries.plotOrder
      - excel_release.Excel.ChartSeries.points
      - excel_release.Excel.ChartSeries.secondPlotSize
      - excel_release.Excel.ChartSeries.set
      - excel_release.Excel.ChartSeries.set_1
      - excel_release.Excel.ChartSeries.setBubbleSizes
      - excel_release.Excel.ChartSeries.setValues
      - excel_release.Excel.ChartSeries.setXAxisValues
      - excel_release.Excel.ChartSeries.showConnectorLines
      - excel_release.Excel.ChartSeries.showLeaderLines
      - excel_release.Excel.ChartSeries.showShadow
      - excel_release.Excel.ChartSeries.smooth
      - excel_release.Excel.ChartSeries.splitType
      - excel_release.Excel.ChartSeries.splitValue
      - excel_release.Excel.ChartSeries.toJSON
      - excel_release.Excel.ChartSeries.trendlines
      - excel_release.Excel.ChartSeries.varyByCategories
      - excel_release.Excel.ChartSeries.xErrorBars
      - excel_release.Excel.ChartSeries.yErrorBars
  - uid: excel_release.Excel.ChartSeries.axisGroup
    summary: |-
      Retorna ou define o grupo da série especificada. Leitura/gravação

      \[[Conjunto de APIs: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: axisGroup
    fullName: axisGroup
    langs:
      - typeScript
    type: property
    syntax:
      content: 'axisGroup: Excel.ChartAxisGroup | "Primary" | "Secondary";'
      return:
        type:
          - Excel.ChartAxisGroup | "Primary" | "Secondary"
  - uid: excel_release.Excel.ChartSeries.binOptions
    summary: |-
      Encapsula as opções de compartimento para gráficos de histograma e gráficos de Pareto. Somente leitura.

      \[[Conjunto de APIs: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: binOptions
    fullName: binOptions
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly binOptions: Excel.ChartBinOptions;'
      return:
        type:
          - excel.Excel.ChartBinOptions
  - uid: excel_release.Excel.ChartSeries.boxwhiskerOptions
    summary: |-
      Encapsula as opções para os gráficos caixa e estreita. Somente leitura.

      \[[Conjunto de APIs: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: boxwhiskerOptions
    fullName: boxwhiskerOptions
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly boxwhiskerOptions: Excel.ChartBoxwhiskerOptions;'
      return:
        type:
          - excel.Excel.ChartBoxwhiskerOptions
  - uid: excel_release.Excel.ChartSeries.bubbleScale
    summary: |-
      Pode ser um valor inteiro de 0 (zero) a 300, representando a porcentagem do tamanho padrão. Esta propriedade só se aplica a gráficos de bolha. Leitura/gravação.

      \[[Conjunto de APIs: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: bubbleScale
    fullName: bubbleScale
    langs:
      - typeScript
    type: property
    syntax:
      content: 'bubbleScale: number;'
      return:
        type:
          - number
  - uid: excel_release.Excel.ChartSeries.chartType
    summary: |-
      Representa o tipo de gráfico de uma série. Confira Excel. ChartType para obter detalhes.

      \[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: chartType
    fullName: chartType
    langs:
      - typeScript
    type: property
    syntax:
      content: 'chartType: Excel.ChartType | "Invalid" | "ColumnClustered" | "ColumnStacked" | "ColumnStacked100" | "3DColumnClustered" | "3DColumnStacked" | "3DColumnStacked100" | "BarClustered" | "BarStacked" | "BarStacked100" | "3DBarClustered" | "3DBarStacked" | "3DBarStacked100" | "LineStacked" | "LineStacked100" | "LineMarkers" | "LineMarkersStacked" | "LineMarkersStacked100" | "PieOfPie" | "PieExploded" | "3DPieExploded" | "BarOfPie" | "XYScatterSmooth" | "XYScatterSmoothNoMarkers" | "XYScatterLines" | "XYScatterLinesNoMarkers" | "AreaStacked" | "AreaStacked100" | "3DAreaStacked" | "3DAreaStacked100" | "DoughnutExploded" | "RadarMarkers" | "RadarFilled" | "Surface" | "SurfaceWireframe" | "SurfaceTopView" | "SurfaceTopViewWireframe" | "Bubble" | "Bubble3DEffect" | "StockHLC" | "StockOHLC" | "StockVHLC" | "StockVOHLC" | "CylinderColClustered" | "CylinderColStacked" | "CylinderColStacked100" | "CylinderBarClustered" | "CylinderBarStacked" | "CylinderBarStacked100" | "CylinderCol" | "ConeColClustered" | "ConeColStacked" | "ConeColStacked100" | "ConeBarClustered" | "ConeBarStacked" | "ConeBarStacked100" | "ConeCol" | "PyramidColClustered" | "PyramidColStacked" | "PyramidColStacked100" | "PyramidBarClustered" | "PyramidBarStacked" | "PyramidBarStacked100" | "PyramidCol" | "3DColumn" | "Line" | "3DLine" | "3DPie" | "Pie" | "XYScatter" | "3DArea" | "Area" | "Doughnut" | "Radar" | "Histogram" | "Boxwhisker" | "Pareto" | "RegionMap" | "Treemap" | "Waterfall" | "Sunburst" | "Funnel";'
      return:
        type:
          - Excel.ChartType | "Invalid" | "ColumnClustered" | "ColumnStacked" | "ColumnStacked100" | "3DColumnClustered" | "3DColumnStacked" | "3DColumnStacked100" | "BarClustered" | "BarStacked" | "BarStacked100" | "3DBarClustered" | "3DBarStacked" | "3DBarStacked100" | "LineStacked" | "LineStacked100" | "LineMarkers" | "LineMarkersStacked" | "LineMarkersStacked100" | "PieOfPie" | "PieExploded" | "3DPieExploded" | "BarOfPie" | "XYScatterSmooth" | "XYScatterSmoothNoMarkers" | "XYScatterLines" | "XYScatterLinesNoMarkers" | "AreaStacked" | "AreaStacked100" | "3DAreaStacked" | "3DAreaStacked100" | "DoughnutExploded" | "RadarMarkers" | "RadarFilled" | "Surface" | "SurfaceWireframe" | "SurfaceTopView" | "SurfaceTopViewWireframe" | "Bubble" | "Bubble3DEffect" | "StockHLC" | "StockOHLC" | "StockVHLC" | "StockVOHLC" | "CylinderColClustered" | "CylinderColStacked" | "CylinderColStacked100" | "CylinderBarClustered" | "CylinderBarStacked" | "CylinderBarStacked100" | "CylinderCol" | "ConeColClustered" | "ConeColStacked" | "ConeColStacked100" | "ConeBarClustered" | "ConeBarStacked" | "ConeBarStacked100" | "ConeCol" | "PyramidColClustered" | "PyramidColStacked" | "PyramidColStacked100" | "PyramidBarClustered" | "PyramidBarStacked" | "PyramidBarStacked100" | "PyramidCol" | "3DColumn" | "Line" | "3DLine" | "3DPie" | "Pie" | "XYScatter" | "3DArea" | "Area" | "Doughnut" | "Radar" | "Histogram" | "Boxwhisker" | "Pareto" | "RegionMap" | "Treemap" | "Waterfall" | "Sunburst" | "Funnel"
  - uid: excel_release.Excel.ChartSeries.context
    summary: O contexto de solicitação associado ao objeto. Isso conecta o processo do suplemento ao processo do aplicativo host do Office.
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: excel_release.Excel.ChartSeries.dataLabels
    summary: |-
      Representa uma coleção de todos os dataLabels da série.

      \[[Conjunto de APIs: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: dataLabels
    fullName: dataLabels
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly dataLabels: Excel.ChartDataLabels;'
      return:
        type:
          - excel.Excel.ChartDataLabels
  - uid: excel_release.Excel.ChartSeries.delete
    summary: |-
      Exclui a série de gráfico.

      \[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a>Exemplos

          ```typescript
          await Excel.run(async (context) => {
            const sheet = context.workbook.worksheets.getItem("Sample");
            const seriesCollection = sheet.charts.getItemAt(0).series;
            seriesCollection.load("count");
            await context.sync();

            if (seriesCollection.count > 0) {
              const series = seriesCollection.getItemAt(0);

              // Delete the first series.
              series.delete();
            }

            await context.sync();
          });
          ```
  - uid: excel_release.Excel.ChartSeries.doughnutHoleSize
    summary: |-
      Representa o tamanho do furo de rosca de uma série de gráficos. Válida apenas em gráficos de rosca e doughnutExploded. Gera uma exceção de argumento inválida em gráficos inválidos.

      \[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: doughnutHoleSize
    fullName: doughnutHoleSize
    langs:
      - typeScript
    type: property
    syntax:
      content: 'doughnutHoleSize: number;'
      return:
        type:
          - number
  - uid: excel_release.Excel.ChartSeries.explosion
    summary: |-
      Retorna ou define o valor de explosão para um gráfico de pizza ou fatia de gráfico de rosca. Retorna 0 (zero) se não houver explosão (a ponta da fatia está no centro da pizza). Leitura/gravação.

      \[[Conjunto de APIs: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: explosion
    fullName: explosion
    langs:
      - typeScript
    type: property
    syntax:
      content: 'explosion: number;'
      return:
        type:
          - number
  - uid: excel_release.Excel.ChartSeries.filtered
    summary: |-
      Valor booliano representando se a série é filtrada ou não. Não aplicável para gráficos de superfície.

      \[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: filtered
    fullName: filtered
    langs:
      - typeScript
    type: property
    syntax:
      content: 'filtered: boolean;'
      return:
        type:
          - boolean
  - uid: excel_release.Excel.ChartSeries.firstSliceAngle
    summary: |-
      Retorna ou define o ângulo do primeiro gráfico de pizza ou fatia de gráfico de rosca, em graus (no sentido horário a partir da vertical). Aplica-se apenas a pizza, torta 3-D e gráficos de rosca.. Pode ser um valor de 0 a 360. Leitura/gravação

      \[[Conjunto de APIs: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: firstSliceAngle
    fullName: firstSliceAngle
    langs:
      - typeScript
    type: property
    syntax:
      content: 'firstSliceAngle: number;'
      return:
        type:
          - number
  - uid: excel_release.Excel.ChartSeries.format
    summary: |-
      Representa a formatação de uma série do gráfico, que inclui a formatação de linha e de preenchimento. Somente leitura.

      \[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: format
    fullName: format
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly format: Excel.ChartSeriesFormat;'
      return:
        type:
          - excel.Excel.ChartSeriesFormat
  - uid: excel_release.Excel.ChartSeries.gapWidth
    summary: |-
      Representa a largura do espaçamento de uma série de gráfico. Só é válido em gráficos de barras e de colunas, bem como classes específicas de gráficos de linha e de pizza. Gera uma exceção de argumento inválida em gráficos inválidos.

      \[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: gapWidth
    fullName: gapWidth
    langs:
      - typeScript
    type: property
    syntax:
      content: 'gapWidth: number;'
      return:
        type:
          - number
  - uid: excel_release.Excel.ChartSeries.gradientMaximumColor
    summary: |-
      Retorna ou define a cor para o valor máximo de uma série de gráfico do mapa de região. Leitura/gravação.

      \[[Conjunto de APIs: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: gradientMaximumColor
    fullName: gradientMaximumColor
    langs:
      - typeScript
    type: property
    syntax:
      content: 'gradientMaximumColor: string;'
      return:
        type:
          - string
  - uid: excel_release.Excel.ChartSeries.gradientMaximumType
    summary: |-
      Retorna ou define o tipo para o valor máximo de uma série de gráficos de mapa da região. Leitura/gravação.

      \[[Conjunto de APIs: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: gradientMaximumType
    fullName: gradientMaximumType
    langs:
      - typeScript
    type: property
    syntax:
      content: 'gradientMaximumType: Excel.ChartGradientStyleType | "ExtremeValue" | "Number" | "Percent";'
      return:
        type:
          - Excel.ChartGradientStyleType | "ExtremeValue" | "Number" | "Percent"
  - uid: excel_release.Excel.ChartSeries.gradientMaximumValue
    summary: |-
      Retorna ou define o valor máximo de uma série de gráficos de mapa da região. Leitura/gravação.

      \[[Conjunto de APIs: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: gradientMaximumValue
    fullName: gradientMaximumValue
    langs:
      - typeScript
    type: property
    syntax:
      content: 'gradientMaximumValue: number;'
      return:
        type:
          - number
  - uid: excel_release.Excel.ChartSeries.gradientMidpointColor
    summary: |-
      Retorna ou define a cor do valor intermediário de uma série de gráfico do mapa de região. Leitura/gravação.

      \[[Conjunto de APIs: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: gradientMidpointColor
    fullName: gradientMidpointColor
    langs:
      - typeScript
    type: property
    syntax:
      content: 'gradientMidpointColor: string;'
      return:
        type:
          - string
  - uid: excel_release.Excel.ChartSeries.gradientMidpointType
    summary: |-
      Retorna ou define o tipo para o valor médio de uma série de gráficos de mapa da região. Leitura/gravação.

      \[[Conjunto de APIs: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: gradientMidpointType
    fullName: gradientMidpointType
    langs:
      - typeScript
    type: property
    syntax:
      content: 'gradientMidpointType: Excel.ChartGradientStyleType | "ExtremeValue" | "Number" | "Percent";'
      return:
        type:
          - Excel.ChartGradientStyleType | "ExtremeValue" | "Number" | "Percent"
  - uid: excel_release.Excel.ChartSeries.gradientMidpointValue
    summary: |-
      Retorna ou define o valor médio de uma série de gráficos de mapa da região. Leitura/gravação.

      \[[Conjunto de APIs: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: gradientMidpointValue
    fullName: gradientMidpointValue
    langs:
      - typeScript
    type: property
    syntax:
      content: 'gradientMidpointValue: number;'
      return:
        type:
          - number
  - uid: excel_release.Excel.ChartSeries.gradientMinimumColor
    summary: |-
      Retorna ou define a cor do valor mínimo de uma série de gráfico do mapa de região. Leitura/gravação.

      \[[Conjunto de APIs: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: gradientMinimumColor
    fullName: gradientMinimumColor
    langs:
      - typeScript
    type: property
    syntax:
      content: 'gradientMinimumColor: string;'
      return:
        type:
          - string
  - uid: excel_release.Excel.ChartSeries.gradientMinimumType
    summary: |-
      Retorna ou define o tipo para o valor mínimo de uma série de gráficos de mapa da região. Leitura/gravação.

      \[[Conjunto de APIs: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: gradientMinimumType
    fullName: gradientMinimumType
    langs:
      - typeScript
    type: property
    syntax:
      content: 'gradientMinimumType: Excel.ChartGradientStyleType | "ExtremeValue" | "Number" | "Percent";'
      return:
        type:
          - Excel.ChartGradientStyleType | "ExtremeValue" | "Number" | "Percent"
  - uid: excel_release.Excel.ChartSeries.gradientMinimumValue
    summary: |-
      Retorna ou define o valor mínimo de uma série de gráficos de mapa da região. Leitura/gravação.

      \[[Conjunto de APIs: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: gradientMinimumValue
    fullName: gradientMinimumValue
    langs:
      - typeScript
    type: property
    syntax:
      content: 'gradientMinimumValue: number;'
      return:
        type:
          - number
  - uid: excel_release.Excel.ChartSeries.gradientStyle
    summary: |-
      Retorna ou define o estilo de gradiente da série de um gráfico de mapa da região. Leitura/gravação.

      \[[Conjunto de APIs: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: gradientStyle
    fullName: gradientStyle
    langs:
      - typeScript
    type: property
    syntax:
      content: 'gradientStyle: Excel.ChartGradientStyle | "TwoPhaseColor" | "ThreePhaseColor";'
      return:
        type:
          - Excel.ChartGradientStyle | "TwoPhaseColor" | "ThreePhaseColor"
  - uid: excel_release.Excel.ChartSeries.hasDataLabels
    summary: |-
      Valor booliano representando se a série tem rótulos de dados ou não.

      \[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: hasDataLabels
    fullName: hasDataLabels
    langs:
      - typeScript
    type: property
    syntax:
      content: 'hasDataLabels: boolean;'
      return:
        type:
          - boolean
  - uid: excel_release.Excel.ChartSeries.invertColor
    summary: |-
      Retorna ou define a cor de preenchimento para pontos de dados negativo de uma série. Leitura/gravação.

      \[[Conjunto de APIs: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: invertColor
    fullName: invertColor
    langs:
      - typeScript
    type: property
    syntax:
      content: 'invertColor: string;'
      return:
        type:
          - string
  - uid: excel_release.Excel.ChartSeries.invertIfNegative
    summary: |-
      Verdadeiro se o Microsoft Excel inverte o padrão no item quando ele corresponde a um número negativo. Leitura/gravação.

      \[[Conjunto de APIs: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: invertIfNegative
    fullName: invertIfNegative
    langs:
      - typeScript
    type: property
    syntax:
      content: 'invertIfNegative: boolean;'
      return:
        type:
          - boolean
  - uid: excel_release.Excel.ChartSeries.load
    summary: Coloca um comando na fila para carregar as propriedades especificadas do objeto. Você deve chamar "context.sync()" antes de ler as propriedades.
    remarks: |-
      Além dessa assinatura, este método tem as seguintes assinaturas:

      `load(option?: string | string[]): Excel.ChartSeries`-Where Option é uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.

      `load(option?: { select?: string; expand?: string; }): Excel.ChartSeries`-Onde Option. Select é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades a serem carregadas, e Options. Expand é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades de navegação a serem carregadas.

      `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ChartSeries`– Disponível somente nos tipos de coleção. É semelhante à assinatura anterior. Option. Top especifica o número máximo de itens de coleta que podem ser incluídos no resultado. Option. Skip especifica o número de itens que devem ser ignorados e não incluídos no resultado. Se Option. Top for especificado, o conjunto de resultados será iniciado depois de ignorar o número de itens especificado.
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.ChartSeriesLoadOptions): Excel.ChartSeries;'
      return:
        type:
          - excel.Excel.ChartSeries
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.ChartSeriesLoadOptions
  - uid: excel_release.Excel.ChartSeries.load_1
    summary: Coloca um comando na fila para carregar as propriedades especificadas do objeto. Você deve chamar `context.sync()` antes de ler as propriedades.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.ChartSeries;'
      return:
        type:
          - excel.Excel.ChartSeries
        description: |-


          #### <a name="examples"></a>Exemplos

          ```javascript
          // Rename the 1st series of Chart1 to "New Series Name"
          Excel.run(function (ctx) { 
              var chart = ctx.workbook.worksheets.getItem("Sheet1").charts.getItem("Chart1");    
              chart.series.getItemAt(0).name = "New Series Name";
              return ctx.sync().then(function() {
                      console.log("Series1 Renamed");
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: Uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.
          type:
            - 'string | string[]'
  - uid: excel_release.Excel.ChartSeries.load_2
    summary: Coloca um comando na fila para carregar as propriedades especificadas do objeto. Você deve chamar `context.sync()` antes de ler as propriedades.
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.ChartSeries;'
      return:
        type:
          - excel.Excel.ChartSeries
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: Onde propertyNamesAndPaths. Select é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades a serem carregadas e propertyNamesAndPaths. Expand é uma sequência de caracteres delimitada por vírgula que especifica as propriedades de navegação a serem carregadas.
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel_release.Excel.ChartSeries.mapOptions
    summary: |-
      Encapsula as opções de um gráfico de mapa de região. Somente leitura.

      \[[Conjunto de APIs: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: mapOptions
    fullName: mapOptions
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly mapOptions: Excel.ChartMapOptions;'
      return:
        type:
          - excel.Excel.ChartMapOptions
  - uid: excel_release.Excel.ChartSeries.markerBackgroundColor
    summary: |-
      Representa a cor de fundo dos marcadores de uma série de gráficos.

      \[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: markerBackgroundColor
    fullName: markerBackgroundColor
    langs:
      - typeScript
    type: property
    syntax:
      content: 'markerBackgroundColor: string;'
      return:
        type:
          - string
        description: |-


          #### <a name="examples"></a>Exemplos

          ```typescript
          await Excel.run(async (context) => {
              let sheet = context.workbook.worksheets.getItem("Sample");
              let salesTable = sheet.tables.getItem("SalesTable");
              let dataRange = sheet.getRange("A1:E7");

              // Create an XY scatter chart.
              let chart = sheet.charts.add("XYScatterSmooth", dataRange, "Auto");
              chart.title.text = "Bicycle Parts Quarterly Sales"; 
            
              let series = chart.series;
              let series0 = series.getItemAt(0);
              let series1 = series.getItemAt(1);
              let series2 = series.getItemAt(2);
              let series3 = series.getItemAt(3);

              // Set markers.
              series0.markerStyle = "Dash";
              series0.markerForegroundColor = "black";
              series1.markerStyle = "Star";
              series1.markerForegroundColor = "black";
              series2.markerStyle = "X";
              series2.markerSize = 12;
              series3.markerStyle = "Triangle";
              series3.markerBackgroundColor = "purple";

              await context.sync();
          });
          ```
  - uid: excel_release.Excel.ChartSeries.markerForegroundColor
    summary: |-
      Representa cor de primeiro plano dos marcadores de uma série de gráfico.

      \[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: markerForegroundColor
    fullName: markerForegroundColor
    langs:
      - typeScript
    type: property
    syntax:
      content: 'markerForegroundColor: string;'
      return:
        type:
          - string
        description: |-


          #### <a name="examples"></a>Exemplos

          ```typescript
          await Excel.run(async (context) => {
              let sheet = context.workbook.worksheets.getItem("Sample");
              let salesTable = sheet.tables.getItem("SalesTable");
              let dataRange = sheet.getRange("A1:E7");

              // Create an XY scatter chart.
              let chart = sheet.charts.add("XYScatterSmooth", dataRange, "Auto");
              chart.title.text = "Bicycle Parts Quarterly Sales"; 
            
              let series = chart.series;
              let series0 = series.getItemAt(0);
              let series1 = series.getItemAt(1);
              let series2 = series.getItemAt(2);
              let series3 = series.getItemAt(3);

              // Set markers.
              series0.markerStyle = "Dash";
              series0.markerForegroundColor = "black";
              series1.markerStyle = "Star";
              series1.markerForegroundColor = "black";
              series2.markerStyle = "X";
              series2.markerSize = 12;
              series3.markerStyle = "Triangle";
              series3.markerBackgroundColor = "purple";

              await context.sync();
          });
          ```
  - uid: excel_release.Excel.ChartSeries.markerSize
    summary: |-
      Representa o tamanho do marcador de uma série de gráfico.

      \[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: markerSize
    fullName: markerSize
    langs:
      - typeScript
    type: property
    syntax:
      content: 'markerSize: number;'
      return:
        type:
          - number
        description: |-


          #### <a name="examples"></a>Exemplos

          ```typescript
          await Excel.run(async (context) => {
              let sheet = context.workbook.worksheets.getItem("Sample");
              let salesTable = sheet.tables.getItem("SalesTable");
              let dataRange = sheet.getRange("A1:E7");

              // Create an XY scatter chart.
              let chart = sheet.charts.add("XYScatterSmooth", dataRange, "Auto");
              chart.title.text = "Bicycle Parts Quarterly Sales"; 
            
              let series = chart.series;
              let series0 = series.getItemAt(0);
              let series1 = series.getItemAt(1);
              let series2 = series.getItemAt(2);
              let series3 = series.getItemAt(3);

              // Set markers.
              series0.markerStyle = "Dash";
              series0.markerForegroundColor = "black";
              series1.markerStyle = "Star";
              series1.markerForegroundColor = "black";
              series2.markerStyle = "X";
              series2.markerSize = 12;
              series3.markerStyle = "Triangle";
              series3.markerBackgroundColor = "purple";

              await context.sync();
          });
          ```
  - uid: excel_release.Excel.ChartSeries.markerStyle
    summary: |-
      Representa o estilo do marcador de uma série de gráfico. Consulte Excel. ChartMarkerStyle para obter detalhes.

      \[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: markerStyle
    fullName: markerStyle
    langs:
      - typeScript
    type: property
    syntax:
      content: 'markerStyle: Excel.ChartMarkerStyle | "Invalid" | "Automatic" | "None" | "Square" | "Diamond" | "Triangle" | "X" | "Star" | "Dot" | "Dash" | "Circle" | "Plus" | "Picture";'
      return:
        type:
          - Excel.ChartMarkerStyle | "Invalid" | "Automatic" | "None" | "Square" | "Diamond" | "Triangle" | "X" | "Star" | "Dot" | "Dash" | "Circle" | "Plus" | "Picture"
        description: |-


          #### <a name="examples"></a>Exemplos

          ```typescript
          await Excel.run(async (context) => {
              let sheet = context.workbook.worksheets.getItem("Sample");
              let salesTable = sheet.tables.getItem("SalesTable");
              let dataRange = sheet.getRange("A1:E7");

              // Create an XY scatter chart.
              let chart = sheet.charts.add("XYScatterSmooth", dataRange, "Auto");
              chart.title.text = "Bicycle Parts Quarterly Sales"; 
            
              let series = chart.series;
              let series0 = series.getItemAt(0);
              let series1 = series.getItemAt(1);
              let series2 = series.getItemAt(2);
              let series3 = series.getItemAt(3);

              // Set markers.
              series0.markerStyle = "Dash";
              series0.markerForegroundColor = "black";
              series1.markerStyle = "Star";
              series1.markerForegroundColor = "black";
              series2.markerStyle = "X";
              series2.markerSize = 12;
              series3.markerStyle = "Triangle";
              series3.markerBackgroundColor = "purple";

              await context.sync();
          });
          ```
  - uid: excel_release.Excel.ChartSeries.name
    summary: |-
      Representa o nome de uma série do gráfico.

      \[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: name
    fullName: name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'name: string;'
      return:
        type:
          - string
  - uid: excel_release.Excel.ChartSeries.overlap
    summary: |-
      Especifica como barras e colunas são posicionadas. Pode ser um valor entre – 100 e 100. Se aplicam apenas às barras 2D e gráficos de colunas 2D. Leitura/gravação.

      \[[Conjunto de APIs: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: overlap
    fullName: overlap
    langs:
      - typeScript
    type: property
    syntax:
      content: 'overlap: number;'
      return:
        type:
          - number
  - uid: excel_release.Excel.ChartSeries.parentLabelStrategy
    summary: |-
      Retorna ou define a área de estratégia de rótulo pai da série para um gráfico de mapa de região. Leitura/gravação.

      \[[Conjunto de APIs: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: parentLabelStrategy
    fullName: parentLabelStrategy
    langs:
      - typeScript
    type: property
    syntax:
      content: 'parentLabelStrategy: Excel.ChartParentLabelStrategy | "None" | "Banner" | "Overlapping";'
      return:
        type:
          - Excel.ChartParentLabelStrategy | "None" | "Banner" | "Overlapping"
  - uid: excel_release.Excel.ChartSeries.plotOrder
    summary: |-
      Representa a ordem de plotagem de uma série de gráficos dentro do grupo de gráfico.

      \[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: plotOrder
    fullName: plotOrder
    langs:
      - typeScript
    type: property
    syntax:
      content: 'plotOrder: number;'
      return:
        type:
          - number
  - uid: excel_release.Excel.ChartSeries.points
    summary: |-
      Representa uma coleção de todos os pontos da série. Somente leitura.

      \[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: points
    fullName: points
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly points: Excel.ChartPointsCollection;'
      return:
        type:
          - excel.Excel.ChartPointsCollection
  - uid: excel_release.Excel.ChartSeries.secondPlotSize
    summary: |-
      Retorna ou define o tamanho da seção secundária de uma pizza do gráfico de pizza ou de uma barra de gráfico de pizza, como uma porcentagem do tamanho da pizza primária. Pode ser um valor de 5 de 200. Leitura/gravação.

      \[[Conjunto de APIs: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: secondPlotSize
    fullName: secondPlotSize
    langs:
      - typeScript
    type: property
    syntax:
      content: 'secondPlotSize: number;'
      return:
        type:
          - number
  - uid: excel_release.Excel.ChartSeries.set
    summary: Define várias propriedades de um objeto ao mesmo tempo. Você pode passar um objeto simples com as propriedades apropriadas ou outro objeto API do mesmo tipo.
    remarks: |-
      Este método tem a seguinte assinatura adicional:

      `set(properties: Excel.ChartSeries): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.ChartSeriesUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: Um objeto JavaScript com propriedades que são estruturadas isomorphically para as propriedades do objeto no qual o método é chamado.
          type:
            - Interfaces.ChartSeriesUpdateData
        - id: options
          description: Fornece uma opção para suprimir erros se o objeto Properties tentar definir qualquer propriedade somente leitura.
          type:
            - office.OfficeExtension.UpdateOptions
  - uid: excel_release.Excel.ChartSeries.set_1
    summary: 'Define várias propriedades no objeto ao mesmo tempo, com base em um objeto carregado existente.'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.ChartSeries): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - excel.Excel.ChartSeries
  - uid: excel_release.Excel.ChartSeries.setBubbleSizes
    summary: |-
      Definir tamanhos das bolhas para uma série de gráfico. Funciona apenas para gráficos de bolhas.

      \[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: setBubbleSizes(sourceData)
    fullName: setBubbleSizes(sourceData)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setBubbleSizes(sourceData: Range): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: sourceData
          description: O objeto Range correspondente aos dados de origem.
          type:
            - Range
  - uid: excel_release.Excel.ChartSeries.setValues
    summary: |-
      Definir valores de uma série de gráficos. Para gráfico de dispersão, isso significa valores do eixo Y.

      \[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: setValues(sourceData)
    fullName: setValues(sourceData)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setValues(sourceData: Range): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a>Exemplos

          ```typescript
          await Excel.run(async (context) => {
            const sheet = context.workbook.worksheets.getItem("Sample");

            let seriesCollection = sheet.charts.getItemAt(0);
            let rangeSelection = sheet.getRange("C2:C7");
            let xRangeSelection = sheet.getRange("A1:A7");

            // Add a series.
            let newSeries = seriesCollection.series.add("Qtr2");
            newSeries.setValues(rangeSelection);
            newSeries.setXAxisValues(xRangeSelection);

            await context.sync();
          });
          ```
      parameters:
        - id: sourceData
          description: O objeto Range correspondente aos dados de origem.
          type:
            - Range
  - uid: excel_release.Excel.ChartSeries.setXAxisValues
    summary: |-
      Definir valores do eixo X para uma série de gráficos. Funciona apenas para gráficos de dispersão.

      \[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: setXAxisValues(sourceData)
    fullName: setXAxisValues(sourceData)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setXAxisValues(sourceData: Range): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: sourceData
          description: O objeto Range correspondente aos dados de origem.
          type:
            - Range
  - uid: excel_release.Excel.ChartSeries.showConnectorLines
    summary: |-
      Especifica se as linhas de conexão são exibidas em gráficos de cascata. Leitura/gravação.

      \[[Conjunto de APIs: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: showConnectorLines
    fullName: showConnectorLines
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showConnectorLines: boolean;'
      return:
        type:
          - boolean
  - uid: excel_release.Excel.ChartSeries.showLeaderLines
    summary: |-
      Especifica se as linhas de preenchimento são exibidas para cada rótulo de dados na série. Leitura/gravação.

      \[[Conjunto de APIs: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: showLeaderLines
    fullName: showLeaderLines
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showLeaderLines: boolean;'
      return:
        type:
          - boolean
  - uid: excel_release.Excel.ChartSeries.showShadow
    summary: |-
      Valor booliano que representa se a série tem uma sombra ou não.

      \[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: showShadow
    fullName: showShadow
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showShadow: boolean;'
      return:
        type:
          - boolean
  - uid: excel_release.Excel.ChartSeries.smooth
    summary: |-
      Valor booliano representando se a série é suave ou não. Só se aplica a gráficos de linhas e de dispersão.

      \[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: smooth
    fullName: smooth
    langs:
      - typeScript
    type: property
    syntax:
      content: 'smooth: boolean;'
      return:
        type:
          - boolean
  - uid: excel_release.Excel.ChartSeries.splitType
    summary: |-
      Retorna ou define a maneira como as duas seções de uma pizza do gráfico de pizza ou de uma barra do gráfico de pizza são divididas. Leitura/gravação.

      \[[Conjunto de APIs: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: splitType
    fullName: splitType
    langs:
      - typeScript
    type: property
    syntax:
      content: 'splitType: Excel.ChartSplitType | "SplitByPosition" | "SplitByValue" | "SplitByPercentValue" | "SplitByCustomSplit";'
      return:
        type:
          - Excel.ChartSplitType | "SplitByPosition" | "SplitByValue" | "SplitByPercentValue" | "SplitByCustomSplit"
  - uid: excel_release.Excel.ChartSeries.splitValue
    summary: |-
      Retorna ou define o valor de limite que separa duas seções de um gráfico pizza de pizza ou um gráfico de barra de pizza. Leitura/gravação.

      \[[Conjunto de APIs: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: splitValue
    fullName: splitValue
    langs:
      - typeScript
    type: property
    syntax:
      content: 'splitValue: number;'
      return:
        type:
          - number
  - uid: excel_release.Excel.ChartSeries.toJSON
    summary: 'Substitui o método `toJSON()` JavaScript para fornecer uma saída mais útil quando um objeto API é passado para`JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, por sua vez, chama `toJSON` o método do objeto que é passado para ele.) Enquanto o objeto Excel. ChartSeries original é um objeto API, o `toJSON` método retorna um objeto JavaScript simples (digitado como`Excel.Interfaces.ChartSeriesData`<!-- -->) que contém cópias superficiais de qualquer propriedade filho carregada do objeto original.'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.ChartSeriesData;'
      return:
        type:
          - excel.Excel.Interfaces.ChartSeriesData
        description: ''
  - uid: excel_release.Excel.ChartSeries.trendlines
    summary: |-
      Representa uma coleção de todas as linha de tendência da série. Somente leitura.

      \[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: trendlines
    fullName: trendlines
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly trendlines: Excel.ChartTrendlineCollection;'
      return:
        type:
          - excel.Excel.ChartTrendlineCollection
  - uid: excel_release.Excel.ChartSeries.varyByCategories
    summary: |-
      Verdadeiro se o Microsoft Excel atribuir uma cor ou padrão diferente a cada marcador de dados. O gráfico deve conter apenas uma série. Leitura/gravação.

      \[[Conjunto de APIs: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: varyByCategories
    fullName: varyByCategories
    langs:
      - typeScript
    type: property
    syntax:
      content: 'varyByCategories: boolean;'
      return:
        type:
          - boolean
  - uid: excel_release.Excel.ChartSeries.xErrorBars
    summary: |-
      Representa o objeto barra de erro de uma série de gráficos.

      \[[Conjunto de APIs: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: xErrorBars
    fullName: xErrorBars
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly xErrorBars: Excel.ChartErrorBars;'
      return:
        type:
          - excel.Excel.ChartErrorBars
  - uid: excel_release.Excel.ChartSeries.yErrorBars
    summary: |-
      Representa o objeto barra de erro de uma série de gráficos.

      \[[Conjunto de APIs: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: yErrorBars
    fullName: yErrorBars
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly yErrorBars: Excel.ChartErrorBars;'
      return:
        type:
          - excel.Excel.ChartErrorBars