### YamlMime:UniversalReference
items:
  - uid: excel_release.Excel.ChartSeries
    summary: |-
      <span data-ttu-id="b0add-101">Representa uma série de um gráfico.</span><span class="sxs-lookup"><span data-stu-id="b0add-101">Represents a series in a chart.</span></span>

      <span data-ttu-id="b0add-102">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b0add-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.ChartSeries
    fullName: Excel.ChartSeries
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: excel_release
    children:
      - excel_release.Excel.ChartSeries.axisGroup
      - excel_release.Excel.ChartSeries.chartType
      - excel_release.Excel.ChartSeries.context
      - excel_release.Excel.ChartSeries.dataLabels
      - excel_release.Excel.ChartSeries.delete
      - excel_release.Excel.ChartSeries.doughnutHoleSize
      - excel_release.Excel.ChartSeries.explosion
      - excel_release.Excel.ChartSeries.filtered
      - excel_release.Excel.ChartSeries.firstSliceAngle
      - excel_release.Excel.ChartSeries.format
      - excel_release.Excel.ChartSeries.gapWidth
      - excel_release.Excel.ChartSeries.hasDataLabels
      - excel_release.Excel.ChartSeries.invertIfNegative
      - excel_release.Excel.ChartSeries.load
      - excel_release.Excel.ChartSeries.load_1
      - excel_release.Excel.ChartSeries.load_2
      - excel_release.Excel.ChartSeries.markerBackgroundColor
      - excel_release.Excel.ChartSeries.markerForegroundColor
      - excel_release.Excel.ChartSeries.markerSize
      - excel_release.Excel.ChartSeries.markerStyle
      - excel_release.Excel.ChartSeries.name
      - excel_release.Excel.ChartSeries.overlap
      - excel_release.Excel.ChartSeries.plotOrder
      - excel_release.Excel.ChartSeries.points
      - excel_release.Excel.ChartSeries.secondPlotSize
      - excel_release.Excel.ChartSeries.set
      - excel_release.Excel.ChartSeries.set_1
      - excel_release.Excel.ChartSeries.setBubbleSizes
      - excel_release.Excel.ChartSeries.setValues
      - excel_release.Excel.ChartSeries.setXAxisValues
      - excel_release.Excel.ChartSeries.showShadow
      - excel_release.Excel.ChartSeries.smooth
      - excel_release.Excel.ChartSeries.splitType
      - excel_release.Excel.ChartSeries.toJSON
      - excel_release.Excel.ChartSeries.trendlines
      - excel_release.Excel.ChartSeries.varyByCategories
  - uid: excel_release.Excel.ChartSeries.axisGroup
    summary: |-
      <span data-ttu-id="b0add-103">Retorna ou define o grupo da série especificada.</span><span class="sxs-lookup"><span data-stu-id="b0add-103">Returns or sets the group for the specified series.</span></span> <span data-ttu-id="b0add-104">Leitura/gravação</span><span class="sxs-lookup"><span data-stu-id="b0add-104">Read/Write</span></span>

      <span data-ttu-id="b0add-105">\[[Conjunto de APIs: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b0add-105">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: axisGroup
    fullName: axisGroup
    langs:
      - typeScript
    type: property
    syntax:
      content: 'axisGroup: Excel.ChartAxisGroup | "Primary" | "Secondary";'
      return:
        type:
          - Excel.ChartAxisGroup | "Primary" | "Secondary"
  - uid: excel_release.Excel.ChartSeries.chartType
    summary: |-
      <span data-ttu-id="b0add-106">Representa o tipo de gráfico de uma série.</span><span class="sxs-lookup"><span data-stu-id="b0add-106">Represents the chart type of a series.</span></span> <span data-ttu-id="b0add-107">ConFira Excel. ChartType para obter detalhes.</span><span class="sxs-lookup"><span data-stu-id="b0add-107">See Excel.ChartType for details.</span></span>

      <span data-ttu-id="b0add-108">\[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b0add-108">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: chartType
    fullName: chartType
    langs:
      - typeScript
    type: property
    syntax:
      content: 'chartType: Excel.ChartType | "Invalid" | "ColumnClustered" | "ColumnStacked" | "ColumnStacked100" | "3DColumnClustered" | "3DColumnStacked" | "3DColumnStacked100" | "BarClustered" | "BarStacked" | "BarStacked100" | "3DBarClustered" | "3DBarStacked" | "3DBarStacked100" | "LineStacked" | "LineStacked100" | "LineMarkers" | "LineMarkersStacked" | "LineMarkersStacked100" | "PieOfPie" | "PieExploded" | "3DPieExploded" | "BarOfPie" | "XYScatterSmooth" | "XYScatterSmoothNoMarkers" | "XYScatterLines" | "XYScatterLinesNoMarkers" | "AreaStacked" | "AreaStacked100" | "3DAreaStacked" | "3DAreaStacked100" | "DoughnutExploded" | "RadarMarkers" | "RadarFilled" | "Surface" | "SurfaceWireframe" | "SurfaceTopView" | "SurfaceTopViewWireframe" | "Bubble" | "Bubble3DEffect" | "StockHLC" | "StockOHLC" | "StockVHLC" | "StockVOHLC" | "CylinderColClustered" | "CylinderColStacked" | "CylinderColStacked100" | "CylinderBarClustered" | "CylinderBarStacked" | "CylinderBarStacked100" | "CylinderCol" | "ConeColClustered" | "ConeColStacked" | "ConeColStacked100" | "ConeBarClustered" | "ConeBarStacked" | "ConeBarStacked100" | "ConeCol" | "PyramidColClustered" | "PyramidColStacked" | "PyramidColStacked100" | "PyramidBarClustered" | "PyramidBarStacked" | "PyramidBarStacked100" | "PyramidCol" | "3DColumn" | "Line" | "3DLine" | "3DPie" | "Pie" | "XYScatter" | "3DArea" | "Area" | "Doughnut" | "Radar" | "Histogram" | "Boxwhisker" | "Pareto" | "RegionMap" | "Treemap" | "Waterfall" | "Sunburst" | "Funnel";'
      return:
        type:
          - Excel.ChartType | "Invalid" | "ColumnClustered" | "ColumnStacked" | "ColumnStacked100" | "3DColumnClustered" | "3DColumnStacked" | "3DColumnStacked100" | "BarClustered" | "BarStacked" | "BarStacked100" | "3DBarClustered" | "3DBarStacked" | "3DBarStacked100" | "LineStacked" | "LineStacked100" | "LineMarkers" | "LineMarkersStacked" | "LineMarkersStacked100" | "PieOfPie" | "PieExploded" | "3DPieExploded" | "BarOfPie" | "XYScatterSmooth" | "XYScatterSmoothNoMarkers" | "XYScatterLines" | "XYScatterLinesNoMarkers" | "AreaStacked" | "AreaStacked100" | "3DAreaStacked" | "3DAreaStacked100" | "DoughnutExploded" | "RadarMarkers" | "RadarFilled" | "Surface" | "SurfaceWireframe" | "SurfaceTopView" | "SurfaceTopViewWireframe" | "Bubble" | "Bubble3DEffect" | "StockHLC" | "StockOHLC" | "StockVHLC" | "StockVOHLC" | "CylinderColClustered" | "CylinderColStacked" | "CylinderColStacked100" | "CylinderBarClustered" | "CylinderBarStacked" | "CylinderBarStacked100" | "CylinderCol" | "ConeColClustered" | "ConeColStacked" | "ConeColStacked100" | "ConeBarClustered" | "ConeBarStacked" | "ConeBarStacked100" | "ConeCol" | "PyramidColClustered" | "PyramidColStacked" | "PyramidColStacked100" | "PyramidBarClustered" | "PyramidBarStacked" | "PyramidBarStacked100" | "PyramidCol" | "3DColumn" | "Line" | "3DLine" | "3DPie" | "Pie" | "XYScatter" | "3DArea" | "Area" | "Doughnut" | "Radar" | "Histogram" | "Boxwhisker" | "Pareto" | "RegionMap" | "Treemap" | "Waterfall" | "Sunburst" | "Funnel"
  - uid: excel_release.Excel.ChartSeries.context
    summary: <span data-ttu-id="b0add-109">O contexto de solicitação associado ao objeto.</span><span class="sxs-lookup"><span data-stu-id="b0add-109">The request context associated with the object.</span></span> <span data-ttu-id="b0add-110">Isso conecta o processo do suplemento ao processo do aplicativo host do Office.</span><span class="sxs-lookup"><span data-stu-id="b0add-110">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: excel_release.Excel.ChartSeries.dataLabels
    summary: |-
      <span data-ttu-id="b0add-111">Representa uma coleção de todos os dataLabels da série.</span><span class="sxs-lookup"><span data-stu-id="b0add-111">Represents a collection of all dataLabels in the series.</span></span>

      <span data-ttu-id="b0add-112">\[[Conjunto de APIs: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b0add-112">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: dataLabels
    fullName: dataLabels
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly dataLabels: Excel.ChartDataLabels;'
      return:
        type:
          - excel.Excel.ChartDataLabels
  - uid: excel_release.Excel.ChartSeries.delete
    summary: |-
      <span data-ttu-id="b0add-113">Exclui a série de gráfico.</span><span class="sxs-lookup"><span data-stu-id="b0add-113">Deletes the chart series.</span></span>

      <span data-ttu-id="b0add-114">\[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b0add-114">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="b0add-115">Exemplos</span><span class="sxs-lookup"><span data-stu-id="b0add-115">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
            const sheet = context.workbook.worksheets.getItem("Sample");
            const seriesCollection = sheet.charts.getItemAt(0).series;
            seriesCollection.load("count");
            await context.sync();

            if (seriesCollection.count > 0) {
              const series = seriesCollection.getItemAt(0);

              // Delete the first series.
              series.delete();
            }

            await context.sync();
          });
          ```
  - uid: excel_release.Excel.ChartSeries.doughnutHoleSize
    summary: |-
      <span data-ttu-id="b0add-116">Representa o tamanho do furo de rosca de uma série de gráficos.</span><span class="sxs-lookup"><span data-stu-id="b0add-116">Represents the doughnut hole size of a chart series.</span></span> <span data-ttu-id="b0add-117">Válida apenas em gráficos de rosca e doughnutExploded.</span><span class="sxs-lookup"><span data-stu-id="b0add-117">Only valid on doughnut and doughnutExploded charts.</span></span> <span data-ttu-id="b0add-118">Gera uma exceção de argumento inválida em gráficos inválidos.</span><span class="sxs-lookup"><span data-stu-id="b0add-118">Throws an invalid argument exception on invalid charts.</span></span>

      <span data-ttu-id="b0add-119">\[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b0add-119">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: doughnutHoleSize
    fullName: doughnutHoleSize
    langs:
      - typeScript
    type: property
    syntax:
      content: 'doughnutHoleSize: number;'
      return:
        type:
          - number
  - uid: excel_release.Excel.ChartSeries.explosion
    summary: |-
      <span data-ttu-id="b0add-120">Retorna ou define o valor de explosão para um gráfico de pizza ou fatia de gráfico de rosca.</span><span class="sxs-lookup"><span data-stu-id="b0add-120">Returns or sets the explosion value for a pie-chart or doughnut-chart slice.</span></span> <span data-ttu-id="b0add-121">Retorna 0 (zero) se não houver explosão (a ponta da fatia está no centro da pizza).</span><span class="sxs-lookup"><span data-stu-id="b0add-121">Returns 0 (zero) if there's no explosion (the tip of the slice is in the center of the pie).</span></span> <span data-ttu-id="b0add-122">Leitura/gravação.</span><span class="sxs-lookup"><span data-stu-id="b0add-122">Read/Write.</span></span>

      <span data-ttu-id="b0add-123">\[[Conjunto de APIs: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b0add-123">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: explosion
    fullName: explosion
    langs:
      - typeScript
    type: property
    syntax:
      content: 'explosion: number;'
      return:
        type:
          - number
  - uid: excel_release.Excel.ChartSeries.filtered
    summary: |-
      <span data-ttu-id="b0add-124">Valor booliano representando se a série é filtrada ou não.</span><span class="sxs-lookup"><span data-stu-id="b0add-124">Boolean value representing if the series is filtered or not.</span></span> <span data-ttu-id="b0add-125">Não aplicável para gráficos de superfície.</span><span class="sxs-lookup"><span data-stu-id="b0add-125">Not applicable for surface charts.</span></span>

      <span data-ttu-id="b0add-126">\[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b0add-126">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: filtered
    fullName: filtered
    langs:
      - typeScript
    type: property
    syntax:
      content: 'filtered: boolean;'
      return:
        type:
          - boolean
  - uid: excel_release.Excel.ChartSeries.firstSliceAngle
    summary: |-
      <span data-ttu-id="b0add-127">Retorna ou define o ângulo do primeiro gráfico de pizza ou fatia de gráfico de rosca, em graus (no sentido horário a partir da vertical).</span><span class="sxs-lookup"><span data-stu-id="b0add-127">Returns or sets the angle of the first pie-chart or doughnut-chart slice, in degrees (clockwise from vertical).</span></span> <span data-ttu-id="b0add-128">Aplica-se apenas a pizza, torta 3-D e gráficos de rosca..</span><span class="sxs-lookup"><span data-stu-id="b0add-128">Applies only to pie, 3-D pie, and doughnut charts.</span></span> <span data-ttu-id="b0add-129">Pode ser um valor de 0 a 360.</span><span class="sxs-lookup"><span data-stu-id="b0add-129">Can be a value from 0 through 360.</span></span> <span data-ttu-id="b0add-130">Leitura/gravação</span><span class="sxs-lookup"><span data-stu-id="b0add-130">Read/Write</span></span>

      <span data-ttu-id="b0add-131">\[[Conjunto de APIs: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b0add-131">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: firstSliceAngle
    fullName: firstSliceAngle
    langs:
      - typeScript
    type: property
    syntax:
      content: 'firstSliceAngle: number;'
      return:
        type:
          - number
  - uid: excel_release.Excel.ChartSeries.format
    summary: |-
      <span data-ttu-id="b0add-132">Representa a formatação de uma série do gráfico, que inclui a formatação de linha e de preenchimento.</span><span class="sxs-lookup"><span data-stu-id="b0add-132">Represents the formatting of a chart series, which includes fill and line formatting.</span></span> <span data-ttu-id="b0add-133">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="b0add-133">Read-only.</span></span>

      <span data-ttu-id="b0add-134">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b0add-134">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: format
    fullName: format
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly format: Excel.ChartSeriesFormat;'
      return:
        type:
          - excel.Excel.ChartSeriesFormat
  - uid: excel_release.Excel.ChartSeries.gapWidth
    summary: |-
      <span data-ttu-id="b0add-135">Representa a largura do espaçamento de uma série de gráfico.</span><span class="sxs-lookup"><span data-stu-id="b0add-135">Represents the gap width of a chart series.</span></span> <span data-ttu-id="b0add-136">Só é válido em gráficos de barras e de colunas, bem como classes específicas de gráficos de linha e de pizza.</span><span class="sxs-lookup"><span data-stu-id="b0add-136">Only valid on bar and column charts, as well as specific classes of line and pie charts.</span></span> <span data-ttu-id="b0add-137">Gera uma exceção de argumento inválida em gráficos inválidos.</span><span class="sxs-lookup"><span data-stu-id="b0add-137">Throws an invalid argument exception on invalid charts.</span></span>

      <span data-ttu-id="b0add-138">\[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b0add-138">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: gapWidth
    fullName: gapWidth
    langs:
      - typeScript
    type: property
    syntax:
      content: 'gapWidth: number;'
      return:
        type:
          - number
  - uid: excel_release.Excel.ChartSeries.hasDataLabels
    summary: |-
      <span data-ttu-id="b0add-139">Valor booliano representando se a série tem rótulos de dados ou não.</span><span class="sxs-lookup"><span data-stu-id="b0add-139">Boolean value representing if the series has data labels or not.</span></span>

      <span data-ttu-id="b0add-140">\[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b0add-140">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: hasDataLabels
    fullName: hasDataLabels
    langs:
      - typeScript
    type: property
    syntax:
      content: 'hasDataLabels: boolean;'
      return:
        type:
          - boolean
  - uid: excel_release.Excel.ChartSeries.invertIfNegative
    summary: |-
      <span data-ttu-id="b0add-141">Verdadeiro se o Microsoft Excel inverte o padrão no item quando ele corresponde a um número negativo.</span><span class="sxs-lookup"><span data-stu-id="b0add-141">True if Microsoft Excel inverts the pattern in the item when it corresponds to a negative number.</span></span> <span data-ttu-id="b0add-142">Leitura/gravação.</span><span class="sxs-lookup"><span data-stu-id="b0add-142">Read/Write.</span></span>

      <span data-ttu-id="b0add-143">\[[Conjunto de APIs: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b0add-143">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: invertIfNegative
    fullName: invertIfNegative
    langs:
      - typeScript
    type: property
    syntax:
      content: 'invertIfNegative: boolean;'
      return:
        type:
          - boolean
  - uid: excel_release.Excel.ChartSeries.load
    summary: <span data-ttu-id="b0add-144">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="b0add-144">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="b0add-145">Você deve chamar "context.sync()" antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="b0add-145">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="b0add-146">Além dessa assinatura, este método tem as seguintes assinaturas:</span><span class="sxs-lookup"><span data-stu-id="b0add-146">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="b0add-147">`load(option?: string | string[]): Excel.ChartSeries`-Where Option é uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="b0add-147">`load(option?: string | string[]): Excel.ChartSeries` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="b0add-148">`load(option?: { select?: string; expand?: string; }): Excel.ChartSeries`-Onde Option. Select é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades a serem carregadas, e Options. Expand é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades de navegação a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="b0add-148">`load(option?: { select?: string; expand?: string; }): Excel.ChartSeries` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="b0add-149">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ChartSeries`– Disponível somente nos tipos de coleção.</span><span class="sxs-lookup"><span data-stu-id="b0add-149">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ChartSeries` - Only available on collection types.</span></span> <span data-ttu-id="b0add-150">É semelhante à assinatura anterior.</span><span class="sxs-lookup"><span data-stu-id="b0add-150">It is similar to the preceding signature.</span></span> <span data-ttu-id="b0add-151">Option. Top especifica o número máximo de itens de coleta que podem ser incluídos no resultado.</span><span class="sxs-lookup"><span data-stu-id="b0add-151">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="b0add-152">Option. Skip especifica o número de itens que devem ser ignorados e não incluídos no resultado.</span><span class="sxs-lookup"><span data-stu-id="b0add-152">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="b0add-153">Se Option. Top for especificado, o conjunto de resultados será iniciado depois de ignorar o número de itens especificado.</span><span class="sxs-lookup"><span data-stu-id="b0add-153">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.ChartSeriesLoadOptions): Excel.ChartSeries;'
      return:
        type:
          - excel.Excel.ChartSeries
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.ChartSeriesLoadOptions
  - uid: excel_release.Excel.ChartSeries.load_1
    summary: <span data-ttu-id="b0add-154">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="b0add-154">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="b0add-155">Você deve chamar `context.sync()` antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="b0add-155">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.ChartSeries;'
      return:
        type:
          - excel.Excel.ChartSeries
        description: |-


          #### <a name="examples"></a><span data-ttu-id="b0add-156">Exemplos</span><span class="sxs-lookup"><span data-stu-id="b0add-156">Examples</span></span>

          ```javascript
          // Rename the 1st series of Chart1 to "New Series Name"
          Excel.run(function (ctx) { 
              var chart = ctx.workbook.worksheets.getItem("Sheet1").charts.getItem("Chart1");    
              chart.series.getItemAt(0).name = "New Series Name";
              return ctx.sync().then(function() {
                      console.log("Series1 Renamed");
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="b0add-157">Uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="b0add-157">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: excel_release.Excel.ChartSeries.load_2
    summary: <span data-ttu-id="b0add-158">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="b0add-158">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="b0add-159">Você deve chamar `context.sync()` antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="b0add-159">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.ChartSeries;'
      return:
        type:
          - excel.Excel.ChartSeries
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="b0add-160">Onde propertyNamesAndPaths. Select é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades a serem carregadas e propertyNamesAndPaths. Expand é uma sequência de caracteres delimitada por vírgula que especifica as propriedades de navegação a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="b0add-160">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel_release.Excel.ChartSeries.markerBackgroundColor
    summary: |-
      <span data-ttu-id="b0add-161">Representa a cor de fundo dos marcadores de uma série de gráficos.</span><span class="sxs-lookup"><span data-stu-id="b0add-161">Represents markers background color of a chart series.</span></span>

      <span data-ttu-id="b0add-162">\[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b0add-162">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: markerBackgroundColor
    fullName: markerBackgroundColor
    langs:
      - typeScript
    type: property
    syntax:
      content: 'markerBackgroundColor: string;'
      return:
        type:
          - string
        description: |-


          #### <a name="examples"></a><span data-ttu-id="b0add-163">Exemplos</span><span class="sxs-lookup"><span data-stu-id="b0add-163">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              let sheet = context.workbook.worksheets.getItem("Sample");
              let salesTable = sheet.tables.getItem("SalesTable");
              let dataRange = sheet.getRange("A1:E7");

              // Create an XY scatter chart.
              let chart = sheet.charts.add("XYScatterSmooth", dataRange, "Auto");
              chart.title.text = "Bicycle Parts Quarterly Sales"; 
            
              let series = chart.series;
              let series0 = series.getItemAt(0);
              let series1 = series.getItemAt(1);
              let series2 = series.getItemAt(2);
              let series3 = series.getItemAt(3);

              // Set markers.
              series0.markerStyle = "Dash";
              series0.markerForegroundColor = "black";
              series1.markerStyle = "Star";
              series1.markerForegroundColor = "black";
              series2.markerStyle = "X";
              series2.markerSize = 12;
              series3.markerStyle = "Triangle";
              series3.markerBackgroundColor = "purple";

              await context.sync();
          });
          ```
  - uid: excel_release.Excel.ChartSeries.markerForegroundColor
    summary: |-
      <span data-ttu-id="b0add-164">Representa cor de primeiro plano dos marcadores de uma série de gráfico.</span><span class="sxs-lookup"><span data-stu-id="b0add-164">Represents markers foreground color of a chart series.</span></span>

      <span data-ttu-id="b0add-165">\[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b0add-165">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: markerForegroundColor
    fullName: markerForegroundColor
    langs:
      - typeScript
    type: property
    syntax:
      content: 'markerForegroundColor: string;'
      return:
        type:
          - string
        description: |-


          #### <a name="examples"></a><span data-ttu-id="b0add-166">Exemplos</span><span class="sxs-lookup"><span data-stu-id="b0add-166">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              let sheet = context.workbook.worksheets.getItem("Sample");
              let salesTable = sheet.tables.getItem("SalesTable");
              let dataRange = sheet.getRange("A1:E7");

              // Create an XY scatter chart.
              let chart = sheet.charts.add("XYScatterSmooth", dataRange, "Auto");
              chart.title.text = "Bicycle Parts Quarterly Sales"; 
            
              let series = chart.series;
              let series0 = series.getItemAt(0);
              let series1 = series.getItemAt(1);
              let series2 = series.getItemAt(2);
              let series3 = series.getItemAt(3);

              // Set markers.
              series0.markerStyle = "Dash";
              series0.markerForegroundColor = "black";
              series1.markerStyle = "Star";
              series1.markerForegroundColor = "black";
              series2.markerStyle = "X";
              series2.markerSize = 12;
              series3.markerStyle = "Triangle";
              series3.markerBackgroundColor = "purple";

              await context.sync();
          });
          ```
  - uid: excel_release.Excel.ChartSeries.markerSize
    summary: |-
      <span data-ttu-id="b0add-167">Representa o tamanho do marcador de uma série de gráfico.</span><span class="sxs-lookup"><span data-stu-id="b0add-167">Represents marker size of a chart series.</span></span>

      <span data-ttu-id="b0add-168">\[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b0add-168">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: markerSize
    fullName: markerSize
    langs:
      - typeScript
    type: property
    syntax:
      content: 'markerSize: number;'
      return:
        type:
          - number
        description: |-


          #### <a name="examples"></a><span data-ttu-id="b0add-169">Exemplos</span><span class="sxs-lookup"><span data-stu-id="b0add-169">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              let sheet = context.workbook.worksheets.getItem("Sample");
              let salesTable = sheet.tables.getItem("SalesTable");
              let dataRange = sheet.getRange("A1:E7");

              // Create an XY scatter chart.
              let chart = sheet.charts.add("XYScatterSmooth", dataRange, "Auto");
              chart.title.text = "Bicycle Parts Quarterly Sales"; 
            
              let series = chart.series;
              let series0 = series.getItemAt(0);
              let series1 = series.getItemAt(1);
              let series2 = series.getItemAt(2);
              let series3 = series.getItemAt(3);

              // Set markers.
              series0.markerStyle = "Dash";
              series0.markerForegroundColor = "black";
              series1.markerStyle = "Star";
              series1.markerForegroundColor = "black";
              series2.markerStyle = "X";
              series2.markerSize = 12;
              series3.markerStyle = "Triangle";
              series3.markerBackgroundColor = "purple";

              await context.sync();
          });
          ```
  - uid: excel_release.Excel.ChartSeries.markerStyle
    summary: |-
      <span data-ttu-id="b0add-170">Representa o estilo do marcador de uma série de gráfico.</span><span class="sxs-lookup"><span data-stu-id="b0add-170">Represents marker style of a chart series.</span></span> <span data-ttu-id="b0add-171">Consulte Excel. ChartMarkerStyle para obter detalhes.</span><span class="sxs-lookup"><span data-stu-id="b0add-171">See Excel.ChartMarkerStyle for details.</span></span>

      <span data-ttu-id="b0add-172">\[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b0add-172">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: markerStyle
    fullName: markerStyle
    langs:
      - typeScript
    type: property
    syntax:
      content: 'markerStyle: Excel.ChartMarkerStyle | "Invalid" | "Automatic" | "None" | "Square" | "Diamond" | "Triangle" | "X" | "Star" | "Dot" | "Dash" | "Circle" | "Plus" | "Picture";'
      return:
        type:
          - Excel.ChartMarkerStyle | "Invalid" | "Automatic" | "None" | "Square" | "Diamond" | "Triangle" | "X" | "Star" | "Dot" | "Dash" | "Circle" | "Plus" | "Picture"
        description: |-


          #### <a name="examples"></a><span data-ttu-id="b0add-173">Exemplos</span><span class="sxs-lookup"><span data-stu-id="b0add-173">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              let sheet = context.workbook.worksheets.getItem("Sample");
              let salesTable = sheet.tables.getItem("SalesTable");
              let dataRange = sheet.getRange("A1:E7");

              // Create an XY scatter chart.
              let chart = sheet.charts.add("XYScatterSmooth", dataRange, "Auto");
              chart.title.text = "Bicycle Parts Quarterly Sales"; 
            
              let series = chart.series;
              let series0 = series.getItemAt(0);
              let series1 = series.getItemAt(1);
              let series2 = series.getItemAt(2);
              let series3 = series.getItemAt(3);

              // Set markers.
              series0.markerStyle = "Dash";
              series0.markerForegroundColor = "black";
              series1.markerStyle = "Star";
              series1.markerForegroundColor = "black";
              series2.markerStyle = "X";
              series2.markerSize = 12;
              series3.markerStyle = "Triangle";
              series3.markerBackgroundColor = "purple";

              await context.sync();
          });
          ```
  - uid: excel_release.Excel.ChartSeries.name
    summary: |-
      <span data-ttu-id="b0add-174">Representa o nome de uma série do gráfico.</span><span class="sxs-lookup"><span data-stu-id="b0add-174">Represents the name of a series in a chart.</span></span>

      <span data-ttu-id="b0add-175">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b0add-175">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: name
    fullName: name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'name: string;'
      return:
        type:
          - string
  - uid: excel_release.Excel.ChartSeries.overlap
    summary: |-
      <span data-ttu-id="b0add-176">Especifica como barras e colunas são posicionadas.</span><span class="sxs-lookup"><span data-stu-id="b0add-176">Specifies how bars and columns are positioned.</span></span> <span data-ttu-id="b0add-177">Pode ser um valor entre – 100 e 100.</span><span class="sxs-lookup"><span data-stu-id="b0add-177">Can be a value between –100 and 100.</span></span> <span data-ttu-id="b0add-178">Se aplicam apenas às barras 2D e gráficos de colunas 2D.</span><span class="sxs-lookup"><span data-stu-id="b0add-178">Applies only to 2-D bar and 2-D column charts.</span></span> <span data-ttu-id="b0add-179">Leitura/gravação.</span><span class="sxs-lookup"><span data-stu-id="b0add-179">Read/Write.</span></span>

      <span data-ttu-id="b0add-180">\[[Conjunto de APIs: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b0add-180">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: overlap
    fullName: overlap
    langs:
      - typeScript
    type: property
    syntax:
      content: 'overlap: number;'
      return:
        type:
          - number
  - uid: excel_release.Excel.ChartSeries.plotOrder
    summary: |-
      <span data-ttu-id="b0add-181">Representa a ordem de plotagem de uma série de gráficos dentro do grupo de gráfico.</span><span class="sxs-lookup"><span data-stu-id="b0add-181">Represents the plot order of a chart series within the chart group.</span></span>

      <span data-ttu-id="b0add-182">\[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b0add-182">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: plotOrder
    fullName: plotOrder
    langs:
      - typeScript
    type: property
    syntax:
      content: 'plotOrder: number;'
      return:
        type:
          - number
  - uid: excel_release.Excel.ChartSeries.points
    summary: |-
      <span data-ttu-id="b0add-183">Representa uma coleção de todos os pontos da série.</span><span class="sxs-lookup"><span data-stu-id="b0add-183">Represents a collection of all points in the series.</span></span> <span data-ttu-id="b0add-184">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="b0add-184">Read-only.</span></span>

      <span data-ttu-id="b0add-185">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b0add-185">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: points
    fullName: points
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly points: Excel.ChartPointsCollection;'
      return:
        type:
          - excel.Excel.ChartPointsCollection
  - uid: excel_release.Excel.ChartSeries.secondPlotSize
    summary: |-
      <span data-ttu-id="b0add-186">Retorna ou define o tamanho da seção secundária de uma pizza do gráfico de pizza ou de uma barra de gráfico de pizza, como uma porcentagem do tamanho da pizza primária.</span><span class="sxs-lookup"><span data-stu-id="b0add-186">Returns or sets the size of the secondary section of either a pie of pie chart or a bar of pie chart, as a percentage of the size of the primary pie.</span></span> <span data-ttu-id="b0add-187">Pode ser um valor de 5 de 200.</span><span class="sxs-lookup"><span data-stu-id="b0add-187">Can be a value from 5 to 200.</span></span> <span data-ttu-id="b0add-188">Leitura/gravação.</span><span class="sxs-lookup"><span data-stu-id="b0add-188">Read/Write.</span></span>

      <span data-ttu-id="b0add-189">\[[Conjunto de APIs: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b0add-189">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: secondPlotSize
    fullName: secondPlotSize
    langs:
      - typeScript
    type: property
    syntax:
      content: 'secondPlotSize: number;'
      return:
        type:
          - number
  - uid: excel_release.Excel.ChartSeries.set
    summary: '<span data-ttu-id="b0add-190">Define várias propriedades de um objeto ao mesmo tempo.</span><span class="sxs-lookup"><span data-stu-id="b0add-190">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="b0add-191">Você pode passar um objeto simples com as propriedades apropriadas ou outro objeto API do mesmo tipo.</span><span class="sxs-lookup"><span data-stu-id="b0add-191">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="b0add-192">Este método tem a seguinte assinatura adicional:</span><span class="sxs-lookup"><span data-stu-id="b0add-192">This method has the following additional signature:</span></span>

      `set(properties: Excel.ChartSeries): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.ChartSeriesUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="b0add-193">Um objeto JavaScript com propriedades que são estruturadas isomorphically para as propriedades do objeto no qual o método é chamado.</span><span class="sxs-lookup"><span data-stu-id="b0add-193">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - Interfaces.ChartSeriesUpdateData
        - id: options
          description: <span data-ttu-id="b0add-194">Fornece uma opção para suprimir erros se o objeto Properties tentar definir qualquer propriedade somente leitura.</span><span class="sxs-lookup"><span data-stu-id="b0add-194">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - office.OfficeExtension.UpdateOptions
  - uid: excel_release.Excel.ChartSeries.set_1
    summary: '<span data-ttu-id="b0add-195">Define várias propriedades no objeto ao mesmo tempo, com base em um objeto carregado existente.</span><span class="sxs-lookup"><span data-stu-id="b0add-195">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.ChartSeries): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - excel.Excel.ChartSeries
  - uid: excel_release.Excel.ChartSeries.setBubbleSizes
    summary: |-
      <span data-ttu-id="b0add-196">Definir tamanhos das bolhas para uma série de gráfico.</span><span class="sxs-lookup"><span data-stu-id="b0add-196">Set bubble sizes for a chart series.</span></span> <span data-ttu-id="b0add-197">Funciona apenas para gráficos de bolhas.</span><span class="sxs-lookup"><span data-stu-id="b0add-197">Only works for bubble charts.</span></span>

      <span data-ttu-id="b0add-198">\[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b0add-198">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: setBubbleSizes(sourceData)
    fullName: setBubbleSizes(sourceData)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setBubbleSizes(sourceData: Range): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: sourceData
          description: <span data-ttu-id="b0add-199">O objeto Range correspondente aos dados de origem.</span><span class="sxs-lookup"><span data-stu-id="b0add-199">The Range object corresponding to the source data.</span></span>
          type:
            - Range
  - uid: excel_release.Excel.ChartSeries.setValues
    summary: |-
      <span data-ttu-id="b0add-200">Definir valores de uma série de gráficos.</span><span class="sxs-lookup"><span data-stu-id="b0add-200">Set values for a chart series.</span></span> <span data-ttu-id="b0add-201">Para gráfico de dispersão, isso significa valores do eixo Y.</span><span class="sxs-lookup"><span data-stu-id="b0add-201">For scatter chart, it means Y axis values.</span></span>

      <span data-ttu-id="b0add-202">\[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b0add-202">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: setValues(sourceData)
    fullName: setValues(sourceData)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setValues(sourceData: Range): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="b0add-203">Exemplos</span><span class="sxs-lookup"><span data-stu-id="b0add-203">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
            const sheet = context.workbook.worksheets.getItem("Sample");

            let seriesCollection = sheet.charts.getItemAt(0);
            let rangeSelection = sheet.getRange("C2:C7");
            let xRangeSelection = sheet.getRange("A1:A7");

            // Add a series.
            let newSeries = seriesCollection.series.add("Qtr2");
            newSeries.setValues(rangeSelection);
            newSeries.setXAxisValues(xRangeSelection);

            await context.sync();
          });
          ```
      parameters:
        - id: sourceData
          description: <span data-ttu-id="b0add-204">O objeto Range correspondente aos dados de origem.</span><span class="sxs-lookup"><span data-stu-id="b0add-204">The Range object corresponding to the source data.</span></span>
          type:
            - Range
  - uid: excel_release.Excel.ChartSeries.setXAxisValues
    summary: |-
      <span data-ttu-id="b0add-205">Definir valores do eixo X para uma série de gráficos.</span><span class="sxs-lookup"><span data-stu-id="b0add-205">Set values of X axis for a chart series.</span></span> <span data-ttu-id="b0add-206">Funciona apenas para gráficos de dispersão.</span><span class="sxs-lookup"><span data-stu-id="b0add-206">Only works for scatter charts.</span></span>

      <span data-ttu-id="b0add-207">\[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b0add-207">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: setXAxisValues(sourceData)
    fullName: setXAxisValues(sourceData)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setXAxisValues(sourceData: Range): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: sourceData
          description: <span data-ttu-id="b0add-208">O objeto Range correspondente aos dados de origem.</span><span class="sxs-lookup"><span data-stu-id="b0add-208">The Range object corresponding to the source data.</span></span>
          type:
            - Range
  - uid: excel_release.Excel.ChartSeries.showShadow
    summary: |-
      <span data-ttu-id="b0add-209">Valor booliano que representa se a série tem uma sombra ou não.</span><span class="sxs-lookup"><span data-stu-id="b0add-209">Boolean value representing if the series has a shadow or not.</span></span>

      <span data-ttu-id="b0add-210">\[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b0add-210">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: showShadow
    fullName: showShadow
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showShadow: boolean;'
      return:
        type:
          - boolean
  - uid: excel_release.Excel.ChartSeries.smooth
    summary: |-
      <span data-ttu-id="b0add-211">Valor booliano representando se a série é suave ou não.</span><span class="sxs-lookup"><span data-stu-id="b0add-211">Boolean value representing if the series is smooth or not.</span></span> <span data-ttu-id="b0add-212">Só se aplica a gráficos de linhas e de dispersão.</span><span class="sxs-lookup"><span data-stu-id="b0add-212">Only applicable to line and scatter charts.</span></span>

      <span data-ttu-id="b0add-213">\[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b0add-213">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: smooth
    fullName: smooth
    langs:
      - typeScript
    type: property
    syntax:
      content: 'smooth: boolean;'
      return:
        type:
          - boolean
  - uid: excel_release.Excel.ChartSeries.splitType
    summary: |-
      <span data-ttu-id="b0add-214">Retorna ou define a maneira como as duas seções de uma pizza do gráfico de pizza ou de uma barra do gráfico de pizza são divididas.</span><span class="sxs-lookup"><span data-stu-id="b0add-214">Returns or sets the way the two sections of either a pie of pie chart or a bar of pie chart are split.</span></span> <span data-ttu-id="b0add-215">Leitura/gravação.</span><span class="sxs-lookup"><span data-stu-id="b0add-215">Read/Write.</span></span>

      <span data-ttu-id="b0add-216">\[[Conjunto de APIs: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b0add-216">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: splitType
    fullName: splitType
    langs:
      - typeScript
    type: property
    syntax:
      content: 'splitType: Excel.ChartSplitType | "SplitByPosition" | "SplitByValue" | "SplitByPercentValue" | "SplitByCustomSplit";'
      return:
        type:
          - Excel.ChartSplitType | "SplitByPosition" | "SplitByValue" | "SplitByPercentValue" | "SplitByCustomSplit"
  - uid: excel_release.Excel.ChartSeries.toJSON
    summary: '<span data-ttu-id="b0add-217">Substitui o método `toJSON()` JavaScript para fornecer uma saída mais útil quando um objeto API é passado para`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="b0add-217">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="b0add-218">.</span><span class="sxs-lookup"><span data-stu-id="b0add-218"></span></span> <span data-ttu-id="b0add-219">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="b0add-219"></span></span><!-- --><span data-ttu-id="b0add-220">, por sua vez, chama `toJSON` o método do objeto que é passado para ele.) Enquanto o objeto Excel. ChartSeries original é um objeto API, o `toJSON` método retorna um objeto JavaScript simples (digitado como`Excel.Interfaces.ChartSeriesData`</span><span class="sxs-lookup"><span data-stu-id="b0add-220">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.ChartSeries object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ChartSeriesData`</span></span><!-- --><span data-ttu-id="b0add-221">) que contém cópias superficiais de qualquer propriedade filho carregada do objeto original.</span><span class="sxs-lookup"><span data-stu-id="b0add-221">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.ChartSeriesData;'
      return:
        type:
          - excel.Excel.Interfaces.ChartSeriesData
        description: ''
  - uid: excel_release.Excel.ChartSeries.trendlines
    summary: |-
      <span data-ttu-id="b0add-222">Representa uma coleção de todas as linha de tendência da série.</span><span class="sxs-lookup"><span data-stu-id="b0add-222">Represents a collection of trendlines in the series.</span></span> <span data-ttu-id="b0add-223">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="b0add-223">Read-only.</span></span>

      <span data-ttu-id="b0add-224">\[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b0add-224">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: trendlines
    fullName: trendlines
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly trendlines: Excel.ChartTrendlineCollection;'
      return:
        type:
          - excel.Excel.ChartTrendlineCollection
  - uid: excel_release.Excel.ChartSeries.varyByCategories
    summary: |-
      <span data-ttu-id="b0add-225">Verdadeiro se o Microsoft Excel atribuir uma cor ou padrão diferente a cada marcador de dados.</span><span class="sxs-lookup"><span data-stu-id="b0add-225">True if Microsoft Excel assigns a different color or pattern to each data marker.</span></span> <span data-ttu-id="b0add-226">O gráfico deve conter apenas uma série.</span><span class="sxs-lookup"><span data-stu-id="b0add-226">The chart must contain only one series.</span></span> <span data-ttu-id="b0add-227">Leitura/gravação.</span><span class="sxs-lookup"><span data-stu-id="b0add-227">Read/Write.</span></span>

      <span data-ttu-id="b0add-228">\[[Conjunto de APIs: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b0add-228">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: varyByCategories
    fullName: varyByCategories
    langs:
      - typeScript
    type: property
    syntax:
      content: 'varyByCategories: boolean;'
      return:
        type:
          - boolean