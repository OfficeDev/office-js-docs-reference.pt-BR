### YamlMime:UniversalReference
ms.openlocfilehash: 52dfa8d5297822fc8557510d5e1a667f4cdf660c
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: pt-BR
ms.lasthandoff: 02/20/2019
ms.locfileid: "30114306"
items:
- uid: excel_release.Excel.TableCollection
  summary: >-
    <span data-ttu-id="6dcb5-101">Representa uma coleção de todas as tabelas que fazem parte da pasta de trabalho ou planilha, dependendo de como ela foi atingida.</span><span class="sxs-lookup"><span data-stu-id="6dcb5-101">Represents a collection of all the tables that are part of the workbook or worksheet, depending on how it was reached.</span></span>


    <span data-ttu-id="6dcb5-102">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6dcb5-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.TableCollection
  fullName: Excel.TableCollection
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel_release
  children:
  - excel_release.Excel.TableCollection.add
  - excel_release.Excel.TableCollection.context
  - excel_release.Excel.TableCollection.count
  - excel_release.Excel.TableCollection.getCount
  - excel_release.Excel.TableCollection.getItem
  - excel_release.Excel.TableCollection.getItemAt
  - excel_release.Excel.TableCollection.getItemOrNullObject
  - excel_release.Excel.TableCollection.items
  - excel_release.Excel.TableCollection.load
  - excel_release.Excel.TableCollection.load_1
  - excel_release.Excel.TableCollection.load_2
  - excel_release.Excel.TableCollection.onChanged
  - excel_release.Excel.TableCollection.toJSON
- uid: excel_release.Excel.TableCollection.add
  summary: >-
    <span data-ttu-id="6dcb5-p101">Cria uma nova tabela. O objeto de intervalo ou endereço de origem determina a planilha à qual a tabela será adicionada. Se a tabela não puder ser adicionada (por exemplo, porque o endereço é inválido ou a tabela se sobreporia a outra), será gerado um erro.</span><span class="sxs-lookup"><span data-stu-id="6dcb5-p101">Create a new table. The range object or source address determines the worksheet under which the table will be added. If the table cannot be added (e.g., because the address is invalid, or the table would overlap with another table), an error will be thrown.</span></span>


    <span data-ttu-id="6dcb5-106">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6dcb5-106">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: add(address, hasHeaders)
  fullName: add(address, hasHeaders)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'add(address: Range | string, hasHeaders: boolean): Excel.Table;'
    return:
      type:
      - excel.Excel.Table
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"6dcb5-107\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"6dcb5-107\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var table = ctx.workbook.tables.add('Sheet1!A1:E7', true);\n    table.load('name');\n    return ctx.sync().then(function() {\n        console.log(table.name);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: address
      description: '<span data-ttu-id="6dcb5-108">Um objeto Range ou um endereço ou nome de cadeia de caracteres do intervalo que representa a fonte de dados.</span><span class="sxs-lookup"><span data-stu-id="6dcb5-108">A Range object, or a string address or name of the range representing the data source.</span></span> <span data-ttu-id="6dcb5-109">Se o endereço não contiver um nome de planilha, a planilha atualmente ativa será usada.</span><span class="sxs-lookup"><span data-stu-id="6dcb5-109">If the address does not contain a sheet name, the currently-active sheet is used.</span></span> <span data-ttu-id="6dcb5-110">\[Conjunto de APIs: ExcelApi 1,1/1,3.</span><span class="sxs-lookup"><span data-stu-id="6dcb5-110">\[Api set: ExcelApi 1.1 / 1.3.</span></span> <span data-ttu-id="6dcb5-111">Antes do ExcelApi 1,3, esse parâmetro deve ser uma cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="6dcb5-111">Prior to ExcelApi 1.3, this parameter must be a string.</span></span> <span data-ttu-id="6dcb5-112">A partir da API do Excel 1,3, esse parâmetro pode ser um objeto Range ou uma cadeia de caracteres.\]</span><span class="sxs-lookup"><span data-stu-id="6dcb5-112">Starting with Excel Api 1.3, this parameter may be a Range object or a string.\]</span></span>'
      type:
      - Range | string
    - id: hasHeaders
      description: <span data-ttu-id="6dcb5-p103">Valor booliano que indica se os dados que estão sendo importados têm rótulos de coluna. Se a origem não contiver cabeçalhos (ou seja, quando essa propriedade estiver definida como falso), o Excel gerará automaticamente um cabeçalho, deslocando os dados uma linha para baixo.</span><span class="sxs-lookup"><span data-stu-id="6dcb5-p103">Boolean value that indicates whether the data being imported has column labels. If the source does not contain headers (i.e,. when this property set to false), Excel will automatically generate header shifting the data down by one row.</span></span>
      type:
      - boolean
- uid: excel_release.Excel.TableCollection.context
  summary: <span data-ttu-id="6dcb5-116">O contexto de solicitação associado ao objeto.</span><span class="sxs-lookup"><span data-stu-id="6dcb5-116">The request context associated with the object.</span></span> <span data-ttu-id="6dcb5-117">Isso conecta o processo do suplemento ao processo do aplicativo host do Office.</span><span class="sxs-lookup"><span data-stu-id="6dcb5-117">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel_release.Excel.TableCollection.count
  summary: >-
    <span data-ttu-id="6dcb5-p105">Retorna o número de tabelas na pasta de trabalho. Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="6dcb5-p105">Returns the number of tables in the workbook. Read-only.</span></span>


    <span data-ttu-id="6dcb5-120">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6dcb5-120">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: count
  fullName: count
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly count: number;'
    return:
      type:
      - number
- uid: excel_release.Excel.TableCollection.getCount
  summary: >-
    <span data-ttu-id="6dcb5-121">Obtém o número de tabelas na coleção.</span><span class="sxs-lookup"><span data-stu-id="6dcb5-121">Gets the number of tables in the collection.</span></span>


    <span data-ttu-id="6dcb5-122">\[[Conjunto de APIs: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6dcb5-122">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getCount()
  fullName: getCount()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getCount(): OfficeExtension.ClientResult<number>;'
    return:
      type:
      - OfficeExtension.ClientResult<number>
      description: ''
- uid: excel_release.Excel.TableCollection.getItem
  summary: >-
    <span data-ttu-id="6dcb5-123">Obtém uma tabela pelo nome ou ID.</span><span class="sxs-lookup"><span data-stu-id="6dcb5-123">Gets a table by Name or ID.</span></span>


    <span data-ttu-id="6dcb5-124">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6dcb5-124">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getItem(key)
  fullName: getItem(key)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItem(key: string): Excel.Table;'
    return:
      type:
      - excel.Excel.Table
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"6dcb5-125\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"6dcb5-125\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var tableName = 'Table1';\n    var table = ctx.workbook.tables.getItem(tableName);\n    table.load('name');\n    return ctx.sync().then(function() {\n            console.log(table.name);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: key
      description: <span data-ttu-id="6dcb5-126">Nome ou ID da tabela a ser recuperada.</span><span class="sxs-lookup"><span data-stu-id="6dcb5-126">Name or ID of the table to be retrieved.</span></span>
      type:
      - string
- uid: excel_release.Excel.TableCollection.getItemAt
  summary: >-
    <span data-ttu-id="6dcb5-127">Obtém uma tabela com base em sua posição na coleção.</span><span class="sxs-lookup"><span data-stu-id="6dcb5-127">Gets a table based on its position in the collection.</span></span>


    <span data-ttu-id="6dcb5-128">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6dcb5-128">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getItemAt(index)
  fullName: getItemAt(index)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItemAt(index: number): Excel.Table;'
    return:
      type:
      - excel.Excel.Table
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"6dcb5-129\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"6dcb5-129\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var table = ctx.workbook.tables.getItemAt(0);\n    table.load('name');\n    return ctx.sync().then(function() {\n            console.log(table.name);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: index
      description: <span data-ttu-id="6dcb5-p106">Valor de índice do objeto a ser recuperado. Indexados com zero.</span><span class="sxs-lookup"><span data-stu-id="6dcb5-p106">Index value of the object to be retrieved. Zero-indexed.</span></span>
      type:
      - number
- uid: excel_release.Excel.TableCollection.getItemOrNullObject
  summary: >-
    <span data-ttu-id="6dcb5-p107">Obtém uma tabela pelo nome ou ID. Se a tabela não existir, retornará um objeto null.</span><span class="sxs-lookup"><span data-stu-id="6dcb5-p107">Gets a table by Name or ID. If the table does not exist, will return a null object.</span></span>


    <span data-ttu-id="6dcb5-134">\[[Conjunto de APIs: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6dcb5-134">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getItemOrNullObject(key)
  fullName: getItemOrNullObject(key)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItemOrNullObject(key: string): Excel.Table;'
    return:
      type:
      - excel.Excel.Table
      description: ''
    parameters:
    - id: key
      description: <span data-ttu-id="6dcb5-135">Nome ou ID da tabela a ser recuperada.</span><span class="sxs-lookup"><span data-stu-id="6dcb5-135">Name or ID of the table to be retrieved.</span></span>
      type:
      - string
- uid: excel_release.Excel.TableCollection.items
  summary: <span data-ttu-id="6dcb5-136">Obtém os itens filhos carregados nesta coleção.</span><span class="sxs-lookup"><span data-stu-id="6dcb5-136">Gets the loaded child items in this collection.</span></span>
  name: items
  fullName: items
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly items: Excel.Table[];'
    return:
      type:
      - Excel.Table[]
- uid: excel_release.Excel.TableCollection.load
  summary: <span data-ttu-id="6dcb5-137">Enfileira um comando para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="6dcb5-137">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="6dcb5-138">Você deve chamar "context. Sync ()" antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="6dcb5-138">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="6dcb5-139">Além dessa assinatura, este método tem as seguintes assinaturas:</span><span class="sxs-lookup"><span data-stu-id="6dcb5-139">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="6dcb5-140">`load(option?: string | string[]): Excel.TableCollection`-Where Option é uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="6dcb5-140">`load(option?: string | string[]): Excel.TableCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="6dcb5-141">`load(option?: { select?: string; expand?: string; }): Excel.TableCollection`-Onde Option. Select é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades a serem carregadas, e Options. Expand é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades de navegação a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="6dcb5-141">`load(option?: { select?: string; expand?: string; }): Excel.TableCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="6dcb5-142">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TableCollection`– Disponível somente nos tipos de coleção.</span><span class="sxs-lookup"><span data-stu-id="6dcb5-142">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TableCollection` - Only available on collection types.</span></span> <span data-ttu-id="6dcb5-143">É semelhante à assinatura anterior.</span><span class="sxs-lookup"><span data-stu-id="6dcb5-143">It is similar to the preceding signature.</span></span> <span data-ttu-id="6dcb5-144">Option. Top especifica o número máximo de itens de coleta que podem ser incluídos no resultado.</span><span class="sxs-lookup"><span data-stu-id="6dcb5-144">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="6dcb5-145">Option. Skip especifica o número de itens que devem ser ignorados e não incluídos no resultado.</span><span class="sxs-lookup"><span data-stu-id="6dcb5-145">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="6dcb5-146">Se Option. Top for especificado, o conjunto de resultados será iniciado depois de ignorar o número de itens especificado.</span><span class="sxs-lookup"><span data-stu-id="6dcb5-146">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.TableCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.TableCollection;'
    return:
      type:
      - excel.Excel.TableCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - Excel.Interfaces.TableCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
- uid: excel_release.Excel.TableCollection.load_1
  summary: <span data-ttu-id="6dcb5-147">Enfileira um comando para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="6dcb5-147">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="6dcb5-148">Você deve chamar `context.sync()` antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="6dcb5-148">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.TableCollection;'
    return:
      type:
      - excel.Excel.TableCollection
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"6dcb5-149\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"6dcb5-149\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var tables = ctx.workbook.tables;\n    tables.load();\n    return ctx.sync().then(function() {\n        console.log(\"tables Count: \" + tables.count);\n        for (var i = 0; i < tables.items.length; i++)\n        {\n            console.log(tables.items[i].name);\n        }\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\n// Get the number of tables\nExcel.run(function (ctx) { \n    var tables = ctx.workbook.tables;\n    tables.load('count');\n    return ctx.sync().then(function() {\n        console.log(tables.count);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="6dcb5-150">Uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="6dcb5-150">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel_release.Excel.TableCollection.load_2
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: OfficeExtension.LoadOption): Excel.TableCollection;'
    return:
      type:
      - excel.Excel.TableCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - office.OfficeExtension.LoadOption
- uid: excel_release.Excel.TableCollection.onChanged
  summary: >-
    <span data-ttu-id="6dcb5-151">Ocorre quando os dados são alterados em qualquer tabela em uma pasta de trabalho ou em uma planilha.</span><span class="sxs-lookup"><span data-stu-id="6dcb5-151">Occurs when data changes on any table in a workbook, or a worksheet.</span></span>


    <span data-ttu-id="6dcb5-152">\[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6dcb5-152">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: onChanged
  fullName: onChanged
  langs:
  - typeScript
  type: event
  syntax:
    content: 'readonly onChanged: OfficeExtension.EventHandlers<Excel.TableChangedEventArgs>;'
    return:
      type:
      - OfficeExtension.EventHandlers<Excel.TableChangedEventArgs>
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"6dcb5-153\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"6dcb5-153\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    let tables = context.workbook.tables;\n    tables.onChanged.add(onChange);\n\n    await context.sync();\n    console.log(\"A handler has been registered for the table collection onChanged event\");\n});\n```"
- uid: excel_release.Excel.TableCollection.toJSON
  summary: <span data-ttu-id="6dcb5-154">Substitui o método `toJSON()` JavaScript para fornecer uma saída mais útil quando um objeto API é passado para `JSON.stringify()` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="6dcb5-154">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="6dcb5-155">(`JSON.stringify`<!-- -->, por sua vez, chama `toJSON` o método do objeto que é passado para ele). Enquanto o objeto `Excel.TableCollection` original é um objeto API, o `toJSON` método retorna um objeto JavaScript simples (digitado `Excel.Interfaces.TableCollectionData` <!-- -->como) que contém uma matriz "Items" com cópias superficiais de qualquer propriedade carregada dos itens da coleção.</span><span class="sxs-lookup"><span data-stu-id="6dcb5-155">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.TableCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.TableCollectionData`<!-- -->) that contains an "items" array with shallow copies of any loaded properties from the collection's items.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.TableCollectionData;'
    return:
      type:
      - excel.Excel.Interfaces.TableCollectionData
      description: ''
