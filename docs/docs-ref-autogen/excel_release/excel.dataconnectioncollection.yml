### YamlMime:UniversalReference
ms.openlocfilehash: 12ff192074e6530b4c04b0e4d83f3956ec91a003
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: pt-BR
ms.lasthandoff: 02/20/2019
ms.locfileid: "30106039"
items:
- uid: excel_release.Excel.DataConnectionCollection
  summary: >-
    Representa uma coleção de todas as conexões de dados que fazem parte da pasta de trabalho ou planilha.


    \[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: Excel.DataConnectionCollection
  fullName: Excel.DataConnectionCollection
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel_release
  children:
  - excel_release.Excel.DataConnectionCollection.context
  - excel_release.Excel.DataConnectionCollection.refreshAll
  - excel_release.Excel.DataConnectionCollection.toJSON
- uid: excel_release.Excel.DataConnectionCollection.context
  summary: O contexto de solicitação associado ao objeto. Isso conecta o processo do suplemento ao processo do aplicativo host do Office.
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel_release.Excel.DataConnectionCollection.refreshAll
  summary: >-
    Atualiza todas as conexões de dados da coleção.


    \[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: refreshAll()
  fullName: refreshAll()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'refreshAll(): void;'
    return:
      type:
      - void
      description: ''
- uid: excel_release.Excel.DataConnectionCollection.toJSON
  summary: Substitui o método `toJSON()` JavaScript para fornecer uma saída mais útil quando um objeto API é passado para `JSON.stringify()` <!-- -->. (`JSON.stringify`<!-- -->, por sua vez, chama `toJSON` o método do objeto que é passado para ele). Enquanto o objeto Excel. dataconnectcollection original é um objeto API, o `toJSON` método retorna um objeto JavaScript simples (digitado `Excel.Interfaces.DataConnectionCollectionData` <!-- -->como) que contém cópias superficiais de qualquer propriedade filho carregada do objeto original.
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: >-
      toJSON(): {

                  [key: string]: string;

              };
    return:
      type:
      - >-
        {

                    [key: string]: string;

                }
      description: ''
