### YamlMime:UniversalReference
ms.openlocfilehash: 541fcb12e43c834e851af290685be9e015cb6e23
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: pt-BR
ms.lasthandoff: 02/20/2019
ms.locfileid: "30106137"
items:
- uid: excel_release.Excel.WorkbookProtection
  summary: >-
    <span data-ttu-id="81ac2-101">Representa a proteção de um objeto Workbook.</span><span class="sxs-lookup"><span data-stu-id="81ac2-101">Represents the protection of a workbook object.</span></span>


    <span data-ttu-id="81ac2-102">\[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="81ac2-102">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.WorkbookProtection
  fullName: Excel.WorkbookProtection
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel_release
  children:
  - excel_release.Excel.WorkbookProtection.context
  - excel_release.Excel.WorkbookProtection.load
  - excel_release.Excel.WorkbookProtection.load_1
  - excel_release.Excel.WorkbookProtection.load_2
  - excel_release.Excel.WorkbookProtection.protect
  - excel_release.Excel.WorkbookProtection.protected
  - excel_release.Excel.WorkbookProtection.toJSON
  - excel_release.Excel.WorkbookProtection.unprotect
- uid: excel_release.Excel.WorkbookProtection.context
  summary: <span data-ttu-id="81ac2-103">O contexto de solicitação associado ao objeto.</span><span class="sxs-lookup"><span data-stu-id="81ac2-103">The request context associated with the object.</span></span> <span data-ttu-id="81ac2-104">Isso conecta o processo do suplemento ao processo do aplicativo host do Office.</span><span class="sxs-lookup"><span data-stu-id="81ac2-104">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel_release.Excel.WorkbookProtection.load
  summary: <span data-ttu-id="81ac2-105">Enfileira um comando para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="81ac2-105">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="81ac2-106">Você deve chamar "context. Sync ()" antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="81ac2-106">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="81ac2-107">Além dessa assinatura, este método tem as seguintes assinaturas:</span><span class="sxs-lookup"><span data-stu-id="81ac2-107">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="81ac2-108">`load(option?: string | string[]): Excel.WorkbookProtection`-Where Option é uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="81ac2-108">`load(option?: string | string[]): Excel.WorkbookProtection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="81ac2-109">`load(option?: { select?: string; expand?: string; }): Excel.WorkbookProtection`-Onde Option. Select é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades a serem carregadas, e Options. Expand é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades de navegação a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="81ac2-109">`load(option?: { select?: string; expand?: string; }): Excel.WorkbookProtection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="81ac2-110">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.WorkbookProtection`– Disponível somente nos tipos de coleção.</span><span class="sxs-lookup"><span data-stu-id="81ac2-110">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.WorkbookProtection` - Only available on collection types.</span></span> <span data-ttu-id="81ac2-111">É semelhante à assinatura anterior.</span><span class="sxs-lookup"><span data-stu-id="81ac2-111">It is similar to the preceding signature.</span></span> <span data-ttu-id="81ac2-112">Option. Top especifica o número máximo de itens de coleta que podem ser incluídos no resultado.</span><span class="sxs-lookup"><span data-stu-id="81ac2-112">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="81ac2-113">Option. Skip especifica o número de itens que devem ser ignorados e não incluídos no resultado.</span><span class="sxs-lookup"><span data-stu-id="81ac2-113">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="81ac2-114">Se Option. Top for especificado, o conjunto de resultados será iniciado depois de ignorar o número de itens especificado.</span><span class="sxs-lookup"><span data-stu-id="81ac2-114">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.WorkbookProtectionLoadOptions): Excel.WorkbookProtection;'
    return:
      type:
      - excel.Excel.WorkbookProtection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - excel.Excel.Interfaces.WorkbookProtectionLoadOptions
- uid: excel_release.Excel.WorkbookProtection.load_1
  summary: <span data-ttu-id="81ac2-115">Enfileira um comando para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="81ac2-115">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="81ac2-116">Você deve chamar `context.sync()` antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="81ac2-116">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.WorkbookProtection;'
    return:
      type:
      - excel.Excel.WorkbookProtection
      description: ''
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="81ac2-117">Uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="81ac2-117">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel_release.Excel.WorkbookProtection.load_2
  summary: <span data-ttu-id="81ac2-118">Enfileira um comando para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="81ac2-118">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="81ac2-119">Você deve chamar `context.sync()` antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="81ac2-119">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.WorkbookProtection;'
    return:
      type:
      - excel.Excel.WorkbookProtection
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: <span data-ttu-id="81ac2-120">Onde propertyNamesAndPaths. Select é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades a serem carregadas e propertyNamesAndPaths. Expand é uma sequência de caracteres delimitada por vírgula que especifica as propriedades de navegação a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="81ac2-120">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>
      type:
      - '{ select?: string; expand?: string; }'
- uid: excel_release.Excel.WorkbookProtection.protect
  summary: >-
    <span data-ttu-id="81ac2-121">Protege uma pasta de trabalho.</span><span class="sxs-lookup"><span data-stu-id="81ac2-121">Protects a workbook.</span></span> <span data-ttu-id="81ac2-122">Falhará se a pasta de trabalho estiver protegida.</span><span class="sxs-lookup"><span data-stu-id="81ac2-122">Fails if the workbook has been protected.</span></span>


    <span data-ttu-id="81ac2-123">\[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="81ac2-123">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: protect(password)
  fullName: protect(password)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'protect(password?: string): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"81ac2-124\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"81ac2-124\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    let workbook = context.workbook;\n    workbook.load(\"protection/protected\");\n\n    await context.sync();\n\n    if (!workbook.protection.protected) {\n        workbook.protection.protect();\n    }\n});\n```\n```typescript\nlet password = await passwordHandler();\npasswordHelper(password);\nawait Excel.run(async (context) => {\n    let workbook = context.workbook;\n    workbook.load(\"protection/protected\");\n\n    await context.sync();\n\n    if (!workbook.protection.protected) {\n        workbook.protection.protect(password);\n    }\n});\n```"
    parameters:
    - id: password
      description: <span data-ttu-id="81ac2-125">senha de proteção da pasta de trabalho.</span><span class="sxs-lookup"><span data-stu-id="81ac2-125">workbook protection password.</span></span>
      type:
      - string
- uid: excel_release.Excel.WorkbookProtection.protected
  summary: >-
    <span data-ttu-id="81ac2-126">Indica se a pasta de trabalho está protegida.</span><span class="sxs-lookup"><span data-stu-id="81ac2-126">Indicates if the workbook is protected.</span></span> <span data-ttu-id="81ac2-127">Somente Leitura.</span><span class="sxs-lookup"><span data-stu-id="81ac2-127">Read-Only.</span></span>


    <span data-ttu-id="81ac2-128">\[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="81ac2-128">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: protected
  fullName: protected
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly protected: boolean;'
    return:
      type:
      - boolean
- uid: excel_release.Excel.WorkbookProtection.toJSON
  summary: <span data-ttu-id="81ac2-129">Substitui o método `toJSON()` JavaScript para fornecer uma saída mais útil quando um objeto API é passado para `JSON.stringify()` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="81ac2-129">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="81ac2-130">(`JSON.stringify`<!-- -->, por sua vez, chama `toJSON` o método do objeto que é passado para ele). Enquanto o objeto Excel. WorkbookProtection original é um objeto API, o `toJSON` método retorna um objeto JavaScript simples (digitado `Excel.Interfaces.WorkbookProtectionData` <!-- -->como) que contém cópias superficiais de qualquer propriedade filho carregada do objeto original.</span><span class="sxs-lookup"><span data-stu-id="81ac2-130">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.WorkbookProtection object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.WorkbookProtectionData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.WorkbookProtectionData;'
    return:
      type:
      - excel.Excel.Interfaces.WorkbookProtectionData
      description: ''
- uid: excel_release.Excel.WorkbookProtection.unprotect
  summary: >-
    <span data-ttu-id="81ac2-131">Desprotege uma pasta de trabalho.</span><span class="sxs-lookup"><span data-stu-id="81ac2-131">Unprotects a workbook.</span></span>


    <span data-ttu-id="81ac2-132">\[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="81ac2-132">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: unprotect(password)
  fullName: unprotect(password)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'unprotect(password?: string): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"81ac2-133\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"81ac2-133\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    let workbook = context.workbook;\n    workbook.protection.unprotect();\n});\n```\n```typescript\nlet password = await passwordHandler();\npasswordHelper(password);\nawait Excel.run(async (context) => {\n    let workbook = context.workbook;\n    workbook.protection.unprotect(password);\n});\n```"
    parameters:
    - id: password
      description: <span data-ttu-id="81ac2-134">senha de proteção da pasta de trabalho.</span><span class="sxs-lookup"><span data-stu-id="81ac2-134">workbook protection password.</span></span>
      type:
      - string
