### YamlMime:UniversalReference
ms.openlocfilehash: 683fd9f14f6dfca8abcab6a5152b63179696d400
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: pt-BR
ms.lasthandoff: 02/20/2019
ms.locfileid: "30113690"
items:
- uid: excel_release.Excel.RangeSort
  summary: >-
    Gerencia operações de classificação em objetos Range.


    \[[Conjunto de APIs: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: Excel.RangeSort
  fullName: Excel.RangeSort
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel_release
  children:
  - excel_release.Excel.RangeSort.apply
  - excel_release.Excel.RangeSort.apply_1
  - excel_release.Excel.RangeSort.context
  - excel_release.Excel.RangeSort.toJSON
- uid: excel_release.Excel.RangeSort.apply
  summary: >-
    Executa uma operação de classificação.


    \[[Conjunto de APIs: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: apply(fields, matchCase, hasHeaders, orientation, method)
  fullName: apply(fields, matchCase, hasHeaders, orientation, method)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'apply(fields: Excel.SortField[], matchCase?: boolean, hasHeaders?: boolean, orientation?: Excel.SortOrientation, method?: Excel.SortMethod): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: fields
      description: A lista de condições para a classificação.
      type:
      - Excel.SortField[]
    - id: matchCase
      description: Opcional. Define se o uso de maiúsculas ou minúsculas afeta a ordenação da cadeia de caracteres.
      type:
      - boolean
    - id: hasHeaders
      description: Opcional. Se o intervalo tem um cabeçalho.
      type:
      - boolean
    - id: orientation
      description: Opcional. Se a operação está classificando linhas ou colunas.
      type:
      - excel.Excel.SortOrientation
    - id: method
      description: Opcional. O método de ordenação usado para caracteres chineses.
      type:
      - excel.Excel.SortMethod
- uid: excel_release.Excel.RangeSort.apply_1
  summary: >-
    Executa uma operação de classificação.


    \[[Conjunto de APIs: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: apply(fields, matchCase, hasHeaders, orientationString, method)
  fullName: apply(fields, matchCase, hasHeaders, orientationString, method)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'apply(fields: Excel.SortField[], matchCase?: boolean, hasHeaders?: boolean, orientationString?: "Rows" | "Columns", method?: "PinYin" | "StrokeCount"): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: fields
      description: A lista de condições para a classificação.
      type:
      - Excel.SortField[]
    - id: matchCase
      description: Opcional. Define se o uso de maiúsculas ou minúsculas afeta a ordenação da cadeia de caracteres.
      type:
      - boolean
    - id: hasHeaders
      description: Opcional. Se o intervalo tem um cabeçalho.
      type:
      - boolean
    - id: orientationString
      description: Opcional. Se a operação está classificando linhas ou colunas.
      type:
      - "\"Rows\" | \"Columns\""
    - id: method
      description: Opcional. O método de ordenação usado para caracteres chineses.
      type:
      - "\"PinYin\" | \"StrokeCount\""
- uid: excel_release.Excel.RangeSort.context
  summary: O contexto de solicitação associado ao objeto. Isso conecta o processo do suplemento ao processo do aplicativo host do Office.
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel_release.Excel.RangeSort.toJSON
  summary: Substitui o método `toJSON()` JavaScript para fornecer uma saída mais útil quando um objeto API é passado para `JSON.stringify()` <!-- -->. (`JSON.stringify`<!-- -->, por sua vez, chama `toJSON` o método do objeto que é passado para ele). Enquanto o objeto Excel. RangeSort original é um objeto API, o `toJSON` método retorna um objeto JavaScript simples (digitado `Excel.Interfaces.RangeSortData` <!-- -->como) que contém cópias superficiais de qualquer propriedade filho carregada do objeto original.
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: >-
      toJSON(): {

                  [key: string]: string;

              };
    return:
      type:
      - >-
        {

                    [key: string]: string;

                }
      description: ''
