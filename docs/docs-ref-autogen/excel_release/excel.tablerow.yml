### YamlMime:UniversalReference
ms.openlocfilehash: bae0d1e276c8115821cf7acdf9ae312035b82f1b
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: pt-BR
ms.lasthandoff: 02/20/2019
ms.locfileid: "30105346"
items:
- uid: excel_release.Excel.TableRow
  summary: >-
    <span data-ttu-id="e468d-101">Representa uma linha em uma tabela.</span><span class="sxs-lookup"><span data-stu-id="e468d-101">Represents a row in a table.</span></span>


    <span data-ttu-id="e468d-102">Observe que, ao contrário de intervalos ou colunas, que serão ajustados se novas linhas/colunas forem adicionadas antes delas, um objeto TableRow representará o local físico da linha da tabela, mas não os dados.</span><span class="sxs-lookup"><span data-stu-id="e468d-102">Note that unlike Ranges or Columns, which will adjust if new rows/columns are added before them, a TableRow object represent the physical location of the table row, but not the data.</span></span> <span data-ttu-id="e468d-103">Ou seja, se os dados forem classificados ou se novas linhas forem adicionadas, uma linha de tabela continuará a apontar para o índice para o qual foi criada.</span><span class="sxs-lookup"><span data-stu-id="e468d-103">That is, if the data is sorted or if new rows are added, a table row will continue to point at the index for which it was created.</span></span>


    <span data-ttu-id="e468d-104">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e468d-104">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.TableRow
  fullName: Excel.TableRow
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel_release
  children:
  - excel_release.Excel.TableRow.context
  - excel_release.Excel.TableRow.delete
  - excel_release.Excel.TableRow.getRange
  - excel_release.Excel.TableRow.index
  - excel_release.Excel.TableRow.load
  - excel_release.Excel.TableRow.load_1
  - excel_release.Excel.TableRow.load_2
  - excel_release.Excel.TableRow.set
  - excel_release.Excel.TableRow.set_1
  - excel_release.Excel.TableRow.toJSON
  - excel_release.Excel.TableRow.values
- uid: excel_release.Excel.TableRow.context
  summary: <span data-ttu-id="e468d-105">O contexto de solicitação associado ao objeto.</span><span class="sxs-lookup"><span data-stu-id="e468d-105">The request context associated with the object.</span></span> <span data-ttu-id="e468d-106">Isso conecta o processo do suplemento ao processo do aplicativo host do Office.</span><span class="sxs-lookup"><span data-stu-id="e468d-106">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel_release.Excel.TableRow.delete
  summary: >-
    <span data-ttu-id="e468d-107">Exclui a linha da tabela.</span><span class="sxs-lookup"><span data-stu-id="e468d-107">Deletes the row from the table.</span></span>


    <span data-ttu-id="e468d-108">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e468d-108">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: delete()
  fullName: delete()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'delete(): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"e468d-109\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"e468d-109\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var tableName = 'Table1';\n    var row = ctx.workbook.tables.getItem(tableName).rows.getItemAt(2);\n    row.delete();\n    return ctx.sync(); \n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel_release.Excel.TableRow.getRange
  summary: >-
    <span data-ttu-id="e468d-110">Retorna o objeto de intervalo associado a toda a linha.</span><span class="sxs-lookup"><span data-stu-id="e468d-110">Returns the range object associated with the entire row.</span></span>


    <span data-ttu-id="e468d-111">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e468d-111">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getRange()
  fullName: getRange()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getRange(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"e468d-112\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"e468d-112\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var tableName = 'Table1';\n    var row = ctx.workbook.tables.getItem(tableName).rows.getItemAt(0);\n    var rowRange = row.getRange();\n    rowRange.load('address');\n    return ctx.sync().then(function() {\n        console.log(rowRange.address);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel_release.Excel.TableRow.index
  summary: >-
    <span data-ttu-id="e468d-p103">Retorna o número de índice da linha na coleção de linhas da tabela. Indexados com zero. Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="e468d-p103">Returns the index number of the row within the rows collection of the table. Zero-indexed. Read-only.</span></span>


    <span data-ttu-id="e468d-116">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e468d-116">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: index
  fullName: index
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly index: number;'
    return:
      type:
      - number
- uid: excel_release.Excel.TableRow.load
  summary: <span data-ttu-id="e468d-117">Enfileira um comando para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="e468d-117">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="e468d-118">Você deve chamar "context. Sync ()" antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="e468d-118">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="e468d-119">Além dessa assinatura, este método tem as seguintes assinaturas:</span><span class="sxs-lookup"><span data-stu-id="e468d-119">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="e468d-120">`load(option?: string | string[]): Excel.TableRow`-Where Option é uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="e468d-120">`load(option?: string | string[]): Excel.TableRow` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="e468d-121">`load(option?: { select?: string; expand?: string; }): Excel.TableRow`-Onde Option. Select é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades a serem carregadas, e Options. Expand é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades de navegação a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="e468d-121">`load(option?: { select?: string; expand?: string; }): Excel.TableRow` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="e468d-122">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TableRow`– Disponível somente nos tipos de coleção.</span><span class="sxs-lookup"><span data-stu-id="e468d-122">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TableRow` - Only available on collection types.</span></span> <span data-ttu-id="e468d-123">É semelhante à assinatura anterior.</span><span class="sxs-lookup"><span data-stu-id="e468d-123">It is similar to the preceding signature.</span></span> <span data-ttu-id="e468d-124">Option. Top especifica o número máximo de itens de coleta que podem ser incluídos no resultado.</span><span class="sxs-lookup"><span data-stu-id="e468d-124">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="e468d-125">Option. Skip especifica o número de itens que devem ser ignorados e não incluídos no resultado.</span><span class="sxs-lookup"><span data-stu-id="e468d-125">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="e468d-126">Se Option. Top for especificado, o conjunto de resultados será iniciado depois de ignorar o número de itens especificado.</span><span class="sxs-lookup"><span data-stu-id="e468d-126">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.TableRowLoadOptions): Excel.TableRow;'
    return:
      type:
      - excel.Excel.TableRow
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - excel.Excel.Interfaces.TableRowLoadOptions
- uid: excel_release.Excel.TableRow.load_1
  summary: <span data-ttu-id="e468d-127">Enfileira um comando para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="e468d-127">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="e468d-128">Você deve chamar `context.sync()` antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="e468d-128">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.TableRow;'
    return:
      type:
      - excel.Excel.TableRow
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"e468d-129\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"e468d-129\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var tableName = 'Table1';\n    var row = ctx.workbook.tables.getItem(tableName).rows.getItem(0);\n    row.load('index');\n    return ctx.sync().then(function() {\n        console.log(row.index);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\nExcel.run(function (ctx) { \n    var tables = ctx.workbook.tables;\n    var newValues = [[\"New\", \"Values\", \"For\", \"New\", \"Row\"]];\n    var tableName = 'Table1';\n    var row = ctx.workbook.tables.getItem(tableName).rows.getItemAt(2);\n    row.values = newValues;\n    row.load('values');\n    return ctx.sync().then(function() {\n        console.log(row.values);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="e468d-130">Uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="e468d-130">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel_release.Excel.TableRow.load_2
  summary: <span data-ttu-id="e468d-131">Enfileira um comando para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="e468d-131">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="e468d-132">Você deve chamar `context.sync()` antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="e468d-132">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.TableRow;'
    return:
      type:
      - excel.Excel.TableRow
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: <span data-ttu-id="e468d-133">Onde propertyNamesAndPaths. Select é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades a serem carregadas e propertyNamesAndPaths. Expand é uma sequência de caracteres delimitada por vírgula que especifica as propriedades de navegação a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="e468d-133">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>
      type:
      - '{ select?: string; expand?: string; }'
- uid: excel_release.Excel.TableRow.set
  summary: <span data-ttu-id="e468d-134">Define várias propriedades de um objeto ao mesmo tempo.</span><span class="sxs-lookup"><span data-stu-id="e468d-134">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="e468d-135">Você pode passar um objeto simples com as propriedades apropriadas ou outro objeto API do mesmo tipo.</span><span class="sxs-lookup"><span data-stu-id="e468d-135">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>
  remarks: >-
    <span data-ttu-id="e468d-136">Este método tem a seguinte assinatura adicional:</span><span class="sxs-lookup"><span data-stu-id="e468d-136">This method has the following additional signature:</span></span>


    `set(properties: Excel.TableRow): void`
  name: set(properties, options)
  fullName: set(properties, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Interfaces.TableRowUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: <span data-ttu-id="e468d-137">Um objeto JavaScript com propriedades que são estruturadas isomorphically para as propriedades do objeto no qual o método é chamado.</span><span class="sxs-lookup"><span data-stu-id="e468d-137">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
      type:
      - Interfaces.TableRowUpdateData
    - id: options
      description: <span data-ttu-id="e468d-138">Fornece uma opção para suprimir erros se o objeto Properties tentar definir qualquer propriedade somente leitura.</span><span class="sxs-lookup"><span data-stu-id="e468d-138">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
      type:
      - office.OfficeExtension.UpdateOptions
- uid: excel_release.Excel.TableRow.set_1
  summary: <span data-ttu-id="e468d-139">Define várias propriedades no objeto ao mesmo tempo, com base em um objeto carregado existente.</span><span class="sxs-lookup"><span data-stu-id="e468d-139">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>
  name: set(properties)
  fullName: set(properties)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Excel.TableRow): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: ''
      type:
      - excel.Excel.TableRow
- uid: excel_release.Excel.TableRow.toJSON
  summary: <span data-ttu-id="e468d-140">Substitui o método `toJSON()` JavaScript para fornecer uma saída mais útil quando um objeto API é passado para `JSON.stringify()` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="e468d-140">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="e468d-141">(`JSON.stringify`<!-- -->, por sua vez, chama `toJSON` o método do objeto que é passado para ele). Enquanto o objeto Excel. TableRow original é um objeto API, o `toJSON` método retorna um objeto JavaScript simples (digitado `Excel.Interfaces.TableRowData` <!-- -->como) que contém cópias superficiais de qualquer propriedade filho carregada do objeto original.</span><span class="sxs-lookup"><span data-stu-id="e468d-141">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.TableRow object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.TableRowData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.TableRowData;'
    return:
      type:
      - excel.Excel.Interfaces.TableRowData
      description: ''
- uid: excel_release.Excel.TableRow.values
  summary: >-
    <span data-ttu-id="e468d-142">Representa os valores brutos do intervalo especificado.</span><span class="sxs-lookup"><span data-stu-id="e468d-142">Represents the raw values of the specified range.</span></span> <span data-ttu-id="e468d-143">Os dados retornados podem ser do tipo String, Number ou Boolean.</span><span class="sxs-lookup"><span data-stu-id="e468d-143">The data returned could be of type string, number, or a boolean.</span></span> <span data-ttu-id="e468d-144">As células que contêm um erro retornarão a cadeia de caracteres de erro.</span><span class="sxs-lookup"><span data-stu-id="e468d-144">Cells that contain an error will return the error string.</span></span>


    <span data-ttu-id="e468d-145">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e468d-145">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: values
  fullName: values
  langs:
  - typeScript
  type: property
  syntax:
    content: 'values: any[][];'
    return:
      type:
      - any[][]
