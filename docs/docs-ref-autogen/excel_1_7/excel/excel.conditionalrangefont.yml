### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.ConditionalRangeFont:class'
    summary: |-
      <span data-ttu-id="f4f82-101">Este objeto representa os atributos de fonte (estilo da fonte, cor etc.) de um objeto.</span><span class="sxs-lookup"><span data-stu-id="f4f82-101">This object represents the font attributes (font style, color, etc.) for an object.</span></span>

      <span data-ttu-id="f4f82-102">\[[Conjunto de APIs: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="f4f82-102">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.ConditionalRangeFont
    fullName: Excel.ConditionalRangeFont
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.ConditionalRangeFont#bold:member'
      - 'excel!Excel.ConditionalRangeFont#clear:member(1)'
      - 'excel!Excel.ConditionalRangeFont#color:member'
      - 'excel!Excel.ConditionalRangeFont#context:member'
      - 'excel!Excel.ConditionalRangeFont#italic:member'
      - 'excel!Excel.ConditionalRangeFont#load:member(1)'
      - 'excel!Excel.ConditionalRangeFont#load:member(2)'
      - 'excel!Excel.ConditionalRangeFont#load:member(3)'
      - 'excel!Excel.ConditionalRangeFont#set:member(1)'
      - 'excel!Excel.ConditionalRangeFont#set:member(2)'
      - 'excel!Excel.ConditionalRangeFont#strikethrough:member'
      - 'excel!Excel.ConditionalRangeFont#toJSON:member(1)'
      - 'excel!Excel.ConditionalRangeFont#underline:member'
  - uid: 'excel!Excel.ConditionalRangeFont#bold:member'
    summary: |-
      <span data-ttu-id="f4f82-103">Representa o status da fonte em negrito.</span><span class="sxs-lookup"><span data-stu-id="f4f82-103">Represents the bold status of font.</span></span>

      <span data-ttu-id="f4f82-104">\[[Conjunto de APIs: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="f4f82-104">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: bold
    fullName: bold
    langs:
      - typeScript
    type: property
    syntax:
      content: 'bold: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.ConditionalRangeFont#clear:member(1)'
    summary: |-
      <span data-ttu-id="f4f82-105">Redefine os formatos de fonte.</span><span class="sxs-lookup"><span data-stu-id="f4f82-105">Resets the font formats.</span></span>

      <span data-ttu-id="f4f82-106">\[[Conjunto de APIs: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="f4f82-106">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: clear()
    fullName: clear()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clear(): void;'
      return:
        type:
          - void
        description: ''
  - uid: 'excel!Excel.ConditionalRangeFont#color:member'
    summary: |-
      <span data-ttu-id="f4f82-107">Representação de código de cor HTML para a cor do texto.</span><span class="sxs-lookup"><span data-stu-id="f4f82-107">HTML color code representation of the text color.</span></span> <span data-ttu-id="f4f82-108">Por exemplo</span><span class="sxs-lookup"><span data-stu-id="f4f82-108">E.g.</span></span> <span data-ttu-id="f4f82-109">\#FF0000 representa vermelho.</span><span class="sxs-lookup"><span data-stu-id="f4f82-109">\#FF0000 represents Red.</span></span>

      <span data-ttu-id="f4f82-110">\[[Conjunto de APIs: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="f4f82-110">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: color
    fullName: color
    langs:
      - typeScript
    type: property
    syntax:
      content: 'color: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.ConditionalRangeFont#context:member'
    summary: <span data-ttu-id="f4f82-111">O contexto de solicitação associado ao objeto.</span><span class="sxs-lookup"><span data-stu-id="f4f82-111">The request context associated with the object.</span></span> <span data-ttu-id="f4f82-112">Isso conecta o processo do suplemento ao processo do aplicativo host do Office.</span><span class="sxs-lookup"><span data-stu-id="f4f82-112">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.ConditionalRangeFont#italic:member'
    summary: |-
      <span data-ttu-id="f4f82-113">Representa o status da fonte em itálico.</span><span class="sxs-lookup"><span data-stu-id="f4f82-113">Represents the italic status of the font.</span></span>

      <span data-ttu-id="f4f82-114">\[[Conjunto de APIs: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="f4f82-114">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: italic
    fullName: italic
    langs:
      - typeScript
    type: property
    syntax:
      content: 'italic: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.ConditionalRangeFont#load:member(1)'
    summary: <span data-ttu-id="f4f82-115">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="f4f82-115">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="f4f82-116">Você deve chamar `context.sync()` antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="f4f82-116">You must call `context.sync()` before reading the properties.</span></span>
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.ConditionalRangeFontLoadOptions): Excel.ConditionalRangeFont;'
      return:
        type:
          - 'excel!Excel.ConditionalRangeFont:class'
        description: ''
      parameters:
        - id: options
          description: <span data-ttu-id="f4f82-117">Fornece opções para as propriedades do objeto a ser carregado.</span><span class="sxs-lookup"><span data-stu-id="f4f82-117">Provides options for which properties of the object to load.</span></span>
          type:
            - 'excel!Excel.Interfaces.ConditionalRangeFontLoadOptions:interface'
  - uid: 'excel!Excel.ConditionalRangeFont#load:member(2)'
    summary: <span data-ttu-id="f4f82-118">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="f4f82-118">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="f4f82-119">Você deve chamar `context.sync()` antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="f4f82-119">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.ConditionalRangeFont;'
      return:
        type:
          - 'excel!Excel.ConditionalRangeFont:class'
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="f4f82-120">Uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="f4f82-120">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.ConditionalRangeFont#load:member(3)'
    summary: <span data-ttu-id="f4f82-121">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="f4f82-121">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="f4f82-122">Você deve chamar `context.sync()` antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="f4f82-122">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.ConditionalRangeFont;
      return:
        type:
          - 'excel!Excel.ConditionalRangeFont:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="f4f82-123">`propertyNamesAndPaths.select`é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades a serem `propertyNamesAndPaths.expand` carregadas e é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades de navegação a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="f4f82-123">`propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - |-
              {
                          select?: string;
                          expand?: string;
                      }
  - uid: 'excel!Excel.ConditionalRangeFont#set:member(1)'
    summary: '<span data-ttu-id="f4f82-124">Define várias propriedades de um objeto ao mesmo tempo.</span><span class="sxs-lookup"><span data-stu-id="f4f82-124">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="f4f82-125">Você pode passar um objeto simples com as propriedades apropriadas ou outro objeto API do mesmo tipo.</span><span class="sxs-lookup"><span data-stu-id="f4f82-125">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="f4f82-126">Este método tem a seguinte assinatura adicional:</span><span class="sxs-lookup"><span data-stu-id="f4f82-126">This method has the following additional signature:</span></span>

      `set(properties: Excel.ConditionalRangeFont): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.ConditionalRangeFontUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="f4f82-127">Um objeto JavaScript com propriedades que são estruturadas isomorphically para as propriedades do objeto no qual o método é chamado.</span><span class="sxs-lookup"><span data-stu-id="f4f82-127">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - 'excel!Excel.Interfaces.ConditionalRangeFontUpdateData:interface'
        - id: options
          description: <span data-ttu-id="f4f82-128">Fornece uma opção para suprimir erros se o objeto Properties tentar definir qualquer propriedade somente leitura.</span><span class="sxs-lookup"><span data-stu-id="f4f82-128">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - 'excel!OfficeExtension.UpdateOptions:interface'
  - uid: 'excel!Excel.ConditionalRangeFont#set:member(2)'
    summary: '<span data-ttu-id="f4f82-129">Define várias propriedades no objeto ao mesmo tempo, com base em um objeto carregado existente.</span><span class="sxs-lookup"><span data-stu-id="f4f82-129">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.ConditionalRangeFont): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'excel!Excel.ConditionalRangeFont:class'
  - uid: 'excel!Excel.ConditionalRangeFont#strikethrough:member'
    summary: |-
      <span data-ttu-id="f4f82-130">Representa o status de tachado da fonte.</span><span class="sxs-lookup"><span data-stu-id="f4f82-130">Represents the strikethrough status of the font.</span></span>

      <span data-ttu-id="f4f82-131">\[[Conjunto de APIs: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="f4f82-131">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: strikethrough
    fullName: strikethrough
    langs:
      - typeScript
    type: property
    syntax:
      content: 'strikethrough: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.ConditionalRangeFont#toJSON:member(1)'
    summary: '<span data-ttu-id="f4f82-132">Substitui o método `toJSON()` JavaScript para fornecer uma saída mais útil quando um objeto API é passado para`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="f4f82-132">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="f4f82-133">.</span><span class="sxs-lookup"><span data-stu-id="f4f82-133"></span></span> <span data-ttu-id="f4f82-134">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="f4f82-134"></span></span><!-- --><span data-ttu-id="f4f82-135">, por sua vez, chama `toJSON` o método do objeto que é passado para ele.) Enquanto o objeto Excel. ConditionalRangeFont original é um objeto API, o `toJSON` método retorna um objeto JavaScript simples (digitado como`Excel.Interfaces.ConditionalRangeFontData`</span><span class="sxs-lookup"><span data-stu-id="f4f82-135">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.ConditionalRangeFont object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ConditionalRangeFontData`</span></span><!-- --><span data-ttu-id="f4f82-136">) que contém cópias superficiais de qualquer propriedade filho carregada do objeto original.</span><span class="sxs-lookup"><span data-stu-id="f4f82-136">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.ConditionalRangeFontData;'
      return:
        type:
          - 'excel!Excel.Interfaces.ConditionalRangeFontData:interface'
        description: ''
  - uid: 'excel!Excel.ConditionalRangeFont#underline:member'
    summary: |-
      <span data-ttu-id="f4f82-137">Tipo de sublinhado aplicado à fonte.</span><span class="sxs-lookup"><span data-stu-id="f4f82-137">Type of underline applied to the font.</span></span> <span data-ttu-id="f4f82-138">Consulte Excel. ConditionalRangeFontUnderlineStyle para obter detalhes.</span><span class="sxs-lookup"><span data-stu-id="f4f82-138">See Excel.ConditionalRangeFontUnderlineStyle for details.</span></span>

      <span data-ttu-id="f4f82-139">\[[Conjunto de APIs: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="f4f82-139">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: underline
    fullName: underline
    langs:
      - typeScript
    type: property
    syntax:
      content: 'underline: Excel.ConditionalRangeFontUnderlineStyle | "None" | "Single" | "Double";'
      return:
        type:
          - 'excel!Excel.ConditionalRangeFont#underline~0:complex'
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.ConditionalRangeFont:class'
    name: Excel.ConditionalRangeFont
  - uid: 'excel!Excel.Interfaces.ConditionalRangeFontLoadOptions:interface'
    name: Excel.Interfaces.ConditionalRangeFontLoadOptions
  - uid: 'excel!Excel.Interfaces.ConditionalRangeFontUpdateData:interface'
    name: Interfaces.ConditionalRangeFontUpdateData
  - uid: 'excel!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'excel!Excel.Interfaces.ConditionalRangeFontData:interface'
    name: Excel.Interfaces.ConditionalRangeFontData
  - uid: 'excel!Excel.ConditionalRangeFont#underline~0:complex'
    name: Excel.ConditionalRangeFontUnderlineStyle | "None" | "Single" | "Double"
    fullName: Excel.ConditionalRangeFontUnderlineStyle | "None" | "Single" | "Double"
    spec.typeScript:
      - uid: 'excel!Excel.ConditionalRangeFontUnderlineStyle:enum'
        name: Excel.ConditionalRangeFontUnderlineStyle
        fullName: Excel.ConditionalRangeFontUnderlineStyle
      - name: ' | "None" | "Single" | "Double"'
        fullName: ' | "None" | "Single" | "Double"'