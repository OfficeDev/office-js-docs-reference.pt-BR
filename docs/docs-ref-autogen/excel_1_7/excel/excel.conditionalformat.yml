### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.ConditionalFormat:class'
    summary: |-
      <span data-ttu-id="09e74-101">Um objeto que encapsula o intervalo, o formato, a regra e outras propriedades de um formato condicional.</span><span class="sxs-lookup"><span data-stu-id="09e74-101">An object encapsulating a conditional format's range, format, rule, and other properties.</span></span> <span data-ttu-id="09e74-102">Para saber mais sobre o modelo de objeto de formatação condicional, leia [aplicar formatação condicional a intervalos do Excel](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-conditional-formatting)</span><span class="sxs-lookup"><span data-stu-id="09e74-102">To learn more about the conditional formatting object model, read [Apply conditional formatting to Excel ranges](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-conditional-formatting)</span></span><!-- --><span data-ttu-id="09e74-103">.</span><span class="sxs-lookup"><span data-stu-id="09e74-103"></span></span>

      <span data-ttu-id="09e74-104">\[[Conjunto de APIs: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="09e74-104">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.ConditionalFormat
    fullName: Excel.ConditionalFormat
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.ConditionalFormat#cellValue:member'
      - 'excel!Excel.ConditionalFormat#cellValueOrNullObject:member'
      - 'excel!Excel.ConditionalFormat#colorScale:member'
      - 'excel!Excel.ConditionalFormat#colorScaleOrNullObject:member'
      - 'excel!Excel.ConditionalFormat#context:member'
      - 'excel!Excel.ConditionalFormat#custom:member'
      - 'excel!Excel.ConditionalFormat#customOrNullObject:member'
      - 'excel!Excel.ConditionalFormat#dataBar:member'
      - 'excel!Excel.ConditionalFormat#dataBarOrNullObject:member'
      - 'excel!Excel.ConditionalFormat#delete:member(1)'
      - 'excel!Excel.ConditionalFormat#getRange:member(1)'
      - 'excel!Excel.ConditionalFormat#getRangeOrNullObject:member(1)'
      - 'excel!Excel.ConditionalFormat#iconSet:member'
      - 'excel!Excel.ConditionalFormat#iconSetOrNullObject:member'
      - 'excel!Excel.ConditionalFormat#id:member'
      - 'excel!Excel.ConditionalFormat#load:member(1)'
      - 'excel!Excel.ConditionalFormat#load:member(2)'
      - 'excel!Excel.ConditionalFormat#load:member(3)'
      - 'excel!Excel.ConditionalFormat#preset:member'
      - 'excel!Excel.ConditionalFormat#presetOrNullObject:member'
      - 'excel!Excel.ConditionalFormat#priority:member'
      - 'excel!Excel.ConditionalFormat#set:member(1)'
      - 'excel!Excel.ConditionalFormat#set:member(2)'
      - 'excel!Excel.ConditionalFormat#stopIfTrue:member'
      - 'excel!Excel.ConditionalFormat#textComparison:member'
      - 'excel!Excel.ConditionalFormat#textComparisonOrNullObject:member'
      - 'excel!Excel.ConditionalFormat#toJSON:member(1)'
      - 'excel!Excel.ConditionalFormat#topBottom:member'
      - 'excel!Excel.ConditionalFormat#topBottomOrNullObject:member'
      - 'excel!Excel.ConditionalFormat#type:member'
  - uid: 'excel!Excel.ConditionalFormat#cellValue:member'
    summary: |-
      <span data-ttu-id="09e74-105">Retorna as propriedades do formato condicional do valor da célula se o formato condicional atual for um tipo Cellvalue.</span><span class="sxs-lookup"><span data-stu-id="09e74-105">Returns the cell value conditional format properties if the current conditional format is a CellValue type.</span></span> <span data-ttu-id="09e74-106">Por exemplo, para formatar todas as células entre 5 e 10.</span><span class="sxs-lookup"><span data-stu-id="09e74-106">For example to format all cells between 5 and 10.</span></span> <span data-ttu-id="09e74-107">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="09e74-107">Read-only.</span></span>

      <span data-ttu-id="09e74-108">\[[Conjunto de APIs: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="09e74-108">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: cellValue
    fullName: cellValue
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly cellValue: Excel.CellValueConditionalFormat;'
      return:
        type:
          - 'excel!Excel.CellValueConditionalFormat:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="09e74-109">Exemplos</span><span class="sxs-lookup"><span data-stu-id="09e74-109">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Sample");
              const range = sheet.getRange("B21:E23");
              const conditionalFormat = range.conditionalFormats
                  .add(Excel.ConditionalFormatType.cellValue);
              conditionalFormat.cellValue.format.font.color = "red";
              conditionalFormat.cellValue.rule = { formula1: "=0", operator: "LessThan" };

              await context.sync();
          });
          ```
  - uid: 'excel!Excel.ConditionalFormat#cellValueOrNullObject:member'
    summary: |-
      <span data-ttu-id="09e74-110">Retorna as propriedades do formato condicional do valor da célula se o formato condicional atual for um tipo Cellvalue.</span><span class="sxs-lookup"><span data-stu-id="09e74-110">Returns the cell value conditional format properties if the current conditional format is a CellValue type.</span></span> <span data-ttu-id="09e74-111">Por exemplo, para formatar todas as células entre 5 e 10.</span><span class="sxs-lookup"><span data-stu-id="09e74-111">For example to format all cells between 5 and 10.</span></span> <span data-ttu-id="09e74-112">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="09e74-112">Read-only.</span></span>

      <span data-ttu-id="09e74-113">\[[Conjunto de APIs: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="09e74-113">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: cellValueOrNullObject
    fullName: cellValueOrNullObject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly cellValueOrNullObject: Excel.CellValueConditionalFormat;'
      return:
        type:
          - 'excel!Excel.CellValueConditionalFormat:class'
  - uid: 'excel!Excel.ConditionalFormat#colorScale:member'
    summary: |-
      <span data-ttu-id="09e74-114">Retorna as propriedades de formato condicional ColorScale se o formato condicional atual for um tipo ColorScale.</span><span class="sxs-lookup"><span data-stu-id="09e74-114">Returns the ColorScale conditional format properties if the current conditional format is an ColorScale type.</span></span> <span data-ttu-id="09e74-115">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="09e74-115">Read-only.</span></span>

      <span data-ttu-id="09e74-116">\[[Conjunto de APIs: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="09e74-116">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: colorScale
    fullName: colorScale
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly colorScale: Excel.ColorScaleConditionalFormat;'
      return:
        type:
          - 'excel!Excel.ColorScaleConditionalFormat:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="09e74-117">Exemplos</span><span class="sxs-lookup"><span data-stu-id="09e74-117">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Sample");
              const range = sheet.getRange("B2:M5");
              const conditionalFormat = range.conditionalFormats
                  .add(Excel.ConditionalFormatType.colorScale);
              const criteria = {
                  minimum: { formula: null, type: Excel.ConditionalFormatColorCriterionType.lowestValue, color: "blue" },
                  midpoint: { formula: "50", type: Excel.ConditionalFormatColorCriterionType.percent, color: "yellow" },
                  maximum: { formula: null, type: Excel.ConditionalFormatColorCriterionType.highestValue, color: "red" }
              };
              conditionalFormat.colorScale.criteria = criteria;

              await context.sync();
          });
          ```
  - uid: 'excel!Excel.ConditionalFormat#colorScaleOrNullObject:member'
    summary: |-
      <span data-ttu-id="09e74-118">Retorna as propriedades de formato condicional ColorScale se o formato condicional atual for um tipo ColorScale.</span><span class="sxs-lookup"><span data-stu-id="09e74-118">Returns the ColorScale conditional format properties if the current conditional format is an ColorScale type.</span></span> <span data-ttu-id="09e74-119">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="09e74-119">Read-only.</span></span>

      <span data-ttu-id="09e74-120">\[[Conjunto de APIs: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="09e74-120">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: colorScaleOrNullObject
    fullName: colorScaleOrNullObject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly colorScaleOrNullObject: Excel.ColorScaleConditionalFormat;'
      return:
        type:
          - 'excel!Excel.ColorScaleConditionalFormat:class'
  - uid: 'excel!Excel.ConditionalFormat#context:member'
    summary: <span data-ttu-id="09e74-121">O contexto de solicitação associado ao objeto.</span><span class="sxs-lookup"><span data-stu-id="09e74-121">The request context associated with the object.</span></span> <span data-ttu-id="09e74-122">Isso conecta o processo do suplemento ao processo do aplicativo host do Office.</span><span class="sxs-lookup"><span data-stu-id="09e74-122">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.ConditionalFormat#custom:member'
    summary: |-
      <span data-ttu-id="09e74-123">Retorna as propriedades de formato condicional personalizado se o formato condicional atual for um tipo personalizado.</span><span class="sxs-lookup"><span data-stu-id="09e74-123">Returns the custom conditional format properties if the current conditional format is a custom type.</span></span> <span data-ttu-id="09e74-124">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="09e74-124">Read-only.</span></span>

      <span data-ttu-id="09e74-125">\[[Conjunto de APIs: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="09e74-125">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: custom
    fullName: custom
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly custom: Excel.CustomConditionalFormat;'
      return:
        type:
          - 'excel!Excel.CustomConditionalFormat:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="09e74-126">Exemplos</span><span class="sxs-lookup"><span data-stu-id="09e74-126">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Sample");
              const range = sheet.getRange("B8:E13");
              const conditionalFormat = range.conditionalFormats.add(Excel.ConditionalFormatType.custom);
              conditionalFormat.custom.rule.formula = '=IF(B8>INDIRECT("RC[-1]",0),TRUE)';
              conditionalFormat.custom.format.font.color = "green";

              await context.sync();
          });
          ```
  - uid: 'excel!Excel.ConditionalFormat#customOrNullObject:member'
    summary: |-
      <span data-ttu-id="09e74-127">Retorna as propriedades de formato condicional personalizado se o formato condicional atual for um tipo personalizado.</span><span class="sxs-lookup"><span data-stu-id="09e74-127">Returns the custom conditional format properties if the current conditional format is a custom type.</span></span> <span data-ttu-id="09e74-128">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="09e74-128">Read-only.</span></span>

      <span data-ttu-id="09e74-129">\[[Conjunto de APIs: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="09e74-129">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: customOrNullObject
    fullName: customOrNullObject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly customOrNullObject: Excel.CustomConditionalFormat;'
      return:
        type:
          - 'excel!Excel.CustomConditionalFormat:class'
  - uid: 'excel!Excel.ConditionalFormat#dataBar:member'
    summary: |-
      <span data-ttu-id="09e74-130">Retorna as propriedades da barra de dados se o formato condicional atual for uma barra de dados.</span><span class="sxs-lookup"><span data-stu-id="09e74-130">Returns the data bar properties if the current conditional format is a data bar.</span></span> <span data-ttu-id="09e74-131">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="09e74-131">Read-only.</span></span>

      <span data-ttu-id="09e74-132">\[[Conjunto de APIs: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="09e74-132">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: dataBar
    fullName: dataBar
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly dataBar: Excel.DataBarConditionalFormat;'
      return:
        type:
          - 'excel!Excel.DataBarConditionalFormat:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="09e74-133">Exemplos</span><span class="sxs-lookup"><span data-stu-id="09e74-133">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Sample");
              const range = sheet.getRange("B8:E13");
              const conditionalFormat = range.conditionalFormats
                  .add(Excel.ConditionalFormatType.dataBar);
              conditionalFormat.dataBar.barDirection = Excel.ConditionalDataBarDirection.leftToRight;

              await context.sync();
          });
          ```
  - uid: 'excel!Excel.ConditionalFormat#dataBarOrNullObject:member'
    summary: |-
      <span data-ttu-id="09e74-134">Retorna as propriedades da barra de dados se o formato condicional atual for uma barra de dados.</span><span class="sxs-lookup"><span data-stu-id="09e74-134">Returns the data bar properties if the current conditional format is a data bar.</span></span> <span data-ttu-id="09e74-135">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="09e74-135">Read-only.</span></span>

      <span data-ttu-id="09e74-136">\[[Conjunto de APIs: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="09e74-136">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: dataBarOrNullObject
    fullName: dataBarOrNullObject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly dataBarOrNullObject: Excel.DataBarConditionalFormat;'
      return:
        type:
          - 'excel!Excel.DataBarConditionalFormat:class'
  - uid: 'excel!Excel.ConditionalFormat#delete:member(1)'
    summary: |-
      <span data-ttu-id="09e74-137">Exclui esse formato condicional.</span><span class="sxs-lookup"><span data-stu-id="09e74-137">Deletes this conditional format.</span></span>

      <span data-ttu-id="09e74-138">\[[Conjunto de APIs: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="09e74-138">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: ''
  - uid: 'excel!Excel.ConditionalFormat#getRange:member(1)'
    summary: |-
      <span data-ttu-id="09e74-139">Retorna o intervalo ao qual a formatação condicional é aplicada.</span><span class="sxs-lookup"><span data-stu-id="09e74-139">Returns the range the conditonal format is applied to.</span></span> <span data-ttu-id="09e74-140">Gera um erro se a formatação condicional for aplicada a vários intervalos.</span><span class="sxs-lookup"><span data-stu-id="09e74-140">Throws an error if the conditional format is applied to multiple ranges.</span></span> <span data-ttu-id="09e74-141">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="09e74-141">Read-only.</span></span>

      <span data-ttu-id="09e74-142">\[[Conjunto de APIs: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="09e74-142">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getRange()
    fullName: getRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRange(): Excel.Range;'
      return:
        type:
          - 'excel!Excel.Range:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="09e74-143">Exemplos</span><span class="sxs-lookup"><span data-stu-id="09e74-143">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Sample");
              const worksheetRange = sheet.getRange();
              worksheetRange.conditionalFormats.load("type");

              await context.sync();

              let cfRangePairs: { cf: Excel.ConditionalFormat, range: Excel.Range }[] = [];
              worksheetRange.conditionalFormats.items.forEach(item => {
                  cfRangePairs.push({
                      cf: item,
                      range: item.getRange().load("address")
                  });
              });

              await context.sync();

              if (cfRangePairs.length > 0) {
                  cfRangePairs.forEach(item => {
                      console.log(item.cf.type);
                  });
              } else {
                  console.log("No conditional formats applied.");
              }
          });
          ```
  - uid: 'excel!Excel.ConditionalFormat#getRangeOrNullObject:member(1)'
    summary: |-
      <span data-ttu-id="09e74-144">Retorna o intervalo ao qual o formato conditonal é aplicado, ou um objeto NULL, se o formato condicional for aplicado a vários intervalos.</span><span class="sxs-lookup"><span data-stu-id="09e74-144">Returns the range the conditonal format is applied to, or a null object if the conditional format is applied to multiple ranges.</span></span> <span data-ttu-id="09e74-145">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="09e74-145">Read-only.</span></span>

      <span data-ttu-id="09e74-146">\[[Conjunto de APIs: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="09e74-146">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getRangeOrNullObject()
    fullName: getRangeOrNullObject()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRangeOrNullObject(): Excel.Range;'
      return:
        type:
          - 'excel!Excel.Range:class'
        description: ''
  - uid: 'excel!Excel.ConditionalFormat#iconSet:member'
    summary: |-
      <span data-ttu-id="09e74-147">Retorna as propriedades de formato condicional do Iconset se o formato condicional atual for um tipo de Íconeset.</span><span class="sxs-lookup"><span data-stu-id="09e74-147">Returns the IconSet conditional format properties if the current conditional format is an IconSet type.</span></span> <span data-ttu-id="09e74-148">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="09e74-148">Read-only.</span></span>

      <span data-ttu-id="09e74-149">\[[Conjunto de APIs: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="09e74-149">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: iconSet
    fullName: iconSet
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly iconSet: Excel.IconSetConditionalFormat;'
      return:
        type:
          - 'excel!Excel.IconSetConditionalFormat:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="09e74-150">Exemplos</span><span class="sxs-lookup"><span data-stu-id="09e74-150">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Sample");
              const range = sheet.getRange("B8:E13");
              const conditionalFormat = range.conditionalFormats
                  .add(Excel.ConditionalFormatType.iconSet);
              const iconSetCF = conditionalFormat.iconSet;
              iconSetCF.style = Excel.IconSet.threeTriangles;

              /*
                  The iconSetCF.criteria array is automatically prepopulated with
                  criterion elements whose properties have been given default settings.
                  You can't write to each property of a criterion directly. Instead,
                  replace the whole criteria object.

                  With a "three*" icon set style, such as "threeTriangles", the third
                  element in the criteria array (criteria[2]) defines the "top" icon;
                  e.g., a green triangle. The second (criteria[1]) defines the "middle"
                  icon, The first (criteria[0]) defines the "low" icon, but it
                  can often be left empty as this method does below, because every
                  cell that does not match the other two criteria always gets the low
                  icon.            
              */
              iconSetCF.criteria = [
                  {} as any,
                  {
                      type: Excel.ConditionalFormatIconRuleType.number,
                      operator: Excel.ConditionalIconCriterionOperator.greaterThanOrEqual,
                      formula: "=700"
                  },
                  {
                      type: Excel.ConditionalFormatIconRuleType.number,
                      operator: Excel.ConditionalIconCriterionOperator.greaterThanOrEqual,
                      formula: "=1000",
                  }
              ];

              await context.sync();
          });
          ```
  - uid: 'excel!Excel.ConditionalFormat#iconSetOrNullObject:member'
    summary: |-
      <span data-ttu-id="09e74-151">Retorna as propriedades de formato condicional do Iconset se o formato condicional atual for um tipo de Íconeset.</span><span class="sxs-lookup"><span data-stu-id="09e74-151">Returns the IconSet conditional format properties if the current conditional format is an IconSet type.</span></span> <span data-ttu-id="09e74-152">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="09e74-152">Read-only.</span></span>

      <span data-ttu-id="09e74-153">\[[Conjunto de APIs: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="09e74-153">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: iconSetOrNullObject
    fullName: iconSetOrNullObject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly iconSetOrNullObject: Excel.IconSetConditionalFormat;'
      return:
        type:
          - 'excel!Excel.IconSetConditionalFormat:class'
  - uid: 'excel!Excel.ConditionalFormat#id:member'
    summary: |-
      <span data-ttu-id="09e74-154">A prioridade do formato condicional na atual ConditionalFormatCollection.</span><span class="sxs-lookup"><span data-stu-id="09e74-154">The Priority of the Conditional Format within the current ConditionalFormatCollection.</span></span> <span data-ttu-id="09e74-155">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="09e74-155">Read-only.</span></span>

      <span data-ttu-id="09e74-156">\[[Conjunto de APIs: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="09e74-156">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.ConditionalFormat#load:member(1)'
    summary: <span data-ttu-id="09e74-157">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="09e74-157">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="09e74-158">Você deve chamar `context.sync()` antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="09e74-158">You must call `context.sync()` before reading the properties.</span></span>
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.ConditionalFormatLoadOptions): Excel.ConditionalFormat;'
      return:
        type:
          - 'excel!Excel.ConditionalFormat:class'
        description: ''
      parameters:
        - id: options
          description: <span data-ttu-id="09e74-159">Fornece opções para as propriedades do objeto a ser carregado.</span><span class="sxs-lookup"><span data-stu-id="09e74-159">Provides options for which properties of the object to load.</span></span>
          type:
            - 'excel!Excel.Interfaces.ConditionalFormatLoadOptions:interface'
  - uid: 'excel!Excel.ConditionalFormat#load:member(2)'
    summary: <span data-ttu-id="09e74-160">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="09e74-160">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="09e74-161">Você deve chamar `context.sync()` antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="09e74-161">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.ConditionalFormat;'
      return:
        type:
          - 'excel!Excel.ConditionalFormat:class'
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="09e74-162">Uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="09e74-162">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.ConditionalFormat#load:member(3)'
    summary: <span data-ttu-id="09e74-163">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="09e74-163">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="09e74-164">Você deve chamar `context.sync()` antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="09e74-164">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.ConditionalFormat;
      return:
        type:
          - 'excel!Excel.ConditionalFormat:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="09e74-165">`propertyNamesAndPaths.select`é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades a serem `propertyNamesAndPaths.expand` carregadas e é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades de navegação a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="09e74-165">`propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - |-
              {
                          select?: string;
                          expand?: string;
                      }
  - uid: 'excel!Excel.ConditionalFormat#preset:member'
    summary: |-
      <span data-ttu-id="09e74-166">Retorna o formato condicional de critérios predefinidos.</span><span class="sxs-lookup"><span data-stu-id="09e74-166">Returns the preset criteria conditional format.</span></span> <span data-ttu-id="09e74-167">Confira Excel. PresetCriteriaConditionalFormat para obter mais detalhes.</span><span class="sxs-lookup"><span data-stu-id="09e74-167">See Excel.PresetCriteriaConditionalFormat for more details.</span></span>

      <span data-ttu-id="09e74-168">\[[Conjunto de APIs: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="09e74-168">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: preset
    fullName: preset
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly preset: Excel.PresetCriteriaConditionalFormat;'
      return:
        type:
          - 'excel!Excel.PresetCriteriaConditionalFormat:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="09e74-169">Exemplos</span><span class="sxs-lookup"><span data-stu-id="09e74-169">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Sample");
              const range = sheet.getRange("B2:M5");
              const conditionalFormat = range.conditionalFormats
                  .add(Excel.ConditionalFormatType.presetCriteria);
              conditionalFormat.preset.format.font.color = "white";
              conditionalFormat.preset.rule = { criterion: Excel.ConditionalFormatPresetCriterion.oneStdDevAboveAverage };

              await context.sync();
          });
          ```
  - uid: 'excel!Excel.ConditionalFormat#presetOrNullObject:member'
    summary: |-
      <span data-ttu-id="09e74-170">Retorna o formato condicional de critérios predefinidos.</span><span class="sxs-lookup"><span data-stu-id="09e74-170">Returns the preset criteria conditional format.</span></span> <span data-ttu-id="09e74-171">Confira Excel. PresetCriteriaConditionalFormat para obter mais detalhes.</span><span class="sxs-lookup"><span data-stu-id="09e74-171">See Excel.PresetCriteriaConditionalFormat for more details.</span></span>

      <span data-ttu-id="09e74-172">\[[Conjunto de APIs: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="09e74-172">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: presetOrNullObject
    fullName: presetOrNullObject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly presetOrNullObject: Excel.PresetCriteriaConditionalFormat;'
      return:
        type:
          - 'excel!Excel.PresetCriteriaConditionalFormat:class'
  - uid: 'excel!Excel.ConditionalFormat#priority:member'
    summary: |-
      <span data-ttu-id="09e74-173">A prioridade (ou índice) dentro da coleção de formato condicional em que esse formato condicional existe atualmente no.</span><span class="sxs-lookup"><span data-stu-id="09e74-173">The priority (or index) within the conditional format collection that this conditional format currently exists in.</span></span> <span data-ttu-id="09e74-174">Alterar isso também altera as prioridades de formatos condicionais, para permitir uma ordem de prioridade contígua.</span><span class="sxs-lookup"><span data-stu-id="09e74-174">Changing this also changes other conditional formats' priorities, to allow for a contiguous priority order.</span></span> <span data-ttu-id="09e74-175">Use uma prioridade negativa para começar de trás.</span><span class="sxs-lookup"><span data-stu-id="09e74-175">Use a negative priority to begin from the back.</span></span> <span data-ttu-id="09e74-176">As prioridades maiores do que os limites serão obtidas e definidas com a prioridade máxima (ou mínima se negativa).</span><span class="sxs-lookup"><span data-stu-id="09e74-176">Priorities greater than than bounds will get and set to the maximum (or minimum if negative) priority.</span></span> <span data-ttu-id="09e74-177">Observe também que, se você alterar a prioridade, será necessário buscar novamente uma nova cópia do objeto nesse novo local de prioridade, se quiser fazer outras alterações.</span><span class="sxs-lookup"><span data-stu-id="09e74-177">Also note that if you change the priority, you have to re-fetch a new copy of the object at that new priority location if you want to make further changes to it.</span></span> <span data-ttu-id="09e74-178">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="09e74-178">Read-only.</span></span>

      <span data-ttu-id="09e74-179">\[[Conjunto de APIs: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="09e74-179">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: priority
    fullName: priority
    langs:
      - typeScript
    type: property
    syntax:
      content: 'priority: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.ConditionalFormat#set:member(1)'
    summary: '<span data-ttu-id="09e74-180">Define várias propriedades de um objeto ao mesmo tempo.</span><span class="sxs-lookup"><span data-stu-id="09e74-180">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="09e74-181">Você pode passar um objeto simples com as propriedades apropriadas ou outro objeto API do mesmo tipo.</span><span class="sxs-lookup"><span data-stu-id="09e74-181">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="09e74-182">Este método tem a seguinte assinatura adicional:</span><span class="sxs-lookup"><span data-stu-id="09e74-182">This method has the following additional signature:</span></span>

      `set(properties: Excel.ConditionalFormat): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.ConditionalFormatUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="09e74-183">Um objeto JavaScript com propriedades que são estruturadas isomorphically para as propriedades do objeto no qual o método é chamado.</span><span class="sxs-lookup"><span data-stu-id="09e74-183">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - 'excel!Excel.Interfaces.ConditionalFormatUpdateData:interface'
        - id: options
          description: <span data-ttu-id="09e74-184">Fornece uma opção para suprimir erros se o objeto Properties tentar definir qualquer propriedade somente leitura.</span><span class="sxs-lookup"><span data-stu-id="09e74-184">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - 'excel!OfficeExtension.UpdateOptions:interface'
  - uid: 'excel!Excel.ConditionalFormat#set:member(2)'
    summary: '<span data-ttu-id="09e74-185">Define várias propriedades no objeto ao mesmo tempo, com base em um objeto carregado existente.</span><span class="sxs-lookup"><span data-stu-id="09e74-185">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.ConditionalFormat): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'excel!Excel.ConditionalFormat:class'
  - uid: 'excel!Excel.ConditionalFormat#stopIfTrue:member'
    summary: |-
      <span data-ttu-id="09e74-186">Se as condições desse formato condicional forem atendidas, nenhum formato de prioridade mais baixa terá efeito nessa célula.</span><span class="sxs-lookup"><span data-stu-id="09e74-186">If the conditions of this conditional format are met, no lower-priority formats shall take effect on that cell.</span></span> <span data-ttu-id="09e74-187">Nulo em databars, conjuntos de ícones e colorscales como não há o conceito de StopIfTrue para estes</span><span class="sxs-lookup"><span data-stu-id="09e74-187">Null on databars, icon sets, and colorscales as there's no concept of StopIfTrue for these</span></span>

      <span data-ttu-id="09e74-188">\[[Conjunto de APIs: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="09e74-188">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: stopIfTrue
    fullName: stopIfTrue
    langs:
      - typeScript
    type: property
    syntax:
      content: 'stopIfTrue: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.ConditionalFormat#textComparison:member'
    summary: |-
      <span data-ttu-id="09e74-189">Retorna as propriedades de formato condicional de texto específico se o formato condicional atual for um tipo de texto.</span><span class="sxs-lookup"><span data-stu-id="09e74-189">Returns the specific text conditional format properties if the current conditional format is a text type.</span></span> <span data-ttu-id="09e74-190">Por exemplo, para formatar células que correspondem à palavra "text".</span><span class="sxs-lookup"><span data-stu-id="09e74-190">For example to format cells matching the word "Text".</span></span> <span data-ttu-id="09e74-191">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="09e74-191">Read-only.</span></span>

      <span data-ttu-id="09e74-192">\[[Conjunto de APIs: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="09e74-192">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: textComparison
    fullName: textComparison
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly textComparison: Excel.TextConditionalFormat;'
      return:
        type:
          - 'excel!Excel.TextConditionalFormat:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="09e74-193">Exemplos</span><span class="sxs-lookup"><span data-stu-id="09e74-193">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Sample");
              const range = sheet.getRange("B16:D18");
              const conditionalFormat = range.conditionalFormats
                  .add(Excel.ConditionalFormatType.containsText);
              conditionalFormat.textComparison.format.font.color = "red";
              conditionalFormat.textComparison.rule = { operator: Excel.ConditionalTextOperator.contains, text: "Delayed" };

              await context.sync();
          });
          ```
  - uid: 'excel!Excel.ConditionalFormat#textComparisonOrNullObject:member'
    summary: |-
      <span data-ttu-id="09e74-194">Retorna as propriedades de formato condicional de texto específico se o formato condicional atual for um tipo de texto.</span><span class="sxs-lookup"><span data-stu-id="09e74-194">Returns the specific text conditional format properties if the current conditional format is a text type.</span></span> <span data-ttu-id="09e74-195">Por exemplo, para formatar células que correspondem à palavra "text".</span><span class="sxs-lookup"><span data-stu-id="09e74-195">For example to format cells matching the word "Text".</span></span> <span data-ttu-id="09e74-196">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="09e74-196">Read-only.</span></span>

      <span data-ttu-id="09e74-197">\[[Conjunto de APIs: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="09e74-197">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: textComparisonOrNullObject
    fullName: textComparisonOrNullObject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly textComparisonOrNullObject: Excel.TextConditionalFormat;'
      return:
        type:
          - 'excel!Excel.TextConditionalFormat:class'
  - uid: 'excel!Excel.ConditionalFormat#toJSON:member(1)'
    summary: '<span data-ttu-id="09e74-198">Substitui o método `toJSON()` JavaScript para fornecer uma saída mais útil quando um objeto API é passado para`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="09e74-198">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="09e74-199">.</span><span class="sxs-lookup"><span data-stu-id="09e74-199"></span></span> <span data-ttu-id="09e74-200">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="09e74-200"></span></span><!-- --><span data-ttu-id="09e74-201">, por sua vez, chama `toJSON` o método do objeto que é passado para ele.) Enquanto o objeto Excel. ConditionalFormat original é um objeto API, o `toJSON` método retorna um objeto JavaScript simples (digitado como`Excel.Interfaces.ConditionalFormatData`</span><span class="sxs-lookup"><span data-stu-id="09e74-201">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.ConditionalFormat object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ConditionalFormatData`</span></span><!-- --><span data-ttu-id="09e74-202">) que contém cópias superficiais de qualquer propriedade filho carregada do objeto original.</span><span class="sxs-lookup"><span data-stu-id="09e74-202">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.ConditionalFormatData;'
      return:
        type:
          - 'excel!Excel.Interfaces.ConditionalFormatData:interface'
        description: ''
  - uid: 'excel!Excel.ConditionalFormat#topBottom:member'
    summary: |-
      <span data-ttu-id="09e74-203">Retorna as propriedades de formato condicional superior/inferior se o formato condicional atual for um tipo TopBottom.</span><span class="sxs-lookup"><span data-stu-id="09e74-203">Returns the Top/Bottom conditional format properties if the current conditional format is an TopBottom type.</span></span> <span data-ttu-id="09e74-204">Por exemplo para formatar os primeiros 10% ou 10 itens inferiores.</span><span class="sxs-lookup"><span data-stu-id="09e74-204">For example to format the top 10% or bottom 10 items.</span></span> <span data-ttu-id="09e74-205">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="09e74-205">Read-only.</span></span>

      <span data-ttu-id="09e74-206">\[[Conjunto de APIs: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="09e74-206">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: topBottom
    fullName: topBottom
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly topBottom: Excel.TopBottomConditionalFormat;'
      return:
        type:
          - 'excel!Excel.TopBottomConditionalFormat:class'
  - uid: 'excel!Excel.ConditionalFormat#topBottomOrNullObject:member'
    summary: |-
      <span data-ttu-id="09e74-207">Retorna as propriedades de formato condicional superior/inferior se o formato condicional atual for um tipo TopBottom.</span><span class="sxs-lookup"><span data-stu-id="09e74-207">Returns the Top/Bottom conditional format properties if the current conditional format is an TopBottom type.</span></span> <span data-ttu-id="09e74-208">Por exemplo para formatar os primeiros 10% ou 10 itens inferiores.</span><span class="sxs-lookup"><span data-stu-id="09e74-208">For example to format the top 10% or bottom 10 items.</span></span> <span data-ttu-id="09e74-209">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="09e74-209">Read-only.</span></span>

      <span data-ttu-id="09e74-210">\[[Conjunto de APIs: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="09e74-210">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: topBottomOrNullObject
    fullName: topBottomOrNullObject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly topBottomOrNullObject: Excel.TopBottomConditionalFormat;'
      return:
        type:
          - 'excel!Excel.TopBottomConditionalFormat:class'
  - uid: 'excel!Excel.ConditionalFormat#type:member'
    summary: |-
      <span data-ttu-id="09e74-211">Um tipo de formato condicional.</span><span class="sxs-lookup"><span data-stu-id="09e74-211">A type of conditional format.</span></span> <span data-ttu-id="09e74-212">Apenas um pode ser definido por vez.</span><span class="sxs-lookup"><span data-stu-id="09e74-212">Only one can be set at a time.</span></span> <span data-ttu-id="09e74-213">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="09e74-213">Read-only.</span></span>

      <span data-ttu-id="09e74-214">\[[Conjunto de APIs: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="09e74-214">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: type
    fullName: type
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly type: Excel.ConditionalFormatType | "Custom" | "DataBar" | "ColorScale" | "IconSet" | "TopBottom" | "PresetCriteria" | "ContainsText" | "CellValue";'
      return:
        type:
          - 'excel!Excel.ConditionalFormat#type~0:complex'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="09e74-215">Exemplos</span><span class="sxs-lookup"><span data-stu-id="09e74-215">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Sample");
              const worksheetRange = sheet.getRange();
              worksheetRange.conditionalFormats.load("type");

              await context.sync();

              let cfRangePairs: { cf: Excel.ConditionalFormat, range: Excel.Range }[] = [];
              worksheetRange.conditionalFormats.items.forEach(item => {
                  cfRangePairs.push({
                      cf: item,
                      range: item.getRange().load("address")
                  });
              });

              await context.sync();

              if (cfRangePairs.length > 0) {
                  cfRangePairs.forEach(item => {
                      console.log(item.cf.type);
                  });
              } else {
                  console.log("No conditional formats applied.");
              }
          });
          ```
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.CellValueConditionalFormat:class'
    name: Excel.CellValueConditionalFormat
  - uid: 'excel!Excel.ColorScaleConditionalFormat:class'
    name: Excel.ColorScaleConditionalFormat
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.CustomConditionalFormat:class'
    name: Excel.CustomConditionalFormat
  - uid: 'excel!Excel.DataBarConditionalFormat:class'
    name: Excel.DataBarConditionalFormat
  - uid: 'excel!Excel.Range:class'
    name: Excel.Range
  - uid: 'excel!Excel.IconSetConditionalFormat:class'
    name: Excel.IconSetConditionalFormat
  - uid: 'excel!Excel.ConditionalFormat:class'
    name: Excel.ConditionalFormat
  - uid: 'excel!Excel.Interfaces.ConditionalFormatLoadOptions:interface'
    name: Excel.Interfaces.ConditionalFormatLoadOptions
  - uid: 'excel!Excel.PresetCriteriaConditionalFormat:class'
    name: Excel.PresetCriteriaConditionalFormat
  - uid: 'excel!Excel.Interfaces.ConditionalFormatUpdateData:interface'
    name: Interfaces.ConditionalFormatUpdateData
  - uid: 'excel!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'excel!Excel.TextConditionalFormat:class'
    name: Excel.TextConditionalFormat
  - uid: 'excel!Excel.Interfaces.ConditionalFormatData:interface'
    name: Excel.Interfaces.ConditionalFormatData
  - uid: 'excel!Excel.TopBottomConditionalFormat:class'
    name: Excel.TopBottomConditionalFormat
  - uid: 'excel!Excel.ConditionalFormat#type~0:complex'
    name: Excel.ConditionalFormatType | "Custom" | "DataBar" | "ColorScale" | "IconSet" | "TopBottom" | "PresetCriteria" | "ContainsText" | "CellValue"
    fullName: Excel.ConditionalFormatType | "Custom" | "DataBar" | "ColorScale" | "IconSet" | "TopBottom" | "PresetCriteria" | "ContainsText" | "CellValue"
    spec.typeScript:
      - uid: 'excel!Excel.ConditionalFormatType:enum'
        name: Excel.ConditionalFormatType
        fullName: Excel.ConditionalFormatType
      - name: ' | "Custom" | "DataBar" | "ColorScale" | "IconSet" | "TopBottom" | "PresetCriteria" | "ContainsText" | "CellValue"'
        fullName: ' | "Custom" | "DataBar" | "ColorScale" | "IconSet" | "TopBottom" | "PresetCriteria" | "ContainsText" | "CellValue"'