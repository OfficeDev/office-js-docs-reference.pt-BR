### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.RangeFont:class'
    summary: |-
      <span data-ttu-id="7f54d-101">Esse objeto representa os atributos de fonte de um objeto, como nome, tamanho, cor, dentre outros.</span><span class="sxs-lookup"><span data-stu-id="7f54d-101">This object represents the font attributes (font name, font size, color, etc.) for an object.</span></span>

      <span data-ttu-id="7f54d-102">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7f54d-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.RangeFont
    fullName: Excel.RangeFont
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.RangeFont#bold:member'
      - 'excel!Excel.RangeFont#color:member'
      - 'excel!Excel.RangeFont#context:member'
      - 'excel!Excel.RangeFont#italic:member'
      - 'excel!Excel.RangeFont#load:member(1)'
      - 'excel!Excel.RangeFont#load:member(2)'
      - 'excel!Excel.RangeFont#load:member(3)'
      - 'excel!Excel.RangeFont#name:member'
      - 'excel!Excel.RangeFont#set:member(1)'
      - 'excel!Excel.RangeFont#set:member(2)'
      - 'excel!Excel.RangeFont#size:member'
      - 'excel!Excel.RangeFont#toJSON:member(1)'
      - 'excel!Excel.RangeFont#underline:member'
  - uid: 'excel!Excel.RangeFont#bold:member'
    summary: |-
      <span data-ttu-id="7f54d-103">Representa o status da fonte em negrito.</span><span class="sxs-lookup"><span data-stu-id="7f54d-103">Represents the bold status of font.</span></span>

      <span data-ttu-id="7f54d-104">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7f54d-104">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: bold
    fullName: bold
    langs:
      - typeScript
    type: property
    syntax:
      content: 'bold: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.RangeFont#color:member'
    summary: |-
      <span data-ttu-id="7f54d-105">Representação de código de cor HTML para a cor do texto.</span><span class="sxs-lookup"><span data-stu-id="7f54d-105">HTML color code representation of the text color.</span></span> <span data-ttu-id="7f54d-106">Por exemplo</span><span class="sxs-lookup"><span data-stu-id="7f54d-106">E.g.</span></span> <span data-ttu-id="7f54d-107">\#FF0000 representa vermelho.</span><span class="sxs-lookup"><span data-stu-id="7f54d-107">\#FF0000 represents Red.</span></span>

      <span data-ttu-id="7f54d-108">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7f54d-108">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: color
    fullName: color
    langs:
      - typeScript
    type: property
    syntax:
      content: 'color: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.RangeFont#context:member'
    summary: <span data-ttu-id="7f54d-109">O contexto de solicitação associado ao objeto.</span><span class="sxs-lookup"><span data-stu-id="7f54d-109">The request context associated with the object.</span></span> <span data-ttu-id="7f54d-110">Isso conecta o processo do suplemento ao processo do aplicativo host do Office.</span><span class="sxs-lookup"><span data-stu-id="7f54d-110">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.RangeFont#italic:member'
    summary: |-
      <span data-ttu-id="7f54d-111">Representa o status da fonte em itálico.</span><span class="sxs-lookup"><span data-stu-id="7f54d-111">Represents the italic status of the font.</span></span>

      <span data-ttu-id="7f54d-112">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7f54d-112">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: italic
    fullName: italic
    langs:
      - typeScript
    type: property
    syntax:
      content: 'italic: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.RangeFont#load:member(1)'
    summary: <span data-ttu-id="7f54d-113">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="7f54d-113">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="7f54d-114">Você deve chamar "context.sync()" antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="7f54d-114">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="7f54d-115">Além dessa assinatura, este método tem as seguintes assinaturas:</span><span class="sxs-lookup"><span data-stu-id="7f54d-115">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="7f54d-116">`load(option?: string | string[]): Excel.RangeFont`-Where Option é uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="7f54d-116">`load(option?: string | string[]): Excel.RangeFont` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="7f54d-117">`load(option?: { select?: string; expand?: string; }): Excel.RangeFont`-Onde Option. Select é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades a serem carregadas, e Options. Expand é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades de navegação a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="7f54d-117">`load(option?: { select?: string; expand?: string; }): Excel.RangeFont` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="7f54d-118">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.RangeFont`– Disponível somente nos tipos de coleção.</span><span class="sxs-lookup"><span data-stu-id="7f54d-118">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.RangeFont` - Only available on collection types.</span></span> <span data-ttu-id="7f54d-119">É semelhante à assinatura anterior.</span><span class="sxs-lookup"><span data-stu-id="7f54d-119">It is similar to the preceding signature.</span></span> <span data-ttu-id="7f54d-120">Option. Top especifica o número máximo de itens de coleta que podem ser incluídos no resultado.</span><span class="sxs-lookup"><span data-stu-id="7f54d-120">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="7f54d-121">Option. Skip especifica o número de itens que devem ser ignorados e não incluídos no resultado.</span><span class="sxs-lookup"><span data-stu-id="7f54d-121">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="7f54d-122">Se Option. Top for especificado, o conjunto de resultados será iniciado depois de ignorar o número de itens especificado.</span><span class="sxs-lookup"><span data-stu-id="7f54d-122">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.RangeFontLoadOptions): Excel.RangeFont;'
      return:
        type:
          - 'excel!Excel.RangeFont:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'excel!Excel.Interfaces.RangeFontLoadOptions:interface'
  - uid: 'excel!Excel.RangeFont#load:member(2)'
    summary: <span data-ttu-id="7f54d-123">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="7f54d-123">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="7f54d-124">Você deve chamar `context.sync()` antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="7f54d-124">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.RangeFont;'
      return:
        type:
          - 'excel!Excel.RangeFont:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="7f54d-125">Exemplos</span><span class="sxs-lookup"><span data-stu-id="7f54d-125">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var sheetName = "Sheet1";
              var rangeAddress = "F:G";
              var worksheet = ctx.workbook.worksheets.getItem(sheetName);
              var range = worksheet.getRange(rangeAddress);
              var rangeFont = range.format.font;
              rangeFont.load('name');
              return ctx.sync().then(function() {
                  console.log(rangeFont.name);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          // The example below sets font name. 
          Excel.run(function (ctx) { 
              var sheetName = "Sheet1";
              var rangeAddress = "F:G";
              var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeAddress);
              range.format.font.name = 'Times New Roman';
              return ctx.sync(); 
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="7f54d-126">Uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="7f54d-126">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.RangeFont#load:member(3)'
    summary: <span data-ttu-id="7f54d-127">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="7f54d-127">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="7f54d-128">Você deve chamar `context.sync()` antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="7f54d-128">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.RangeFont;'
      return:
        type:
          - 'excel!Excel.RangeFont:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="7f54d-129">Onde propertyNamesAndPaths. Select é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades a serem carregadas e propertyNamesAndPaths. Expand é uma sequência de caracteres delimitada por vírgula que especifica as propriedades de navegação a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="7f54d-129">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: 'excel!Excel.RangeFont#name:member'
    summary: |-
      <span data-ttu-id="7f54d-130">Nome da fonte (por exemplo, "Calibri")</span><span class="sxs-lookup"><span data-stu-id="7f54d-130">Font name (e.g. "Calibri")</span></span>

      <span data-ttu-id="7f54d-131">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7f54d-131">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: name
    fullName: name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'name: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.RangeFont#set:member(1)'
    summary: '<span data-ttu-id="7f54d-132">Define várias propriedades de um objeto ao mesmo tempo.</span><span class="sxs-lookup"><span data-stu-id="7f54d-132">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="7f54d-133">Você pode passar um objeto simples com as propriedades apropriadas ou outro objeto API do mesmo tipo.</span><span class="sxs-lookup"><span data-stu-id="7f54d-133">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="7f54d-134">Este método tem a seguinte assinatura adicional:</span><span class="sxs-lookup"><span data-stu-id="7f54d-134">This method has the following additional signature:</span></span>

      `set(properties: Excel.RangeFont): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.RangeFontUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="7f54d-135">Um objeto JavaScript com propriedades que são estruturadas isomorphically para as propriedades do objeto no qual o método é chamado.</span><span class="sxs-lookup"><span data-stu-id="7f54d-135">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - 'excel!Excel.Interfaces.RangeFontUpdateData:interface'
        - id: options
          description: <span data-ttu-id="7f54d-136">Fornece uma opção para suprimir erros se o objeto Properties tentar definir qualquer propriedade somente leitura.</span><span class="sxs-lookup"><span data-stu-id="7f54d-136">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - 'excel!OfficeExtension.UpdateOptions:interface'
  - uid: 'excel!Excel.RangeFont#set:member(2)'
    summary: '<span data-ttu-id="7f54d-137">Define várias propriedades no objeto ao mesmo tempo, com base em um objeto carregado existente.</span><span class="sxs-lookup"><span data-stu-id="7f54d-137">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.RangeFont): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'excel!Excel.RangeFont:class'
  - uid: 'excel!Excel.RangeFont#size:member'
    summary: |-
      <span data-ttu-id="7f54d-138">Font Size</span><span class="sxs-lookup"><span data-stu-id="7f54d-138">Font size.</span></span>

      <span data-ttu-id="7f54d-139">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7f54d-139">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: size
    fullName: size
    langs:
      - typeScript
    type: property
    syntax:
      content: 'size: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.RangeFont#toJSON:member(1)'
    summary: '<span data-ttu-id="7f54d-140">Substitui o método `toJSON()` JavaScript para fornecer uma saída mais útil quando um objeto API é passado para`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="7f54d-140">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="7f54d-141">.</span><span class="sxs-lookup"><span data-stu-id="7f54d-141"></span></span> <span data-ttu-id="7f54d-142">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="7f54d-142"></span></span><!-- --><span data-ttu-id="7f54d-143">, por sua vez, chama `toJSON` o método do objeto que é passado para ele.) Enquanto o objeto Excel. RangeFont original é um objeto API, o `toJSON` método retorna um objeto JavaScript simples (digitado como`Excel.Interfaces.RangeFontData`</span><span class="sxs-lookup"><span data-stu-id="7f54d-143">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.RangeFont object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.RangeFontData`</span></span><!-- --><span data-ttu-id="7f54d-144">) que contém cópias superficiais de qualquer propriedade filho carregada do objeto original.</span><span class="sxs-lookup"><span data-stu-id="7f54d-144">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.RangeFontData;'
      return:
        type:
          - 'excel!Excel.Interfaces.RangeFontData:interface'
        description: ''
  - uid: 'excel!Excel.RangeFont#underline:member'
    summary: |-
      <span data-ttu-id="7f54d-145">Tipo de sublinhado aplicado à fonte.</span><span class="sxs-lookup"><span data-stu-id="7f54d-145">Type of underline applied to the font.</span></span> <span data-ttu-id="7f54d-146">Consulte Excel. RangeUnderlineStyle para obter detalhes.</span><span class="sxs-lookup"><span data-stu-id="7f54d-146">See Excel.RangeUnderlineStyle for details.</span></span>

      <span data-ttu-id="7f54d-147">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7f54d-147">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: underline
    fullName: underline
    langs:
      - typeScript
    type: property
    syntax:
      content: 'underline: Excel.RangeUnderlineStyle | "None" | "Single" | "Double" | "SingleAccountant" | "DoubleAccountant";'
      return:
        type:
          - 'excel!Excel.RangeFont#underline~0:complex'
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.RangeFont:class'
    name: Excel.RangeFont
  - uid: 'excel!Excel.Interfaces.RangeFontLoadOptions:interface'
    name: Excel.Interfaces.RangeFontLoadOptions
  - uid: 'excel!Excel.Interfaces.RangeFontUpdateData:interface'
    name: Interfaces.RangeFontUpdateData
  - uid: 'excel!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'excel!Excel.Interfaces.RangeFontData:interface'
    name: Excel.Interfaces.RangeFontData
  - uid: 'excel!Excel.RangeFont#underline~0:complex'
    name: Excel.RangeUnderlineStyle | "None" | "Single" | "Double" | "SingleAccountant" | "DoubleAccountant"
    fullName: Excel.RangeUnderlineStyle | "None" | "Single" | "Double" | "SingleAccountant" | "DoubleAccountant"
    spec.typeScript:
      - uid: 'excel!Excel.RangeUnderlineStyle:enum'
        name: Excel.RangeUnderlineStyle
        fullName: Excel.RangeUnderlineStyle
      - name: ' | "None" | "Single" | "Double" | "SingleAccountant" | "DoubleAccountant"'
        fullName: ' | "None" | "Single" | "Double" | "SingleAccountant" | "DoubleAccountant"'