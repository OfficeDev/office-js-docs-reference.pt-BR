### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.ConditionalDataBarPositiveFormat:class'
    summary: |-
      <span data-ttu-id="d1d1a-101">Representa um formato de DataBar de formatação condicional para o lado positivo da barra de dados.</span><span class="sxs-lookup"><span data-stu-id="d1d1a-101">Represents a conditional format DataBar Format for the positive side of the data bar.</span></span>

      <span data-ttu-id="d1d1a-102">\[[Conjunto de APIs: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d1d1a-102">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.ConditionalDataBarPositiveFormat
    fullName: Excel.ConditionalDataBarPositiveFormat
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.ConditionalDataBarPositiveFormat#borderColor:member'
      - 'excel!Excel.ConditionalDataBarPositiveFormat#context:member'
      - 'excel!Excel.ConditionalDataBarPositiveFormat#fillColor:member'
      - 'excel!Excel.ConditionalDataBarPositiveFormat#gradientFill:member'
      - 'excel!Excel.ConditionalDataBarPositiveFormat#load:member(1)'
      - 'excel!Excel.ConditionalDataBarPositiveFormat#load:member(2)'
      - 'excel!Excel.ConditionalDataBarPositiveFormat#load:member(3)'
      - 'excel!Excel.ConditionalDataBarPositiveFormat#set:member(1)'
      - 'excel!Excel.ConditionalDataBarPositiveFormat#set:member(2)'
      - 'excel!Excel.ConditionalDataBarPositiveFormat#toJSON:member(1)'
  - uid: 'excel!Excel.ConditionalDataBarPositiveFormat#borderColor:member'
    summary: |-
      <span data-ttu-id="d1d1a-103">Código de cor HTML que representa a cor da linha de borda, da \#forma RRGGBB (por exemplo, "FFA500") ou como uma cor de HTML nomeada (por exemplo, "laranja").</span><span class="sxs-lookup"><span data-stu-id="d1d1a-103">HTML color code representing the color of the border line, of the form \#RRGGBB (e.g. "FFA500") or as a named HTML color (e.g. "orange").</span></span> <span data-ttu-id="d1d1a-104">"" (cadeia de caracteres vazia) se nenhuma borda estiver presente ou definida.</span><span class="sxs-lookup"><span data-stu-id="d1d1a-104">"" (empty string) if no border is present or set.</span></span>

      <span data-ttu-id="d1d1a-105">\[[Conjunto de APIs: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d1d1a-105">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: borderColor
    fullName: borderColor
    langs:
      - typeScript
    type: property
    syntax:
      content: 'borderColor: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.ConditionalDataBarPositiveFormat#context:member'
    summary: <span data-ttu-id="d1d1a-106">O contexto de solicitação associado ao objeto.</span><span class="sxs-lookup"><span data-stu-id="d1d1a-106">The request context associated with the object.</span></span> <span data-ttu-id="d1d1a-107">Isso conecta o processo do suplemento ao processo do aplicativo host do Office.</span><span class="sxs-lookup"><span data-stu-id="d1d1a-107">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.ConditionalDataBarPositiveFormat#fillColor:member'
    summary: |-
      <span data-ttu-id="d1d1a-108">Código de cor HTML que representa a cor de preenchimento, \#da forma RRGGBB (por exemplo, "FFA500") ou como uma cor HTML nomeada (por exemplo, "laranja").</span><span class="sxs-lookup"><span data-stu-id="d1d1a-108">HTML color code representing the fill color, of the form \#RRGGBB (e.g. "FFA500") or as a named HTML color (e.g. "orange").</span></span>

      <span data-ttu-id="d1d1a-109">\[[Conjunto de APIs: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d1d1a-109">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: fillColor
    fullName: fillColor
    langs:
      - typeScript
    type: property
    syntax:
      content: 'fillColor: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.ConditionalDataBarPositiveFormat#gradientFill:member'
    summary: |-
      <span data-ttu-id="d1d1a-110">Representação booliana para indicar se a DataBar tem um gradiente ou não.</span><span class="sxs-lookup"><span data-stu-id="d1d1a-110">Boolean representation of whether or not the DataBar has a gradient.</span></span>

      <span data-ttu-id="d1d1a-111">\[[Conjunto de APIs: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d1d1a-111">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: gradientFill
    fullName: gradientFill
    langs:
      - typeScript
    type: property
    syntax:
      content: 'gradientFill: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.ConditionalDataBarPositiveFormat#load:member(1)'
    summary: <span data-ttu-id="d1d1a-112">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="d1d1a-112">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="d1d1a-113">Você deve chamar `context.sync()` antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="d1d1a-113">You must call `context.sync()` before reading the properties.</span></span>
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.ConditionalDataBarPositiveFormatLoadOptions): Excel.ConditionalDataBarPositiveFormat;'
      return:
        type:
          - 'excel!Excel.ConditionalDataBarPositiveFormat:class'
        description: ''
      parameters:
        - id: options
          description: <span data-ttu-id="d1d1a-114">Fornece opções para as propriedades do objeto a ser carregado.</span><span class="sxs-lookup"><span data-stu-id="d1d1a-114">Provides options for which properties of the object to load.</span></span>
          type:
            - 'excel!Excel.Interfaces.ConditionalDataBarPositiveFormatLoadOptions:interface'
  - uid: 'excel!Excel.ConditionalDataBarPositiveFormat#load:member(2)'
    summary: <span data-ttu-id="d1d1a-115">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="d1d1a-115">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="d1d1a-116">Você deve chamar `context.sync()` antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="d1d1a-116">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.ConditionalDataBarPositiveFormat;'
      return:
        type:
          - 'excel!Excel.ConditionalDataBarPositiveFormat:class'
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="d1d1a-117">Uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="d1d1a-117">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.ConditionalDataBarPositiveFormat#load:member(3)'
    summary: <span data-ttu-id="d1d1a-118">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="d1d1a-118">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="d1d1a-119">Você deve chamar `context.sync()` antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="d1d1a-119">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.ConditionalDataBarPositiveFormat;
      return:
        type:
          - 'excel!Excel.ConditionalDataBarPositiveFormat:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="d1d1a-120">`propertyNamesAndPaths.select`é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades a serem `propertyNamesAndPaths.expand` carregadas e é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades de navegação a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="d1d1a-120">`propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - |-
              {
                          select?: string;
                          expand?: string;
                      }
  - uid: 'excel!Excel.ConditionalDataBarPositiveFormat#set:member(1)'
    summary: '<span data-ttu-id="d1d1a-121">Define várias propriedades de um objeto ao mesmo tempo.</span><span class="sxs-lookup"><span data-stu-id="d1d1a-121">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="d1d1a-122">Você pode passar um objeto simples com as propriedades apropriadas ou outro objeto API do mesmo tipo.</span><span class="sxs-lookup"><span data-stu-id="d1d1a-122">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="d1d1a-123">Este método tem a seguinte assinatura adicional:</span><span class="sxs-lookup"><span data-stu-id="d1d1a-123">This method has the following additional signature:</span></span>

      `set(properties: Excel.ConditionalDataBarPositiveFormat): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.ConditionalDataBarPositiveFormatUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="d1d1a-124">Um objeto JavaScript com propriedades que são estruturadas isomorphically para as propriedades do objeto no qual o método é chamado.</span><span class="sxs-lookup"><span data-stu-id="d1d1a-124">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - 'excel!Excel.Interfaces.ConditionalDataBarPositiveFormatUpdateData:interface'
        - id: options
          description: <span data-ttu-id="d1d1a-125">Fornece uma opção para suprimir erros se o objeto Properties tentar definir qualquer propriedade somente leitura.</span><span class="sxs-lookup"><span data-stu-id="d1d1a-125">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - 'excel!OfficeExtension.UpdateOptions:interface'
  - uid: 'excel!Excel.ConditionalDataBarPositiveFormat#set:member(2)'
    summary: '<span data-ttu-id="d1d1a-126">Define várias propriedades no objeto ao mesmo tempo, com base em um objeto carregado existente.</span><span class="sxs-lookup"><span data-stu-id="d1d1a-126">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.ConditionalDataBarPositiveFormat): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'excel!Excel.ConditionalDataBarPositiveFormat:class'
  - uid: 'excel!Excel.ConditionalDataBarPositiveFormat#toJSON:member(1)'
    summary: '<span data-ttu-id="d1d1a-127">Substitui o método `toJSON()` JavaScript para fornecer uma saída mais útil quando um objeto API é passado para`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="d1d1a-127">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="d1d1a-128">.</span><span class="sxs-lookup"><span data-stu-id="d1d1a-128"></span></span> <span data-ttu-id="d1d1a-129">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="d1d1a-129"></span></span><!-- --><span data-ttu-id="d1d1a-130">, por sua vez, chama `toJSON` o método do objeto que é passado para ele.) Enquanto o objeto Excel. ConditionalDataBarPositiveFormat original é um objeto API, o `toJSON` método retorna um objeto JavaScript simples (digitado como`Excel.Interfaces.ConditionalDataBarPositiveFormatData`</span><span class="sxs-lookup"><span data-stu-id="d1d1a-130">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.ConditionalDataBarPositiveFormat object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ConditionalDataBarPositiveFormatData`</span></span><!-- --><span data-ttu-id="d1d1a-131">) que contém cópias superficiais de qualquer propriedade filho carregada do objeto original.</span><span class="sxs-lookup"><span data-stu-id="d1d1a-131">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.ConditionalDataBarPositiveFormatData;'
      return:
        type:
          - 'excel!Excel.Interfaces.ConditionalDataBarPositiveFormatData:interface'
        description: ''
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.ConditionalDataBarPositiveFormat:class'
    name: Excel.ConditionalDataBarPositiveFormat
  - uid: 'excel!Excel.Interfaces.ConditionalDataBarPositiveFormatLoadOptions:interface'
    name: Excel.Interfaces.ConditionalDataBarPositiveFormatLoadOptions
  - uid: 'excel!Excel.Interfaces.ConditionalDataBarPositiveFormatUpdateData:interface'
    name: Interfaces.ConditionalDataBarPositiveFormatUpdateData
  - uid: 'excel!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'excel!Excel.Interfaces.ConditionalDataBarPositiveFormatData:interface'
    name: Excel.Interfaces.ConditionalDataBarPositiveFormatData