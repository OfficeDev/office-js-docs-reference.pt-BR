### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.Table:class'
    summary: |-
      <span data-ttu-id="59892-101">Representa uma tabela do Excel.</span><span class="sxs-lookup"><span data-stu-id="59892-101">Represents an Excel table.</span></span> <span data-ttu-id="59892-102">Para saber mais sobre o modelo de objeto de tabela, leia [trabalhar com tabelas usando a API JavaScript do Excel](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-tables)</span><span class="sxs-lookup"><span data-stu-id="59892-102">To learn more about the table object model, read [Work with tables using the Excel JavaScript API](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-tables)</span></span><!-- --><span data-ttu-id="59892-103">.</span><span class="sxs-lookup"><span data-stu-id="59892-103"></span></span>

      <span data-ttu-id="59892-104">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="59892-104">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.Table
    fullName: Excel.Table
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.Table#clearFilters:member(1)'
      - 'excel!Excel.Table#columns:member'
      - 'excel!Excel.Table#context:member'
      - 'excel!Excel.Table#convertToRange:member(1)'
      - 'excel!Excel.Table#delete:member(1)'
      - 'excel!Excel.Table#getDataBodyRange:member(1)'
      - 'excel!Excel.Table#getHeaderRowRange:member(1)'
      - 'excel!Excel.Table#getRange:member(1)'
      - 'excel!Excel.Table#getTotalRowRange:member(1)'
      - 'excel!Excel.Table#id:member'
      - 'excel!Excel.Table#load:member(1)'
      - 'excel!Excel.Table#load:member(2)'
      - 'excel!Excel.Table#load:member(3)'
      - 'excel!Excel.Table#name:member'
      - 'excel!Excel.Table#reapplyFilters:member(1)'
      - 'excel!Excel.Table#rows:member'
      - 'excel!Excel.Table#set:member(1)'
      - 'excel!Excel.Table#set:member(2)'
      - 'excel!Excel.Table#showHeaders:member'
      - 'excel!Excel.Table#showTotals:member'
      - 'excel!Excel.Table#sort:member'
      - 'excel!Excel.Table#style:member'
      - 'excel!Excel.Table#toJSON:member(1)'
      - 'excel!Excel.Table#worksheet:member'
  - uid: 'excel!Excel.Table#clearFilters:member(1)'
    summary: |-
      <span data-ttu-id="59892-105">Limpa todos os filtros aplicados à tabela no momento.</span><span class="sxs-lookup"><span data-stu-id="59892-105">Clears all the filters currently applied on the table.</span></span>

      <span data-ttu-id="59892-106">\[[Conjunto de APIs: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="59892-106">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: clearFilters()
    fullName: clearFilters()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clearFilters(): void;'
      return:
        type:
          - void
        description: ''
  - uid: 'excel!Excel.Table#columns:member'
    summary: |-
      <span data-ttu-id="59892-107">Representa uma coleção de todas as colunas na tabela.</span><span class="sxs-lookup"><span data-stu-id="59892-107">Represents a collection of all the columns in the table.</span></span> <span data-ttu-id="59892-108">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="59892-108">Read-only.</span></span>

      <span data-ttu-id="59892-109">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="59892-109">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: columns
    fullName: columns
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly columns: Excel.TableColumnCollection;'
      return:
        type:
          - 'excel!Excel.TableColumnCollection:class'
  - uid: 'excel!Excel.Table#context:member'
    summary: <span data-ttu-id="59892-110">O contexto de solicitação associado ao objeto.</span><span class="sxs-lookup"><span data-stu-id="59892-110">The request context associated with the object.</span></span> <span data-ttu-id="59892-111">Isso conecta o processo do suplemento ao processo do aplicativo host do Office.</span><span class="sxs-lookup"><span data-stu-id="59892-111">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.Table#convertToRange:member(1)'
    summary: |-
      <span data-ttu-id="59892-112">Converte a tabela em um intervalo de células normal.</span><span class="sxs-lookup"><span data-stu-id="59892-112">Converts the table into a normal range of cells.</span></span> <span data-ttu-id="59892-113">Todos os dados são preservados.</span><span class="sxs-lookup"><span data-stu-id="59892-113">All data is preserved.</span></span>

      <span data-ttu-id="59892-114">\[[Conjunto de APIs: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="59892-114">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: convertToRange()
    fullName: convertToRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'convertToRange(): Excel.Range;'
      return:
        type:
          - 'excel!Excel.Range:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="59892-115">Exemplos</span><span class="sxs-lookup"><span data-stu-id="59892-115">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var table = ctx.workbook.tables.getItem(tableName);
              table.convertToRange();
              return ctx.sync(); 
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'excel!Excel.Table#delete:member(1)'
    summary: |-
      <span data-ttu-id="59892-116">Exclui a tabela.</span><span class="sxs-lookup"><span data-stu-id="59892-116">Deletes the table.</span></span>

      <span data-ttu-id="59892-117">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="59892-117">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="59892-118">Exemplos</span><span class="sxs-lookup"><span data-stu-id="59892-118">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var table = ctx.workbook.tables.getItem(tableName);
              table.delete();
              return ctx.sync(); 
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'excel!Excel.Table#getDataBodyRange:member(1)'
    summary: |-
      <span data-ttu-id="59892-119">Obtém o objeto de intervalo associado ao corpo de dados da tabela.</span><span class="sxs-lookup"><span data-stu-id="59892-119">Gets the range object associated with the data body of the table.</span></span>

      <span data-ttu-id="59892-120">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="59892-120">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getDataBodyRange()
    fullName: getDataBodyRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getDataBodyRange(): Excel.Range;'
      return:
        type:
          - 'excel!Excel.Range:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="59892-121">Exemplos</span><span class="sxs-lookup"><span data-stu-id="59892-121">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var table = ctx.workbook.tables.getItem(tableName);
              var tableDataRange = table.getDataBodyRange();
              tableDataRange.load('address')
              return ctx.sync().then(function() {
                      console.log(tableDataRange.address);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'excel!Excel.Table#getHeaderRowRange:member(1)'
    summary: |-
      <span data-ttu-id="59892-122">Obtém o objeto de intervalo associado à linha de cabeçalho da tabela.</span><span class="sxs-lookup"><span data-stu-id="59892-122">Gets the range object associated with header row of the table.</span></span>

      <span data-ttu-id="59892-123">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="59892-123">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getHeaderRowRange()
    fullName: getHeaderRowRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getHeaderRowRange(): Excel.Range;'
      return:
        type:
          - 'excel!Excel.Range:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="59892-124">Exemplos</span><span class="sxs-lookup"><span data-stu-id="59892-124">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var table = ctx.workbook.tables.getItem(tableName);
              var tableHeaderRange = table.getHeaderRowRange();
              tableHeaderRange.load('address');
              return ctx.sync().then(function() {
                  console.log(tableHeaderRange.address);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'excel!Excel.Table#getRange:member(1)'
    summary: |-
      <span data-ttu-id="59892-125">Obtém o objeto de intervalo associado a toda a tabela.</span><span class="sxs-lookup"><span data-stu-id="59892-125">Gets the range object associated with the entire table.</span></span>

      <span data-ttu-id="59892-126">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="59892-126">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getRange()
    fullName: getRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRange(): Excel.Range;'
      return:
        type:
          - 'excel!Excel.Range:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="59892-127">Exemplos</span><span class="sxs-lookup"><span data-stu-id="59892-127">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var table = ctx.workbook.tables.getItem(tableName);
              var tableRange = table.getRange();
              tableRange.load('address');    
              return ctx.sync().then(function() {
                      console.log(tableRange.address);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'excel!Excel.Table#getTotalRowRange:member(1)'
    summary: |-
      <span data-ttu-id="59892-128">Obtém o objeto de intervalo associado à linha de totais da tabela.</span><span class="sxs-lookup"><span data-stu-id="59892-128">Gets the range object associated with totals row of the table.</span></span>

      <span data-ttu-id="59892-129">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="59892-129">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getTotalRowRange()
    fullName: getTotalRowRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getTotalRowRange(): Excel.Range;'
      return:
        type:
          - 'excel!Excel.Range:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="59892-130">Exemplos</span><span class="sxs-lookup"><span data-stu-id="59892-130">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var table = ctx.workbook.tables.getItem(tableName);
              var tableTotalsRange = table.getTotalRowRange();
              tableTotalsRange.load('address');    
              return ctx.sync().then(function() {
                      console.log(tableTotalsRange.address);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'excel!Excel.Table#id:member'
    summary: |-
      <span data-ttu-id="59892-p105">Retorna um valor que identifica de forma exclusiva a tabela em uma determinada pasta de trabalho. O valor do identificador permanece o mesmo, ainda que a tabela seja renomeada. Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="59892-p105">Returns a value that uniquely identifies the table in a given workbook. The value of the identifier remains the same even when the table is renamed. Read-only.</span></span>

      <span data-ttu-id="59892-134">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="59892-134">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.Table#load:member(1)'
    summary: <span data-ttu-id="59892-135">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="59892-135">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="59892-136">Você deve chamar `context.sync()` antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="59892-136">You must call `context.sync()` before reading the properties.</span></span>
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.TableLoadOptions): Excel.Table;'
      return:
        type:
          - 'excel!Excel.Table:class'
        description: ''
      parameters:
        - id: options
          description: <span data-ttu-id="59892-137">Fornece opções para as propriedades do objeto a ser carregado.</span><span class="sxs-lookup"><span data-stu-id="59892-137">Provides options for which properties of the object to load.</span></span>
          type:
            - 'excel!Excel.Interfaces.TableLoadOptions:interface'
  - uid: 'excel!Excel.Table#load:member(2)'
    summary: <span data-ttu-id="59892-138">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="59892-138">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="59892-139">Você deve chamar `context.sync()` antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="59892-139">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.Table;'
      return:
        type:
          - 'excel!Excel.Table:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="59892-140">Exemplos</span><span class="sxs-lookup"><span data-stu-id="59892-140">Examples</span></span>

          ```javascript
          // Get a table by name. 
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var table = ctx.workbook.tables.getItem(tableName);
              table.load('index')
              return ctx.sync().then(function() {
                      console.log(table.index);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          // Get a table by index.
          Excel.run(function (ctx) { 
              var index = 0;
              var table = ctx.workbook.tables.getItemAt(0);
              table.load('id')
              return ctx.sync().then(function() {
                      console.log(table.id);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          // Set table style. 
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var table = ctx.workbook.tables.getItem(tableName);
              table.name = 'Table1-Renamed';
              table.showTotals = false;
              table.style = 'TableStyleMedium2';
              table.load('tableStyle');
              return ctx.sync().then(function() {
                      console.log(table.style);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="59892-141">Uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="59892-141">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.Table#load:member(3)'
    summary: <span data-ttu-id="59892-142">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="59892-142">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="59892-143">Você deve chamar `context.sync()` antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="59892-143">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.Table;
      return:
        type:
          - 'excel!Excel.Table:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="59892-144">`propertyNamesAndPaths.select`é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades a serem `propertyNamesAndPaths.expand` carregadas e é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades de navegação a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="59892-144">`propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - |-
              {
                          select?: string;
                          expand?: string;
                      }
  - uid: 'excel!Excel.Table#name:member'
    summary: |-
      <span data-ttu-id="59892-145">Nome da tabela.</span><span class="sxs-lookup"><span data-stu-id="59892-145">Name of the table.</span></span>

      <span data-ttu-id="59892-146">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="59892-146">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: name
    fullName: name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'name: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.Table#reapplyFilters:member(1)'
    summary: |-
      <span data-ttu-id="59892-147">Aplica novamente todos os filtros à tabela.</span><span class="sxs-lookup"><span data-stu-id="59892-147">Reapplies all the filters currently on the table.</span></span>

      <span data-ttu-id="59892-148">\[[Conjunto de APIs: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="59892-148">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: reapplyFilters()
    fullName: reapplyFilters()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'reapplyFilters(): void;'
      return:
        type:
          - void
        description: ''
  - uid: 'excel!Excel.Table#rows:member'
    summary: |-
      <span data-ttu-id="59892-149">Representa uma coleção de todas as linhas na tabela.</span><span class="sxs-lookup"><span data-stu-id="59892-149">Represents a collection of all the rows in the table.</span></span> <span data-ttu-id="59892-150">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="59892-150">Read-only.</span></span>

      <span data-ttu-id="59892-151">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="59892-151">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: rows
    fullName: rows
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly rows: Excel.TableRowCollection;'
      return:
        type:
          - 'excel!Excel.TableRowCollection:class'
  - uid: 'excel!Excel.Table#set:member(1)'
    summary: '<span data-ttu-id="59892-152">Define várias propriedades de um objeto ao mesmo tempo.</span><span class="sxs-lookup"><span data-stu-id="59892-152">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="59892-153">Você pode passar um objeto simples com as propriedades apropriadas ou outro objeto API do mesmo tipo.</span><span class="sxs-lookup"><span data-stu-id="59892-153">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="59892-154">Este método tem a seguinte assinatura adicional:</span><span class="sxs-lookup"><span data-stu-id="59892-154">This method has the following additional signature:</span></span>

      `set(properties: Excel.Table): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.TableUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="59892-155">Um objeto JavaScript com propriedades que são estruturadas isomorphically para as propriedades do objeto no qual o método é chamado.</span><span class="sxs-lookup"><span data-stu-id="59892-155">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - 'excel!Excel.Interfaces.TableUpdateData:interface'
        - id: options
          description: <span data-ttu-id="59892-156">Fornece uma opção para suprimir erros se o objeto Properties tentar definir qualquer propriedade somente leitura.</span><span class="sxs-lookup"><span data-stu-id="59892-156">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - 'excel!OfficeExtension.UpdateOptions:interface'
  - uid: 'excel!Excel.Table#set:member(2)'
    summary: '<span data-ttu-id="59892-157">Define várias propriedades no objeto ao mesmo tempo, com base em um objeto carregado existente.</span><span class="sxs-lookup"><span data-stu-id="59892-157">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.Table): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'excel!Excel.Table:class'
  - uid: 'excel!Excel.Table#showHeaders:member'
    summary: |-
      <span data-ttu-id="59892-158">Indica se a linha do cabeçalho está visível ou não.</span><span class="sxs-lookup"><span data-stu-id="59892-158">Indicates whether the header row is visible or not.</span></span> <span data-ttu-id="59892-159">Esse valor pode ser definido para mostrar ou remover a linha do cabeçalho.</span><span class="sxs-lookup"><span data-stu-id="59892-159">This value can be set to show or remove the header row.</span></span>

      <span data-ttu-id="59892-160">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="59892-160">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: showHeaders
    fullName: showHeaders
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showHeaders: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.Table#showTotals:member'
    summary: |-
      <span data-ttu-id="59892-161">Indica se a linha do total está visível ou não.</span><span class="sxs-lookup"><span data-stu-id="59892-161">Indicates whether the total row is visible or not.</span></span> <span data-ttu-id="59892-162">Esse valor pode ser definido para mostrar ou remover a linha do total.</span><span class="sxs-lookup"><span data-stu-id="59892-162">This value can be set to show or remove the total row.</span></span>

      <span data-ttu-id="59892-163">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="59892-163">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: showTotals
    fullName: showTotals
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showTotals: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.Table#sort:member'
    summary: |-
      <span data-ttu-id="59892-164">Representa a classificação da tabela.</span><span class="sxs-lookup"><span data-stu-id="59892-164">Represents the sorting for the table.</span></span> <span data-ttu-id="59892-165">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="59892-165">Read-only.</span></span>

      <span data-ttu-id="59892-166">\[[Conjunto de APIs: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="59892-166">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: sort
    fullName: sort
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly sort: Excel.TableSort;'
      return:
        type:
          - 'excel!Excel.TableSort:class'
  - uid: 'excel!Excel.Table#style:member'
    summary: |-
      <span data-ttu-id="59892-167">Valor da constante que representa o estilo de Tabela.</span><span class="sxs-lookup"><span data-stu-id="59892-167">Constant value that represents the Table style.</span></span> <span data-ttu-id="59892-168">Os valores possíveis são: "TableStyleLight1" por meio de "TableStyleLight21", "TableStyleMedium1" até "TableStyleMedium28", "TableStyleStyleDark1" até "TableStyleStyleDark11".</span><span class="sxs-lookup"><span data-stu-id="59892-168">Possible values are: "TableStyleLight1" through "TableStyleLight21", "TableStyleMedium1" through "TableStyleMedium28", "TableStyleStyleDark1" through "TableStyleStyleDark11".</span></span> <span data-ttu-id="59892-169">Também é possível usar um estilo definido pelo usuário que esteja presente na planilha.</span><span class="sxs-lookup"><span data-stu-id="59892-169">A custom user-defined style present in the workbook can also be specified.</span></span>

      <span data-ttu-id="59892-170">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="59892-170">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: style
    fullName: style
    langs:
      - typeScript
    type: property
    syntax:
      content: 'style: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.Table#toJSON:member(1)'
    summary: '<span data-ttu-id="59892-171">Substitui o método `toJSON()` JavaScript para fornecer uma saída mais útil quando um objeto API é passado para`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="59892-171">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="59892-172">.</span><span class="sxs-lookup"><span data-stu-id="59892-172"></span></span> <span data-ttu-id="59892-173">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="59892-173"></span></span><!-- --><span data-ttu-id="59892-174">, por sua vez, chama `toJSON` o método do objeto que é passado para ele.) Enquanto o objeto Excel. Table original é um objeto API, o `toJSON` método retorna um objeto JavaScript simples (digitado como`Excel.Interfaces.TableData`</span><span class="sxs-lookup"><span data-stu-id="59892-174">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.Table object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.TableData`</span></span><!-- --><span data-ttu-id="59892-175">) que contém cópias superficiais de qualquer propriedade filho carregada do objeto original.</span><span class="sxs-lookup"><span data-stu-id="59892-175">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.TableData;'
      return:
        type:
          - 'excel!Excel.Interfaces.TableData:interface'
        description: ''
  - uid: 'excel!Excel.Table#worksheet:member'
    summary: |-
      <span data-ttu-id="59892-176">A planilha que contém a tabela atual.</span><span class="sxs-lookup"><span data-stu-id="59892-176">The worksheet containing the current table.</span></span> <span data-ttu-id="59892-177">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="59892-177">Read-only.</span></span>

      <span data-ttu-id="59892-178">\[[Conjunto de APIs: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="59892-178">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: worksheet
    fullName: worksheet
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly worksheet: Excel.Worksheet;'
      return:
        type:
          - 'excel!Excel.Worksheet:class'
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.TableColumnCollection:class'
    name: Excel.TableColumnCollection
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.Range:class'
    name: Excel.Range
  - uid: 'excel!Excel.Table:class'
    name: Excel.Table
  - uid: 'excel!Excel.Interfaces.TableLoadOptions:interface'
    name: Excel.Interfaces.TableLoadOptions
  - uid: 'excel!Excel.TableRowCollection:class'
    name: Excel.TableRowCollection
  - uid: 'excel!Excel.Interfaces.TableUpdateData:interface'
    name: Interfaces.TableUpdateData
  - uid: 'excel!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'excel!Excel.TableSort:class'
    name: Excel.TableSort
  - uid: 'excel!Excel.Interfaces.TableData:interface'
    name: Excel.Interfaces.TableData
  - uid: 'excel!Excel.Worksheet:class'
    name: Excel.Worksheet