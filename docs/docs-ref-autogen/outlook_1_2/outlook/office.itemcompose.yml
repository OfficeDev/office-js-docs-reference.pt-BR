### YamlMime:UniversalReference
items:
  - uid: 'outlook!Office.ItemCompose:interface'
    summary: |-
      O modo de redação de [Office. Context. Mailbox. Item](xref:outlook!Office.Item:interface)<!-- -->.

      **Importante**: Este é um objeto interno do Outlook, não diretamente exposto por meio de interfaces existentes. Você deve tratá-lo como um modo de Office. Context. Mailbox. Item. Consulte a página [modelo de objeto](https://docs.microsoft.com/office/dev/add-ins/reference/objectmodel/requirement-set-1.2/office.context.mailbox.item) para obter mais informações.
    name: Office.ItemCompose
    fullName: Office.ItemCompose
    langs:
      - typeScript
    type: interface
    extends:
      - 'outlook!Office.Item:interface'
    package: outlook!
    children:
      - 'outlook!Office.ItemCompose#addFileAttachmentAsync:member(1)'
      - 'outlook!Office.ItemCompose#addFileAttachmentAsync:member(2)'
      - 'outlook!Office.ItemCompose#addItemAttachmentAsync:member(1)'
      - 'outlook!Office.ItemCompose#addItemAttachmentAsync:member(2)'
      - 'outlook!Office.ItemCompose#getSelectedDataAsync:member(1)'
      - 'outlook!Office.ItemCompose#getSelectedDataAsync:member(2)'
      - 'outlook!Office.ItemCompose#removeAttachmentAsync:member(1)'
      - 'outlook!Office.ItemCompose#removeAttachmentAsync:member(2)'
      - 'outlook!Office.ItemCompose#setSelectedDataAsync:member(1)'
      - 'outlook!Office.ItemCompose#setSelectedDataAsync:member(2)'
      - 'outlook!Office.ItemCompose#subject:member'
  - uid: 'outlook!Office.ItemCompose#addFileAttachmentAsync:member(1)'
    summary: |-
      Adiciona um arquivo a uma mensagem ou um compromisso como um anexo.

      O método addFileAttachmentAsync carrega o arquivo no URI especificado e anexa-o ao item no formulário de composição.

      Em seguida, você pode usar o identificador com o método removeAttachmentAsync para remover o anexo na mesma sessão.

      \[[Conjunto de APIs: caixa de correio 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **<!-- --> [Nível de permissão mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)**: ReadWriteItem

      **<!-- --> [Modo do Outlook aplicável](https://docs.microsoft.com/outlook/add-ins/#extension-points)**: redigir

      **Erros**:

      - AttachmentSizeExceeded: o anexo é maior do que o permitido.

      - FileTypeNotSupported: o anexo tem uma extensão que não é permitida.

      - NumberOfAttachmentsExceeded: a mensagem ou o compromisso possui muitos anexos.
    name: 'addFileAttachmentAsync(uri, attachmentName, options, callback)'
    fullName: 'addFileAttachmentAsync(uri, attachmentName, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addFileAttachmentAsync(uri: string, attachmentName: string, options?: Office.AsyncContextOptions & { isInline: boolean }, callback?: (asyncResult: Office.AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: uri
          description: O URI que fornece o local do arquivo anexado à mensagem ou compromisso. O comprimento máximo é de 2048 caracteres.
          type:
            - string
        - id: attachmentName
          description: O nome do anexo que é mostrado enquanto o anexo está sendo carregado. O tamanho máximo é de 255 caracteres.
          type:
            - string
        - id: options
          description: 'Opcional. Um objeto literal que contém uma ou mais das propriedades a seguir. asyncContext: os desenvolvedores podem fornecer qualquer objeto que desejarem acessar no método de retorno de chamada. IsInline: se true, indica que o anexo será mostrado embutido no corpo da mensagem e não deverá ser exibido na lista de anexos.'
          type:
            - 'outlook!Office.ItemCompose#addFileAttachmentAsync~0:complex'
        - id: callback
          description: 'Opcional. Quando o método for concluído, a função passada ao parâmetro callback será chamada com um único parâmetro do tipo Office. AsyncResult. Em caso de sucesso, o identificador do anexo será fornecido na propriedade asyncResult. Value. Se o carregamento do anexo falhar, o objeto asyncResult conterá um objeto Error que fornece uma descrição do erro.'
          type:
            - 'outlook!Office.ItemCompose#addFileAttachmentAsync~1:complex'
  - uid: 'outlook!Office.ItemCompose#addFileAttachmentAsync:member(2)'
    summary: |-
      Adiciona um arquivo a uma mensagem ou um compromisso como um anexo.

      O método addFileAttachmentAsync carrega o arquivo no URI especificado e anexa-o ao item no formulário de composição.

      Em seguida, você pode usar o identificador com o método removeAttachmentAsync para remover o anexo na mesma sessão.

      \[[Conjunto de APIs: caixa de correio 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **<!-- --> [Nível de permissão mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)**: ReadWriteItem

      **<!-- --> [Modo do Outlook aplicável](https://docs.microsoft.com/outlook/add-ins/#extension-points)**: redigir

      **Erros**:

      - AttachmentSizeExceeded: o anexo é maior do que o permitido.

      - FileTypeNotSupported: o anexo tem uma extensão que não é permitida.

      - NumberOfAttachmentsExceeded: a mensagem ou o compromisso possui muitos anexos.
    name: 'addFileAttachmentAsync(uri, attachmentName, callback)'
    fullName: 'addFileAttachmentAsync(uri, attachmentName, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addFileAttachmentAsync(uri: string, attachmentName: string, callback?: (asyncResult: Office.AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: uri
          description: O URI que fornece o local do arquivo anexado à mensagem ou compromisso. O comprimento máximo é de 2048 caracteres.
          type:
            - string
        - id: attachmentName
          description: O nome do anexo que é mostrado enquanto o anexo está sendo carregado. O tamanho máximo é de 255 caracteres.
          type:
            - string
        - id: callback
          description: 'Opcional. Quando o método for concluído, a função passada ao parâmetro callback será chamada com um único parâmetro do tipo Office. AsyncResult. Em caso de sucesso, o identificador do anexo será fornecido na propriedade asyncResult. Value. Se o carregamento do anexo falhar, o objeto asyncResult conterá um objeto Error que fornece uma descrição do erro.'
          type:
            - 'outlook!Office.ItemCompose#addFileAttachmentAsync~2:complex'
  - uid: 'outlook!Office.ItemCompose#addItemAttachmentAsync:member(1)'
    summary: |-
      Adiciona um item do Exchange, como uma mensagem, como anexo na mensagem ou no compromisso.

      O método addItemAttachmentAsync anexa o item com o identificador do Exchange especificado ao item no formulário de composição. Se você especificar um método de retorno de chamada, o método será chamado com um parâmetro, asyncResult, que contém o identificador de anexo ou um código que indica qualquer erro que ocorreu ao anexar o item. Você pode usar o parâmetro options para passar informações de estado para o método de retorno de chamada, se necessário.

      Em seguida, você pode usar o identificador com o método removeAttachmentAsync para remover o anexo na mesma sessão.

      Se o suplemento do Office estiver em execução no Outlook na Web, o método addItemAttachmentAsync poderá anexar itens a itens diferentes do item que você está editando; no entanto, isso não é suportado e não é recomendado.

      \[[Conjunto de APIs: caixa de correio 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **<!-- --> [Nível de permissão mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)**: ReadWriteItem

      **<!-- --> [Modo do Outlook aplicável](https://docs.microsoft.com/outlook/add-ins/#extension-points)**: redigir

      **Erros**:

      - NumberOfAttachmentsExceeded: a mensagem ou o compromisso possui muitos anexos.
    name: 'addItemAttachmentAsync(itemId, attachmentName, options, callback)'
    fullName: 'addItemAttachmentAsync(itemId, attachmentName, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addItemAttachmentAsync(itemId: any, attachmentName: string, options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: itemId
          description: O identificador do Exchange do item a anexar. O comprimento máximo é de 100 caracteres.
          type:
            - any
        - id: attachmentName
          description: O nome do anexo que é mostrado enquanto o anexo está sendo carregado. O tamanho máximo é de 255 caracteres.
          type:
            - string
        - id: options
          description: 'Opcional. Um objeto literal que contém uma ou mais das propriedades a seguir. asyncContext: os desenvolvedores podem fornecer qualquer objeto que desejarem acessar no método de retorno de chamada.'
          type:
            - 'outlook!Office.AsyncContextOptions:interface'
        - id: callback
          description: 'Opcional. Quando o método for concluído, a função passada ao parâmetro callback será chamada com um único parâmetro do tipo Office. AsyncResult. Em caso de sucesso, o identificador do anexo será fornecido na propriedade asyncResult. Value. Se a adição do anexo falhar, o objeto asyncResult conterá um objeto Error que fornece uma descrição do erro.'
          type:
            - 'outlook!Office.ItemCompose#addItemAttachmentAsync~0:complex'
  - uid: 'outlook!Office.ItemCompose#addItemAttachmentAsync:member(2)'
    summary: |-
      Adiciona um item do Exchange, como uma mensagem, como anexo na mensagem ou no compromisso.

      O método addItemAttachmentAsync anexa o item com o identificador do Exchange especificado ao item no formulário de composição. Se você especificar um método de retorno de chamada, o método será chamado com um parâmetro, asyncResult, que contém o identificador de anexo ou um código que indica qualquer erro que ocorreu ao anexar o item. Você pode usar o parâmetro options para passar informações de estado para o método de retorno de chamada, se necessário.

      Em seguida, você pode usar o identificador com o método removeAttachmentAsync para remover o anexo na mesma sessão.

      Se o suplemento do Office estiver em execução no Outlook na Web, o método addItemAttachmentAsync poderá anexar itens a itens diferentes do item que você está editando; no entanto, isso não é suportado e não é recomendado.

      \[[Conjunto de APIs: caixa de correio 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **<!-- --> [Nível de permissão mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)**: ReadWriteItem

      **<!-- --> [Modo do Outlook aplicável](https://docs.microsoft.com/outlook/add-ins/#extension-points)**: redigir

      **Erros**:

      - NumberOfAttachmentsExceeded: a mensagem ou o compromisso possui muitos anexos.
    name: 'addItemAttachmentAsync(itemId, attachmentName, callback)'
    fullName: 'addItemAttachmentAsync(itemId, attachmentName, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addItemAttachmentAsync(itemId: any, attachmentName: string, callback?: (asyncResult: Office.AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: itemId
          description: O identificador do Exchange do item a anexar. O comprimento máximo é de 100 caracteres.
          type:
            - any
        - id: attachmentName
          description: O nome do anexo que é mostrado enquanto o anexo está sendo carregado. O tamanho máximo é de 255 caracteres.
          type:
            - string
        - id: callback
          description: 'Opcional. Quando o método for concluído, a função passada ao parâmetro callback será chamada com um único parâmetro do tipo Office. AsyncResult. Em caso de sucesso, o identificador do anexo será fornecido na propriedade asyncResult. Value. Se a adição do anexo falhar, o objeto asyncResult conterá um objeto Error que fornece uma descrição do erro.'
          type:
            - 'outlook!Office.ItemCompose#addItemAttachmentAsync~1:complex'
  - uid: 'outlook!Office.ItemCompose#getSelectedDataAsync:member(1)'
    summary: |-
      Retorna de forma assíncrona os dados selecionados do assunto ou do corpo de uma mensagem.

      Se não houver seleção, mas o cursor estiver no corpo ou no assunto, o método retorna nulo para os dados selecionados. Se um campo que não seja o corpo ou o assunto for selecionado, o método retornará o erro InvalidSelection.

      Para acessar os dados selecionados do método de retorno de chamada, chame asyncResult. Value. Data. Para acessar a propriedade de origem proveniente da seleção, chame asyncResult. Value. SourceProperty, que será o corpo ou o assunto.

      \[[Conjunto de APIs: caixa de correio 1,2](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **<!-- --> [Nível de permissão mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)**: ReadWriteItem

      **<!-- --> [Modo do Outlook aplicável](https://docs.microsoft.com/outlook/add-ins/#extension-points)**: redigir
    name: 'getSelectedDataAsync(coercionType, options, callback)'
    fullName: 'getSelectedDataAsync(coercionType, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getSelectedDataAsync(coercionType: Office.CoercionType | string, options: Office.AsyncContextOptions, callback: (asyncResult: Office.AsyncResult<any>) => void): void;'
      return:
        type:
          - void
        description: Os dados selecionados como uma cadeia de caracteres com formato determinado por coercionType.
      parameters:
        - id: coercionType
          description: 'Solicita um formato para os dados. Se Text, o método retornará o texto sem formatação como uma cadeia de caracteres, removendo todas as marcas HTML presentes. Se HTML, o método retorna o texto selecionado, seja ele texto sem formatação ou HTML.'
          type:
            - 'outlook!Office.ItemCompose#getSelectedDataAsync~0:complex'
        - id: options
          description: 'Um objeto literal que contém uma ou mais das propriedades a seguir. asyncContext: os desenvolvedores podem fornecer qualquer objeto que desejarem acessar no método de retorno de chamada.'
          type:
            - 'outlook!Office.AsyncContextOptions:interface'
        - id: callback
          description: 'Quando o método for concluído, a função passada ao parâmetro callback será chamada com um único parâmetro do tipo Office. AsyncResult.'
          type:
            - 'outlook!Office.ItemCompose#getSelectedDataAsync~1:complex'
  - uid: 'outlook!Office.ItemCompose#getSelectedDataAsync:member(2)'
    summary: |-
      Retorna de forma assíncrona os dados selecionados do assunto ou do corpo de uma mensagem.

      Se não houver seleção, mas o cursor estiver no corpo ou no assunto, o método retorna nulo para os dados selecionados. Se um campo que não seja o corpo ou o assunto for selecionado, o método retornará o erro InvalidSelection.

      Para acessar os dados selecionados do método de retorno de chamada, chame asyncResult. Value. Data. Para acessar a propriedade de origem proveniente da seleção, chame asyncResult. Value. SourceProperty, que será o corpo ou o assunto.

      \[[Conjunto de APIs: caixa de correio 1,2](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **<!-- --> [Nível de permissão mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)**: ReadWriteItem

      **<!-- --> [Modo do Outlook aplicável](https://docs.microsoft.com/outlook/add-ins/#extension-points)**: redigir
    name: 'getSelectedDataAsync(coercionType, callback)'
    fullName: 'getSelectedDataAsync(coercionType, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getSelectedDataAsync(coercionType: Office.CoercionType | string, callback: (asyncResult: Office.AsyncResult<any>) => void): void;'
      return:
        type:
          - void
        description: Os dados selecionados como uma cadeia de caracteres com formato determinado por coercionType.
      parameters:
        - id: coercionType
          description: 'Solicita um formato para os dados. Se Text, o método retorna o texto sem formatação como uma cadeia de caracteres, removendo quaisquer marcas HTML presentes. Se HTML, o método retorna o texto selecionado, seja ele texto sem formatação ou HTML.'
          type:
            - 'outlook!Office.ItemCompose#getSelectedDataAsync~2:complex'
        - id: callback
          description: 'Quando o método for concluído, a função passada ao parâmetro callback será chamada com um único parâmetro do tipo Office. AsyncResult.'
          type:
            - 'outlook!Office.ItemCompose#getSelectedDataAsync~3:complex'
  - uid: 'outlook!Office.ItemCompose#removeAttachmentAsync:member(1)'
    summary: |-
      Remove um anexo de uma mensagem ou de um compromisso.

      O método removeAttachmentAsync remove o anexo com o identificador especificado do item. Como prática recomendada, deve-se usar o identificador do anexo para remover um anexo somente se o mesmo aplicativo de email tiver adicionado esse anexo na mesma sessão. No Outlook na Web e dispositivos móveis, o identificador de anexo é válido somente dentro da mesma sessão. Uma sessão termina quando o usuário fecha o aplicativo, ou se o usuário começa a redigir um formulário embutido e, em seguida, abre o formulário para continuar em uma janela separada.

      \[[Conjunto de APIs: caixa de correio 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **<!-- --> [Nível de permissão mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)**: ReadWriteItem

      **<!-- --> [Modo do Outlook aplicável](https://docs.microsoft.com/outlook/add-ins/#extension-points)**: redigir

      **Erros**:

      - InvalidAttachmentId: o identificador de anexo não existe.
    name: 'removeAttachmentAsync(attachmentId, options, callback)'
    fullName: 'removeAttachmentAsync(attachmentId, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removeAttachmentAsync(attachmentId: string, options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: attachmentId
          description: O identificador do anexo a remover.
          type:
            - string
        - id: options
          description: 'Opcional. Um objeto literal que contém uma ou mais das propriedades a seguir. asyncContext: os desenvolvedores podem fornecer qualquer objeto que desejarem acessar no método de retorno de chamada.'
          type:
            - 'outlook!Office.AsyncContextOptions:interface'
        - id: callback
          description: 'Opcional. Quando o método for concluído, a função passada ao parâmetro callback será chamada com um único parâmetro do tipo Office. AsyncResult. Se a remoção do anexo falhar, a propriedade asyncResult. Error conterá um código de erro com o motivo da falha.'
          type:
            - 'outlook!Office.ItemCompose#removeAttachmentAsync~0:complex'
  - uid: 'outlook!Office.ItemCompose#removeAttachmentAsync:member(2)'
    summary: |-
      Remove um anexo de uma mensagem ou de um compromisso.

      O método removeAttachmentAsync remove o anexo com o identificador especificado do item. Como prática recomendada, deve-se usar o identificador do anexo para remover um anexo somente se o mesmo aplicativo de email tiver adicionado esse anexo na mesma sessão. No Outlook na Web e dispositivos móveis, o identificador de anexo é válido somente dentro da mesma sessão. Uma sessão termina quando o usuário fecha o aplicativo, ou se o usuário começa a redigir um formulário embutido e, em seguida, abre o formulário para continuar em uma janela separada.

      \[[Conjunto de APIs: caixa de correio 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **<!-- --> [Nível de permissão mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)**: ReadWriteItem

      **<!-- --> [Modo do Outlook aplicável](https://docs.microsoft.com/outlook/add-ins/#extension-points)**: redigir

      **Erros**:

      - InvalidAttachmentId: o identificador de anexo não existe.
    name: 'removeAttachmentAsync(attachmentId, callback)'
    fullName: 'removeAttachmentAsync(attachmentId, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removeAttachmentAsync(attachmentId: string, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: attachmentId
          description: O identificador do anexo a remover.
          type:
            - string
        - id: callback
          description: 'Opcional. Quando o método for concluído, a função passada ao parâmetro callback será chamada com um único parâmetro do tipo Office. AsyncResult. Se a remoção do anexo falhar, a propriedade asyncResult. Error conterá um código de erro com o motivo da falha.'
          type:
            - 'outlook!Office.ItemCompose#removeAttachmentAsync~1:complex'
  - uid: 'outlook!Office.ItemCompose#setSelectedDataAsync:member(1)'
    summary: |-
      Insere de forma assíncrona os dados no corpo ou no assunto de uma mensagem.

      O método setSelectedDataAsync insere a cadeia de caracteres especificada no local do cursor no assunto ou no corpo do item ou, se o texto estiver selecionado no editor, substitui o texto selecionado. Se o cursor não estiver no campo Body ou subject, um erro será retornado. Após a inserção, o cursor é colocado no final do conteúdo inserido.

      \[[Conjunto de APIs: caixa de correio 1,2](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **<!-- --> [Nível de permissão mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)**: ReadWriteItem

      **<!-- --> [Modo do Outlook aplicável](https://docs.microsoft.com/outlook/add-ins/#extension-points)**: redigir

      **Erros**:

      - InvalidAttachmentId: o identificador de anexo não existe.
    name: 'setSelectedDataAsync(data, options, callback)'
    fullName: 'setSelectedDataAsync(data, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setSelectedDataAsync(data: string, options?: Office.AsyncContextOptions & CoercionTypeOptions, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: data
          description: 'Os dados a serem inseridos. Os dados não devem exceder 1.000.000 de caracteres. Se mais de 1 milhão caracteres forem passados, uma exceção ArgumentOutOfRange é lançada.'
          type:
            - string
        - id: options
          description: 'Opcional. Um objeto literal que contém uma ou mais das propriedades a seguir. asyncContext: os desenvolvedores podem fornecer qualquer objeto que desejarem acessar no método de retorno de chamada. coercionType: se Text, o estilo atual é aplicado no Outlook na Web e clientes de desktop. Se o campo for um editor de HTML, apenas os dados de texto são inseridos, mesmo se os dados forem HTML. Se HTML e o campo oferecer suporte a HTML (o assunto não), o estilo atual será aplicado no Outlook na Web e o estilo padrão será aplicado no Outlook em clientes de área de trabalho. Se o campo for um campo de texto, um erro InvalidDataFormat será retornado. Se coercionType não for definido, o resultado dependerá do campo: se o campo for HTML, o HTML será usado; Se o campo for texto, o texto sem formatação será usado.'
          type:
            - 'outlook!Office.ItemCompose#setSelectedDataAsync~0:complex'
        - id: callback
          description: 'Opcional. Quando o método for concluído, a função passada ao parâmetro callback será chamada com um único parâmetro do tipo Office. AsyncResult.'
          type:
            - 'outlook!Office.ItemCompose#setSelectedDataAsync~1:complex'
  - uid: 'outlook!Office.ItemCompose#setSelectedDataAsync:member(2)'
    summary: |-
      Insere de forma assíncrona os dados no corpo ou no assunto de uma mensagem.

      O método setSelectedDataAsync insere a cadeia de caracteres especificada no local do cursor no assunto ou no corpo do item ou, se o texto estiver selecionado no editor, substitui o texto selecionado. Se o cursor não estiver no campo Body ou subject, um erro será retornado. Após a inserção, o cursor é colocado no final do conteúdo inserido.

      \[[Conjunto de APIs: caixa de correio 1,2](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **<!-- --> [Nível de permissão mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)**: ReadWriteItem

      **<!-- --> [Modo do Outlook aplicável](https://docs.microsoft.com/outlook/add-ins/#extension-points)**: redigir

      **Erros**:

      - InvalidAttachmentId: o identificador de anexo não existe.
    name: 'setSelectedDataAsync(data, callback)'
    fullName: 'setSelectedDataAsync(data, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setSelectedDataAsync(data: string, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: data
          description: 'Os dados a serem inseridos. Os dados não devem exceder 1.000.000 de caracteres. Se mais de 1 milhão caracteres forem passados, uma exceção ArgumentOutOfRange é lançada.'
          type:
            - string
        - id: callback
          description: 'Opcional. Quando o método for concluído, a função passada ao parâmetro callback será chamada com um único parâmetro do tipo Office. AsyncResult.'
          type:
            - 'outlook!Office.ItemCompose#setSelectedDataAsync~2:complex'
  - uid: 'outlook!Office.ItemCompose#subject:member'
    summary: |-
      Obtém ou define a descrição que aparece no campo de assunto de um item.

      A propriedade Subject Obtém ou define o assunto completo do item, conforme enviado pelo servidor de email.

      A propriedade Subject retorna um objeto Subject que fornece métodos para obter e definir o assunto.

      \[[Conjunto de APIs: caixa de correio 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **<!-- --> [Nível de permissão mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)**: ReadItem

      **<!-- --> [Modo do Outlook aplicável](https://docs.microsoft.com/outlook/add-ins/#extension-points)**: redigir
    name: subject
    fullName: subject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'subject: Subject;'
      return:
        type:
          - 'outlook!Office.Subject:interface'
references:
  - uid: 'outlook!Office.Item:interface'
    name: Item
  - uid: 'outlook!Office.ItemCompose#addFileAttachmentAsync~0:complex'
    name: 'Office.AsyncContextOptions & { isInline: boolean }'
    fullName: 'Office.AsyncContextOptions & { isInline: boolean }'
    spec.typeScript:
      - uid: 'outlook!Office.AsyncContextOptions:interface'
        name: Office.AsyncContextOptions
        fullName: Office.AsyncContextOptions
      - name: ' & { isInline: boolean }'
        fullName: ' & { isInline: boolean }'
  - uid: 'outlook!Office.ItemCompose#addFileAttachmentAsync~1:complex'
    name: '(asyncResult: Office.AsyncResult<string>) => void'
    fullName: '(asyncResult: Office.AsyncResult<string>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <string>) => void
        fullName: <string>) => void
  - uid: 'outlook!Office.ItemCompose#addFileAttachmentAsync~2:complex'
    name: '(asyncResult: Office.AsyncResult<string>) => void'
    fullName: '(asyncResult: Office.AsyncResult<string>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <string>) => void
        fullName: <string>) => void
  - uid: 'outlook!Office.AsyncContextOptions:interface'
    name: Office.AsyncContextOptions
  - uid: 'outlook!Office.ItemCompose#addItemAttachmentAsync~0:complex'
    name: '(asyncResult: Office.AsyncResult<string>) => void'
    fullName: '(asyncResult: Office.AsyncResult<string>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <string>) => void
        fullName: <string>) => void
  - uid: 'outlook!Office.ItemCompose#addItemAttachmentAsync~1:complex'
    name: '(asyncResult: Office.AsyncResult<string>) => void'
    fullName: '(asyncResult: Office.AsyncResult<string>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <string>) => void
        fullName: <string>) => void
  - uid: 'outlook!Office.ItemCompose#getSelectedDataAsync~0:complex'
    name: Office.CoercionType | string
    fullName: Office.CoercionType | string
    spec.typeScript:
      - uid: 'outlook!Office.CoercionType:enum'
        name: Office.CoercionType
        fullName: Office.CoercionType
      - name: ' | string'
        fullName: ' | string'
  - uid: 'outlook!Office.ItemCompose#getSelectedDataAsync~1:complex'
    name: '(asyncResult: Office.AsyncResult<any>) => void'
    fullName: '(asyncResult: Office.AsyncResult<any>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <any>) => void
        fullName: <any>) => void
  - uid: 'outlook!Office.ItemCompose#getSelectedDataAsync~2:complex'
    name: Office.CoercionType | string
    fullName: Office.CoercionType | string
    spec.typeScript:
      - uid: 'outlook!Office.CoercionType:enum'
        name: Office.CoercionType
        fullName: Office.CoercionType
      - name: ' | string'
        fullName: ' | string'
  - uid: 'outlook!Office.ItemCompose#getSelectedDataAsync~3:complex'
    name: '(asyncResult: Office.AsyncResult<any>) => void'
    fullName: '(asyncResult: Office.AsyncResult<any>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <any>) => void
        fullName: <any>) => void
  - uid: 'outlook!Office.ItemCompose#removeAttachmentAsync~0:complex'
    name: '(asyncResult: Office.AsyncResult<void>) => void'
    fullName: '(asyncResult: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'outlook!Office.ItemCompose#removeAttachmentAsync~1:complex'
    name: '(asyncResult: Office.AsyncResult<void>) => void'
    fullName: '(asyncResult: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'outlook!Office.ItemCompose#setSelectedDataAsync~0:complex'
    name: Office.AsyncContextOptions & CoercionTypeOptions
    fullName: Office.AsyncContextOptions & Office.CoercionTypeOptions
    spec.typeScript:
      - uid: 'outlook!Office.AsyncContextOptions:interface'
        name: Office.AsyncContextOptions
        fullName: Office.AsyncContextOptions
      - name: ' & '
        fullName: ' & '
      - uid: 'outlook!Office.CoercionTypeOptions:interface'
        name: CoercionTypeOptions
        fullName: Office.CoercionTypeOptions
  - uid: 'outlook!Office.ItemCompose#setSelectedDataAsync~1:complex'
    name: '(asyncResult: Office.AsyncResult<void>) => void'
    fullName: '(asyncResult: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'outlook!Office.ItemCompose#setSelectedDataAsync~2:complex'
    name: '(asyncResult: Office.AsyncResult<void>) => void'
    fullName: '(asyncResult: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'outlook!Office.Subject:interface'
    name: Subject