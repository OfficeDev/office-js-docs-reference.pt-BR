### YamlMime:UniversalReference
ms.openlocfilehash: 6a10c5964e18aa2e608ab8f9cb5fed7a7ebcc8da
ms.sourcegitcommit: 016e17422cf62dc9f1de1809666e9244e41cc1a9
ms.translationtype: MT
ms.contentlocale: pt-BR
ms.lasthandoff: 11/09/2018
ms.locfileid: "26221777"
items:
- uid: Outlook_1_2.Office.Time
  summary: >-
    O objeto Time é retornado como a propriedade start ou end de um compromisso no modo de composição.


    \[[Conjunto de APIs: caixa de correio 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Nível de permissão mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Modo aplicável do Outlook](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Composição</td></tr></table>
  name: Office.Time
  fullName: Office.Time
  langs:
  - typeScript
  type: interface
  package: Outlook_1_2
  children:
  - Outlook_1_2.Office.Time.getAsync
  - Outlook_1_2.Office.Time.setAsync
- uid: Outlook_1_2.Office.Time.getAsync
  summary: >-
    Obtém a hora de início ou de término de um compromisso.


    A data e a hora são fornecidas como um objeto Date na propriedade asyncResult.value. O valor está no Tempo Universal Coordenado (UTC). Você pode converter o horário em UTC para a hora local do cliente usando o método convertToLocalClientTime.


    \[[Conjunto de APIs: caixa de correio 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Nível de permissão mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Modo aplicável do Outlook](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Composição</td></tr></table>


    Além dessa assinatura, esse método também tem a seguinte assinatura:


    `getAsync(callback: (result: AsyncResult<Date>) => void): void;`
  name: getAsync(options, callback)
  fullName: getAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getAsync(options: Office.AsyncContextOptions, callback: (result: AsyncResult<Date>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: options
      description: 'Um objeto literal que contém uma ou mais das propriedades a seguir. asyncContext: os desenvolvedores podem fornecer qualquer objeto que desejam acessar o método de retorno de chamada.'
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: Quando o método for concluído, a função passada no parâmetro de retorno de chamada é chamada com um único parâmetro do tipo AsyncResult. O `value` propriedade do resultado é um objeto de data.
      type:
      - '(result: AsyncResult<Date>) => void'
- uid: Outlook_1_2.Office.Time.setAsync
  summary: >-
    Define a hora de início ou de término de um compromisso.


    Se o método setAsync for chamado na propriedade start, a propriedade end será ajustada para manter a duração do compromisso, conforme definido previamente. Se o método setAsync for chamado na propriedade end, a duração do compromisso será ampliada para a nova hora de término.


    A hora deve estar em UTC; você pode obter o horário UTC correto usando o método convertToUtcClientTime.


    \[[Conjunto de APIs: caixa de correio 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Nível de permissão mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr>


    <tr><td>[Modo aplicável do Outlook](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Composição</td></tr>


    <tr><td>Erros</td><td>InvalidEndTime - a hora de término do compromisso é antes da hora de início do compromisso.</td></tr></table>


    Além dessa assinatura, esse método também tem as seguintes assinaturas:


    `setAsync(dateTime: Date): void;`


    `setAsync(dateTime: Date, options: Office.AsyncContextOptions): void;`


    `setAsync(dateTime: Date, callback: (result: AsyncResult<void>) => void): void;`
  name: setAsync(dateTime, options, callback)
  fullName: setAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setAsync(dateTime: Date, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: dateTime
      description: Um objeto de data / hora no tempo Universal Coordenado (UTC).
      type:
      - Date
    - id: options
      description: 'Um objeto literal que contém uma ou mais das propriedades a seguir. asyncContext: os desenvolvedores podem fornecer qualquer objeto que desejam acessar o método de retorno de chamada.'
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: Quando o método for concluído, a função passada no parâmetro de retorno de chamada é chamada com um único parâmetro do tipo Office.AsyncResult. Se definindo a data e hora falhar, a propriedade asyncResult.error conterá um código de erro.
      type:
      - '(result: AsyncResult<void>) => void'
