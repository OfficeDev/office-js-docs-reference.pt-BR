### YamlMime:UniversalReference
items:
  - uid: word_release.Word.Paragraph
    summary: |-
      <span data-ttu-id="2f70f-101">Representa um único parágrafo em uma seleção, intervalo, controle de conteúdo ou corpo do documento.</span><span class="sxs-lookup"><span data-stu-id="2f70f-101">Represents a single paragraph in a selection, range, content control, or document body.</span></span>

      <span data-ttu-id="2f70f-102">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2f70f-102">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: Word.Paragraph
    fullName: Word.Paragraph
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: word_release
    children:
      - word_release.Word.Paragraph.alignment
      - word_release.Word.Paragraph.attachToList
      - word_release.Word.Paragraph.clear
      - word_release.Word.Paragraph.contentControls
      - word_release.Word.Paragraph.context
      - word_release.Word.Paragraph.delete
      - word_release.Word.Paragraph.detachFromList
      - word_release.Word.Paragraph.firstLineIndent
      - word_release.Word.Paragraph.font
      - word_release.Word.Paragraph.getHtml
      - word_release.Word.Paragraph.getNext
      - word_release.Word.Paragraph.getNextOrNullObject
      - word_release.Word.Paragraph.getOoxml
      - word_release.Word.Paragraph.getPrevious
      - word_release.Word.Paragraph.getPreviousOrNullObject
      - word_release.Word.Paragraph.getRange
      - word_release.Word.Paragraph.getRange_1
      - word_release.Word.Paragraph.getTextRanges
      - word_release.Word.Paragraph.inlinePictures
      - word_release.Word.Paragraph.insertBreak
      - word_release.Word.Paragraph.insertBreak_1
      - word_release.Word.Paragraph.insertContentControl
      - word_release.Word.Paragraph.insertFileFromBase64
      - word_release.Word.Paragraph.insertFileFromBase64_1
      - word_release.Word.Paragraph.insertHtml
      - word_release.Word.Paragraph.insertHtml_1
      - word_release.Word.Paragraph.insertInlinePictureFromBase64
      - word_release.Word.Paragraph.insertInlinePictureFromBase64_1
      - word_release.Word.Paragraph.insertOoxml
      - word_release.Word.Paragraph.insertOoxml_1
      - word_release.Word.Paragraph.insertParagraph
      - word_release.Word.Paragraph.insertParagraph_1
      - word_release.Word.Paragraph.insertTable
      - word_release.Word.Paragraph.insertTable_1
      - word_release.Word.Paragraph.insertText
      - word_release.Word.Paragraph.insertText_1
      - word_release.Word.Paragraph.isLastParagraph
      - word_release.Word.Paragraph.isListItem
      - word_release.Word.Paragraph.leftIndent
      - word_release.Word.Paragraph.lineSpacing
      - word_release.Word.Paragraph.lineUnitAfter
      - word_release.Word.Paragraph.lineUnitBefore
      - word_release.Word.Paragraph.list
      - word_release.Word.Paragraph.listItem
      - word_release.Word.Paragraph.listItemOrNullObject
      - word_release.Word.Paragraph.listOrNullObject
      - word_release.Word.Paragraph.load
      - word_release.Word.Paragraph.load_1
      - word_release.Word.Paragraph.load_2
      - word_release.Word.Paragraph.outlineLevel
      - word_release.Word.Paragraph.parentBody
      - word_release.Word.Paragraph.parentContentControl
      - word_release.Word.Paragraph.parentContentControlOrNullObject
      - word_release.Word.Paragraph.parentTable
      - word_release.Word.Paragraph.parentTableCell
      - word_release.Word.Paragraph.parentTableCellOrNullObject
      - word_release.Word.Paragraph.parentTableOrNullObject
      - word_release.Word.Paragraph.rightIndent
      - word_release.Word.Paragraph.search
      - word_release.Word.Paragraph.select
      - word_release.Word.Paragraph.select_1
      - word_release.Word.Paragraph.set
      - word_release.Word.Paragraph.set_1
      - word_release.Word.Paragraph.spaceAfter
      - word_release.Word.Paragraph.spaceBefore
      - word_release.Word.Paragraph.split
      - word_release.Word.Paragraph.startNewList
      - word_release.Word.Paragraph.style
      - word_release.Word.Paragraph.styleBuiltIn
      - word_release.Word.Paragraph.tableNestingLevel
      - word_release.Word.Paragraph.text
      - word_release.Word.Paragraph.toJSON
      - word_release.Word.Paragraph.track
      - word_release.Word.Paragraph.untrack
  - uid: word_release.Word.Paragraph.alignment
    summary: |-
      <span data-ttu-id="2f70f-103">Obtém ou define o alinhamento de um parágrafo.</span><span class="sxs-lookup"><span data-stu-id="2f70f-103">Gets or sets the alignment for a paragraph.</span></span> <span data-ttu-id="2f70f-104">O valor pode ser 'left', 'centered', 'right' ou 'justified'.</span><span class="sxs-lookup"><span data-stu-id="2f70f-104">The value can be 'left', 'centered', 'right', or 'justified'.</span></span>

      <span data-ttu-id="2f70f-105">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2f70f-105">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: alignment
    fullName: alignment
    langs:
      - typeScript
    type: property
    syntax:
      content: 'alignment: Word.Alignment | "Mixed" | "Unknown" | "Left" | "Centered" | "Right" | "Justified";'
      return:
        type:
          - Word.Alignment | "Mixed" | "Unknown" | "Left" | "Centered" | "Right" | "Justified"
        description: |-


          #### <a name="examples"></a><span data-ttu-id="2f70f-106">Exemplos</span><span class="sxs-lookup"><span data-stu-id="2f70f-106">Examples</span></span>

          ```typescript
          await Word.run(async (context) => {
            // Centers last paragraph alignment.
            context.document.body.paragraphs.getLast().alignment = "Centered";

            await context.sync();
          });
          ```
  - uid: word_release.Word.Paragraph.attachToList
    summary: |-
      <span data-ttu-id="2f70f-p102">Permite que o parágrafo ingresse em uma lista existente no nível especificado. Falhará se o parágrafo não puder ingressar na lista ou se o parágrafo já for um item da lista.</span><span class="sxs-lookup"><span data-stu-id="2f70f-p102">Lets the paragraph join an existing list at the specified level. Fails if the paragraph cannot join the list or if the paragraph is already a list item.</span></span>

      <span data-ttu-id="2f70f-109">\[[Conjunto de APIs: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2f70f-109">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'attachToList(listId, level)'
    fullName: 'attachToList(listId, level)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'attachToList(listId: number, level: number): Word.List;'
      return:
        type:
          - word.Word.List
        description: ''
      parameters:
        - id: listId
          description: <span data-ttu-id="2f70f-110">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="2f70f-110">Required.</span></span> <span data-ttu-id="2f70f-111">A ID de uma lista existente.</span><span class="sxs-lookup"><span data-stu-id="2f70f-111">The ID of an existing list.</span></span>
          type:
            - number
        - id: level
          description: <span data-ttu-id="2f70f-112">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="2f70f-112">Required.</span></span> <span data-ttu-id="2f70f-113">O nível na lista.</span><span class="sxs-lookup"><span data-stu-id="2f70f-113">The level in the list.</span></span>
          type:
            - number
  - uid: word_release.Word.Paragraph.clear
    summary: |-
      <span data-ttu-id="2f70f-114">Limpa o conteúdo do objeto Paragraph.</span><span class="sxs-lookup"><span data-stu-id="2f70f-114">Clears the contents of the paragraph object.</span></span> <span data-ttu-id="2f70f-115">O usuário pode executar a operação de desfazer no conteúdo limpo.</span><span class="sxs-lookup"><span data-stu-id="2f70f-115">The user can perform the undo operation on the cleared content.</span></span>

      <span data-ttu-id="2f70f-116">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2f70f-116">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: clear()
    fullName: clear()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clear(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="2f70f-117">Exemplos</span><span class="sxs-lookup"><span data-stu-id="2f70f-117">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the paragraphs collection.
              var paragraphs = context.document.body.paragraphs;

              // Queue a commmand to load the style property for all of the paragraphs.
              context.load(paragraphs, 'style');

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {

                  // Queue a command to clear the contents of the first paragraph.
                  paragraphs.items[0].clear();

                  // Synchronize the document state by executing the queued commands,
                  // and return a promise to indicate task completion.
                  return context.sync().then(function () {
                      console.log('Cleared the contents of the first paragraph.');
                  });
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: word_release.Word.Paragraph.contentControls
    summary: |-
      <span data-ttu-id="2f70f-118">Obtém a coleção de objetos de controle de conteúdo no parágrafo.</span><span class="sxs-lookup"><span data-stu-id="2f70f-118">Gets the collection of content control objects in the paragraph.</span></span> <span data-ttu-id="2f70f-119">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="2f70f-119">Read-only.</span></span>

      <span data-ttu-id="2f70f-120">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2f70f-120">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: contentControls
    fullName: contentControls
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly contentControls: Word.ContentControlCollection;'
      return:
        type:
          - word.Word.ContentControlCollection
  - uid: word_release.Word.Paragraph.context
    summary: <span data-ttu-id="2f70f-121">O contexto de solicitação associado ao objeto.</span><span class="sxs-lookup"><span data-stu-id="2f70f-121">The request context associated with the object.</span></span> <span data-ttu-id="2f70f-122">Isso conecta o processo do suplemento ao processo do aplicativo host do Office.</span><span class="sxs-lookup"><span data-stu-id="2f70f-122">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: word_release.Word.Paragraph.delete
    summary: |-
      <span data-ttu-id="2f70f-123">Exclui o parágrafo e o respectivo conteúdo do documento.</span><span class="sxs-lookup"><span data-stu-id="2f70f-123">Deletes the paragraph and its content from the document.</span></span>

      <span data-ttu-id="2f70f-124">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2f70f-124">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="2f70f-125">Exemplos</span><span class="sxs-lookup"><span data-stu-id="2f70f-125">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the paragraphs collection.
              var paragraphs = context.document.body.paragraphs;

              // Queue a commmand to load the text property for all of the paragraphs.
              context.load(paragraphs, 'text');

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {

                  // Queue a command to delete the first paragraph.
                  paragraphs.items[0].delete();

                  // Synchronize the document state by executing the queued commands,
                  // and return a promise to indicate task completion.
                  return context.sync().then(function () {
                      console.log('Deleted the first paragraph.');
                  });
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: word_release.Word.Paragraph.detachFromList
    summary: |-
      <span data-ttu-id="2f70f-126">Move este parágrafo para fora de sua lista, caso o parágrafo seja um item da lista.</span><span class="sxs-lookup"><span data-stu-id="2f70f-126">Moves this paragraph out of its list, if the paragraph is a list item.</span></span>

      <span data-ttu-id="2f70f-127">\[[Conjunto de APIs: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2f70f-127">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: detachFromList()
    fullName: detachFromList()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'detachFromList(): void;'
      return:
        type:
          - void
        description: ''
  - uid: word_release.Word.Paragraph.firstLineIndent
    summary: |-
      <span data-ttu-id="2f70f-p108">Retorna ou define o valor, em pontos, para um recuo deslocado ou da primeira linha. Usa um valor positivo para definir um recuo da primeira linha e um valor negativo para definir um recuo deslocado.</span><span class="sxs-lookup"><span data-stu-id="2f70f-p108">Gets or sets the value, in points, for a first line or hanging indent. Use a positive value to set a first-line indent, and use a negative value to set a hanging indent.</span></span>

      <span data-ttu-id="2f70f-130">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2f70f-130">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: firstLineIndent
    fullName: firstLineIndent
    langs:
      - typeScript
    type: property
    syntax:
      content: 'firstLineIndent: number;'
      return:
        type:
          - number
  - uid: word_release.Word.Paragraph.font
    summary: |-
      <span data-ttu-id="2f70f-131">Obtém o formato de texto do parágrafo.</span><span class="sxs-lookup"><span data-stu-id="2f70f-131">Gets the text format of the paragraph.</span></span> <span data-ttu-id="2f70f-132">Use isto para obter e definir o nome, o tamanho e a cor da fonte, além de outras propriedades.</span><span class="sxs-lookup"><span data-stu-id="2f70f-132">Use this to get and set font name, size, color, and other properties.</span></span> <span data-ttu-id="2f70f-133">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="2f70f-133">Read-only.</span></span>

      <span data-ttu-id="2f70f-134">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2f70f-134">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: font
    fullName: font
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly font: Word.Font;'
      return:
        type:
          - word.Word.Font
  - uid: word_release.Word.Paragraph.getHtml
    summary: |-
      <span data-ttu-id="2f70f-135">Obtém uma representação HTML do objeto Paragraph.</span><span class="sxs-lookup"><span data-stu-id="2f70f-135">Gets an HTML representation of the paragraph object.</span></span> <span data-ttu-id="2f70f-136">Quando renderizado em uma página da Web ou em um visualizador de HTML, a formatação será uma correspondência próxima, mas não exata, da formatação do documento.</span><span class="sxs-lookup"><span data-stu-id="2f70f-136">When rendered in a web page or HTML viewer, the formatting will be a close, but not exact, match for of the formatting of the document.</span></span> <span data-ttu-id="2f70f-137">Este método não retorna o mesmo HTML para o mesmo documento em diferentes plataformas (Windows, Mac, Word online, etc.).</span><span class="sxs-lookup"><span data-stu-id="2f70f-137">This method does not return the exact same HTML for the same document on different platforms (Windows, Mac, Word Online, etc.).</span></span> <span data-ttu-id="2f70f-138">Se você precisar de fidelidade exata ou consistência entre plataformas, use `Paragraph.getOoxml()` e converta o XML RETORNADO em HTML.</span><span class="sxs-lookup"><span data-stu-id="2f70f-138">If you need exact fidelity, or consistency across platforms, use `Paragraph.getOoxml()` and convert the returned XML to HTML.</span></span>

      <span data-ttu-id="2f70f-139">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2f70f-139">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getHtml()
    fullName: getHtml()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getHtml(): OfficeExtension.ClientResult<string>;'
      return:
        type:
          - OfficeExtension.ClientResult<string>
        description: |-


          #### <a name="examples"></a><span data-ttu-id="2f70f-140">Exemplos</span><span class="sxs-lookup"><span data-stu-id="2f70f-140">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the paragraphs collection.
              var paragraphs = context.document.body.paragraphs;

              // Queue a commmand to load the style property for all of the paragraphs.
              context.load(paragraphs, 'style');

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {

                  // Queue a a set of commands to get the HTML of the first paragraph.
                  var html = paragraphs.items[0].getHtml();

                  // Synchronize the document state by executing the queued commands,
                  // and return a promise to indicate task completion.
                  return context.sync().then(function () {
                      console.log('Paragraph HTML: ' + html.value);
                  });
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: word_release.Word.Paragraph.getNext
    summary: |-
      <span data-ttu-id="2f70f-141">Obtém o próximo parágrafo.</span><span class="sxs-lookup"><span data-stu-id="2f70f-141">Gets the next paragraph.</span></span> <span data-ttu-id="2f70f-142">Lança se o parágrafo é o último.</span><span class="sxs-lookup"><span data-stu-id="2f70f-142">Throws if the paragraph is the last one.</span></span>

      <span data-ttu-id="2f70f-143">\[[Conjunto de APIs: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2f70f-143">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getNext()
    fullName: getNext()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getNext(): Word.Paragraph;'
      return:
        type:
          - Word.Paragraph
        description: ''
  - uid: word_release.Word.Paragraph.getNextOrNullObject
    summary: |-
      <span data-ttu-id="2f70f-144">Obtém o próximo parágrafo.</span><span class="sxs-lookup"><span data-stu-id="2f70f-144">Gets the next paragraph.</span></span> <span data-ttu-id="2f70f-145">Retorna um objeto NULL se o parágrafo for o último.</span><span class="sxs-lookup"><span data-stu-id="2f70f-145">Returns a null object if the paragraph is the last one.</span></span>

      <span data-ttu-id="2f70f-146">\[[Conjunto de APIs: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2f70f-146">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getNextOrNullObject()
    fullName: getNextOrNullObject()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getNextOrNullObject(): Word.Paragraph;'
      return:
        type:
          - Word.Paragraph
        description: ''
  - uid: word_release.Word.Paragraph.getOoxml
    summary: |-
      <span data-ttu-id="2f70f-147">Obtém a representação OOXML (Office Open XML) do objeto Paragraph.</span><span class="sxs-lookup"><span data-stu-id="2f70f-147">Gets the Office Open XML (OOXML) representation of the paragraph object.</span></span>

      <span data-ttu-id="2f70f-148">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2f70f-148">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getOoxml()
    fullName: getOoxml()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getOoxml(): OfficeExtension.ClientResult<string>;'
      return:
        type:
          - OfficeExtension.ClientResult<string>
        description: |-


          #### <a name="examples"></a><span data-ttu-id="2f70f-149">Exemplos</span><span class="sxs-lookup"><span data-stu-id="2f70f-149">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the paragraphs collection.
              var paragraphs = context.document.body.paragraphs;

              // Queue a commmand to load the style property for the top 2 paragraphs.
              context.load(paragraphs, {select: 'style', top: 2} );

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {

                  // Queue a a set of commands to get the OOXML of the first paragraph.
                  var ooxml = paragraphs.items[0].getOoxml();

                  // Synchronize the document state by executing the queued commands,
                  // and return a promise to indicate task completion.
                  return context.sync().then(function () {
                      console.log('Paragraph OOXML: ' + ooxml.value);
                  });
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: word_release.Word.Paragraph.getPrevious
    summary: |-
      <span data-ttu-id="2f70f-150">Obtém o parágrafo anterior.</span><span class="sxs-lookup"><span data-stu-id="2f70f-150">Gets the previous paragraph.</span></span> <span data-ttu-id="2f70f-151">Lança se o parágrafo é o primeiro.</span><span class="sxs-lookup"><span data-stu-id="2f70f-151">Throws if the paragraph is the first one.</span></span>

      <span data-ttu-id="2f70f-152">\[[Conjunto de APIs: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2f70f-152">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getPrevious()
    fullName: getPrevious()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getPrevious(): Word.Paragraph;'
      return:
        type:
          - Word.Paragraph
        description: ''
  - uid: word_release.Word.Paragraph.getPreviousOrNullObject
    summary: |-
      <span data-ttu-id="2f70f-153">Obtém o parágrafo anterior.</span><span class="sxs-lookup"><span data-stu-id="2f70f-153">Gets the previous paragraph.</span></span> <span data-ttu-id="2f70f-154">Retorna um objeto NULL se o parágrafo for o primeiro.</span><span class="sxs-lookup"><span data-stu-id="2f70f-154">Returns a null object if the paragraph is the first one.</span></span>

      <span data-ttu-id="2f70f-155">\[[Conjunto de APIs: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2f70f-155">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getPreviousOrNullObject()
    fullName: getPreviousOrNullObject()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getPreviousOrNullObject(): Word.Paragraph;'
      return:
        type:
          - Word.Paragraph
        description: |-


          #### <a name="examples"></a><span data-ttu-id="2f70f-156">Exemplos</span><span class="sxs-lookup"><span data-stu-id="2f70f-156">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the paragraphs collection.
              var paragraphs = context.document.body.paragraphs;

              // Queue a commmand to load the text property for all of the paragraphs.
              context.load(paragraphs, 'text');

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {

                  // Queue commands to create a proxy object for the next-to-last paragraph.
                  var indexOfLastParagraph = paragraphs.items.length - 1;
                  var precedingParagraph = paragraphs.items[indexOfLastParagraph].getPreviousOrNullObject();

                  // Queue a command to load the text of the preceding paragraph.
                  context.load(precedingParagraph, 'text');

                  // Synchronize the document state by executing the queued commands,
                  // and return a promise to indicate task completion.
                  return context.sync().then(function () {
                      if (precedingParagraph.isNullObject) {
                          console.log('There are no paragraphs before the current one.');
                      } else {
                          console.log('The preceding paragraph is: ' + precedingParagraph.text);
                      }
                  });
              });
          }).catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: word_release.Word.Paragraph.getRange
    summary: |-
      <span data-ttu-id="2f70f-157">Obtém o parágrafo inteiro, ou então, os pontos inicial ou final do parágrafo, como um intervalo.</span><span class="sxs-lookup"><span data-stu-id="2f70f-157">Gets the whole paragraph, or the starting or ending point of the paragraph, as a range.</span></span>

      <span data-ttu-id="2f70f-158">\[[Conjunto de APIs: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2f70f-158">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getRange(rangeLocation)
    fullName: getRange(rangeLocation)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRange(rangeLocation?: Word.RangeLocation): Word.Range;'
      return:
        type:
          - Word.Range
        description: ''
      parameters:
        - id: rangeLocation
          description: '<span data-ttu-id="2f70f-159">Opcional.</span><span class="sxs-lookup"><span data-stu-id="2f70f-159">Optional.</span></span> <span data-ttu-id="2f70f-160">O local do intervalo pode ser "inteiro", "início", "fim", "depois" ou "conteúdo".</span><span class="sxs-lookup"><span data-stu-id="2f70f-160">The range location can be ''Whole'', ''Start'', ''End'', ''After'', or ''Content''.</span></span>'
          type:
            - word.Word.RangeLocation
  - uid: word_release.Word.Paragraph.getRange_1
    summary: |-
      <span data-ttu-id="2f70f-161">Obtém o parágrafo inteiro, ou então, os pontos inicial ou final do parágrafo, como um intervalo.</span><span class="sxs-lookup"><span data-stu-id="2f70f-161">Gets the whole paragraph, or the starting or ending point of the paragraph, as a range.</span></span>

      <span data-ttu-id="2f70f-162">\[[Conjunto de APIs: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2f70f-162">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getRange(rangeLocationString)
    fullName: getRange(rangeLocationString)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRange(rangeLocationString?: "Whole" | "Start" | "End" | "Before" | "After" | "Content"): Word.Range;'
      return:
        type:
          - Word.Range
        description: ''
      parameters:
        - id: rangeLocationString
          description: '<span data-ttu-id="2f70f-163">Opcional.</span><span class="sxs-lookup"><span data-stu-id="2f70f-163">Optional.</span></span> <span data-ttu-id="2f70f-164">O local do intervalo pode ser "inteiro", "início", "fim", "depois" ou "conteúdo".</span><span class="sxs-lookup"><span data-stu-id="2f70f-164">The range location can be ''Whole'', ''Start'', ''End'', ''After'', or ''Content''.</span></span>'
          type:
            - '"Whole" | "Start" | "End" | "Before" | "After" | "Content"'
  - uid: word_release.Word.Paragraph.getTextRanges
    summary: |-
      <span data-ttu-id="2f70f-165">Obtém os intervalos de texto no parágrafo usando marcas de Pontuação e/ou outras marcas de fim.</span><span class="sxs-lookup"><span data-stu-id="2f70f-165">Gets the text ranges in the paragraph by using punctuation marks and/or other ending marks.</span></span>

      <span data-ttu-id="2f70f-166">\[[Conjunto de APIs: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2f70f-166">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'getTextRanges(endingMarks, trimSpacing)'
    fullName: 'getTextRanges(endingMarks, trimSpacing)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getTextRanges(endingMarks: string[], trimSpacing?: boolean): Word.RangeCollection;'
      return:
        type:
          - Word.RangeCollection
        description: ''
      parameters:
        - id: endingMarks
          description: <span data-ttu-id="2f70f-167">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="2f70f-167">Required.</span></span> <span data-ttu-id="2f70f-168">Os sinais de Pontuação e/ou outras marcas finais como uma matriz de cadeias de caracteres.</span><span class="sxs-lookup"><span data-stu-id="2f70f-168">The punctuation marks and/or other ending marks as an array of strings.</span></span>
          type:
            - 'string[]'
        - id: trimSpacing
          description: '<span data-ttu-id="2f70f-169">Opcional.</span><span class="sxs-lookup"><span data-stu-id="2f70f-169">Optional.</span></span> <span data-ttu-id="2f70f-170">Indica se os caracteres de espaçamento (espaços, guias, quebras de coluna e marcas de fim de parágrafo) devem ser aparados do início e do fim dos intervalos retornados na coleção Range.</span><span class="sxs-lookup"><span data-stu-id="2f70f-170">Indicates whether to trim spacing characters (spaces, tabs, column breaks, and paragraph end marks) from the start and end of the ranges returned in the range collection.</span></span> <span data-ttu-id="2f70f-171">O padrão é false, que indica que os caracteres de espaçamento no início e no final dos intervalos estão incluídos na coleção Range.</span><span class="sxs-lookup"><span data-stu-id="2f70f-171">Default is false which indicates that spacing characters at the start and end of the ranges are included in the range collection.</span></span>'
          type:
            - boolean
  - uid: word_release.Word.Paragraph.inlinePictures
    summary: |-
      <span data-ttu-id="2f70f-172">Obtém a coleção de objetos InlinePicture no parágrafo.</span><span class="sxs-lookup"><span data-stu-id="2f70f-172">Gets the collection of InlinePicture objects in the paragraph.</span></span> <span data-ttu-id="2f70f-173">A coleção não inclui imagens flutuantes.</span><span class="sxs-lookup"><span data-stu-id="2f70f-173">The collection does not include floating images.</span></span> <span data-ttu-id="2f70f-174">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="2f70f-174">Read-only.</span></span>

      <span data-ttu-id="2f70f-175">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2f70f-175">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: inlinePictures
    fullName: inlinePictures
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly inlinePictures: Word.InlinePictureCollection;'
      return:
        type:
          - word.Word.InlinePictureCollection
  - uid: word_release.Word.Paragraph.insertBreak
    summary: |-
      <span data-ttu-id="2f70f-176">Insere uma quebra no local especificado no documento principal.</span><span class="sxs-lookup"><span data-stu-id="2f70f-176">Inserts a break at the specified location in the main document.</span></span> <span data-ttu-id="2f70f-177">O valor de insertLocation pode ser 'Before' ou 'After'.</span><span class="sxs-lookup"><span data-stu-id="2f70f-177">The insertLocation value can be 'Before' or 'After'.</span></span>

      <span data-ttu-id="2f70f-178">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2f70f-178">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertBreak(breakType, insertLocation)'
    fullName: 'insertBreak(breakType, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertBreak(breakType: Word.BreakType, insertLocation: Word.InsertLocation): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="2f70f-179">Exemplos</span><span class="sxs-lookup"><span data-stu-id="2f70f-179">Examples</span></span>

          ```typescript
          Word.run(async (context) => {
            context.document.body.paragraphs.getFirst().insertBreak(Word.BreakType.line, "After");

            await context.sync();
            console.log("success");
          });
          ```
          ```typescript
          await Word.run(async (context) => {
            context.document.body.paragraphs.getFirst().insertBreak(Word.BreakType.page, "After");

            await context.sync();
            console.log("success");
          });
          ```
      parameters:
        - id: breakType
          description: <span data-ttu-id="2f70f-180">Obrigatória.</span><span class="sxs-lookup"><span data-stu-id="2f70f-180">Required.</span></span> <span data-ttu-id="2f70f-181">O tipo de quebra a adicionar ao documento.</span><span class="sxs-lookup"><span data-stu-id="2f70f-181">The break type to add to the document.</span></span>
          type:
            - word.Word.BreakType
        - id: insertLocation
          description: <span data-ttu-id="2f70f-182">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="2f70f-182">Required.</span></span> <span data-ttu-id="2f70f-183">O valor pode ser 'Before' ou 'After'.</span><span class="sxs-lookup"><span data-stu-id="2f70f-183">The value can be 'Before' or 'After'.</span></span>
          type:
            - Word.InsertLocation
  - uid: word_release.Word.Paragraph.insertBreak_1
    summary: |-
      <span data-ttu-id="2f70f-184">Insere uma quebra no local especificado no documento principal.</span><span class="sxs-lookup"><span data-stu-id="2f70f-184">Inserts a break at the specified location in the main document.</span></span> <span data-ttu-id="2f70f-185">O valor de insertLocation pode ser 'Before' ou 'After'.</span><span class="sxs-lookup"><span data-stu-id="2f70f-185">The insertLocation value can be 'Before' or 'After'.</span></span>

      <span data-ttu-id="2f70f-186">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2f70f-186">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertBreak(breakTypeString, insertLocation)'
    fullName: 'insertBreak(breakTypeString, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertBreak(breakTypeString: "Page" | "Next" | "SectionNext" | "SectionContinuous" | "SectionEven" | "SectionOdd" | "Line", insertLocation: "Before" | "After" | "Start" | "End" | "Replace"): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="2f70f-187">Exemplos</span><span class="sxs-lookup"><span data-stu-id="2f70f-187">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the paragraphs collection.
              var paragraphs = context.document.body.paragraphs;

              // Queue a commmand to load the style property for the top 2 paragraphs.
              // We never perform an empty load. We always must request a property.
              context.load(paragraphs, {select: 'style', top: 2} );

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {

                  // Queue a command to get the first paragraph.
                  var paragraph = paragraphs.items[0];

                  // Queue a command to insert a page break after the first paragraph.
                  paragraph.insertBreak('page', 'After');

                  // Synchronize the document state by executing the queued commands,
                  // and return a promise to indicate task completion.
                  return context.sync().then(function () {
                      console.log('Inserted a page break after the paragraph.');
                  });
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: breakTypeString
          description: <span data-ttu-id="2f70f-188">Obrigatória.</span><span class="sxs-lookup"><span data-stu-id="2f70f-188">Required.</span></span> <span data-ttu-id="2f70f-189">O tipo de quebra a adicionar ao documento.</span><span class="sxs-lookup"><span data-stu-id="2f70f-189">The break type to add to the document.</span></span>
          type:
            - '"Page" | "Next" | "SectionNext" | "SectionContinuous" | "SectionEven" | "SectionOdd" | "Line"'
        - id: insertLocation
          description: <span data-ttu-id="2f70f-190">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="2f70f-190">Required.</span></span> <span data-ttu-id="2f70f-191">O valor pode ser 'Before' ou 'After'.</span><span class="sxs-lookup"><span data-stu-id="2f70f-191">The value can be 'Before' or 'After'.</span></span>
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: word_release.Word.Paragraph.insertContentControl
    summary: |-
      <span data-ttu-id="2f70f-192">Quebra o objeto Paragraph com um controle de conteúdo de rich text.</span><span class="sxs-lookup"><span data-stu-id="2f70f-192">Wraps the paragraph object with a rich text content control.</span></span>

      <span data-ttu-id="2f70f-193">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2f70f-193">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: insertContentControl()
    fullName: insertContentControl()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertContentControl(): Word.ContentControl;'
      return:
        type:
          - word.Word.ContentControl
        description: |-


          #### <a name="examples"></a><span data-ttu-id="2f70f-194">Exemplos</span><span class="sxs-lookup"><span data-stu-id="2f70f-194">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the paragraphs collection.
              var paragraphs = context.document.body.paragraphs;

              // Queue a commmand to load the style property for the top 2 paragraphs.
              // We never perform an empty load. We always must request a property.
              context.load(paragraphs, {select: 'style', top: 2} );

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {

                  // Queue a command to get the first paragraph.
                  var paragraph = paragraphs.items[0];

                  // Queue a command to wrap the first paragraph in a rich text content control.
                  paragraph.insertContentControl();

                  // Synchronize the document state by executing the queued commands,
                  // and return a promise to indicate task completion.
                  return context.sync().then(function () {
                      console.log('Wrapped the first paragraph in a content control.');
                  });
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: word_release.Word.Paragraph.insertFileFromBase64
    summary: |-
      <span data-ttu-id="2f70f-195">Insere um documento no parágrafo no local especificado.</span><span class="sxs-lookup"><span data-stu-id="2f70f-195">Inserts a document into the paragraph at the specified location.</span></span> <span data-ttu-id="2f70f-196">O valor de insertLocation pode ser 'Replace', 'Start' ou 'End'.</span><span class="sxs-lookup"><span data-stu-id="2f70f-196">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>

      <span data-ttu-id="2f70f-197">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2f70f-197">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertFileFromBase64(base64File, insertLocation)'
    fullName: 'insertFileFromBase64(base64File, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertFileFromBase64(base64File: string, insertLocation: Word.InsertLocation): Word.Range;'
      return:
        type:
          - Word.Range
        description: ''
      parameters:
        - id: base64File
          description: <span data-ttu-id="2f70f-198">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="2f70f-198">Required.</span></span> <span data-ttu-id="2f70f-199">O conteúdo codificado em Base64 de um arquivo. docx.</span><span class="sxs-lookup"><span data-stu-id="2f70f-199">The base64 encoded content of a .docx file.</span></span>
          type:
            - string
        - id: insertLocation
          description: '<span data-ttu-id="2f70f-200">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="2f70f-200">Required.</span></span> <span data-ttu-id="2f70f-201">O valor pode ser ''Replace'', ''Start'' ou ''End''.</span><span class="sxs-lookup"><span data-stu-id="2f70f-201">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - Word.InsertLocation
  - uid: word_release.Word.Paragraph.insertFileFromBase64_1
    summary: |-
      <span data-ttu-id="2f70f-202">Insere um documento no parágrafo no local especificado.</span><span class="sxs-lookup"><span data-stu-id="2f70f-202">Inserts a document into the paragraph at the specified location.</span></span> <span data-ttu-id="2f70f-203">O valor de insertLocation pode ser 'Replace', 'Start' ou 'End'.</span><span class="sxs-lookup"><span data-stu-id="2f70f-203">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>

      <span data-ttu-id="2f70f-204">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2f70f-204">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertFileFromBase64(base64File, insertLocationString)'
    fullName: 'insertFileFromBase64(base64File, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertFileFromBase64(base64File: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
      return:
        type:
          - Word.Range
        description: ''
      parameters:
        - id: base64File
          description: <span data-ttu-id="2f70f-205">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="2f70f-205">Required.</span></span> <span data-ttu-id="2f70f-206">O conteúdo codificado em Base64 de um arquivo. docx.</span><span class="sxs-lookup"><span data-stu-id="2f70f-206">The base64 encoded content of a .docx file.</span></span>
          type:
            - string
        - id: insertLocationString
          description: '<span data-ttu-id="2f70f-207">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="2f70f-207">Required.</span></span> <span data-ttu-id="2f70f-208">O valor pode ser ''Replace'', ''Start'' ou ''End''.</span><span class="sxs-lookup"><span data-stu-id="2f70f-208">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: word_release.Word.Paragraph.insertHtml
    summary: |-
      <span data-ttu-id="2f70f-209">Insere HTML no local especificado dentro do parágrafo.</span><span class="sxs-lookup"><span data-stu-id="2f70f-209">Inserts HTML into the paragraph at the specified location.</span></span> <span data-ttu-id="2f70f-210">O valor de insertLocation pode ser 'Replace', 'Start' ou 'End'.</span><span class="sxs-lookup"><span data-stu-id="2f70f-210">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>

      <span data-ttu-id="2f70f-211">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2f70f-211">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertHtml(html, insertLocation)'
    fullName: 'insertHtml(html, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertHtml(html: string, insertLocation: Word.InsertLocation): Word.Range;'
      return:
        type:
          - Word.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="2f70f-212">Exemplos</span><span class="sxs-lookup"><span data-stu-id="2f70f-212">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the paragraphs collection.
              var paragraphs = context.document.body.paragraphs;

              // Queue a commmand to load the style property for the top 2 paragraphs.
              // We never perform an empty load. We always must request a property.
              context.load(paragraphs, {select: 'style', top: 2} );

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {

                  // Queue a command to get the first paragraph.
                  var paragraph = paragraphs.items[0];

                  // Queue a command to insert HTML content at the end of the first paragraph.
                  paragraph.insertHtml('<strong>Inserted HTML.</strong>', Word.InsertLocation.end);

                  // Synchronize the document state by executing the queued commands,
                  // and return a promise to indicate task completion.
                  return context.sync().then(function () {
                      console.log('Inserted HTML content at the end of the first paragraph.');
                  });
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: html
          description: <span data-ttu-id="2f70f-213">Obrigatória.</span><span class="sxs-lookup"><span data-stu-id="2f70f-213">Required.</span></span> <span data-ttu-id="2f70f-214">O HTML a inserir no parágrafo.</span><span class="sxs-lookup"><span data-stu-id="2f70f-214">The HTML to be inserted in the paragraph.</span></span>
          type:
            - string
        - id: insertLocation
          description: '<span data-ttu-id="2f70f-215">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="2f70f-215">Required.</span></span> <span data-ttu-id="2f70f-216">O valor pode ser ''Replace'', ''Start'' ou ''End''.</span><span class="sxs-lookup"><span data-stu-id="2f70f-216">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - Word.InsertLocation
  - uid: word_release.Word.Paragraph.insertHtml_1
    summary: |-
      <span data-ttu-id="2f70f-217">Insere HTML no local especificado dentro do parágrafo.</span><span class="sxs-lookup"><span data-stu-id="2f70f-217">Inserts HTML into the paragraph at the specified location.</span></span> <span data-ttu-id="2f70f-218">O valor de insertLocation pode ser 'Replace', 'Start' ou 'End'.</span><span class="sxs-lookup"><span data-stu-id="2f70f-218">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>

      <span data-ttu-id="2f70f-219">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2f70f-219">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertHtml(html, insertLocationString)'
    fullName: 'insertHtml(html, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertHtml(html: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
      return:
        type:
          - Word.Range
        description: ''
      parameters:
        - id: html
          description: <span data-ttu-id="2f70f-220">Obrigatória.</span><span class="sxs-lookup"><span data-stu-id="2f70f-220">Required.</span></span> <span data-ttu-id="2f70f-221">O HTML a inserir no parágrafo.</span><span class="sxs-lookup"><span data-stu-id="2f70f-221">The HTML to be inserted in the paragraph.</span></span>
          type:
            - string
        - id: insertLocationString
          description: '<span data-ttu-id="2f70f-222">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="2f70f-222">Required.</span></span> <span data-ttu-id="2f70f-223">O valor pode ser ''Replace'', ''Start'' ou ''End''.</span><span class="sxs-lookup"><span data-stu-id="2f70f-223">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: word_release.Word.Paragraph.insertInlinePictureFromBase64
    summary: |-
      <span data-ttu-id="2f70f-224">Insere uma imagem no local especificado dentro do parágrafo.</span><span class="sxs-lookup"><span data-stu-id="2f70f-224">Inserts a picture into the paragraph at the specified location.</span></span> <span data-ttu-id="2f70f-225">O valor de insertLocation pode ser 'Replace', 'Start' ou 'End'.</span><span class="sxs-lookup"><span data-stu-id="2f70f-225">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>

      <span data-ttu-id="2f70f-226">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2f70f-226">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertInlinePictureFromBase64(base64EncodedImage, insertLocation)'
    fullName: 'insertInlinePictureFromBase64(base64EncodedImage, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertInlinePictureFromBase64(base64EncodedImage: string, insertLocation: Word.InsertLocation): Word.InlinePicture;'
      return:
        type:
          - word.Word.InlinePicture
        description: |-


          #### <a name="examples"></a><span data-ttu-id="2f70f-227">Exemplos</span><span class="sxs-lookup"><span data-stu-id="2f70f-227">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the paragraphs collection.
              var paragraphs = context.document.body.paragraphs;

              // Queue a commmand to load the style property for all of the paragraphs.
              context.load(paragraphs, 'style');

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {

                  // Queue a command to get the first paragraph.
                  var paragraph = paragraphs.items[0];

                  var b64encodedImg = "iVBORw0KGgoAAAANSUhEUgAAAB4AAAANCAIAAAAxEEnAAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAACFSURBVDhPtY1BEoQwDMP6/0+XgIMTBAeYoTqso9Rkx1zG+tNj1H94jgGzeNSjteO5vtQQuG2seO0av8LzGbe3anzRoJ4ybm/VeKEerAEbAUpW4aWQCmrGFWykRzGBCnYy2ha3oAIq2MloW9yCCqhgJ6NtcQsqoIKdjLbFLaiACnYyf2fODbrjZcXfr2F4AAAAAElFTkSuQmCC";

                  // Queue a command to insert a base64 encoded image at the beginning of the first paragraph.
                  paragraph.insertInlinePictureFromBase64(b64encodedImg, Word.InsertLocation.start);

                  // Synchronize the document state by executing the queued commands,
                  // and return a promise to indicate task completion.
                  return context.sync().then(function () {
                      console.log('Added an image to the first paragraph.');
                  });
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: base64EncodedImage
          description: <span data-ttu-id="2f70f-228">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="2f70f-228">Required.</span></span> <span data-ttu-id="2f70f-229">A imagem codificada em base64 a ser inserida.</span><span class="sxs-lookup"><span data-stu-id="2f70f-229">The base64 encoded image to be inserted.</span></span>
          type:
            - string
        - id: insertLocation
          description: '<span data-ttu-id="2f70f-230">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="2f70f-230">Required.</span></span> <span data-ttu-id="2f70f-231">O valor pode ser ''Replace'', ''Start'' ou ''End''.</span><span class="sxs-lookup"><span data-stu-id="2f70f-231">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - Word.InsertLocation
  - uid: word_release.Word.Paragraph.insertInlinePictureFromBase64_1
    summary: |-
      <span data-ttu-id="2f70f-232">Insere uma imagem no local especificado dentro do parágrafo.</span><span class="sxs-lookup"><span data-stu-id="2f70f-232">Inserts a picture into the paragraph at the specified location.</span></span> <span data-ttu-id="2f70f-233">O valor de insertLocation pode ser 'Replace', 'Start' ou 'End'.</span><span class="sxs-lookup"><span data-stu-id="2f70f-233">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>

      <span data-ttu-id="2f70f-234">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2f70f-234">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertInlinePictureFromBase64(base64EncodedImage, insertLocationString)'
    fullName: 'insertInlinePictureFromBase64(base64EncodedImage, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertInlinePictureFromBase64(base64EncodedImage: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.InlinePicture;'
      return:
        type:
          - word.Word.InlinePicture
        description: ''
      parameters:
        - id: base64EncodedImage
          description: <span data-ttu-id="2f70f-235">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="2f70f-235">Required.</span></span> <span data-ttu-id="2f70f-236">A imagem codificada em base64 a ser inserida.</span><span class="sxs-lookup"><span data-stu-id="2f70f-236">The base64 encoded image to be inserted.</span></span>
          type:
            - string
        - id: insertLocationString
          description: '<span data-ttu-id="2f70f-237">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="2f70f-237">Required.</span></span> <span data-ttu-id="2f70f-238">O valor pode ser ''Replace'', ''Start'' ou ''End''.</span><span class="sxs-lookup"><span data-stu-id="2f70f-238">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: word_release.Word.Paragraph.insertOoxml
    summary: |-
      <span data-ttu-id="2f70f-239">Insere OOXML no parágrafo no local especificado.</span><span class="sxs-lookup"><span data-stu-id="2f70f-239">Inserts OOXML into the paragraph at the specified location.</span></span> <span data-ttu-id="2f70f-240">O valor de insertLocation pode ser 'Replace', 'Start' ou 'End'.</span><span class="sxs-lookup"><span data-stu-id="2f70f-240">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>

      <span data-ttu-id="2f70f-241">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2f70f-241">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertOoxml(ooxml, insertLocation)'
    fullName: 'insertOoxml(ooxml, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertOoxml(ooxml: string, insertLocation: Word.InsertLocation): Word.Range;'
      return:
        type:
          - Word.Range
        description: ''
      parameters:
        - id: ooxml
          description: <span data-ttu-id="2f70f-242">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="2f70f-242">Required.</span></span> <span data-ttu-id="2f70f-243">O OOXML a ser inserido no parágrafo.</span><span class="sxs-lookup"><span data-stu-id="2f70f-243">The OOXML to be inserted in the paragraph.</span></span>
          type:
            - string
        - id: insertLocation
          description: '<span data-ttu-id="2f70f-244">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="2f70f-244">Required.</span></span> <span data-ttu-id="2f70f-245">O valor pode ser ''Replace'', ''Start'' ou ''End''.</span><span class="sxs-lookup"><span data-stu-id="2f70f-245">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - Word.InsertLocation
  - uid: word_release.Word.Paragraph.insertOoxml_1
    summary: |-
      <span data-ttu-id="2f70f-246">Insere OOXML no parágrafo no local especificado.</span><span class="sxs-lookup"><span data-stu-id="2f70f-246">Inserts OOXML into the paragraph at the specified location.</span></span> <span data-ttu-id="2f70f-247">O valor de insertLocation pode ser 'Replace', 'Start' ou 'End'.</span><span class="sxs-lookup"><span data-stu-id="2f70f-247">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>

      <span data-ttu-id="2f70f-248">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2f70f-248">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertOoxml(ooxml, insertLocationString)'
    fullName: 'insertOoxml(ooxml, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertOoxml(ooxml: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
      return:
        type:
          - Word.Range
        description: ''
      parameters:
        - id: ooxml
          description: <span data-ttu-id="2f70f-249">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="2f70f-249">Required.</span></span> <span data-ttu-id="2f70f-250">O OOXML a ser inserido no parágrafo.</span><span class="sxs-lookup"><span data-stu-id="2f70f-250">The OOXML to be inserted in the paragraph.</span></span>
          type:
            - string
        - id: insertLocationString
          description: '<span data-ttu-id="2f70f-251">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="2f70f-251">Required.</span></span> <span data-ttu-id="2f70f-252">O valor pode ser ''Replace'', ''Start'' ou ''End''.</span><span class="sxs-lookup"><span data-stu-id="2f70f-252">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: word_release.Word.Paragraph.insertParagraph
    summary: |-
      <span data-ttu-id="2f70f-253">Insere um parágrafo no local especificado.</span><span class="sxs-lookup"><span data-stu-id="2f70f-253">Inserts a paragraph at the specified location.</span></span> <span data-ttu-id="2f70f-254">O valor de insertLocation pode ser 'Before' ou 'After'.</span><span class="sxs-lookup"><span data-stu-id="2f70f-254">The insertLocation value can be 'Before' or 'After'.</span></span>

      <span data-ttu-id="2f70f-255">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2f70f-255">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertParagraph(paragraphText, insertLocation)'
    fullName: 'insertParagraph(paragraphText, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertParagraph(paragraphText: string, insertLocation: Word.InsertLocation): Word.Paragraph;'
      return:
        type:
          - Word.Paragraph
        description: |-


          #### <a name="examples"></a><span data-ttu-id="2f70f-256">Exemplos</span><span class="sxs-lookup"><span data-stu-id="2f70f-256">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the paragraphs collection.
              var paragraphs = context.document.body.paragraphs;

              // Queue a commmand to load the style property for the top 2 paragraphs.
              // We never perform an empty load. We always must request a property.
              context.load(paragraphs, {select: 'style', top: 2} );

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {

                  // Queue a command to get the first paragraph.
                  var paragraph = paragraphs.items[0];

                  // Queue a command to insert the paragraph after the current paragraph.
                  paragraph.insertParagraph('Content of a new paragraph', Word.InsertLocation.after);

                  // Synchronize the document state by executing the queued commands,
                  // and return a promise to indicate task completion.
                  return context.sync().then(function () {
                      console.log('Inserted a new paragraph at the end of the first paragraph.');
                  });
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```typescript
          await Word.run(async (context) => {
            // Second sentence, let's insert it as a paragraph after the previously inserted one.
            let secondSentence = context.document.body.insertParagraph(
              "This is the first text with a custom style.",
              "End"
            );
            secondSentence.font.set({
              bold: false,
              italic: true,
              name: "Berlin Sans FB",
              color: "blue",
              size: 30
            });

            await context.sync();
          });
          ```
      parameters:
        - id: paragraphText
          description: <span data-ttu-id="2f70f-257">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="2f70f-257">Required.</span></span> <span data-ttu-id="2f70f-258">O texto do parágrafo a ser inserido.</span><span class="sxs-lookup"><span data-stu-id="2f70f-258">The paragraph text to be inserted.</span></span>
          type:
            - string
        - id: insertLocation
          description: <span data-ttu-id="2f70f-259">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="2f70f-259">Required.</span></span> <span data-ttu-id="2f70f-260">O valor pode ser 'Before' ou 'After'.</span><span class="sxs-lookup"><span data-stu-id="2f70f-260">The value can be 'Before' or 'After'.</span></span>
          type:
            - Word.InsertLocation
  - uid: word_release.Word.Paragraph.insertParagraph_1
    summary: |-
      <span data-ttu-id="2f70f-261">Insere um parágrafo no local especificado.</span><span class="sxs-lookup"><span data-stu-id="2f70f-261">Inserts a paragraph at the specified location.</span></span> <span data-ttu-id="2f70f-262">O valor de insertLocation pode ser 'Before' ou 'After'.</span><span class="sxs-lookup"><span data-stu-id="2f70f-262">The insertLocation value can be 'Before' or 'After'.</span></span>

      <span data-ttu-id="2f70f-263">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2f70f-263">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertParagraph(paragraphText, insertLocationString)'
    fullName: 'insertParagraph(paragraphText, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertParagraph(paragraphText: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Paragraph;'
      return:
        type:
          - Word.Paragraph
        description: ''
      parameters:
        - id: paragraphText
          description: <span data-ttu-id="2f70f-264">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="2f70f-264">Required.</span></span> <span data-ttu-id="2f70f-265">O texto do parágrafo a ser inserido.</span><span class="sxs-lookup"><span data-stu-id="2f70f-265">The paragraph text to be inserted.</span></span>
          type:
            - string
        - id: insertLocationString
          description: <span data-ttu-id="2f70f-266">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="2f70f-266">Required.</span></span> <span data-ttu-id="2f70f-267">O valor pode ser 'Before' ou 'After'.</span><span class="sxs-lookup"><span data-stu-id="2f70f-267">The value can be 'Before' or 'After'.</span></span>
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: word_release.Word.Paragraph.insertTable
    summary: |-
      <span data-ttu-id="2f70f-268">Insere uma tabela com a quantidade especificada de linhas e colunas.</span><span class="sxs-lookup"><span data-stu-id="2f70f-268">Inserts a table with the specified number of rows and columns.</span></span> <span data-ttu-id="2f70f-269">O valor de insertLocation pode ser 'Before' ou 'After'.</span><span class="sxs-lookup"><span data-stu-id="2f70f-269">The insertLocation value can be 'Before' or 'After'.</span></span>

      <span data-ttu-id="2f70f-270">\[[Conjunto de APIs: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2f70f-270">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertTable(rowCount, columnCount, insertLocation, values)'
    fullName: 'insertTable(rowCount, columnCount, insertLocation, values)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertTable(rowCount: number, columnCount: number, insertLocation: Word.InsertLocation, values?: string[][]): Word.Table;'
      return:
        type:
          - Word.Table
        description: ''
      parameters:
        - id: rowCount
          description: <span data-ttu-id="2f70f-271">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="2f70f-271">Required.</span></span> <span data-ttu-id="2f70f-272">A quantidade de linhas na tabela.</span><span class="sxs-lookup"><span data-stu-id="2f70f-272">The number of rows in the table.</span></span>
          type:
            - number
        - id: columnCount
          description: <span data-ttu-id="2f70f-273">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="2f70f-273">Required.</span></span> <span data-ttu-id="2f70f-274">A quantidade de colunas na tabela.</span><span class="sxs-lookup"><span data-stu-id="2f70f-274">The number of columns in the table.</span></span>
          type:
            - number
        - id: insertLocation
          description: <span data-ttu-id="2f70f-275">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="2f70f-275">Required.</span></span> <span data-ttu-id="2f70f-276">O valor pode ser 'Before' ou 'After'.</span><span class="sxs-lookup"><span data-stu-id="2f70f-276">The value can be 'Before' or 'After'.</span></span>
          type:
            - Word.InsertLocation
        - id: values
          description: <span data-ttu-id="2f70f-277">Matriz 2D opcional.</span><span class="sxs-lookup"><span data-stu-id="2f70f-277">Optional 2D array.</span></span> <span data-ttu-id="2f70f-278">As células serão preenchidas se as cadeias de caracteres correspondentes estiverem especificadas na matriz.</span><span class="sxs-lookup"><span data-stu-id="2f70f-278">Cells are filled if the corresponding strings are specified in the array.</span></span>
          type:
            - 'string[][]'
  - uid: word_release.Word.Paragraph.insertTable_1
    summary: |-
      <span data-ttu-id="2f70f-279">Insere uma tabela com a quantidade especificada de linhas e colunas.</span><span class="sxs-lookup"><span data-stu-id="2f70f-279">Inserts a table with the specified number of rows and columns.</span></span> <span data-ttu-id="2f70f-280">O valor de insertLocation pode ser 'Before' ou 'After'.</span><span class="sxs-lookup"><span data-stu-id="2f70f-280">The insertLocation value can be 'Before' or 'After'.</span></span>

      <span data-ttu-id="2f70f-281">\[[Conjunto de APIs: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2f70f-281">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertTable(rowCount, columnCount, insertLocationString, values)'
    fullName: 'insertTable(rowCount, columnCount, insertLocationString, values)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertTable(rowCount: number, columnCount: number, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace", values?: string[][]): Word.Table;'
      return:
        type:
          - Word.Table
        description: ''
      parameters:
        - id: rowCount
          description: <span data-ttu-id="2f70f-282">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="2f70f-282">Required.</span></span> <span data-ttu-id="2f70f-283">A quantidade de linhas na tabela.</span><span class="sxs-lookup"><span data-stu-id="2f70f-283">The number of rows in the table.</span></span>
          type:
            - number
        - id: columnCount
          description: <span data-ttu-id="2f70f-284">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="2f70f-284">Required.</span></span> <span data-ttu-id="2f70f-285">A quantidade de colunas na tabela.</span><span class="sxs-lookup"><span data-stu-id="2f70f-285">The number of columns in the table.</span></span>
          type:
            - number
        - id: insertLocationString
          description: <span data-ttu-id="2f70f-286">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="2f70f-286">Required.</span></span> <span data-ttu-id="2f70f-287">O valor pode ser 'Before' ou 'After'.</span><span class="sxs-lookup"><span data-stu-id="2f70f-287">The value can be 'Before' or 'After'.</span></span>
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
        - id: values
          description: <span data-ttu-id="2f70f-288">Matriz 2D opcional.</span><span class="sxs-lookup"><span data-stu-id="2f70f-288">Optional 2D array.</span></span> <span data-ttu-id="2f70f-289">As células serão preenchidas se as cadeias de caracteres correspondentes estiverem especificadas na matriz.</span><span class="sxs-lookup"><span data-stu-id="2f70f-289">Cells are filled if the corresponding strings are specified in the array.</span></span>
          type:
            - 'string[][]'
  - uid: word_release.Word.Paragraph.insertText
    summary: |-
      <span data-ttu-id="2f70f-290">Insere texto no local especificado dentro do parágrafo.</span><span class="sxs-lookup"><span data-stu-id="2f70f-290">Inserts text into the paragraph at the specified location.</span></span> <span data-ttu-id="2f70f-291">O valor de insertLocation pode ser 'Replace', 'Start' ou 'End'.</span><span class="sxs-lookup"><span data-stu-id="2f70f-291">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>

      <span data-ttu-id="2f70f-292">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2f70f-292">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertText(text, insertLocation)'
    fullName: 'insertText(text, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertText(text: string, insertLocation: Word.InsertLocation): Word.Range;'
      return:
        type:
          - Word.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="2f70f-293">Exemplos</span><span class="sxs-lookup"><span data-stu-id="2f70f-293">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the paragraphs collection.
              var paragraphs = context.document.body.paragraphs;

              // Queue a commmand to load the style property for the top 2 paragraphs.
              // We never perform an empty load. We always must request a property.
              context.load(paragraphs, {select: 'style', top: 2} );

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {

                  // Queue a command to get the first paragraph.
                  var paragraph = paragraphs.items[0];

                  // Queue a command to insert text into the end of the paragraph.
                  paragraph.insertText('New text inserted into the paragraph.', Word.InsertLocation.end);

                  // Synchronize the document state by executing the queued commands,
                  // and return a promise to indicate task completion.
                  return context.sync().then(function () {
                      console.log('Inserted text at the end of the first paragraph.');
                  });
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```typescript
          await Word.run(async (context) => {
            // Replace the last paragraph.
            let range = context.document.body.paragraphs.getLast().insertText("Just replaced the last paragraph!", "Replace");
            range.font.highlightColor = "black";
            range.font.color = "white";

            await context.sync();
          });
          ```
      parameters:
        - id: text
          description: <span data-ttu-id="2f70f-294">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="2f70f-294">Required.</span></span> <span data-ttu-id="2f70f-295">Texto a inserir.</span><span class="sxs-lookup"><span data-stu-id="2f70f-295">Text to be inserted.</span></span>
          type:
            - string
        - id: insertLocation
          description: '<span data-ttu-id="2f70f-296">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="2f70f-296">Required.</span></span> <span data-ttu-id="2f70f-297">O valor pode ser ''Replace'', ''Start'' ou ''End''.</span><span class="sxs-lookup"><span data-stu-id="2f70f-297">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - Word.InsertLocation
  - uid: word_release.Word.Paragraph.insertText_1
    summary: |-
      <span data-ttu-id="2f70f-298">Insere texto no local especificado dentro do parágrafo.</span><span class="sxs-lookup"><span data-stu-id="2f70f-298">Inserts text into the paragraph at the specified location.</span></span> <span data-ttu-id="2f70f-299">O valor de insertLocation pode ser 'Replace', 'Start' ou 'End'.</span><span class="sxs-lookup"><span data-stu-id="2f70f-299">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>

      <span data-ttu-id="2f70f-300">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2f70f-300">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertText(text, insertLocationString)'
    fullName: 'insertText(text, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertText(text: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
      return:
        type:
          - Word.Range
        description: ''
      parameters:
        - id: text
          description: <span data-ttu-id="2f70f-301">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="2f70f-301">Required.</span></span> <span data-ttu-id="2f70f-302">Texto a inserir.</span><span class="sxs-lookup"><span data-stu-id="2f70f-302">Text to be inserted.</span></span>
          type:
            - string
        - id: insertLocationString
          description: '<span data-ttu-id="2f70f-303">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="2f70f-303">Required.</span></span> <span data-ttu-id="2f70f-304">O valor pode ser ''Replace'', ''Start'' ou ''End''.</span><span class="sxs-lookup"><span data-stu-id="2f70f-304">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: word_release.Word.Paragraph.isLastParagraph
    summary: |-
      <span data-ttu-id="2f70f-305">Indica que o parágrafo é o último dentro do corpo do pai.</span><span class="sxs-lookup"><span data-stu-id="2f70f-305">Indicates the paragraph is the last one inside its parent body.</span></span> <span data-ttu-id="2f70f-306">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="2f70f-306">Read-only.</span></span>

      <span data-ttu-id="2f70f-307">\[[Conjunto de APIs: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2f70f-307">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: isLastParagraph
    fullName: isLastParagraph
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly isLastParagraph: boolean;'
      return:
        type:
          - boolean
  - uid: word_release.Word.Paragraph.isListItem
    summary: |-
      <span data-ttu-id="2f70f-308">Verifica se o parágrafo é um item da lista.</span><span class="sxs-lookup"><span data-stu-id="2f70f-308">Checks whether the paragraph is a list item.</span></span> <span data-ttu-id="2f70f-309">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="2f70f-309">Read-only.</span></span>

      <span data-ttu-id="2f70f-310">\[[Conjunto de APIs: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2f70f-310">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: isListItem
    fullName: isListItem
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly isListItem: boolean;'
      return:
        type:
          - boolean
  - uid: word_release.Word.Paragraph.leftIndent
    summary: |-
      <span data-ttu-id="2f70f-311">Obtém ou define o valor de recuo à esquerda, em pontos, para o parágrafo.</span><span class="sxs-lookup"><span data-stu-id="2f70f-311">Gets or sets the left indent value, in points, for the paragraph.</span></span>

      <span data-ttu-id="2f70f-312">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2f70f-312">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: leftIndent
    fullName: leftIndent
    langs:
      - typeScript
    type: property
    syntax:
      content: 'leftIndent: number;'
      return:
        type:
          - number
        description: |-


          #### <a name="examples"></a><span data-ttu-id="2f70f-313">Exemplos</span><span class="sxs-lookup"><span data-stu-id="2f70f-313">Examples</span></span>

          ```typescript
          await Word.run(async (context) => {
            // Indents the first paragraph.
            context.document.body.paragraphs.getFirst().leftIndent = 75; //units = points

            return context.sync();
          });
          ```
  - uid: word_release.Word.Paragraph.lineSpacing
    summary: |-
      <span data-ttu-id="2f70f-314">Obtém ou define o espaçamento entre linhas, em pontos, para o parágrafo especificado.</span><span class="sxs-lookup"><span data-stu-id="2f70f-314">Gets or sets the line spacing, in points, for the specified paragraph.</span></span> <span data-ttu-id="2f70f-315">Na interface do usuário do Word, esse valor é dividido por 12.</span><span class="sxs-lookup"><span data-stu-id="2f70f-315">In the Word UI, this value is divided by 12.</span></span>

      <span data-ttu-id="2f70f-316">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2f70f-316">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: lineSpacing
    fullName: lineSpacing
    langs:
      - typeScript
    type: property
    syntax:
      content: 'lineSpacing: number;'
      return:
        type:
          - number
        description: |-


          #### <a name="examples"></a><span data-ttu-id="2f70f-317">Exemplos</span><span class="sxs-lookup"><span data-stu-id="2f70f-317">Examples</span></span>

          ```typescript
          await Word.run(async (context) => {
            // Adjusts line spacing.
            context.document.body.paragraphs.getFirst().lineSpacing = 20;

            await context.sync();
          });
          ```
  - uid: word_release.Word.Paragraph.lineUnitAfter
    summary: |-
      <span data-ttu-id="2f70f-318">Obtém ou define a quantidade de espaçamento, em linhas de grade, após o parágrafo.</span><span class="sxs-lookup"><span data-stu-id="2f70f-318">Gets or sets the amount of spacing, in grid lines, after the paragraph.</span></span>

      <span data-ttu-id="2f70f-319">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2f70f-319">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: lineUnitAfter
    fullName: lineUnitAfter
    langs:
      - typeScript
    type: property
    syntax:
      content: 'lineUnitAfter: number;'
      return:
        type:
          - number
  - uid: word_release.Word.Paragraph.lineUnitBefore
    summary: |-
      <span data-ttu-id="2f70f-320">Obtém ou define a quantidade de espaçamento, em linhas de grade, antes do parágrafo.</span><span class="sxs-lookup"><span data-stu-id="2f70f-320">Gets or sets the amount of spacing, in grid lines, before the paragraph.</span></span>

      <span data-ttu-id="2f70f-321">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2f70f-321">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: lineUnitBefore
    fullName: lineUnitBefore
    langs:
      - typeScript
    type: property
    syntax:
      content: 'lineUnitBefore: number;'
      return:
        type:
          - number
  - uid: word_release.Word.Paragraph.list
    summary: |-
      <span data-ttu-id="2f70f-322">Obtém a lista à qual pertence esse parágrafo.</span><span class="sxs-lookup"><span data-stu-id="2f70f-322">Gets the List to which this paragraph belongs.</span></span> <span data-ttu-id="2f70f-323">Lança se o parágrafo não está em uma lista.</span><span class="sxs-lookup"><span data-stu-id="2f70f-323">Throws if the paragraph is not in a list.</span></span> <span data-ttu-id="2f70f-324">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="2f70f-324">Read-only.</span></span>

      <span data-ttu-id="2f70f-325">\[[Conjunto de APIs: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2f70f-325">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: list
    fullName: list
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly list: Word.List;'
      return:
        type:
          - word.Word.List
  - uid: word_release.Word.Paragraph.listItem
    summary: |-
      <span data-ttu-id="2f70f-326">Obtém o ListItem para o parágrafo.</span><span class="sxs-lookup"><span data-stu-id="2f70f-326">Gets the ListItem for the paragraph.</span></span> <span data-ttu-id="2f70f-327">Lança se o parágrafo não faz parte de uma lista.</span><span class="sxs-lookup"><span data-stu-id="2f70f-327">Throws if the paragraph is not part of a list.</span></span> <span data-ttu-id="2f70f-328">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="2f70f-328">Read-only.</span></span>

      <span data-ttu-id="2f70f-329">\[[Conjunto de APIs: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2f70f-329">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: listItem
    fullName: listItem
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly listItem: Word.ListItem;'
      return:
        type:
          - word.Word.ListItem
  - uid: word_release.Word.Paragraph.listItemOrNullObject
    summary: |-
      <span data-ttu-id="2f70f-330">Obtém o ListItem para o parágrafo.</span><span class="sxs-lookup"><span data-stu-id="2f70f-330">Gets the ListItem for the paragraph.</span></span> <span data-ttu-id="2f70f-331">Retorna um objeto nulo se o parágrafo não fizer parte de uma lista.</span><span class="sxs-lookup"><span data-stu-id="2f70f-331">Returns a null object if the paragraph is not part of a list.</span></span> <span data-ttu-id="2f70f-332">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="2f70f-332">Read-only.</span></span>

      <span data-ttu-id="2f70f-333">\[[Conjunto de APIs: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2f70f-333">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: listItemOrNullObject
    fullName: listItemOrNullObject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly listItemOrNullObject: Word.ListItem;'
      return:
        type:
          - word.Word.ListItem
  - uid: word_release.Word.Paragraph.listOrNullObject
    summary: |-
      <span data-ttu-id="2f70f-334">Obtém a lista à qual pertence esse parágrafo.</span><span class="sxs-lookup"><span data-stu-id="2f70f-334">Gets the List to which this paragraph belongs.</span></span> <span data-ttu-id="2f70f-335">Retorna um objeto nulo se o parágrafo não estiver em uma lista.</span><span class="sxs-lookup"><span data-stu-id="2f70f-335">Returns a null object if the paragraph is not in a list.</span></span> <span data-ttu-id="2f70f-336">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="2f70f-336">Read-only.</span></span>

      <span data-ttu-id="2f70f-337">\[[Conjunto de APIs: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2f70f-337">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: listOrNullObject
    fullName: listOrNullObject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly listOrNullObject: Word.List;'
      return:
        type:
          - word.Word.List
  - uid: word_release.Word.Paragraph.load
    summary: <span data-ttu-id="2f70f-338">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="2f70f-338">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="2f70f-339">Você deve chamar "context.sync()" antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="2f70f-339">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="2f70f-340">Além dessa assinatura, este método tem as seguintes assinaturas:</span><span class="sxs-lookup"><span data-stu-id="2f70f-340">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="2f70f-341">`load(option?: string | string[]): Word.Paragraph`-Where Option é uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="2f70f-341">`load(option?: string | string[]): Word.Paragraph` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="2f70f-342">`load(option?: { select?: string; expand?: string; }): Word.Paragraph`-Onde Option. Select é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades a serem carregadas, e Options. Expand é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades de navegação a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="2f70f-342">`load(option?: { select?: string; expand?: string; }): Word.Paragraph` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="2f70f-343">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.Paragraph`– Disponível somente nos tipos de coleção.</span><span class="sxs-lookup"><span data-stu-id="2f70f-343">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.Paragraph` - Only available on collection types.</span></span> <span data-ttu-id="2f70f-344">É semelhante à assinatura anterior.</span><span class="sxs-lookup"><span data-stu-id="2f70f-344">It is similar to the preceding signature.</span></span> <span data-ttu-id="2f70f-345">Option. Top especifica o número máximo de itens de coleta que podem ser incluídos no resultado.</span><span class="sxs-lookup"><span data-stu-id="2f70f-345">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="2f70f-346">Option. Skip especifica o número de itens que devem ser ignorados e não incluídos no resultado.</span><span class="sxs-lookup"><span data-stu-id="2f70f-346">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="2f70f-347">Se Option. Top for especificado, o conjunto de resultados será iniciado depois de ignorar o número de itens especificado.</span><span class="sxs-lookup"><span data-stu-id="2f70f-347">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Word.Interfaces.ParagraphLoadOptions): Word.Paragraph;'
      return:
        type:
          - Word.Paragraph
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - Word.Interfaces.ParagraphLoadOptions
  - uid: word_release.Word.Paragraph.load_1
    summary: <span data-ttu-id="2f70f-348">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="2f70f-348">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="2f70f-349">Você deve chamar `context.sync()` antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="2f70f-349">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Word.Paragraph;'
      return:
        type:
          - Word.Paragraph
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="2f70f-350">Uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="2f70f-350">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: word_release.Word.Paragraph.load_2
    summary: <span data-ttu-id="2f70f-351">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="2f70f-351">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="2f70f-352">Você deve chamar `context.sync()` antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="2f70f-352">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Word.Paragraph;'
      return:
        type:
          - Word.Paragraph
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="2f70f-353">Onde propertyNamesAndPaths. Select é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades a serem carregadas e propertyNamesAndPaths. Expand é uma sequência de caracteres delimitada por vírgula que especifica as propriedades de navegação a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="2f70f-353">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: word_release.Word.Paragraph.outlineLevel
    summary: |-
      <span data-ttu-id="2f70f-354">Obtém ou define o nível de estrutura de tópicos para o parágrafo.</span><span class="sxs-lookup"><span data-stu-id="2f70f-354">Gets or sets the outline level for the paragraph.</span></span>

      <span data-ttu-id="2f70f-355">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2f70f-355">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: outlineLevel
    fullName: outlineLevel
    langs:
      - typeScript
    type: property
    syntax:
      content: 'outlineLevel: number;'
      return:
        type:
          - number
  - uid: word_release.Word.Paragraph.parentBody
    summary: |-
      <span data-ttu-id="2f70f-356">Obtém o corpo pai do parágrafo.</span><span class="sxs-lookup"><span data-stu-id="2f70f-356">Gets the parent body of the paragraph.</span></span> <span data-ttu-id="2f70f-357">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="2f70f-357">Read-only.</span></span>

      <span data-ttu-id="2f70f-358">\[[Conjunto de APIs: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2f70f-358">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: parentBody
    fullName: parentBody
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentBody: Word.Body;'
      return:
        type:
          - Word.Body
  - uid: word_release.Word.Paragraph.parentContentControl
    summary: |-
      <span data-ttu-id="2f70f-359">Obtém o controle de conteúdo que inclui o parágrafo.</span><span class="sxs-lookup"><span data-stu-id="2f70f-359">Gets the content control that contains the paragraph.</span></span> <span data-ttu-id="2f70f-360">Gera se não há um controle de conteúdo pai.</span><span class="sxs-lookup"><span data-stu-id="2f70f-360">Throws if there isn't a parent content control.</span></span> <span data-ttu-id="2f70f-361">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="2f70f-361">Read-only.</span></span>

      <span data-ttu-id="2f70f-362">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2f70f-362">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: parentContentControl
    fullName: parentContentControl
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentContentControl: Word.ContentControl;'
      return:
        type:
          - word.Word.ContentControl
  - uid: word_release.Word.Paragraph.parentContentControlOrNullObject
    summary: |-
      <span data-ttu-id="2f70f-363">Obtém o controle de conteúdo que inclui o parágrafo.</span><span class="sxs-lookup"><span data-stu-id="2f70f-363">Gets the content control that contains the paragraph.</span></span> <span data-ttu-id="2f70f-364">Retorna um objeto NULL se não houver um controle de conteúdo pai.</span><span class="sxs-lookup"><span data-stu-id="2f70f-364">Returns a null object if there isn't a parent content control.</span></span> <span data-ttu-id="2f70f-365">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="2f70f-365">Read-only.</span></span>

      <span data-ttu-id="2f70f-366">\[[Conjunto de APIs: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2f70f-366">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: parentContentControlOrNullObject
    fullName: parentContentControlOrNullObject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentContentControlOrNullObject: Word.ContentControl;'
      return:
        type:
          - word.Word.ContentControl
  - uid: word_release.Word.Paragraph.parentTable
    summary: |-
      <span data-ttu-id="2f70f-367">Obtém a tabela que contém o parágrafo.</span><span class="sxs-lookup"><span data-stu-id="2f70f-367">Gets the table that contains the paragraph.</span></span> <span data-ttu-id="2f70f-368">Lança se não está contida em uma tabela.</span><span class="sxs-lookup"><span data-stu-id="2f70f-368">Throws if it is not contained in a table.</span></span> <span data-ttu-id="2f70f-369">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="2f70f-369">Read-only.</span></span>

      <span data-ttu-id="2f70f-370">\[[Conjunto de APIs: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2f70f-370">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: parentTable
    fullName: parentTable
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentTable: Word.Table;'
      return:
        type:
          - Word.Table
  - uid: word_release.Word.Paragraph.parentTableCell
    summary: |-
      <span data-ttu-id="2f70f-371">Obtém a célula de tabela que contém o parágrafo.</span><span class="sxs-lookup"><span data-stu-id="2f70f-371">Gets the table cell that contains the paragraph.</span></span> <span data-ttu-id="2f70f-372">Lança se não está contida em uma célula de tabela.</span><span class="sxs-lookup"><span data-stu-id="2f70f-372">Throws if it is not contained in a table cell.</span></span> <span data-ttu-id="2f70f-373">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="2f70f-373">Read-only.</span></span>

      <span data-ttu-id="2f70f-374">\[[Conjunto de APIs: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2f70f-374">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: parentTableCell
    fullName: parentTableCell
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentTableCell: Word.TableCell;'
      return:
        type:
          - Word.TableCell
  - uid: word_release.Word.Paragraph.parentTableCellOrNullObject
    summary: |-
      <span data-ttu-id="2f70f-375">Obtém a célula de tabela que contém o parágrafo.</span><span class="sxs-lookup"><span data-stu-id="2f70f-375">Gets the table cell that contains the paragraph.</span></span> <span data-ttu-id="2f70f-376">Retorna um objeto nulo se não estiver contido em uma célula de tabela.</span><span class="sxs-lookup"><span data-stu-id="2f70f-376">Returns a null object if it is not contained in a table cell.</span></span> <span data-ttu-id="2f70f-377">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="2f70f-377">Read-only.</span></span>

      <span data-ttu-id="2f70f-378">\[[Conjunto de APIs: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2f70f-378">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: parentTableCellOrNullObject
    fullName: parentTableCellOrNullObject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentTableCellOrNullObject: Word.TableCell;'
      return:
        type:
          - Word.TableCell
  - uid: word_release.Word.Paragraph.parentTableOrNullObject
    summary: |-
      <span data-ttu-id="2f70f-379">Obtém a tabela que contém o parágrafo.</span><span class="sxs-lookup"><span data-stu-id="2f70f-379">Gets the table that contains the paragraph.</span></span> <span data-ttu-id="2f70f-380">Retorna um objeto nulo se não estiver contido em uma tabela.</span><span class="sxs-lookup"><span data-stu-id="2f70f-380">Returns a null object if it is not contained in a table.</span></span> <span data-ttu-id="2f70f-381">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="2f70f-381">Read-only.</span></span>

      <span data-ttu-id="2f70f-382">\[[Conjunto de APIs: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2f70f-382">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: parentTableOrNullObject
    fullName: parentTableOrNullObject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentTableOrNullObject: Word.Table;'
      return:
        type:
          - Word.Table
  - uid: word_release.Word.Paragraph.rightIndent
    summary: |-
      <span data-ttu-id="2f70f-383">Obtém ou define o valor de recuo à direita, em pontos, para o parágrafo.</span><span class="sxs-lookup"><span data-stu-id="2f70f-383">Gets or sets the right indent value, in points, for the paragraph.</span></span>

      <span data-ttu-id="2f70f-384">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2f70f-384">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: rightIndent
    fullName: rightIndent
    langs:
      - typeScript
    type: property
    syntax:
      content: 'rightIndent: number;'
      return:
        type:
          - number
  - uid: word_release.Word.Paragraph.search
    summary: |-
      <span data-ttu-id="2f70f-385">Realiza uma pesquisa com o Searchoptions especificado no escopo do objeto Paragraph.</span><span class="sxs-lookup"><span data-stu-id="2f70f-385">Performs a search with the specified SearchOptions on the scope of the paragraph object.</span></span> <span data-ttu-id="2f70f-386">Os resultados da pesquisa são uma coleção de objetos Range.</span><span class="sxs-lookup"><span data-stu-id="2f70f-386">The search results are a collection of range objects.</span></span>

      <span data-ttu-id="2f70f-387">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2f70f-387">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'search(searchText, searchOptions)'
    fullName: 'search(searchText, searchOptions)'
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        search(searchText: string, searchOptions?: Word.SearchOptions | {
                    ignorePunct?: boolean;
                    ignoreSpace?: boolean;
                    matchCase?: boolean;
                    matchPrefix?: boolean;
                    matchSuffix?: boolean;
                    matchWholeWord?: boolean;
                    matchWildcards?: boolean;
                }): Word.RangeCollection;
      return:
        type:
          - Word.RangeCollection
        description: ''
      parameters:
        - id: searchText
          description: <span data-ttu-id="2f70f-388">Obrigatória.</span><span class="sxs-lookup"><span data-stu-id="2f70f-388">Required.</span></span> <span data-ttu-id="2f70f-389">O texto da pesquisa.</span><span class="sxs-lookup"><span data-stu-id="2f70f-389">The search text.</span></span>
          type:
            - string
        - id: searchOptions
          description: <span data-ttu-id="2f70f-390">Opcional.</span><span class="sxs-lookup"><span data-stu-id="2f70f-390">Optional.</span></span> <span data-ttu-id="2f70f-391">Opções da pesquisa.</span><span class="sxs-lookup"><span data-stu-id="2f70f-391">Options for the search.</span></span>
          type:
            - |-
              Word.SearchOptions | {
                          ignorePunct?: boolean;
                          ignoreSpace?: boolean;
                          matchCase?: boolean;
                          matchPrefix?: boolean;
                          matchSuffix?: boolean;
                          matchWholeWord?: boolean;
                          matchWildcards?: boolean;
                      }
  - uid: word_release.Word.Paragraph.select
    summary: |-
      <span data-ttu-id="2f70f-392">Seleciona e navega na interface do usuário do Word até o parágrafo.</span><span class="sxs-lookup"><span data-stu-id="2f70f-392">Selects and navigates the Word UI to the paragraph.</span></span>

      <span data-ttu-id="2f70f-393">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2f70f-393">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: select(selectionMode)
    fullName: select(selectionMode)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'select(selectionMode?: Word.SelectionMode): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="2f70f-394">Exemplos</span><span class="sxs-lookup"><span data-stu-id="2f70f-394">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the paragraphs collection.
              var paragraphs = context.document.body.paragraphs;

              // Queue a commmand to load the style property for all of the paragraphs.
              context.load(paragraphs, 'style');

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {

                  // Queue a command to get the last paragraph a create a
                  // proxy paragraph object.
                  var paragraph = paragraphs.items[paragraphs.items.length - 1];

                  // Queue a command to select the paragraph. The Word UI will
                  // move to the selected paragraph.
                  paragraph.select();

                  // Synchronize the document state by executing the queued commands,
                  // and return a promise to indicate task completion.
                  return context.sync().then(function () {
                      console.log('Selected the last paragraph.');
                  });
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```typescript
          await Word.run(async (context) => {
            // If select is called with no parameters, it selects the object.
            context.document.body.paragraphs.getLast().select();

            await context.sync();
          });
          ```
          ```typescript
          await Word.run(async (context) => {
            // Select can be at the start or end of a range; this by definition moves the insertion point without selecting the range.
            context.document.body.paragraphs.getLast().select("End");

            await context.sync();
          });
          ```
      parameters:
        - id: selectionMode
          description: '<span data-ttu-id="2f70f-395">Opcional.</span><span class="sxs-lookup"><span data-stu-id="2f70f-395">Optional.</span></span> <span data-ttu-id="2f70f-396">O modo de seleção pode ser ''Select'', ''Start'' ou ''End''.</span><span class="sxs-lookup"><span data-stu-id="2f70f-396">The selection mode can be ''Select'', ''Start'', or ''End''.</span></span> <span data-ttu-id="2f70f-397">''Select'' é o padrão.</span><span class="sxs-lookup"><span data-stu-id="2f70f-397">''Select'' is the default.</span></span>'
          type:
            - Word.SelectionMode
  - uid: word_release.Word.Paragraph.select_1
    summary: |-
      <span data-ttu-id="2f70f-398">Seleciona e navega na interface do usuário do Word até o parágrafo.</span><span class="sxs-lookup"><span data-stu-id="2f70f-398">Selects and navigates the Word UI to the paragraph.</span></span>

      <span data-ttu-id="2f70f-399">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2f70f-399">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: select(selectionModeString)
    fullName: select(selectionModeString)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'select(selectionModeString?: "Select" | "Start" | "End"): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: selectionModeString
          description: '<span data-ttu-id="2f70f-400">Opcional.</span><span class="sxs-lookup"><span data-stu-id="2f70f-400">Optional.</span></span> <span data-ttu-id="2f70f-401">O modo de seleção pode ser ''Select'', ''Start'' ou ''End''.</span><span class="sxs-lookup"><span data-stu-id="2f70f-401">The selection mode can be ''Select'', ''Start'', or ''End''.</span></span> <span data-ttu-id="2f70f-402">''Select'' é o padrão.</span><span class="sxs-lookup"><span data-stu-id="2f70f-402">''Select'' is the default.</span></span>'
          type:
            - '"Select" | "Start" | "End"'
  - uid: word_release.Word.Paragraph.set
    summary: '<span data-ttu-id="2f70f-403">Define várias propriedades de um objeto ao mesmo tempo.</span><span class="sxs-lookup"><span data-stu-id="2f70f-403">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="2f70f-404">Você pode passar um objeto simples com as propriedades apropriadas ou outro objeto API do mesmo tipo.</span><span class="sxs-lookup"><span data-stu-id="2f70f-404">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="2f70f-405">Este método tem a seguinte assinatura adicional:</span><span class="sxs-lookup"><span data-stu-id="2f70f-405">This method has the following additional signature:</span></span>

      `set(properties: Word.Paragraph): void`

      #### <a name="examples"></a><span data-ttu-id="2f70f-406">Exemplos</span><span class="sxs-lookup"><span data-stu-id="2f70f-406">Examples</span></span>

      ```typescript
      await Word.run(async (context) => {
        const paragraph = context.document.body.paragraphs.getFirst();
        paragraph.set({
          leftIndent: 30,
          font: {
            bold: true,
            color: "red"
          }
        });

        await context.sync();
      });
      ```
      ```typescript
      await Word.run(async (context) => {
        const firstParagraph = context.document.body.paragraphs.getFirst();
        const secondParagraph = firstParagraph.getNext();
        firstParagraph.load("text, font/color, font/bold, leftIndent");

        await context.sync();

        secondParagraph.set(firstParagraph);

        await context.sync();
      });
      ```
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.ParagraphUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="2f70f-407">Um objeto JavaScript com propriedades que são estruturadas isomorphically para as propriedades do objeto no qual o método é chamado.</span><span class="sxs-lookup"><span data-stu-id="2f70f-407">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - Interfaces.ParagraphUpdateData
        - id: options
          description: <span data-ttu-id="2f70f-408">Fornece uma opção para suprimir erros se o objeto Properties tentar definir qualquer propriedade somente leitura.</span><span class="sxs-lookup"><span data-stu-id="2f70f-408">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - office.OfficeExtension.UpdateOptions
  - uid: word_release.Word.Paragraph.set_1
    summary: '<span data-ttu-id="2f70f-409">Define várias propriedades no objeto ao mesmo tempo, com base em um objeto carregado existente.</span><span class="sxs-lookup"><span data-stu-id="2f70f-409">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Word.Paragraph): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - Word.Paragraph
  - uid: word_release.Word.Paragraph.spaceAfter
    summary: |-
      <span data-ttu-id="2f70f-410">Obtém ou define o espaçamento, em pontos, após o parágrafo.</span><span class="sxs-lookup"><span data-stu-id="2f70f-410">Gets or sets the spacing, in points, after the paragraph.</span></span>

      <span data-ttu-id="2f70f-411">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2f70f-411">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: spaceAfter
    fullName: spaceAfter
    langs:
      - typeScript
    type: property
    syntax:
      content: 'spaceAfter: number;'
      return:
        type:
          - number
        description: |-


          #### <a name="examples"></a><span data-ttu-id="2f70f-412">Exemplos</span><span class="sxs-lookup"><span data-stu-id="2f70f-412">Examples</span></span>

          ```typescript
          await Word.run(async (context) => {
            // Adjust space between paragraphs.
            context.document.body.paragraphs.getFirst().spaceAfter = 20;

            await context.sync();
          });
          ```
  - uid: word_release.Word.Paragraph.spaceBefore
    summary: |-
      <span data-ttu-id="2f70f-413">Obtém ou define o espaçamento, em pontos, antes o parágrafo.</span><span class="sxs-lookup"><span data-stu-id="2f70f-413">Gets or sets the spacing, in points, before the paragraph.</span></span>

      <span data-ttu-id="2f70f-414">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2f70f-414">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: spaceBefore
    fullName: spaceBefore
    langs:
      - typeScript
    type: property
    syntax:
      content: 'spaceBefore: number;'
      return:
        type:
          - number
  - uid: word_release.Word.Paragraph.split
    summary: |-
      <span data-ttu-id="2f70f-415">Divide o parágrafo em intervalos filho usando delimitadores.</span><span class="sxs-lookup"><span data-stu-id="2f70f-415">Splits the paragraph into child ranges by using delimiters.</span></span>

      <span data-ttu-id="2f70f-416">\[[Conjunto de APIs: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2f70f-416">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'split(delimiters, trimDelimiters, trimSpacing)'
    fullName: 'split(delimiters, trimDelimiters, trimSpacing)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'split(delimiters: string[], trimDelimiters?: boolean, trimSpacing?: boolean): Word.RangeCollection;'
      return:
        type:
          - Word.RangeCollection
        description: |-


          #### <a name="examples"></a><span data-ttu-id="2f70f-417">Exemplos</span><span class="sxs-lookup"><span data-stu-id="2f70f-417">Examples</span></span>

          ```typescript
          await Word.run(async (context) => {
            let paragraph = context.document.body.paragraphs.getFirst();
            let words = paragraph.split([" "], true /* trimDelimiters*/, true /* trimSpaces */);
            words.load("text");

            await context.sync();

            for (let i = 0; i < words.items.length; i++) {
              if (i >= 1) {
                words.items[i - 1].font.highlightColor = "#FFFFFF";
              }
              words.items[i].font.highlightColor = "#FFFF00";

              await context.sync();
              await pause(200);
            }
          });
          ```
      parameters:
        - id: delimiters
          description: <span data-ttu-id="2f70f-418">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="2f70f-418">Required.</span></span> <span data-ttu-id="2f70f-419">Os delimitadores como uma matriz de cadeias de caracteres.</span><span class="sxs-lookup"><span data-stu-id="2f70f-419">The delimiters as an array of strings.</span></span>
          type:
            - 'string[]'
        - id: trimDelimiters
          description: '<span data-ttu-id="2f70f-420">Opcional.</span><span class="sxs-lookup"><span data-stu-id="2f70f-420">Optional.</span></span> <span data-ttu-id="2f70f-421">Indica se os delimitadores serão desoudos dos intervalos na coleção Range.</span><span class="sxs-lookup"><span data-stu-id="2f70f-421">Indicates whether to trim delimiters from the ranges in the range collection.</span></span> <span data-ttu-id="2f70f-422">O padrão é false, que indica que os delimitadores estão incluídos nos intervalos retornados na coleção Range.</span><span class="sxs-lookup"><span data-stu-id="2f70f-422">Default is false which indicates that the delimiters are included in the ranges returned in the range collection.</span></span>'
          type:
            - boolean
        - id: trimSpacing
          description: '<span data-ttu-id="2f70f-423">Opcional.</span><span class="sxs-lookup"><span data-stu-id="2f70f-423">Optional.</span></span> <span data-ttu-id="2f70f-424">Indica se os caracteres de espaçamento (espaços, guias, quebras de coluna e marcas de fim de parágrafo) devem ser aparados do início e do fim dos intervalos retornados na coleção Range.</span><span class="sxs-lookup"><span data-stu-id="2f70f-424">Indicates whether to trim spacing characters (spaces, tabs, column breaks, and paragraph end marks) from the start and end of the ranges returned in the range collection.</span></span> <span data-ttu-id="2f70f-425">O padrão é false, que indica que os caracteres de espaçamento no início e no final dos intervalos estão incluídos na coleção Range.</span><span class="sxs-lookup"><span data-stu-id="2f70f-425">Default is false which indicates that spacing characters at the start and end of the ranges are included in the range collection.</span></span>'
          type:
            - boolean
  - uid: word_release.Word.Paragraph.startNewList
    summary: |-
      <span data-ttu-id="2f70f-426">Inicia uma nova lista com este parágrafo.</span><span class="sxs-lookup"><span data-stu-id="2f70f-426">Starts a new list with this paragraph.</span></span> <span data-ttu-id="2f70f-427">Falhará se o parágrafo já for um item da lista.</span><span class="sxs-lookup"><span data-stu-id="2f70f-427">Fails if the paragraph is already a list item.</span></span>

      <span data-ttu-id="2f70f-428">\[[Conjunto de APIs: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2f70f-428">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: startNewList()
    fullName: startNewList()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'startNewList(): Word.List;'
      return:
        type:
          - word.Word.List
        description: |-


          #### <a name="examples"></a><span data-ttu-id="2f70f-429">Exemplos</span><span class="sxs-lookup"><span data-stu-id="2f70f-429">Examples</span></span>

          ```typescript
          // This example starts a new list stating with the second paragraph.
          await Word.run(async (context) => {
            let paragraphs = context.document.body.paragraphs;
            paragraphs.load("$none"); // No properties needed.

            await context.sync();

            var list = paragraphs.items[1].startNewList(); // Indicates new list to be started in the second paragraph.
            list.load("$none"); // No properties needed.

            await context.sync();

            // To add new items to the list use start/end on the insert location parameter.
            list.insertParagraph("New list item on top of the list", "Start");
            let paragraph = list.insertParagraph("New list item at the end of the list (4th level)", "End");
            paragraph.listItem.level = 4; // Sets up list level for the lsit item.
            // To add paragraphs outside the list use before/after:
            list.insertParagraph("New paragraph goes after (not part of the list)", "After");

            await context.sync();
          });
          ```
  - uid: word_release.Word.Paragraph.style
    summary: |-
      <span data-ttu-id="2f70f-430">Obtém ou define o nome do estilo para o parágrafo.</span><span class="sxs-lookup"><span data-stu-id="2f70f-430">Gets or sets the style name for the paragraph.</span></span> <span data-ttu-id="2f70f-431">Use esta propriedade de estilos personalizados e nomes de estilo localizados.</span><span class="sxs-lookup"><span data-stu-id="2f70f-431">Use this property for custom styles and localized style names.</span></span> <span data-ttu-id="2f70f-432">Para usar os estilos internos que são portáteis entre localidades, confira a propriedade "styleBuiltIn".</span><span class="sxs-lookup"><span data-stu-id="2f70f-432">To use the built-in styles that are portable between locales, see the "styleBuiltIn" property.</span></span>

      <span data-ttu-id="2f70f-433">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2f70f-433">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: style
    fullName: style
    langs:
      - typeScript
    type: property
    syntax:
      content: 'style: string;'
      return:
        type:
          - string
  - uid: word_release.Word.Paragraph.styleBuiltIn
    summary: |-
      <span data-ttu-id="2f70f-p201">Obtém ou define o nome do estilo interno para o parágrafo. Use esta propriedade para estilos internos que são portáteis entre localidades. Para usar estilos personalizados ou nomes de estilo localizados, confira a propriedade "estilo".</span><span class="sxs-lookup"><span data-stu-id="2f70f-p201">Gets or sets the built-in style name for the paragraph. Use this property for built-in styles that are portable between locales. To use custom styles or localized style names, see the "style" property.</span></span>

      <span data-ttu-id="2f70f-437">\[[Conjunto de APIs: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2f70f-437">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: styleBuiltIn
    fullName: styleBuiltIn
    langs:
      - typeScript
    type: property
    syntax:
      content: 'styleBuiltIn: Word.Style | "Other" | "Normal" | "Heading1" | "Heading2" | "Heading3" | "Heading4" | "Heading5" | "Heading6" | "Heading7" | "Heading8" | "Heading9" | "Toc1" | "Toc2" | "Toc3" | "Toc4" | "Toc5" | "Toc6" | "Toc7" | "Toc8" | "Toc9" | "FootnoteText" | "Header" | "Footer" | "Caption" | "FootnoteReference" | "EndnoteReference" | "EndnoteText" | "Title" | "Subtitle" | "Hyperlink" | "Strong" | "Emphasis" | "NoSpacing" | "ListParagraph" | "Quote" | "IntenseQuote" | "SubtleEmphasis" | "IntenseEmphasis" | "SubtleReference" | "IntenseReference" | "BookTitle" | "Bibliography" | "TocHeading" | "TableGrid" | "PlainTable1" | "PlainTable2" | "PlainTable3" | "PlainTable4" | "PlainTable5" | "TableGridLight" | "GridTable1Light" | "GridTable1Light_Accent1" | "GridTable1Light_Accent2" | "GridTable1Light_Accent3" | "GridTable1Light_Accent4" | "GridTable1Light_Accent5" | "GridTable1Light_Accent6" | "GridTable2" | "GridTable2_Accent1" | "GridTable2_Accent2" | "GridTable2_Accent3" | "GridTable2_Accent4" | "GridTable2_Accent5" | "GridTable2_Accent6" | "GridTable3" | "GridTable3_Accent1" | "GridTable3_Accent2" | "GridTable3_Accent3" | "GridTable3_Accent4" | "GridTable3_Accent5" | "GridTable3_Accent6" | "GridTable4" | "GridTable4_Accent1" | "GridTable4_Accent2" | "GridTable4_Accent3" | "GridTable4_Accent4" | "GridTable4_Accent5" | "GridTable4_Accent6" | "GridTable5Dark" | "GridTable5Dark_Accent1" | "GridTable5Dark_Accent2" | "GridTable5Dark_Accent3" | "GridTable5Dark_Accent4" | "GridTable5Dark_Accent5" | "GridTable5Dark_Accent6" | "GridTable6Colorful" | "GridTable6Colorful_Accent1" | "GridTable6Colorful_Accent2" | "GridTable6Colorful_Accent3" | "GridTable6Colorful_Accent4" | "GridTable6Colorful_Accent5" | "GridTable6Colorful_Accent6" | "GridTable7Colorful" | "GridTable7Colorful_Accent1" | "GridTable7Colorful_Accent2" | "GridTable7Colorful_Accent3" | "GridTable7Colorful_Accent4" | "GridTable7Colorful_Accent5" | "GridTable7Colorful_Accent6" | "ListTable1Light" | "ListTable1Light_Accent1" | "ListTable1Light_Accent2" | "ListTable1Light_Accent3" | "ListTable1Light_Accent4" | "ListTable1Light_Accent5" | "ListTable1Light_Accent6" | "ListTable2" | "ListTable2_Accent1" | "ListTable2_Accent2" | "ListTable2_Accent3" | "ListTable2_Accent4" | "ListTable2_Accent5" | "ListTable2_Accent6" | "ListTable3" | "ListTable3_Accent1" | "ListTable3_Accent2" | "ListTable3_Accent3" | "ListTable3_Accent4" | "ListTable3_Accent5" | "ListTable3_Accent6" | "ListTable4" | "ListTable4_Accent1" | "ListTable4_Accent2" | "ListTable4_Accent3" | "ListTable4_Accent4" | "ListTable4_Accent5" | "ListTable4_Accent6" | "ListTable5Dark" | "ListTable5Dark_Accent1" | "ListTable5Dark_Accent2" | "ListTable5Dark_Accent3" | "ListTable5Dark_Accent4" | "ListTable5Dark_Accent5" | "ListTable5Dark_Accent6" | "ListTable6Colorful" | "ListTable6Colorful_Accent1" | "ListTable6Colorful_Accent2" | "ListTable6Colorful_Accent3" | "ListTable6Colorful_Accent4" | "ListTable6Colorful_Accent5" | "ListTable6Colorful_Accent6" | "ListTable7Colorful" | "ListTable7Colorful_Accent1" | "ListTable7Colorful_Accent2" | "ListTable7Colorful_Accent3" | "ListTable7Colorful_Accent4" | "ListTable7Colorful_Accent5" | "ListTable7Colorful_Accent6";'
      return:
        type:
          - Word.Style | "Other" | "Normal" | "Heading1" | "Heading2" | "Heading3" | "Heading4" | "Heading5" | "Heading6" | "Heading7" | "Heading8" | "Heading9" | "Toc1" | "Toc2" | "Toc3" | "Toc4" | "Toc5" | "Toc6" | "Toc7" | "Toc8" | "Toc9" | "FootnoteText" | "Header" | "Footer" | "Caption" | "FootnoteReference" | "EndnoteReference" | "EndnoteText" | "Title" | "Subtitle" | "Hyperlink" | "Strong" | "Emphasis" | "NoSpacing" | "ListParagraph" | "Quote" | "IntenseQuote" | "SubtleEmphasis" | "IntenseEmphasis" | "SubtleReference" | "IntenseReference" | "BookTitle" | "Bibliography" | "TocHeading" | "TableGrid" | "PlainTable1" | "PlainTable2" | "PlainTable3" | "PlainTable4" | "PlainTable5" | "TableGridLight" | "GridTable1Light" | "GridTable1Light_Accent1" | "GridTable1Light_Accent2" | "GridTable1Light_Accent3" | "GridTable1Light_Accent4" | "GridTable1Light_Accent5" | "GridTable1Light_Accent6" | "GridTable2" | "GridTable2_Accent1" | "GridTable2_Accent2" | "GridTable2_Accent3" | "GridTable2_Accent4" | "GridTable2_Accent5" | "GridTable2_Accent6" | "GridTable3" | "GridTable3_Accent1" | "GridTable3_Accent2" | "GridTable3_Accent3" | "GridTable3_Accent4" | "GridTable3_Accent5" | "GridTable3_Accent6" | "GridTable4" | "GridTable4_Accent1" | "GridTable4_Accent2" | "GridTable4_Accent3" | "GridTable4_Accent4" | "GridTable4_Accent5" | "GridTable4_Accent6" | "GridTable5Dark" | "GridTable5Dark_Accent1" | "GridTable5Dark_Accent2" | "GridTable5Dark_Accent3" | "GridTable5Dark_Accent4" | "GridTable5Dark_Accent5" | "GridTable5Dark_Accent6" | "GridTable6Colorful" | "GridTable6Colorful_Accent1" | "GridTable6Colorful_Accent2" | "GridTable6Colorful_Accent3" | "GridTable6Colorful_Accent4" | "GridTable6Colorful_Accent5" | "GridTable6Colorful_Accent6" | "GridTable7Colorful" | "GridTable7Colorful_Accent1" | "GridTable7Colorful_Accent2" | "GridTable7Colorful_Accent3" | "GridTable7Colorful_Accent4" | "GridTable7Colorful_Accent5" | "GridTable7Colorful_Accent6" | "ListTable1Light" | "ListTable1Light_Accent1" | "ListTable1Light_Accent2" | "ListTable1Light_Accent3" | "ListTable1Light_Accent4" | "ListTable1Light_Accent5" | "ListTable1Light_Accent6" | "ListTable2" | "ListTable2_Accent1" | "ListTable2_Accent2" | "ListTable2_Accent3" | "ListTable2_Accent4" | "ListTable2_Accent5" | "ListTable2_Accent6" | "ListTable3" | "ListTable3_Accent1" | "ListTable3_Accent2" | "ListTable3_Accent3" | "ListTable3_Accent4" | "ListTable3_Accent5" | "ListTable3_Accent6" | "ListTable4" | "ListTable4_Accent1" | "ListTable4_Accent2" | "ListTable4_Accent3" | "ListTable4_Accent4" | "ListTable4_Accent5" | "ListTable4_Accent6" | "ListTable5Dark" | "ListTable5Dark_Accent1" | "ListTable5Dark_Accent2" | "ListTable5Dark_Accent3" | "ListTable5Dark_Accent4" | "ListTable5Dark_Accent5" | "ListTable5Dark_Accent6" | "ListTable6Colorful" | "ListTable6Colorful_Accent1" | "ListTable6Colorful_Accent2" | "ListTable6Colorful_Accent3" | "ListTable6Colorful_Accent4" | "ListTable6Colorful_Accent5" | "ListTable6Colorful_Accent6" | "ListTable7Colorful" | "ListTable7Colorful_Accent1" | "ListTable7Colorful_Accent2" | "ListTable7Colorful_Accent3" | "ListTable7Colorful_Accent4" | "ListTable7Colorful_Accent5" | "ListTable7Colorful_Accent6"
  - uid: word_release.Word.Paragraph.tableNestingLevel
    summary: |-
      <span data-ttu-id="2f70f-438">Obtém o nível da tabela do parágrafo.</span><span class="sxs-lookup"><span data-stu-id="2f70f-438">Gets the level of the paragraph's table.</span></span> <span data-ttu-id="2f70f-439">Retorna 0 se o parágrafo não estiver em uma tabela.</span><span class="sxs-lookup"><span data-stu-id="2f70f-439">It returns 0 if the paragraph is not in a table.</span></span> <span data-ttu-id="2f70f-440">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="2f70f-440">Read-only.</span></span>

      <span data-ttu-id="2f70f-441">\[[Conjunto de APIs: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2f70f-441">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: tableNestingLevel
    fullName: tableNestingLevel
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly tableNestingLevel: number;'
      return:
        type:
          - number
  - uid: word_release.Word.Paragraph.text
    summary: |-
      <span data-ttu-id="2f70f-442">Obtém o texto do parágrafo.</span><span class="sxs-lookup"><span data-stu-id="2f70f-442">Gets the text of the paragraph.</span></span> <span data-ttu-id="2f70f-443">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="2f70f-443">Read-only.</span></span>

      <span data-ttu-id="2f70f-444">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2f70f-444">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: text
    fullName: text
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly text: string;'
      return:
        type:
          - string
        description: |-


          #### <a name="examples"></a><span data-ttu-id="2f70f-445">Exemplos</span><span class="sxs-lookup"><span data-stu-id="2f70f-445">Examples</span></span>

          ```typescript
          await Word.run(async (context) => {
            // The collection of paragraphs of the current selection returns the full paragraphs contained in it.
            let paragraph = context.document.getSelection().paragraphs.getFirst();
            paragraph.load("text");

            await context.sync();
            console.log(paragraph.text);
          });
          ```
  - uid: word_release.Word.Paragraph.toJSON
    summary: '<span data-ttu-id="2f70f-446">Substitui o método `toJSON()` JavaScript para fornecer uma saída mais útil quando um objeto API é passado para`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="2f70f-446">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="2f70f-447">.</span><span class="sxs-lookup"><span data-stu-id="2f70f-447"></span></span> <span data-ttu-id="2f70f-448">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="2f70f-448"></span></span><!-- --><span data-ttu-id="2f70f-449">, por sua vez, chama `toJSON` o método do objeto que é passado para ele.) Enquanto o objeto Word. Paragraph original é um objeto API, o `toJSON` método retorna um objeto JavaScript simples (digitado como`Word.Interfaces.ParagraphData`</span><span class="sxs-lookup"><span data-stu-id="2f70f-449">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Word.Paragraph object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.ParagraphData`</span></span><!-- --><span data-ttu-id="2f70f-450">) que contém cópias superficiais de qualquer propriedade filho carregada do objeto original.</span><span class="sxs-lookup"><span data-stu-id="2f70f-450">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Word.Interfaces.ParagraphData;'
      return:
        type:
          - Word.Interfaces.ParagraphData
        description: ''
  - uid: word_release.Word.Paragraph.track
    summary: '<span data-ttu-id="2f70f-451">Acompanha o objeto para ajuste automático com base nas alterações adjacentes no documento.</span><span class="sxs-lookup"><span data-stu-id="2f70f-451">Track the object for automatic adjustment based on surrounding changes in the document.</span></span> <span data-ttu-id="2f70f-452">Essa chamada é uma abreviação de context.trackedObjects.add(thisObject).</span><span class="sxs-lookup"><span data-stu-id="2f70f-452">This call is a shorthand for context.trackedObjects.add(thisObject).</span></span> <span data-ttu-id="2f70f-453">Se você estiver usando esse objeto em chamadas ".sync" e fora da execução sequencial de um lote ".run" e receber um erro "InvalidObjectPath" ao definir uma propriedade ou invocar um método no objeto, era necessário ter adicionado o objeto à coleção de objetos rastreados quando o objeto foi criado pela primeira vez.</span><span class="sxs-lookup"><span data-stu-id="2f70f-453">If you are using this object across ".sync" calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you needed to have added the object to the tracked object collection when the object was first created.</span></span>'
    name: track()
    fullName: track()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'track(): Word.Paragraph;'
      return:
        type:
          - Word.Paragraph
        description: ''
  - uid: word_release.Word.Paragraph.untrack
    summary: '<span data-ttu-id="2f70f-454">Libere a memória associada a este objeto, se ele já tiver sido rastreado anteriormente.</span><span class="sxs-lookup"><span data-stu-id="2f70f-454">Release the memory associated with this object, if it has previously been tracked.</span></span> <span data-ttu-id="2f70f-455">Essa chamada é uma abreviação de context.trackedObjects.remove(thisObject).</span><span class="sxs-lookup"><span data-stu-id="2f70f-455">This call is shorthand for context.trackedObjects.remove(thisObject).</span></span> <span data-ttu-id="2f70f-456">Ter muitos objetos rastreados desacelera o aplicativo host, por isso, lembre-se de liberar todos os objetos adicionados após usá-los.</span><span class="sxs-lookup"><span data-stu-id="2f70f-456">Having many tracked objects slows down the host application, so please remember to free any objects you add, once you''re done using them.</span></span> <span data-ttu-id="2f70f-457">Você precisa chamar "context.sync()" antes da liberação da memória entrar em vigor.</span><span class="sxs-lookup"><span data-stu-id="2f70f-457">You will need to call "context.sync()" before the memory release takes effect.</span></span>'
    name: untrack()
    fullName: untrack()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'untrack(): Word.Paragraph;'
      return:
        type:
          - Word.Paragraph
        description: ''