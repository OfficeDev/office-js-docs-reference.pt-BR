### YamlMime:UniversalReference
items:
  - uid: word_release.Word.Body
    summary: |-
      <span data-ttu-id="a2ad0-101">Representa o corpo de um documento ou de uma seção.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-101">Represents the body of a document or a section.</span></span>

      <span data-ttu-id="a2ad0-102">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a2ad0-102">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: Word.Body
    fullName: Word.Body
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: word_release
    children:
      - word_release.Word.Body.clear
      - word_release.Word.Body.contentControls
      - word_release.Word.Body.context
      - word_release.Word.Body.font
      - word_release.Word.Body.getHtml
      - word_release.Word.Body.getOoxml
      - word_release.Word.Body.getRange
      - word_release.Word.Body.getRange_1
      - word_release.Word.Body.inlinePictures
      - word_release.Word.Body.insertBreak
      - word_release.Word.Body.insertBreak_1
      - word_release.Word.Body.insertContentControl
      - word_release.Word.Body.insertFileFromBase64
      - word_release.Word.Body.insertFileFromBase64_1
      - word_release.Word.Body.insertHtml
      - word_release.Word.Body.insertHtml_1
      - word_release.Word.Body.insertInlinePictureFromBase64
      - word_release.Word.Body.insertInlinePictureFromBase64_1
      - word_release.Word.Body.insertOoxml
      - word_release.Word.Body.insertOoxml_1
      - word_release.Word.Body.insertParagraph
      - word_release.Word.Body.insertParagraph_1
      - word_release.Word.Body.insertTable
      - word_release.Word.Body.insertTable_1
      - word_release.Word.Body.insertText
      - word_release.Word.Body.insertText_1
      - word_release.Word.Body.lists
      - word_release.Word.Body.load
      - word_release.Word.Body.load_1
      - word_release.Word.Body.load_2
      - word_release.Word.Body.paragraphs
      - word_release.Word.Body.parentBody
      - word_release.Word.Body.parentBodyOrNullObject
      - word_release.Word.Body.parentContentControl
      - word_release.Word.Body.parentContentControlOrNullObject
      - word_release.Word.Body.parentSection
      - word_release.Word.Body.parentSectionOrNullObject
      - word_release.Word.Body.search
      - word_release.Word.Body.select
      - word_release.Word.Body.select_1
      - word_release.Word.Body.set
      - word_release.Word.Body.set_1
      - word_release.Word.Body.style
      - word_release.Word.Body.styleBuiltIn
      - word_release.Word.Body.tables
      - word_release.Word.Body.text
      - word_release.Word.Body.toJSON
      - word_release.Word.Body.track
      - word_release.Word.Body.type
      - word_release.Word.Body.untrack
  - uid: word_release.Word.Body.clear
    summary: |-
      <span data-ttu-id="a2ad0-103">Limpa o conteúdo do objeto Body.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-103">Clears the contents of the body object.</span></span> <span data-ttu-id="a2ad0-104">O usuário pode executar a operação de desfazer no conteúdo limpo.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-104">The user can perform the undo operation on the cleared content.</span></span>

      <span data-ttu-id="a2ad0-105">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a2ad0-105">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: clear()
    fullName: clear()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clear(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="a2ad0-106">Exemplos</span><span class="sxs-lookup"><span data-stu-id="a2ad0-106">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the document body.
              var body = context.document.body;

              // Queue a commmand to clear the contents of the body.
              body.clear();

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Cleared the body contents.');
              });
          })
          .catch(function (error) {
              console.log("Error: " + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });

          // The Silly stories add-in sample shows how the 
          // clear method can be used to clear the contents of a document.
          // https://aka.ms/sillystorywordaddin
          ```
  - uid: word_release.Word.Body.contentControls
    summary: |-
      <span data-ttu-id="a2ad0-107">Obtém a coleção de objetos de controle de conteúdo de Rich Text no corpo.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-107">Gets the collection of rich text content control objects in the body.</span></span> <span data-ttu-id="a2ad0-108">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-108">Read-only.</span></span>

      <span data-ttu-id="a2ad0-109">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a2ad0-109">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: contentControls
    fullName: contentControls
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly contentControls: Word.ContentControlCollection;'
      return:
        type:
          - word.Word.ContentControlCollection
  - uid: word_release.Word.Body.context
    summary: <span data-ttu-id="a2ad0-110">O contexto de solicitação associado ao objeto.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-110">The request context associated with the object.</span></span> <span data-ttu-id="a2ad0-111">Isso conecta o processo do suplemento ao processo do aplicativo host do Office.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-111">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: word_release.Word.Body.font
    summary: |-
      <span data-ttu-id="a2ad0-112">Obtém o formato de texto do corpo.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-112">Gets the text format of the body.</span></span> <span data-ttu-id="a2ad0-113">Use isso para obter e definir o nome, tamanho, cor e outras propriedades da fonte.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-113">Use this to get and set font name, size, color and other properties.</span></span> <span data-ttu-id="a2ad0-114">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-114">Read-only.</span></span>

      <span data-ttu-id="a2ad0-115">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a2ad0-115">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: font
    fullName: font
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly font: Word.Font;'
      return:
        type:
          - word.Word.Font
        description: |-


          #### <a name="examples"></a><span data-ttu-id="a2ad0-116">Exemplos</span><span class="sxs-lookup"><span data-stu-id="a2ad0-116">Examples</span></span>

          ```javascript
          // Get the style and the font size, font name, and font color properties on the body object.
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the document body.
              var body = context.document.body;

              // Queue a commmand to load font and style information for the document body.
              context.load(body, 'font/size, font/name, font/color, style');

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  // Show the results of the load method. Here we show the
                  // property values on the body object.
                  var results = 'Font size: ' + body.font.size +
                                '; Font name: ' + body.font.name +
                                '; Font color: ' + body.font.color +
                                '; Body style: ' + body.style;

                  console.log(results);
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: word_release.Word.Body.getHtml
    summary: |-
      <span data-ttu-id="a2ad0-117">Obtém uma representação HTML do objeto Body.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-117">Gets an HTML representation of the body object.</span></span> <span data-ttu-id="a2ad0-118">Quando renderizado em uma página da Web ou em um visualizador de HTML, a formatação será uma correspondência próxima, mas não exata, à formatação do documento.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-118">When rendered in a web page or HTML viewer, the formatting will be a close, but not exact, match to the formatting of the document.</span></span> <span data-ttu-id="a2ad0-119">Este método não retorna o mesmo HTML para o mesmo documento em diferentes plataformas (Windows, Mac, etc.).</span><span class="sxs-lookup"><span data-stu-id="a2ad0-119">This method does not return the exact same HTML for the same document on different platforms (Windows, Mac, etc.).</span></span> <span data-ttu-id="a2ad0-120">Se você precisar de fidelidade exata ou consistência entre plataformas, use `Body.getOoxml()` e converta o XML RETORNADO em HTML.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-120">If you need exact fidelity, or consistency across platforms, use `Body.getOoxml()` and convert the returned XML to HTML.</span></span>

      <span data-ttu-id="a2ad0-121">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a2ad0-121">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getHtml()
    fullName: getHtml()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getHtml(): OfficeExtension.ClientResult<string>;'
      return:
        type:
          - OfficeExtension.ClientResult<string>
        description: |-


          #### <a name="examples"></a><span data-ttu-id="a2ad0-122">Exemplos</span><span class="sxs-lookup"><span data-stu-id="a2ad0-122">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the document body.
              var body = context.document.body;

              // Queue a commmand to get the HTML contents of the body.
              var bodyHTML = body.getHtml();

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log("Body HTML contents: " + bodyHTML.value);
              });
          })
          .catch(function (error) {
              console.log("Error: " + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: word_release.Word.Body.getOoxml
    summary: |-
      <span data-ttu-id="a2ad0-123">Obtém a representação OOXML (Office Open XML) do objeto Body.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-123">Gets the OOXML (Office Open XML) representation of the body object.</span></span>

      <span data-ttu-id="a2ad0-124">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a2ad0-124">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getOoxml()
    fullName: getOoxml()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getOoxml(): OfficeExtension.ClientResult<string>;'
      return:
        type:
          - OfficeExtension.ClientResult<string>
        description: |-


          #### <a name="examples"></a><span data-ttu-id="a2ad0-125">Exemplos</span><span class="sxs-lookup"><span data-stu-id="a2ad0-125">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the document body.
              var body = context.document.body;

              // Queue a commmand to get the OOXML contents of the body.
              var bodyOOXML = body.getOoxml();

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log("Body OOXML contents: " + bodyOOXML.value);
              });
          })
          .catch(function (error) {
              console.log("Error: " + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: word_release.Word.Body.getRange
    summary: |-
      <span data-ttu-id="a2ad0-126">Obtém o corpo todo, ou então, os pontos inicial ou final do corpo, como um intervalo.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-126">Gets the whole body, or the starting or ending point of the body, as a range.</span></span>

      <span data-ttu-id="a2ad0-127">\[[Conjunto de APIs: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a2ad0-127">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getRange(rangeLocation)
    fullName: getRange(rangeLocation)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRange(rangeLocation?: Word.RangeLocation): Word.Range;'
      return:
        type:
          - Word.Range
        description: ''
      parameters:
        - id: rangeLocation
          description: '<span data-ttu-id="a2ad0-128">Opcional.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-128">Optional.</span></span> <span data-ttu-id="a2ad0-129">O local do intervalo pode ser "inteiro", "início", "fim", "depois" ou "conteúdo".</span><span class="sxs-lookup"><span data-stu-id="a2ad0-129">The range location can be ''Whole'', ''Start'', ''End'', ''After'', or ''Content''.</span></span>'
          type:
            - word.Word.RangeLocation
  - uid: word_release.Word.Body.getRange_1
    summary: |-
      <span data-ttu-id="a2ad0-130">Obtém o corpo todo, ou então, os pontos inicial ou final do corpo, como um intervalo.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-130">Gets the whole body, or the starting or ending point of the body, as a range.</span></span>

      <span data-ttu-id="a2ad0-131">\[[Conjunto de APIs: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a2ad0-131">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getRange(rangeLocationString)
    fullName: getRange(rangeLocationString)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRange(rangeLocationString?: "Whole" | "Start" | "End" | "Before" | "After" | "Content"): Word.Range;'
      return:
        type:
          - Word.Range
        description: ''
      parameters:
        - id: rangeLocationString
          description: '<span data-ttu-id="a2ad0-132">Opcional.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-132">Optional.</span></span> <span data-ttu-id="a2ad0-133">O local do intervalo pode ser "inteiro", "início", "fim", "depois" ou "conteúdo".</span><span class="sxs-lookup"><span data-stu-id="a2ad0-133">The range location can be ''Whole'', ''Start'', ''End'', ''After'', or ''Content''.</span></span>'
          type:
            - '"Whole" | "Start" | "End" | "Before" | "After" | "Content"'
  - uid: word_release.Word.Body.inlinePictures
    summary: |-
      <span data-ttu-id="a2ad0-134">Obtém a coleção de objetos InlinePicture no corpo.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-134">Gets the collection of InlinePicture objects in the body.</span></span> <span data-ttu-id="a2ad0-135">A coleção não inclui imagens flutuantes.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-135">The collection does not include floating images.</span></span> <span data-ttu-id="a2ad0-136">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-136">Read-only.</span></span>

      <span data-ttu-id="a2ad0-137">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a2ad0-137">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: inlinePictures
    fullName: inlinePictures
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly inlinePictures: Word.InlinePictureCollection;'
      return:
        type:
          - word.Word.InlinePictureCollection
  - uid: word_release.Word.Body.insertBreak
    summary: |-
      <span data-ttu-id="a2ad0-138">Insere uma quebra no local especificado no documento principal.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-138">Inserts a break at the specified location in the main document.</span></span> <span data-ttu-id="a2ad0-139">O valor de insertLocation pode ser 'Start' ou 'End'.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-139">The insertLocation value can be 'Start' or 'End'.</span></span>

      <span data-ttu-id="a2ad0-140">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a2ad0-140">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertBreak(breakType, insertLocation)'
    fullName: 'insertBreak(breakType, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertBreak(breakType: Word.BreakType, insertLocation: Word.InsertLocation): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="a2ad0-141">Exemplos</span><span class="sxs-lookup"><span data-stu-id="a2ad0-141">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (ctx) {

              // Create a proxy object for the document body.
              var body = ctx.document.body;

              // Queue a commmand to insert a page break at the start of the document body.
              body.insertBreak(Word.BreakType.page, Word.InsertLocation.start);

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return ctx.sync().then(function () {
                  console.log('Added a page break at the start of the document body.');
              });
          })
          .catch(function (error) {
              console.log("Error: " + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: breakType
          description: <span data-ttu-id="a2ad0-142">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-142">Required.</span></span> <span data-ttu-id="a2ad0-143">O tipo de quebra a adicionar ao corpo.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-143">The break type to add to the body.</span></span>
          type:
            - word.Word.BreakType
        - id: insertLocation
          description: <span data-ttu-id="a2ad0-144">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-144">Required.</span></span> <span data-ttu-id="a2ad0-145">O valor pode ser 'Start' ou 'End'.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-145">The value can be 'Start' or 'End'.</span></span>
          type:
            - Word.InsertLocation
  - uid: word_release.Word.Body.insertBreak_1
    summary: |-
      <span data-ttu-id="a2ad0-146">Insere uma quebra no local especificado no documento principal.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-146">Inserts a break at the specified location in the main document.</span></span> <span data-ttu-id="a2ad0-147">O valor de insertLocation pode ser 'Start' ou 'End'.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-147">The insertLocation value can be 'Start' or 'End'.</span></span>

      <span data-ttu-id="a2ad0-148">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a2ad0-148">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertBreak(breakTypeString, insertLocation)'
    fullName: 'insertBreak(breakTypeString, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertBreak(breakTypeString: "Page" | "Next" | "SectionNext" | "SectionContinuous" | "SectionEven" | "SectionOdd" | "Line", insertLocation: "Before" | "After" | "Start" | "End" | "Replace"): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: breakTypeString
          description: <span data-ttu-id="a2ad0-149">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-149">Required.</span></span> <span data-ttu-id="a2ad0-150">O tipo de quebra a adicionar ao corpo.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-150">The break type to add to the body.</span></span>
          type:
            - '"Page" | "Next" | "SectionNext" | "SectionContinuous" | "SectionEven" | "SectionOdd" | "Line"'
        - id: insertLocation
          description: <span data-ttu-id="a2ad0-151">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-151">Required.</span></span> <span data-ttu-id="a2ad0-152">O valor pode ser 'Start' ou 'End'.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-152">The value can be 'Start' or 'End'.</span></span>
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: word_release.Word.Body.insertContentControl
    summary: |-
      <span data-ttu-id="a2ad0-153">Quebra o objeto Body com um controle de conteúdo de rich text.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-153">Wraps the body object with a Rich Text content control.</span></span>

      <span data-ttu-id="a2ad0-154">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a2ad0-154">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: insertContentControl()
    fullName: insertContentControl()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertContentControl(): Word.ContentControl;'
      return:
        type:
          - word.Word.ContentControl
        description: |-


          #### <a name="examples"></a><span data-ttu-id="a2ad0-155">Exemplos</span><span class="sxs-lookup"><span data-stu-id="a2ad0-155">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the document body.
              var body = context.document.body;

              // Queue a commmand to wrap the body in a content control.
              body.insertContentControl();

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Wrapped the body in a content control.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: word_release.Word.Body.insertFileFromBase64
    summary: |-
      <span data-ttu-id="a2ad0-156">Insere um documento no corpo, no local especificado.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-156">Inserts a document into the body at the specified location.</span></span> <span data-ttu-id="a2ad0-157">O valor de insertLocation pode ser 'Replace', 'Start' ou 'End'.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-157">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>

      <span data-ttu-id="a2ad0-158">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a2ad0-158">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertFileFromBase64(base64File, insertLocation)'
    fullName: 'insertFileFromBase64(base64File, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertFileFromBase64(base64File: string, insertLocation: Word.InsertLocation): Word.Range;'
      return:
        type:
          - Word.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="a2ad0-159">Exemplos</span><span class="sxs-lookup"><span data-stu-id="a2ad0-159">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the document body.
              var body = context.document.body;

              // Queue a commmand to insert base64 encoded .docx at the beginning of the content body.
              // You will need to implement getBase64() to pass in a string of a base64 encoded docx file.
              body.insertFileFromBase64(getBase64(), Word.InsertLocation.start);

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Added base64 encoded text to the beginning of the document body.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: base64File
          description: <span data-ttu-id="a2ad0-160">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-160">Required.</span></span> <span data-ttu-id="a2ad0-161">O conteúdo codificado em Base64 de um arquivo. docx.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-161">The base64 encoded content of a .docx file.</span></span>
          type:
            - string
        - id: insertLocation
          description: '<span data-ttu-id="a2ad0-162">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-162">Required.</span></span> <span data-ttu-id="a2ad0-163">O valor pode ser ''Replace'', ''Start'' ou ''End''.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-163">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - Word.InsertLocation
  - uid: word_release.Word.Body.insertFileFromBase64_1
    summary: |-
      <span data-ttu-id="a2ad0-164">Insere um documento no corpo, no local especificado.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-164">Inserts a document into the body at the specified location.</span></span> <span data-ttu-id="a2ad0-165">O valor de insertLocation pode ser 'Replace', 'Start' ou 'End'.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-165">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>

      <span data-ttu-id="a2ad0-166">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a2ad0-166">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertFileFromBase64(base64File, insertLocationString)'
    fullName: 'insertFileFromBase64(base64File, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertFileFromBase64(base64File: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
      return:
        type:
          - Word.Range
        description: ''
      parameters:
        - id: base64File
          description: <span data-ttu-id="a2ad0-167">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-167">Required.</span></span> <span data-ttu-id="a2ad0-168">O conteúdo codificado em Base64 de um arquivo. docx.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-168">The base64 encoded content of a .docx file.</span></span>
          type:
            - string
        - id: insertLocationString
          description: '<span data-ttu-id="a2ad0-169">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-169">Required.</span></span> <span data-ttu-id="a2ad0-170">O valor pode ser ''Replace'', ''Start'' ou ''End''.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-170">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: word_release.Word.Body.insertHtml
    summary: |-
      <span data-ttu-id="a2ad0-171">Insere HTML no local especificado.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-171">Inserts HTML at the specified location.</span></span> <span data-ttu-id="a2ad0-172">O valor de insertLocation pode ser 'Replace', 'Start' ou 'End'.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-172">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>

      <span data-ttu-id="a2ad0-173">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a2ad0-173">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertHtml(html, insertLocation)'
    fullName: 'insertHtml(html, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertHtml(html: string, insertLocation: Word.InsertLocation): Word.Range;'
      return:
        type:
          - Word.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="a2ad0-174">Exemplos</span><span class="sxs-lookup"><span data-stu-id="a2ad0-174">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the document body.
              var body = context.document.body;

              // Queue a commmand to insert HTML in to the beginning of the body.
              body.insertHtml(
                  '<strong>This is text inserted with body.insertHtml()</strong>', Word.InsertLocation.start);

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('HTML added to the beginning of the document body.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: html
          description: <span data-ttu-id="a2ad0-175">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-175">Required.</span></span> <span data-ttu-id="a2ad0-176">O HTML a inserir no documento.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-176">The HTML to be inserted in the document.</span></span>
          type:
            - string
        - id: insertLocation
          description: '<span data-ttu-id="a2ad0-177">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-177">Required.</span></span> <span data-ttu-id="a2ad0-178">O valor pode ser ''Replace'', ''Start'' ou ''End''.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-178">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - Word.InsertLocation
  - uid: word_release.Word.Body.insertHtml_1
    summary: |-
      <span data-ttu-id="a2ad0-179">Insere HTML no local especificado.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-179">Inserts HTML at the specified location.</span></span> <span data-ttu-id="a2ad0-180">O valor de insertLocation pode ser 'Replace', 'Start' ou 'End'.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-180">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>

      <span data-ttu-id="a2ad0-181">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a2ad0-181">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertHtml(html, insertLocationString)'
    fullName: 'insertHtml(html, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertHtml(html: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
      return:
        type:
          - Word.Range
        description: ''
      parameters:
        - id: html
          description: <span data-ttu-id="a2ad0-182">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-182">Required.</span></span> <span data-ttu-id="a2ad0-183">O HTML a inserir no documento.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-183">The HTML to be inserted in the document.</span></span>
          type:
            - string
        - id: insertLocationString
          description: '<span data-ttu-id="a2ad0-184">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-184">Required.</span></span> <span data-ttu-id="a2ad0-185">O valor pode ser ''Replace'', ''Start'' ou ''End''.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-185">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: word_release.Word.Body.insertInlinePictureFromBase64
    summary: |-
      <span data-ttu-id="a2ad0-186">Insere uma imagem no corpo, no local especificado.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-186">Inserts a picture into the body at the specified location.</span></span> <span data-ttu-id="a2ad0-187">O valor de insertLocation pode ser 'Start' ou 'End'.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-187">The insertLocation value can be 'Start' or 'End'.</span></span>

      <span data-ttu-id="a2ad0-188">\[[Conjunto de APIs: WordApi 1,2](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a2ad0-188">\[ [API set: WordApi 1.2](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertInlinePictureFromBase64(base64EncodedImage, insertLocation)'
    fullName: 'insertInlinePictureFromBase64(base64EncodedImage, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertInlinePictureFromBase64(base64EncodedImage: string, insertLocation: Word.InsertLocation): Word.InlinePicture;'
      return:
        type:
          - word.Word.InlinePicture
        description: |-


          #### <a name="examples"></a><span data-ttu-id="a2ad0-189">Exemplos</span><span class="sxs-lookup"><span data-stu-id="a2ad0-189">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the document body.
              var body = context.document.body;

              // Queue a commmand to insert OOXML in to the beginning of the body.
              body.insertOoxml("<pkg:package xmlns:pkg='http://schemas.microsoft.com/office/2006/xmlPackage'><pkg:part pkg:name='/_rels/.rels' pkg:contentType='application/vnd.openxmlformats-package.relationships+xml' pkg:padding='512'><pkg:xmlData><Relationships xmlns='http://schemas.openxmlformats.org/package/2006/relationships'><Relationship Id='rId1' Type='http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument' Target='word/document.xml'/></Relationships></pkg:xmlData></pkg:part><pkg:part pkg:name='/word/document.xml' pkg:contentType='application/vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml'><pkg:xmlData><w:document xmlns:w='http://schemas.openxmlformats.org/wordprocessingml/2006/main' ><w:body><w:p><w:pPr><w:spacing w:before='360' w:after='0' w:line='480' w:lineRule='auto'/><w:rPr><w:color w:val='70AD47' w:themeColor='accent6'/><w:sz w:val='28'/></w:rPr></w:pPr><w:r><w:rPr><w:color w:val='70AD47' w:themeColor='accent6'/><w:sz w:val='28'/></w:rPr><w:t>This text has formatting directly applied to achieve its font size, color, line spacing, and paragraph spacing.</w:t></w:r></w:p></w:body></w:document></pkg:xmlData></pkg:part></pkg:package>", Word.InsertLocation.start);

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('OOXML added to the beginning of the document body.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });

          // Read "Create better add-ins for Word with Office Open XML" for guidance on working with OOXML.
          // https://docs.microsoft.com/office/dev/add-ins/word/create-better-add-ins-for-word-with-office-open-xml

          // The Word-Add-in-DocumentAssembly sample shows how you can use this API to assemble a document.
          // https://github.com/OfficeDev/Word-Add-in-DocumentAssembly
          ```
      parameters:
        - id: base64EncodedImage
          description: <span data-ttu-id="a2ad0-190">Obrigatória.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-190">Required.</span></span> <span data-ttu-id="a2ad0-191">A imagem em codificação de Base 64 a inserir no corpo.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-191">The base64 encoded image to be inserted in the body.</span></span>
          type:
            - string
        - id: insertLocation
          description: <span data-ttu-id="a2ad0-192">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-192">Required.</span></span> <span data-ttu-id="a2ad0-193">O valor pode ser 'Start' ou 'End'.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-193">The value can be 'Start' or 'End'.</span></span>
          type:
            - Word.InsertLocation
  - uid: word_release.Word.Body.insertInlinePictureFromBase64_1
    summary: |-
      <span data-ttu-id="a2ad0-194">Insere uma imagem no corpo, no local especificado.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-194">Inserts a picture into the body at the specified location.</span></span> <span data-ttu-id="a2ad0-195">O valor de insertLocation pode ser 'Start' ou 'End'.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-195">The insertLocation value can be 'Start' or 'End'.</span></span>

      <span data-ttu-id="a2ad0-196">\[[Conjunto de APIs: WordApi 1,2](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a2ad0-196">\[ [API set: WordApi 1.2](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertInlinePictureFromBase64(base64EncodedImage, insertLocationString)'
    fullName: 'insertInlinePictureFromBase64(base64EncodedImage, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertInlinePictureFromBase64(base64EncodedImage: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.InlinePicture;'
      return:
        type:
          - word.Word.InlinePicture
        description: ''
      parameters:
        - id: base64EncodedImage
          description: <span data-ttu-id="a2ad0-197">Obrigatória.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-197">Required.</span></span> <span data-ttu-id="a2ad0-198">A imagem em codificação de Base 64 a inserir no corpo.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-198">The base64 encoded image to be inserted in the body.</span></span>
          type:
            - string
        - id: insertLocationString
          description: <span data-ttu-id="a2ad0-199">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-199">Required.</span></span> <span data-ttu-id="a2ad0-200">O valor pode ser 'Start' ou 'End'.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-200">The value can be 'Start' or 'End'.</span></span>
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: word_release.Word.Body.insertOoxml
    summary: |-
      <span data-ttu-id="a2ad0-201">Insere um formato OOXML no local especificado.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-201">Inserts OOXML at the specified location.</span></span> <span data-ttu-id="a2ad0-202">O valor de insertLocation pode ser 'Replace', 'Start' ou 'End'.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-202">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>

      <span data-ttu-id="a2ad0-203">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a2ad0-203">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertOoxml(ooxml, insertLocation)'
    fullName: 'insertOoxml(ooxml, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertOoxml(ooxml: string, insertLocation: Word.InsertLocation): Word.Range;'
      return:
        type:
          - Word.Range
        description: ''
      parameters:
        - id: ooxml
          description: <span data-ttu-id="a2ad0-204">Obrigatória.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-204">Required.</span></span> <span data-ttu-id="a2ad0-205">O formato OOXML a inserir.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-205">The OOXML to be inserted.</span></span>
          type:
            - string
        - id: insertLocation
          description: '<span data-ttu-id="a2ad0-206">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-206">Required.</span></span> <span data-ttu-id="a2ad0-207">O valor pode ser ''Replace'', ''Start'' ou ''End''.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-207">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - Word.InsertLocation
  - uid: word_release.Word.Body.insertOoxml_1
    summary: |-
      <span data-ttu-id="a2ad0-208">Insere um formato OOXML no local especificado.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-208">Inserts OOXML at the specified location.</span></span> <span data-ttu-id="a2ad0-209">O valor de insertLocation pode ser 'Replace', 'Start' ou 'End'.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-209">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>

      <span data-ttu-id="a2ad0-210">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a2ad0-210">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertOoxml(ooxml, insertLocationString)'
    fullName: 'insertOoxml(ooxml, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertOoxml(ooxml: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
      return:
        type:
          - Word.Range
        description: ''
      parameters:
        - id: ooxml
          description: <span data-ttu-id="a2ad0-211">Obrigatória.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-211">Required.</span></span> <span data-ttu-id="a2ad0-212">O formato OOXML a inserir.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-212">The OOXML to be inserted.</span></span>
          type:
            - string
        - id: insertLocationString
          description: '<span data-ttu-id="a2ad0-213">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-213">Required.</span></span> <span data-ttu-id="a2ad0-214">O valor pode ser ''Replace'', ''Start'' ou ''End''.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-214">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: word_release.Word.Body.insertParagraph
    summary: |-
      <span data-ttu-id="a2ad0-215">Insere um parágrafo no local especificado.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-215">Inserts a paragraph at the specified location.</span></span> <span data-ttu-id="a2ad0-216">O valor de insertLocation pode ser 'Start' ou 'End'.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-216">The insertLocation value can be 'Start' or 'End'.</span></span>

      <span data-ttu-id="a2ad0-217">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a2ad0-217">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertParagraph(paragraphText, insertLocation)'
    fullName: 'insertParagraph(paragraphText, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertParagraph(paragraphText: string, insertLocation: Word.InsertLocation): Word.Paragraph;'
      return:
        type:
          - Word.Paragraph
        description: |-


          #### <a name="examples"></a><span data-ttu-id="a2ad0-218">Exemplos</span><span class="sxs-lookup"><span data-stu-id="a2ad0-218">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the document body.
              var body = context.document.body;

              // Queue a commmand to insert the paragraph at the end of the document body.
              body.insertParagraph('Content of a new paragraph', Word.InsertLocation.end);

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Paragraph added at the end of the document body.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });

          // The Word-Add-in-DocumentAssembly sample shows how you can use the insertParagraph method to assemble a document.
          // https://github.com/OfficeDev/Word-Add-in-DocumentAssembly
          ```
          ```typescript
          await Word.run(async (context) => {
              let paragraph = context.document.body.insertParagraph("Timeline", "End");
              paragraph.style = "Heading 2";
              let paragraph2 = context.document.body.insertParagraph("The Services shall commence on July 31, 2015, and shall continue through July 29, 2015.", "End");
              paragraph2.style = "Normal";
              let paragraph3 = context.document.body.insertParagraph("Project Costs by Phase", "End");
              paragraph3.style = "Heading 2";
              // Note a content control with the title of "ProjectCosts" is added. Content will be replaced later.
              let paragraph4 = context.document.body.insertParagraph("<Add Project Costs Here>", "End");
              paragraph4.style = "Normal";
              paragraph4.font.highlightColor = "#FFFF00";
              let contentControl = paragraph4.insertContentControl();
              contentControl.title = "ProjectCosts";
              let paragraph5 = context.document.body.insertParagraph("Project Team", "End");
              paragraph5.style = "Heading 2";
              paragraph5.font.highlightColor = "#FFFFFF";
              let paragraph6 = context.document.body.insertParagraph("Terms of Work", "End");
              paragraph6.style = "Heading 1";
              let paragraph7 = context.document.body.insertParagraph("Contractor shall provide the Services and Deliverable(s) as follows:", "End");
              paragraph7.style = "Normal";
              let paragraph8 = context.document.body.insertParagraph("Out-of-Pocket Expenses / Invoice Procedures", "End");
              paragraph8.style = "Heading 2";
              let paragraph9 = context.document.body.insertParagraph("Client will be invoiced monthly for the consulting services and T&L expenses. Standard Contractor invoicing is assumed to be acceptable. Invoices are due upon receipt. client will be invoiced all costs associated with out-of-pocket expenses (including, without limitation, costs and expenses associated with meals, lodging, local transportation and any other applicable business expenses) listed on the invoice as a separate line item. Reimbursement for out-of-pocket expenses in connection with performance of this SOW, when authorized and up to the limits set forth in this SOW, shall be in accordance with Client's then-current published policies governing travel and associated business expenses, which information shall be provided by the Client Project Manager.", "End");
              paragraph9.style = "Normal";
              // Insert a page break at the end of the document.
              context.document.body.insertBreak("Page", "End");

              await context.sync();
          });
          ```
      parameters:
        - id: paragraphText
          description: <span data-ttu-id="a2ad0-219">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-219">Required.</span></span> <span data-ttu-id="a2ad0-220">O texto do parágrafo a ser inserido.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-220">The paragraph text to be inserted.</span></span>
          type:
            - string
        - id: insertLocation
          description: <span data-ttu-id="a2ad0-221">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-221">Required.</span></span> <span data-ttu-id="a2ad0-222">O valor pode ser 'Start' ou 'End'.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-222">The value can be 'Start' or 'End'.</span></span>
          type:
            - Word.InsertLocation
  - uid: word_release.Word.Body.insertParagraph_1
    summary: |-
      <span data-ttu-id="a2ad0-223">Insere um parágrafo no local especificado.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-223">Inserts a paragraph at the specified location.</span></span> <span data-ttu-id="a2ad0-224">O valor de insertLocation pode ser 'Start' ou 'End'.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-224">The insertLocation value can be 'Start' or 'End'.</span></span>

      <span data-ttu-id="a2ad0-225">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a2ad0-225">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertParagraph(paragraphText, insertLocationString)'
    fullName: 'insertParagraph(paragraphText, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertParagraph(paragraphText: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Paragraph;'
      return:
        type:
          - Word.Paragraph
        description: ''
      parameters:
        - id: paragraphText
          description: <span data-ttu-id="a2ad0-226">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-226">Required.</span></span> <span data-ttu-id="a2ad0-227">O texto do parágrafo a ser inserido.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-227">The paragraph text to be inserted.</span></span>
          type:
            - string
        - id: insertLocationString
          description: <span data-ttu-id="a2ad0-228">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-228">Required.</span></span> <span data-ttu-id="a2ad0-229">O valor pode ser 'Start' ou 'End'.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-229">The value can be 'Start' or 'End'.</span></span>
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: word_release.Word.Body.insertTable
    summary: |-
      <span data-ttu-id="a2ad0-230">Insere uma tabela com a quantidade especificada de linhas e colunas.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-230">Inserts a table with the specified number of rows and columns.</span></span> <span data-ttu-id="a2ad0-231">O valor de insertLocation pode ser 'Start' ou 'End'.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-231">The insertLocation value can be 'Start' or 'End'.</span></span>

      <span data-ttu-id="a2ad0-232">\[[Conjunto de APIs: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a2ad0-232">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertTable(rowCount, columnCount, insertLocation, values)'
    fullName: 'insertTable(rowCount, columnCount, insertLocation, values)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertTable(rowCount: number, columnCount: number, insertLocation: Word.InsertLocation, values?: string[][]): Word.Table;'
      return:
        type:
          - Word.Table
        description: |-


          #### <a name="examples"></a><span data-ttu-id="a2ad0-233">Exemplos</span><span class="sxs-lookup"><span data-stu-id="a2ad0-233">Examples</span></span>

          ```typescript
          await Word.run(async (context) => {
            // Use a two-dimensional array to hold the initial table values.
            let data = [
              ["Tokyo", "Beijing", "Seattle"],
              ["Apple", "Orange", "Pineapple"]
            ];
            let table = context.document.body.insertTable(2, 3, "Start", data);
            table.styleBuiltIn = Word.Style.gridTable5Dark_Accent2;
            table.styleFirstColumn = false;

            await context.sync();
          });
          ```
      parameters:
        - id: rowCount
          description: <span data-ttu-id="a2ad0-234">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-234">Required.</span></span> <span data-ttu-id="a2ad0-235">A quantidade de linhas na tabela.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-235">The number of rows in the table.</span></span>
          type:
            - number
        - id: columnCount
          description: <span data-ttu-id="a2ad0-236">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-236">Required.</span></span> <span data-ttu-id="a2ad0-237">A quantidade de colunas na tabela.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-237">The number of columns in the table.</span></span>
          type:
            - number
        - id: insertLocation
          description: <span data-ttu-id="a2ad0-238">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-238">Required.</span></span> <span data-ttu-id="a2ad0-239">O valor pode ser 'Start' ou 'End'.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-239">The value can be 'Start' or 'End'.</span></span>
          type:
            - Word.InsertLocation
        - id: values
          description: <span data-ttu-id="a2ad0-240">Matriz 2D opcional.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-240">Optional 2D array.</span></span> <span data-ttu-id="a2ad0-241">As células serão preenchidas se as cadeias de caracteres correspondentes estiverem especificadas na matriz.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-241">Cells are filled if the corresponding strings are specified in the array.</span></span>
          type:
            - 'string[][]'
  - uid: word_release.Word.Body.insertTable_1
    summary: |-
      <span data-ttu-id="a2ad0-242">Insere uma tabela com a quantidade especificada de linhas e colunas.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-242">Inserts a table with the specified number of rows and columns.</span></span> <span data-ttu-id="a2ad0-243">O valor de insertLocation pode ser 'Start' ou 'End'.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-243">The insertLocation value can be 'Start' or 'End'.</span></span>

      <span data-ttu-id="a2ad0-244">\[[Conjunto de APIs: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a2ad0-244">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertTable(rowCount, columnCount, insertLocationString, values)'
    fullName: 'insertTable(rowCount, columnCount, insertLocationString, values)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertTable(rowCount: number, columnCount: number, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace", values?: string[][]): Word.Table;'
      return:
        type:
          - Word.Table
        description: ''
      parameters:
        - id: rowCount
          description: <span data-ttu-id="a2ad0-245">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-245">Required.</span></span> <span data-ttu-id="a2ad0-246">A quantidade de linhas na tabela.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-246">The number of rows in the table.</span></span>
          type:
            - number
        - id: columnCount
          description: <span data-ttu-id="a2ad0-247">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-247">Required.</span></span> <span data-ttu-id="a2ad0-248">A quantidade de colunas na tabela.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-248">The number of columns in the table.</span></span>
          type:
            - number
        - id: insertLocationString
          description: <span data-ttu-id="a2ad0-249">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-249">Required.</span></span> <span data-ttu-id="a2ad0-250">O valor pode ser 'Start' ou 'End'.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-250">The value can be 'Start' or 'End'.</span></span>
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
        - id: values
          description: <span data-ttu-id="a2ad0-251">Matriz 2D opcional.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-251">Optional 2D array.</span></span> <span data-ttu-id="a2ad0-252">As células serão preenchidas se as cadeias de caracteres correspondentes estiverem especificadas na matriz.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-252">Cells are filled if the corresponding strings are specified in the array.</span></span>
          type:
            - 'string[][]'
  - uid: word_release.Word.Body.insertText
    summary: |-
      <span data-ttu-id="a2ad0-253">Insere texto no corpo, no local especificado.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-253">Inserts text into the body at the specified location.</span></span> <span data-ttu-id="a2ad0-254">O valor de insertLocation pode ser 'Replace', 'Start' ou 'End'.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-254">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>

      <span data-ttu-id="a2ad0-255">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a2ad0-255">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertText(text, insertLocation)'
    fullName: 'insertText(text, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertText(text: string, insertLocation: Word.InsertLocation): Word.Range;'
      return:
        type:
          - Word.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="a2ad0-256">Exemplos</span><span class="sxs-lookup"><span data-stu-id="a2ad0-256">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the document body.
              var body = context.document.body;

              // Queue a commmand to insert text in to the beginning of the body.
              body.insertText('This is text inserted with body.insertText()', Word.InsertLocation.start);

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Text added to the beginning of the document body.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: text
          description: <span data-ttu-id="a2ad0-257">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-257">Required.</span></span> <span data-ttu-id="a2ad0-258">Texto a inserir.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-258">Text to be inserted.</span></span>
          type:
            - string
        - id: insertLocation
          description: '<span data-ttu-id="a2ad0-259">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-259">Required.</span></span> <span data-ttu-id="a2ad0-260">O valor pode ser ''Replace'', ''Start'' ou ''End''.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-260">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - Word.InsertLocation
  - uid: word_release.Word.Body.insertText_1
    summary: |-
      <span data-ttu-id="a2ad0-261">Insere texto no corpo, no local especificado.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-261">Inserts text into the body at the specified location.</span></span> <span data-ttu-id="a2ad0-262">O valor de insertLocation pode ser 'Replace', 'Start' ou 'End'.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-262">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>

      <span data-ttu-id="a2ad0-263">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a2ad0-263">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertText(text, insertLocationString)'
    fullName: 'insertText(text, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertText(text: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
      return:
        type:
          - Word.Range
        description: ''
      parameters:
        - id: text
          description: <span data-ttu-id="a2ad0-264">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-264">Required.</span></span> <span data-ttu-id="a2ad0-265">Texto a inserir.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-265">Text to be inserted.</span></span>
          type:
            - string
        - id: insertLocationString
          description: '<span data-ttu-id="a2ad0-266">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-266">Required.</span></span> <span data-ttu-id="a2ad0-267">O valor pode ser ''Replace'', ''Start'' ou ''End''.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-267">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: word_release.Word.Body.lists
    summary: |-
      <span data-ttu-id="a2ad0-268">Obtém a coleção de listas de objetos no corpo.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-268">Gets the collection of list objects in the body.</span></span> <span data-ttu-id="a2ad0-269">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-269">Read-only.</span></span>

      <span data-ttu-id="a2ad0-270">\[[Conjunto de APIs: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a2ad0-270">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: lists
    fullName: lists
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly lists: Word.ListCollection;'
      return:
        type:
          - word.Word.ListCollection
  - uid: word_release.Word.Body.load
    summary: <span data-ttu-id="a2ad0-271">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-271">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="a2ad0-272">Você deve chamar "context.sync()" antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-272">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="a2ad0-273">Além dessa assinatura, este método tem as seguintes assinaturas:</span><span class="sxs-lookup"><span data-stu-id="a2ad0-273">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="a2ad0-274">`load(option?: string | string[]): Word.Body`-Where Option é uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-274">`load(option?: string | string[]): Word.Body` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="a2ad0-275">`load(option?: { select?: string; expand?: string; }): Word.Body`-Onde Option. Select é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades a serem carregadas, e Options. Expand é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades de navegação a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-275">`load(option?: { select?: string; expand?: string; }): Word.Body` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="a2ad0-276">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.Body`– Disponível somente nos tipos de coleção.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-276">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.Body` - Only available on collection types.</span></span> <span data-ttu-id="a2ad0-277">É semelhante à assinatura anterior.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-277">It is similar to the preceding signature.</span></span> <span data-ttu-id="a2ad0-278">Option. Top especifica o número máximo de itens de coleta que podem ser incluídos no resultado.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-278">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="a2ad0-279">Option. Skip especifica o número de itens que devem ser ignorados e não incluídos no resultado.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-279">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="a2ad0-280">Se Option. Top for especificado, o conjunto de resultados será iniciado depois de ignorar o número de itens especificado.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-280">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Word.Interfaces.BodyLoadOptions): Word.Body;'
      return:
        type:
          - Word.Body
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - word.Word.Interfaces.BodyLoadOptions
  - uid: word_release.Word.Body.load_1
    summary: <span data-ttu-id="a2ad0-281">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-281">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="a2ad0-282">Você deve chamar `context.sync()` antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-282">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Word.Body;'
      return:
        type:
          - Word.Body
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="a2ad0-283">Uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-283">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: word_release.Word.Body.load_2
    summary: <span data-ttu-id="a2ad0-284">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-284">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="a2ad0-285">Você deve chamar `context.sync()` antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-285">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Word.Body;'
      return:
        type:
          - Word.Body
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="a2ad0-286">Onde propertyNamesAndPaths. Select é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades a serem carregadas e propertyNamesAndPaths. Expand é uma sequência de caracteres delimitada por vírgula que especifica as propriedades de navegação a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-286">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: word_release.Word.Body.paragraphs
    summary: |-
      <span data-ttu-id="a2ad0-287">Obtém a coleção de objetos Paragraph no corpo.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-287">Gets the collection of paragraph objects in the body.</span></span> <span data-ttu-id="a2ad0-288">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-288">Read-only.</span></span>

      <span data-ttu-id="a2ad0-289">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a2ad0-289">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: paragraphs
    fullName: paragraphs
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly paragraphs: Word.ParagraphCollection;'
      return:
        type:
          - Word.ParagraphCollection
        description: |-


          #### <a name="examples"></a><span data-ttu-id="a2ad0-290">Exemplos</span><span class="sxs-lookup"><span data-stu-id="a2ad0-290">Examples</span></span>

          ```typescript
          await Word.run(async (context) => {
            let paragraphs = context.document.body.paragraphs;
            paragraphs.load("text");
            await context.sync();

            let text = [];
            paragraphs.items.forEach((item) => {
              let paragraph = item.text.trim();
              if (paragraph) {
                paragraph.split(" ").forEach((term) => {
                  let currentTerm = term.trim();
                  if (currentTerm) {
                    text.push(currentTerm);
                  }
                });
              }
            });

            let makeTextDistinct = new Set(text);
            let distinctText = Array.from(makeTextDistinct);
            let allSearchResults = [];

            for (let i = 0; i < distinctText.length; i++) {
              let results = context.document.body.search(distinctText[i], { matchCase: true, matchWholeWord: true });
              results.load("text");

              // Map search term with its results.
              let correlatedResults = {
                searchTerm: distinctText[i],
                hits: results
              };

              allSearchResults.push(correlatedResults);
            }

            await context.sync();

            // Display counts.
            allSearchResults.forEach((result) => {
              let length = result.hits.items.length;

              console.log("Search term: " + result.searchTerm + " => Count: " + length);
            });
          });
          ```
  - uid: word_release.Word.Body.parentBody
    summary: |-
      <span data-ttu-id="a2ad0-p167">Obtém o corpo pai do corpo. Por exemplo, o corpo pai do corpo de uma célula de tabela poderia ser um cabeçalho. Gera uma exceção se não há um corpo pai. Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-p167">Gets the parent body of the body. For example, a table cell body's parent body could be a header. Throws if there isn't a parent body. Read-only.</span></span>

      <span data-ttu-id="a2ad0-295">\[[Conjunto de APIs: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a2ad0-295">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: parentBody
    fullName: parentBody
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentBody: Word.Body;'
      return:
        type:
          - Word.Body
  - uid: word_release.Word.Body.parentBodyOrNullObject
    summary: |-
      <span data-ttu-id="a2ad0-p168">Obtém o corpo pai do corpo. Por exemplo, o corpo pai do corpo de uma célula de tabela poderia ser um cabeçalho. Retorna um objeto nulo se não há um corpo pai. Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-p168">Gets the parent body of the body. For example, a table cell body's parent body could be a header. Returns a null object if there isn't a parent body. Read-only.</span></span>

      <span data-ttu-id="a2ad0-300">\[[Conjunto de APIs: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a2ad0-300">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: parentBodyOrNullObject
    fullName: parentBodyOrNullObject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentBodyOrNullObject: Word.Body;'
      return:
        type:
          - Word.Body
  - uid: word_release.Word.Body.parentContentControl
    summary: |-
      <span data-ttu-id="a2ad0-301">Obtém o controle de conteúdo que inclui o corpo.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-301">Gets the content control that contains the body.</span></span> <span data-ttu-id="a2ad0-302">Gera se não há um controle de conteúdo pai.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-302">Throws if there isn't a parent content control.</span></span> <span data-ttu-id="a2ad0-303">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-303">Read-only.</span></span>

      <span data-ttu-id="a2ad0-304">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a2ad0-304">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: parentContentControl
    fullName: parentContentControl
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentContentControl: Word.ContentControl;'
      return:
        type:
          - word.Word.ContentControl
  - uid: word_release.Word.Body.parentContentControlOrNullObject
    summary: |-
      <span data-ttu-id="a2ad0-305">Obtém o controle de conteúdo que inclui o corpo.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-305">Gets the content control that contains the body.</span></span> <span data-ttu-id="a2ad0-306">Retorna um objeto NULL se não houver um controle de conteúdo pai.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-306">Returns a null object if there isn't a parent content control.</span></span> <span data-ttu-id="a2ad0-307">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-307">Read-only.</span></span>

      <span data-ttu-id="a2ad0-308">\[[Conjunto de APIs: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a2ad0-308">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: parentContentControlOrNullObject
    fullName: parentContentControlOrNullObject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentContentControlOrNullObject: Word.ContentControl;'
      return:
        type:
          - word.Word.ContentControl
  - uid: word_release.Word.Body.parentSection
    summary: |-
      <span data-ttu-id="a2ad0-309">Obtém a seção pai do corpo.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-309">Gets the parent section of the body.</span></span> <span data-ttu-id="a2ad0-310">Gera se não há uma seção pai.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-310">Throws if there isn't a parent section.</span></span> <span data-ttu-id="a2ad0-311">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-311">Read-only.</span></span>

      <span data-ttu-id="a2ad0-312">\[[Conjunto de APIs: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a2ad0-312">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: parentSection
    fullName: parentSection
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentSection: Word.Section;'
      return:
        type:
          - Word.Section
  - uid: word_release.Word.Body.parentSectionOrNullObject
    summary: |-
      <span data-ttu-id="a2ad0-313">Obtém a seção pai do corpo.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-313">Gets the parent section of the body.</span></span> <span data-ttu-id="a2ad0-314">Retorna um objeto NULL se não houver uma seção pai.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-314">Returns a null object if there isn't a parent section.</span></span> <span data-ttu-id="a2ad0-315">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-315">Read-only.</span></span>

      <span data-ttu-id="a2ad0-316">\[[Conjunto de APIs: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a2ad0-316">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: parentSectionOrNullObject
    fullName: parentSectionOrNullObject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentSectionOrNullObject: Word.Section;'
      return:
        type:
          - Word.Section
  - uid: word_release.Word.Body.search
    summary: |-
      <span data-ttu-id="a2ad0-317">Realiza uma pesquisa com o Searchoptions especificado no escopo do objeto Body.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-317">Performs a search with the specified SearchOptions on the scope of the body object.</span></span> <span data-ttu-id="a2ad0-318">Os resultados da pesquisa são uma coleção de objetos Range.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-318">The search results are a collection of range objects.</span></span>

      <span data-ttu-id="a2ad0-319">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a2ad0-319">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'search(searchText, searchOptions)'
    fullName: 'search(searchText, searchOptions)'
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        search(searchText: string, searchOptions?: Word.SearchOptions | {
                    ignorePunct?: boolean;
                    ignoreSpace?: boolean;
                    matchCase?: boolean;
                    matchPrefix?: boolean;
                    matchSuffix?: boolean;
                    matchWholeWord?: boolean;
                    matchWildcards?: boolean;
                }): Word.RangeCollection;
      return:
        type:
          - Word.RangeCollection
        description: |-


          #### <a name="examples"></a><span data-ttu-id="a2ad0-320">Exemplos</span><span class="sxs-lookup"><span data-stu-id="a2ad0-320">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the document body.
              var body = context.document.body;

              // Queue a commmand to search the document.
              var searchResults = context.document.body.search('video', {matchCase: false});

              // Queue a commmand to load the results.
              context.load(searchResults, 'text, font');

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  var results = 'Found count: ' + searchResults.items.length +
                                '; we highlighted the results.';

                  // Queue a command to change the font for each found item.
                  for (var i = 0; i < searchResults.items.length; i++) {
                    searchResults.items[i].font.color = '#FF0000'    // Change color to Red
                    searchResults.items[i].font.highlightColor = '#FFFF00';
                    searchResults.items[i].font.bold = true;
                  }

                  // Synchronize the document state by executing the queued commands,
                  // and return a promise to indicate task completion.
                  return context.sync().then(function () {
                      console.log(results);
                  });
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });

          // The Word-Add-in-DocumentAssembly sample provides another example of how to search a document.
          // https://github.com/OfficeDev/Word-Add-in-DocumentAssembly
          ```
          ```typescript
          await Word.run(async (context) => {
            let results = context.document.body.search("Online");
            results.load("length");

            await context.sync();

            // Let's traverse the search results... and highlight...
            for (let i = 0; i < results.items.length; i++) {
              results.items[i].font.highlightColor = "yellow";
            }

            await context.sync();
          });
          ```
          ```typescript
          await Word.run(async (context) => {
            // Check out how wildcard expression are built, also use the second parameter of the search method to include search modes
            // (i.e. use wildcards).
            let results = context.document.body.search("$*.[0-9][0-9]", { matchWildcards: true });
            results.load("length");

            await context.sync();

            // Let's traverse the search results... and highlight...
            for (let i = 0; i < results.items.length; i++) {
              results.items[i].font.highlightColor = "red";
              results.items[i].font.color = "white";
            }

            await context.sync();
          });
          ```
          ```typescript
          await Word.run(async (context) => {
            let paragraphs = context.document.body.paragraphs;
            paragraphs.load("text");
            await context.sync();

            let text = [];
            paragraphs.items.forEach((item) => {
              let paragraph = item.text.trim();
              if (paragraph) {
                paragraph.split(" ").forEach((term) => {
                  let currentTerm = term.trim();
                  if (currentTerm) {
                    text.push(currentTerm);
                  }
                });
              }
            });

            let makeTextDistinct = new Set(text);
            let distinctText = Array.from(makeTextDistinct);
            let allSearchResults = [];

            for (let i = 0; i < distinctText.length; i++) {
              let results = context.document.body.search(distinctText[i], { matchCase: true, matchWholeWord: true });
              results.load("text");

              // Map search term with its results.
              let correlatedResults = {
                searchTerm: distinctText[i],
                hits: results
              };

              allSearchResults.push(correlatedResults);
            }

            await context.sync();

            // Display counts.
            allSearchResults.forEach((result) => {
              let length = result.hits.items.length;

              console.log("Search term: " + result.searchTerm + " => Count: " + length);
            });
          });
          ```
      parameters:
        - id: searchText
          description: <span data-ttu-id="a2ad0-321">Obrigatória.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-321">Required.</span></span> <span data-ttu-id="a2ad0-322">O texto da pesquisa.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-322">The search text.</span></span> <span data-ttu-id="a2ad0-323">Pode ter no máximo 255 caracteres.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-323">Can be a maximum of 255 characters.</span></span>
          type:
            - string
        - id: searchOptions
          description: <span data-ttu-id="a2ad0-324">Opcional.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-324">Optional.</span></span> <span data-ttu-id="a2ad0-325">Opções da pesquisa.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-325">Options for the search.</span></span>
          type:
            - |-
              Word.SearchOptions | {
                          ignorePunct?: boolean;
                          ignoreSpace?: boolean;
                          matchCase?: boolean;
                          matchPrefix?: boolean;
                          matchSuffix?: boolean;
                          matchWholeWord?: boolean;
                          matchWildcards?: boolean;
                      }
  - uid: word_release.Word.Body.select
    summary: |-
      <span data-ttu-id="a2ad0-326">Seleciona o corpo e navega na interface do usuário do Word até ele.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-326">Selects the body and navigates the Word UI to it.</span></span>

      <span data-ttu-id="a2ad0-327">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a2ad0-327">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: select(selectionMode)
    fullName: select(selectionMode)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'select(selectionMode?: Word.SelectionMode): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="a2ad0-328">Exemplos</span><span class="sxs-lookup"><span data-stu-id="a2ad0-328">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the document body.
              var body = context.document.body;

              // Queue a commmand to select the document body. The Word UI will
              // move to the selected document body.
              body.select();

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Selected the document body.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: selectionMode
          description: '<span data-ttu-id="a2ad0-329">Opcional.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-329">Optional.</span></span> <span data-ttu-id="a2ad0-330">O modo de seleção pode ser ''Select'', ''Start'' ou ''End''.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-330">The selection mode can be ''Select'', ''Start'', or ''End''.</span></span> <span data-ttu-id="a2ad0-331">''Select'' é o padrão.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-331">''Select'' is the default.</span></span>'
          type:
            - Word.SelectionMode
  - uid: word_release.Word.Body.select_1
    summary: |-
      <span data-ttu-id="a2ad0-332">Seleciona o corpo e navega na interface do usuário do Word até ele.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-332">Selects the body and navigates the Word UI to it.</span></span>

      <span data-ttu-id="a2ad0-333">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a2ad0-333">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: select(selectionModeString)
    fullName: select(selectionModeString)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'select(selectionModeString?: "Select" | "Start" | "End"): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: selectionModeString
          description: '<span data-ttu-id="a2ad0-334">Opcional.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-334">Optional.</span></span> <span data-ttu-id="a2ad0-335">O modo de seleção pode ser ''Select'', ''Start'' ou ''End''.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-335">The selection mode can be ''Select'', ''Start'', or ''End''.</span></span> <span data-ttu-id="a2ad0-336">''Select'' é o padrão.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-336">''Select'' is the default.</span></span>'
          type:
            - '"Select" | "Start" | "End"'
  - uid: word_release.Word.Body.set
    summary: '<span data-ttu-id="a2ad0-337">Define várias propriedades de um objeto ao mesmo tempo.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-337">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="a2ad0-338">Você pode passar um objeto simples com as propriedades apropriadas ou outro objeto API do mesmo tipo.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-338">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="a2ad0-339">Este método tem a seguinte assinatura adicional:</span><span class="sxs-lookup"><span data-stu-id="a2ad0-339">This method has the following additional signature:</span></span>

      `set(properties: Word.Body): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.BodyUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="a2ad0-340">Um objeto JavaScript com propriedades que são estruturadas isomorphically para as propriedades do objeto no qual o método é chamado.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-340">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - Interfaces.BodyUpdateData
        - id: options
          description: <span data-ttu-id="a2ad0-341">Fornece uma opção para suprimir erros se o objeto Properties tentar definir qualquer propriedade somente leitura.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-341">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - office.OfficeExtension.UpdateOptions
  - uid: word_release.Word.Body.set_1
    summary: '<span data-ttu-id="a2ad0-342">Define várias propriedades no objeto ao mesmo tempo, com base em um objeto carregado existente.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-342">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Word.Body): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - Word.Body
  - uid: word_release.Word.Body.style
    summary: |-
      <span data-ttu-id="a2ad0-p179">Obtém ou define o nome do estilo usado para o corpo. Use esta propriedade de estilos personalizados e nomes de estilo localizados. Para usar os estilos internos que são portáteis entre localidades, confira a propriedade "styleBuiltIn".</span><span class="sxs-lookup"><span data-stu-id="a2ad0-p179">Gets or sets the style name for the body. Use this property for custom styles and localized style names. To use the built-in styles that are portable between locales, see the "styleBuiltIn" property.</span></span>

      <span data-ttu-id="a2ad0-346">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a2ad0-346">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: style
    fullName: style
    langs:
      - typeScript
    type: property
    syntax:
      content: 'style: string;'
      return:
        type:
          - string
  - uid: word_release.Word.Body.styleBuiltIn
    summary: |-
      <span data-ttu-id="a2ad0-p180">Obtém ou define o nome do estilo interno para o corpo. Use esta propriedade para estilos internos que são portáteis entre localidades. Para usar estilos personalizados ou nomes de estilo localizados, confira a propriedade "estilo".</span><span class="sxs-lookup"><span data-stu-id="a2ad0-p180">Gets or sets the built-in style name for the body. Use this property for built-in styles that are portable between locales. To use custom styles or localized style names, see the "style" property.</span></span>

      <span data-ttu-id="a2ad0-350">\[[Conjunto de APIs: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a2ad0-350">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: styleBuiltIn
    fullName: styleBuiltIn
    langs:
      - typeScript
    type: property
    syntax:
      content: 'styleBuiltIn: Word.Style | "Other" | "Normal" | "Heading1" | "Heading2" | "Heading3" | "Heading4" | "Heading5" | "Heading6" | "Heading7" | "Heading8" | "Heading9" | "Toc1" | "Toc2" | "Toc3" | "Toc4" | "Toc5" | "Toc6" | "Toc7" | "Toc8" | "Toc9" | "FootnoteText" | "Header" | "Footer" | "Caption" | "FootnoteReference" | "EndnoteReference" | "EndnoteText" | "Title" | "Subtitle" | "Hyperlink" | "Strong" | "Emphasis" | "NoSpacing" | "ListParagraph" | "Quote" | "IntenseQuote" | "SubtleEmphasis" | "IntenseEmphasis" | "SubtleReference" | "IntenseReference" | "BookTitle" | "Bibliography" | "TocHeading" | "TableGrid" | "PlainTable1" | "PlainTable2" | "PlainTable3" | "PlainTable4" | "PlainTable5" | "TableGridLight" | "GridTable1Light" | "GridTable1Light_Accent1" | "GridTable1Light_Accent2" | "GridTable1Light_Accent3" | "GridTable1Light_Accent4" | "GridTable1Light_Accent5" | "GridTable1Light_Accent6" | "GridTable2" | "GridTable2_Accent1" | "GridTable2_Accent2" | "GridTable2_Accent3" | "GridTable2_Accent4" | "GridTable2_Accent5" | "GridTable2_Accent6" | "GridTable3" | "GridTable3_Accent1" | "GridTable3_Accent2" | "GridTable3_Accent3" | "GridTable3_Accent4" | "GridTable3_Accent5" | "GridTable3_Accent6" | "GridTable4" | "GridTable4_Accent1" | "GridTable4_Accent2" | "GridTable4_Accent3" | "GridTable4_Accent4" | "GridTable4_Accent5" | "GridTable4_Accent6" | "GridTable5Dark" | "GridTable5Dark_Accent1" | "GridTable5Dark_Accent2" | "GridTable5Dark_Accent3" | "GridTable5Dark_Accent4" | "GridTable5Dark_Accent5" | "GridTable5Dark_Accent6" | "GridTable6Colorful" | "GridTable6Colorful_Accent1" | "GridTable6Colorful_Accent2" | "GridTable6Colorful_Accent3" | "GridTable6Colorful_Accent4" | "GridTable6Colorful_Accent5" | "GridTable6Colorful_Accent6" | "GridTable7Colorful" | "GridTable7Colorful_Accent1" | "GridTable7Colorful_Accent2" | "GridTable7Colorful_Accent3" | "GridTable7Colorful_Accent4" | "GridTable7Colorful_Accent5" | "GridTable7Colorful_Accent6" | "ListTable1Light" | "ListTable1Light_Accent1" | "ListTable1Light_Accent2" | "ListTable1Light_Accent3" | "ListTable1Light_Accent4" | "ListTable1Light_Accent5" | "ListTable1Light_Accent6" | "ListTable2" | "ListTable2_Accent1" | "ListTable2_Accent2" | "ListTable2_Accent3" | "ListTable2_Accent4" | "ListTable2_Accent5" | "ListTable2_Accent6" | "ListTable3" | "ListTable3_Accent1" | "ListTable3_Accent2" | "ListTable3_Accent3" | "ListTable3_Accent4" | "ListTable3_Accent5" | "ListTable3_Accent6" | "ListTable4" | "ListTable4_Accent1" | "ListTable4_Accent2" | "ListTable4_Accent3" | "ListTable4_Accent4" | "ListTable4_Accent5" | "ListTable4_Accent6" | "ListTable5Dark" | "ListTable5Dark_Accent1" | "ListTable5Dark_Accent2" | "ListTable5Dark_Accent3" | "ListTable5Dark_Accent4" | "ListTable5Dark_Accent5" | "ListTable5Dark_Accent6" | "ListTable6Colorful" | "ListTable6Colorful_Accent1" | "ListTable6Colorful_Accent2" | "ListTable6Colorful_Accent3" | "ListTable6Colorful_Accent4" | "ListTable6Colorful_Accent5" | "ListTable6Colorful_Accent6" | "ListTable7Colorful" | "ListTable7Colorful_Accent1" | "ListTable7Colorful_Accent2" | "ListTable7Colorful_Accent3" | "ListTable7Colorful_Accent4" | "ListTable7Colorful_Accent5" | "ListTable7Colorful_Accent6";'
      return:
        type:
          - Word.Style | "Other" | "Normal" | "Heading1" | "Heading2" | "Heading3" | "Heading4" | "Heading5" | "Heading6" | "Heading7" | "Heading8" | "Heading9" | "Toc1" | "Toc2" | "Toc3" | "Toc4" | "Toc5" | "Toc6" | "Toc7" | "Toc8" | "Toc9" | "FootnoteText" | "Header" | "Footer" | "Caption" | "FootnoteReference" | "EndnoteReference" | "EndnoteText" | "Title" | "Subtitle" | "Hyperlink" | "Strong" | "Emphasis" | "NoSpacing" | "ListParagraph" | "Quote" | "IntenseQuote" | "SubtleEmphasis" | "IntenseEmphasis" | "SubtleReference" | "IntenseReference" | "BookTitle" | "Bibliography" | "TocHeading" | "TableGrid" | "PlainTable1" | "PlainTable2" | "PlainTable3" | "PlainTable4" | "PlainTable5" | "TableGridLight" | "GridTable1Light" | "GridTable1Light_Accent1" | "GridTable1Light_Accent2" | "GridTable1Light_Accent3" | "GridTable1Light_Accent4" | "GridTable1Light_Accent5" | "GridTable1Light_Accent6" | "GridTable2" | "GridTable2_Accent1" | "GridTable2_Accent2" | "GridTable2_Accent3" | "GridTable2_Accent4" | "GridTable2_Accent5" | "GridTable2_Accent6" | "GridTable3" | "GridTable3_Accent1" | "GridTable3_Accent2" | "GridTable3_Accent3" | "GridTable3_Accent4" | "GridTable3_Accent5" | "GridTable3_Accent6" | "GridTable4" | "GridTable4_Accent1" | "GridTable4_Accent2" | "GridTable4_Accent3" | "GridTable4_Accent4" | "GridTable4_Accent5" | "GridTable4_Accent6" | "GridTable5Dark" | "GridTable5Dark_Accent1" | "GridTable5Dark_Accent2" | "GridTable5Dark_Accent3" | "GridTable5Dark_Accent4" | "GridTable5Dark_Accent5" | "GridTable5Dark_Accent6" | "GridTable6Colorful" | "GridTable6Colorful_Accent1" | "GridTable6Colorful_Accent2" | "GridTable6Colorful_Accent3" | "GridTable6Colorful_Accent4" | "GridTable6Colorful_Accent5" | "GridTable6Colorful_Accent6" | "GridTable7Colorful" | "GridTable7Colorful_Accent1" | "GridTable7Colorful_Accent2" | "GridTable7Colorful_Accent3" | "GridTable7Colorful_Accent4" | "GridTable7Colorful_Accent5" | "GridTable7Colorful_Accent6" | "ListTable1Light" | "ListTable1Light_Accent1" | "ListTable1Light_Accent2" | "ListTable1Light_Accent3" | "ListTable1Light_Accent4" | "ListTable1Light_Accent5" | "ListTable1Light_Accent6" | "ListTable2" | "ListTable2_Accent1" | "ListTable2_Accent2" | "ListTable2_Accent3" | "ListTable2_Accent4" | "ListTable2_Accent5" | "ListTable2_Accent6" | "ListTable3" | "ListTable3_Accent1" | "ListTable3_Accent2" | "ListTable3_Accent3" | "ListTable3_Accent4" | "ListTable3_Accent5" | "ListTable3_Accent6" | "ListTable4" | "ListTable4_Accent1" | "ListTable4_Accent2" | "ListTable4_Accent3" | "ListTable4_Accent4" | "ListTable4_Accent5" | "ListTable4_Accent6" | "ListTable5Dark" | "ListTable5Dark_Accent1" | "ListTable5Dark_Accent2" | "ListTable5Dark_Accent3" | "ListTable5Dark_Accent4" | "ListTable5Dark_Accent5" | "ListTable5Dark_Accent6" | "ListTable6Colorful" | "ListTable6Colorful_Accent1" | "ListTable6Colorful_Accent2" | "ListTable6Colorful_Accent3" | "ListTable6Colorful_Accent4" | "ListTable6Colorful_Accent5" | "ListTable6Colorful_Accent6" | "ListTable7Colorful" | "ListTable7Colorful_Accent1" | "ListTable7Colorful_Accent2" | "ListTable7Colorful_Accent3" | "ListTable7Colorful_Accent4" | "ListTable7Colorful_Accent5" | "ListTable7Colorful_Accent6"
  - uid: word_release.Word.Body.tables
    summary: |-
      <span data-ttu-id="a2ad0-351">Obtém a coleção de tabelas de objetos no corpo.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-351">Gets the collection of table objects in the body.</span></span> <span data-ttu-id="a2ad0-352">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-352">Read-only.</span></span>

      <span data-ttu-id="a2ad0-353">\[[Conjunto de APIs: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a2ad0-353">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: tables
    fullName: tables
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly tables: Word.TableCollection;'
      return:
        type:
          - Word.TableCollection
  - uid: word_release.Word.Body.text
    summary: |-
      <span data-ttu-id="a2ad0-354">Obtém o texto do corpo.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-354">Gets the text of the body.</span></span> <span data-ttu-id="a2ad0-355">Usa o método insertText para inserir texto.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-355">Use the insertText method to insert text.</span></span> <span data-ttu-id="a2ad0-356">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-356">Read-only.</span></span>

      <span data-ttu-id="a2ad0-357">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a2ad0-357">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: text
    fullName: text
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly text: string;'
      return:
        type:
          - string
        description: |-


          #### <a name="examples"></a><span data-ttu-id="a2ad0-358">Exemplos</span><span class="sxs-lookup"><span data-stu-id="a2ad0-358">Examples</span></span>

          ```javascript
          // Get the text property on the body object
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the document body.
              var body = context.document.body;

              // Queue a commmand to load the text in document body.
              context.load(body, 'text');

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log("Body contents: " + body.text);
              });
          })
          .catch(function (error) {
              console.log("Error: " + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: word_release.Word.Body.toJSON
    summary: '<span data-ttu-id="a2ad0-359">Substitui o método `toJSON()` JavaScript para fornecer uma saída mais útil quando um objeto API é passado para`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="a2ad0-359">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="a2ad0-360">.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-360"></span></span> <span data-ttu-id="a2ad0-361">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="a2ad0-361"></span></span><!-- --><span data-ttu-id="a2ad0-362">, por sua vez, chama `toJSON` o método do objeto que é passado para ele.) Enquanto o objeto Word. Body original é um objeto API, o `toJSON` método retorna um objeto JavaScript simples (digitado como`Word.Interfaces.BodyData`</span><span class="sxs-lookup"><span data-stu-id="a2ad0-362">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Word.Body object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.BodyData`</span></span><!-- --><span data-ttu-id="a2ad0-363">) que contém cópias superficiais de qualquer propriedade filho carregada do objeto original.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-363">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Word.Interfaces.BodyData;'
      return:
        type:
          - word.Word.Interfaces.BodyData
        description: ''
  - uid: word_release.Word.Body.track
    summary: '<span data-ttu-id="a2ad0-364">Acompanha o objeto para ajuste automático com base nas alterações adjacentes no documento.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-364">Track the object for automatic adjustment based on surrounding changes in the document.</span></span> <span data-ttu-id="a2ad0-365">Essa chamada é uma abreviação de context.trackedObjects.add(thisObject).</span><span class="sxs-lookup"><span data-stu-id="a2ad0-365">This call is a shorthand for context.trackedObjects.add(thisObject).</span></span> <span data-ttu-id="a2ad0-366">Se você estiver usando esse objeto em chamadas ".sync" e fora da execução sequencial de um lote ".run" e receber um erro "InvalidObjectPath" ao definir uma propriedade ou invocar um método no objeto, era necessário ter adicionado o objeto à coleção de objetos rastreados quando o objeto foi criado pela primeira vez.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-366">If you are using this object across ".sync" calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you needed to have added the object to the tracked object collection when the object was first created.</span></span>'
    name: track()
    fullName: track()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'track(): Word.Body;'
      return:
        type:
          - Word.Body
        description: ''
  - uid: word_release.Word.Body.type
    summary: |-
      <span data-ttu-id="a2ad0-367">Obtém o tipo do corpo.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-367">Gets the type of the body.</span></span> <span data-ttu-id="a2ad0-368">O tipo pode ser 'MainDoc', 'Section', 'Header', 'Footer' ou 'TableCell'.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-368">The type can be 'MainDoc', 'Section', 'Header', 'Footer', or 'TableCell'.</span></span> <span data-ttu-id="a2ad0-369">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-369">Read-only.</span></span>

      <span data-ttu-id="a2ad0-370">\[[Conjunto de APIs: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a2ad0-370">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: type
    fullName: type
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly type: Word.BodyType | "Unknown" | "MainDoc" | "Section" | "Header" | "Footer" | "TableCell";'
      return:
        type:
          - Word.BodyType | "Unknown" | "MainDoc" | "Section" | "Header" | "Footer" | "TableCell"
  - uid: word_release.Word.Body.untrack
    summary: '<span data-ttu-id="a2ad0-371">Libere a memória associada a este objeto, se ele já tiver sido rastreado anteriormente.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-371">Release the memory associated with this object, if it has previously been tracked.</span></span> <span data-ttu-id="a2ad0-372">Essa chamada é uma abreviação de context.trackedObjects.remove(thisObject).</span><span class="sxs-lookup"><span data-stu-id="a2ad0-372">This call is shorthand for context.trackedObjects.remove(thisObject).</span></span> <span data-ttu-id="a2ad0-373">Ter muitos objetos rastreados desacelera o aplicativo host, por isso, lembre-se de liberar todos os objetos adicionados após usá-los.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-373">Having many tracked objects slows down the host application, so please remember to free any objects you add, once you''re done using them.</span></span> <span data-ttu-id="a2ad0-374">Você precisa chamar "context.sync()" antes da liberação da memória entrar em vigor.</span><span class="sxs-lookup"><span data-stu-id="a2ad0-374">You will need to call "context.sync()" before the memory release takes effect.</span></span>'
    name: untrack()
    fullName: untrack()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'untrack(): Word.Body;'
      return:
        type:
          - Word.Body
        description: ''