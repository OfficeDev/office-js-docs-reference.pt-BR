### YamlMime:UniversalReference
items:
  - uid: excel.Excel.TableRow
    summary: |-
      <span data-ttu-id="86b1b-101">Representa uma linha em uma tabela.</span><span class="sxs-lookup"><span data-stu-id="86b1b-101">Represents a row in a table.</span></span>

      <span data-ttu-id="86b1b-102">Observe que, ao contrário de intervalos ou colunas, que serão ajustados se novas linhas/colunas forem adicionadas antes delas, um objeto TableRow representará o local físico da linha da tabela, mas não os dados.</span><span class="sxs-lookup"><span data-stu-id="86b1b-102">Note that unlike Ranges or Columns, which will adjust if new rows/columns are added before them, a TableRow object represent the physical location of the table row, but not the data.</span></span> <span data-ttu-id="86b1b-103">Ou seja, se os dados forem classificados ou se novas linhas forem adicionadas, uma linha de tabela continuará a apontar para o índice para o qual foi criada.</span><span class="sxs-lookup"><span data-stu-id="86b1b-103">That is, if the data is sorted or if new rows are added, a table row will continue to point at the index for which it was created.</span></span>

      <span data-ttu-id="86b1b-104">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="86b1b-104">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.TableRow
    fullName: Excel.TableRow
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: excel
    children:
      - excel.Excel.TableRow.context
      - excel.Excel.TableRow.delete
      - excel.Excel.TableRow.getRange
      - excel.Excel.TableRow.index
      - excel.Excel.TableRow.load
      - excel.Excel.TableRow.load_1
      - excel.Excel.TableRow.load_2
      - excel.Excel.TableRow.set
      - excel.Excel.TableRow.set_1
      - excel.Excel.TableRow.toJSON
      - excel.Excel.TableRow.values
  - uid: excel.Excel.TableRow.context
    summary: <span data-ttu-id="86b1b-105">O contexto de solicitação associado ao objeto.</span><span class="sxs-lookup"><span data-stu-id="86b1b-105">The request context associated with the object.</span></span> <span data-ttu-id="86b1b-106">Isso conecta o processo do suplemento ao processo do aplicativo host do Office.</span><span class="sxs-lookup"><span data-stu-id="86b1b-106">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - excel.Excel.RequestContext
  - uid: excel.Excel.TableRow.delete
    summary: |-
      <span data-ttu-id="86b1b-107">Exclui a linha da tabela.</span><span class="sxs-lookup"><span data-stu-id="86b1b-107">Deletes the row from the table.</span></span>

      <span data-ttu-id="86b1b-108">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="86b1b-108">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="86b1b-109">Exemplos</span><span class="sxs-lookup"><span data-stu-id="86b1b-109">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var row = ctx.workbook.tables.getItem(tableName).rows.getItemAt(2);
              row.delete();
              return ctx.sync(); 
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: excel.Excel.TableRow.getRange
    summary: |-
      <span data-ttu-id="86b1b-110">Retorna o objeto de intervalo associado a toda a linha.</span><span class="sxs-lookup"><span data-stu-id="86b1b-110">Returns the range object associated with the entire row.</span></span>

      <span data-ttu-id="86b1b-111">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="86b1b-111">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getRange()
    fullName: getRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRange(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="86b1b-112">Exemplos</span><span class="sxs-lookup"><span data-stu-id="86b1b-112">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var row = ctx.workbook.tables.getItem(tableName).rows.getItemAt(0);
              var rowRange = row.getRange();
              rowRange.load('address');
              return ctx.sync().then(function() {
                  console.log(rowRange.address);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: excel.Excel.TableRow.index
    summary: |-
      <span data-ttu-id="86b1b-113">Retorna o número de índice da linha na coleção de linhas da tabela.</span><span class="sxs-lookup"><span data-stu-id="86b1b-113">Returns the index number of the row within the rows collection of the table.</span></span> <span data-ttu-id="86b1b-114">Indexados com zero.</span><span class="sxs-lookup"><span data-stu-id="86b1b-114">Zero-indexed.</span></span> <span data-ttu-id="86b1b-115">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="86b1b-115">Read-only.</span></span>

      <span data-ttu-id="86b1b-116">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="86b1b-116">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: index
    fullName: index
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly index: number;'
      return:
        type:
          - number
  - uid: excel.Excel.TableRow.load
    summary: <span data-ttu-id="86b1b-117">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="86b1b-117">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="86b1b-118">Você deve chamar "context.sync()" antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="86b1b-118">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="86b1b-119">Além dessa assinatura, este método tem as seguintes assinaturas:</span><span class="sxs-lookup"><span data-stu-id="86b1b-119">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="86b1b-120">`load(option?: string | string[]): Excel.TableRow`-Where Option é uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="86b1b-120">`load(option?: string | string[]): Excel.TableRow` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="86b1b-121">`load(option?: { select?: string; expand?: string; }): Excel.TableRow`-Onde Option. Select é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades a serem carregadas, e Options. Expand é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades de navegação a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="86b1b-121">`load(option?: { select?: string; expand?: string; }): Excel.TableRow` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="86b1b-122">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TableRow`– Disponível somente nos tipos de coleção.</span><span class="sxs-lookup"><span data-stu-id="86b1b-122">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TableRow` - Only available on collection types.</span></span> <span data-ttu-id="86b1b-123">É semelhante à assinatura anterior.</span><span class="sxs-lookup"><span data-stu-id="86b1b-123">It is similar to the preceding signature.</span></span> <span data-ttu-id="86b1b-124">Option. Top especifica o número máximo de itens de coleta que podem ser incluídos no resultado.</span><span class="sxs-lookup"><span data-stu-id="86b1b-124">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="86b1b-125">Option. Skip especifica o número de itens que devem ser ignorados e não incluídos no resultado.</span><span class="sxs-lookup"><span data-stu-id="86b1b-125">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="86b1b-126">Se Option. Top for especificado, o conjunto de resultados será iniciado depois de ignorar o número de itens especificado.</span><span class="sxs-lookup"><span data-stu-id="86b1b-126">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.TableRowLoadOptions): Excel.TableRow;'
      return:
        type:
          - excel.Excel.TableRow
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.TableRowLoadOptions
  - uid: excel.Excel.TableRow.load_1
    summary: <span data-ttu-id="86b1b-127">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="86b1b-127">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="86b1b-128">Você deve chamar `context.sync()` antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="86b1b-128">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.TableRow;'
      return:
        type:
          - excel.Excel.TableRow
        description: |-


          #### <a name="examples"></a><span data-ttu-id="86b1b-129">Exemplos</span><span class="sxs-lookup"><span data-stu-id="86b1b-129">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var row = ctx.workbook.tables.getItem(tableName).rows.getItem(0);
              row.load('index');
              return ctx.sync().then(function() {
                  console.log(row.index);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          Excel.run(function (ctx) { 
              var tables = ctx.workbook.tables;
              var newValues = [["New", "Values", "For", "New", "Row"]];
              var tableName = 'Table1';
              var row = ctx.workbook.tables.getItem(tableName).rows.getItemAt(2);
              row.values = newValues;
              row.load('values');
              return ctx.sync().then(function() {
                  console.log(row.values);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="86b1b-130">Uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="86b1b-130">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: excel.Excel.TableRow.load_2
    summary: <span data-ttu-id="86b1b-131">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="86b1b-131">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="86b1b-132">Você deve chamar `context.sync()` antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="86b1b-132">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.TableRow;'
      return:
        type:
          - excel.Excel.TableRow
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="86b1b-133">Onde propertyNamesAndPaths. Select é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades a serem carregadas e propertyNamesAndPaths. Expand é uma sequência de caracteres delimitada por vírgula que especifica as propriedades de navegação a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="86b1b-133">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel.Excel.TableRow.set
    summary: '<span data-ttu-id="86b1b-134">Define várias propriedades de um objeto ao mesmo tempo.</span><span class="sxs-lookup"><span data-stu-id="86b1b-134">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="86b1b-135">Você pode passar um objeto simples com as propriedades apropriadas ou outro objeto API do mesmo tipo.</span><span class="sxs-lookup"><span data-stu-id="86b1b-135">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="86b1b-136">Este método tem a seguinte assinatura adicional:</span><span class="sxs-lookup"><span data-stu-id="86b1b-136">This method has the following additional signature:</span></span>

      `set(properties: Excel.TableRow): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.TableRowUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="86b1b-137">Um objeto JavaScript com propriedades que são estruturadas isomorphically para as propriedades do objeto no qual o método é chamado.</span><span class="sxs-lookup"><span data-stu-id="86b1b-137">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - Interfaces.TableRowUpdateData
        - id: options
          description: <span data-ttu-id="86b1b-138">Fornece uma opção para suprimir erros se o objeto Properties tentar definir qualquer propriedade somente leitura.</span><span class="sxs-lookup"><span data-stu-id="86b1b-138">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - OfficeExtension.UpdateOptions
  - uid: excel.Excel.TableRow.set_1
    summary: '<span data-ttu-id="86b1b-139">Define várias propriedades no objeto ao mesmo tempo, com base em um objeto carregado existente.</span><span class="sxs-lookup"><span data-stu-id="86b1b-139">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.TableRow): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - excel.Excel.TableRow
  - uid: excel.Excel.TableRow.toJSON
    summary: '<span data-ttu-id="86b1b-140">Substitui o método `toJSON()` JavaScript para fornecer uma saída mais útil quando um objeto API é passado para`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="86b1b-140">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="86b1b-141">.</span><span class="sxs-lookup"><span data-stu-id="86b1b-141"></span></span> <span data-ttu-id="86b1b-142">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="86b1b-142"></span></span><!-- --><span data-ttu-id="86b1b-143">, por sua vez, chama `toJSON` o método do objeto que é passado para ele.) Enquanto o objeto Excel. TableRow original é um objeto API, o `toJSON` método retorna um objeto JavaScript simples (digitado como`Excel.Interfaces.TableRowData`</span><span class="sxs-lookup"><span data-stu-id="86b1b-143">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.TableRow object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.TableRowData`</span></span><!-- --><span data-ttu-id="86b1b-144">) que contém cópias superficiais de qualquer propriedade filho carregada do objeto original.</span><span class="sxs-lookup"><span data-stu-id="86b1b-144">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.TableRowData;'
      return:
        type:
          - excel.Excel.Interfaces.TableRowData
        description: ''
  - uid: excel.Excel.TableRow.values
    summary: |-
      <span data-ttu-id="86b1b-145">Representa os valores brutos do intervalo especificado.</span><span class="sxs-lookup"><span data-stu-id="86b1b-145">Represents the raw values of the specified range.</span></span> <span data-ttu-id="86b1b-146">Os dados retornados podem ser dos tipos: cadeia de caracteres, número ou booliano.</span><span class="sxs-lookup"><span data-stu-id="86b1b-146">The data returned could be of type string, number, or a boolean.</span></span> <span data-ttu-id="86b1b-147">Células que contêm um erro retornarão a cadeia de caracteres de erro.</span><span class="sxs-lookup"><span data-stu-id="86b1b-147">Cells that contain an error will return the error string.</span></span>

      <span data-ttu-id="86b1b-148">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="86b1b-148">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: values
    fullName: values
    langs:
      - typeScript
    type: property
    syntax:
      content: 'values: any[][];'
      return:
        type:
          - 'any[][]'