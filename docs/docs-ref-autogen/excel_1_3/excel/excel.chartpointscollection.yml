### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.ChartPointsCollection:class'
    summary: |-
      Uma coleção de todos os pontos do gráfico em uma série dentro do gráfico.

      \[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: Excel.ChartPointsCollection
    fullName: Excel.ChartPointsCollection
    langs:
      - typeScript
    type: class
    extends:
      - 'office!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.ChartPointsCollection#context:member'
      - 'excel!Excel.ChartPointsCollection#count:member'
      - 'excel!Excel.ChartPointsCollection#getItemAt:member(1)'
      - 'excel!Excel.ChartPointsCollection#items:member'
      - 'excel!Excel.ChartPointsCollection#load:member(1)'
      - 'excel!Excel.ChartPointsCollection#load:member(2)'
      - 'excel!Excel.ChartPointsCollection#load:member(3)'
      - 'excel!Excel.ChartPointsCollection#toJSON:member(1)'
  - uid: 'excel!Excel.ChartPointsCollection#context:member'
    summary: O contexto de solicitação associado ao objeto. Isso conecta o processo do suplemento ao processo do aplicativo host do Office.
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.ChartPointsCollection#count:member'
    summary: |-
      Retorna o número de pontos do gráfico da série.

      \[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: count
    fullName: count
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly count: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.ChartPointsCollection#getItemAt:member(1)'
    summary: |-
      Recupera um ponto com base na respectiva posição dentro da série.

      \[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getItemAt(index)
    fullName: getItemAt(index)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemAt(index: number): Excel.ChartPoint;'
      return:
        type:
          - 'excel!Excel.ChartPoint:class'
        description: |-


          #### <a name="examples"></a>Exemplos

          ```javascript
          // Set the border color for the first points in the points collection
          Excel.run(function (ctx) { 
              var points = ctx.workbook.worksheets.getItem("Sheet1").charts.getItem("Chart1").series.getItemAt(0).points;
              points.getItemAt(0).format.fill.setSolidColor("8FBC8F");
              return ctx.sync().then(function() {
                  console.log("Point Border Color Changed");
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: index
          description: Valor de índice do objeto a ser recuperado. Indexados com zero.
          type:
            - number
  - uid: 'excel!Excel.ChartPointsCollection#items:member'
    summary: Obtém os itens filhos carregados nesta coleção.
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.ChartPoint[];'
      return:
        type:
          - 'excel!Excel.ChartPointsCollection#items~0:complex'
  - uid: 'excel!Excel.ChartPointsCollection#load:member(1)'
    summary: Coloca um comando na fila para carregar as propriedades especificadas do objeto. Você deve chamar `context.sync()` antes de ler as propriedades.
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.ChartPointsCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.ChartPointsCollection;'
      return:
        type:
          - 'excel!Excel.ChartPointsCollection:class'
        description: ''
      parameters:
        - id: options
          description: Fornece opções para as propriedades do objeto a ser carregado.
          type:
            - 'excel!Excel.ChartPointsCollection#load~0:complex'
  - uid: 'excel!Excel.ChartPointsCollection#load:member(2)'
    summary: Coloca um comando na fila para carregar as propriedades especificadas do objeto. Você deve chamar `context.sync()` antes de ler as propriedades.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.ChartPointsCollection;'
      return:
        type:
          - 'excel!Excel.ChartPointsCollection:class'
        description: |-


          #### <a name="examples"></a>Exemplos

          ```javascript
          // Get the names of points in the points collection
          Excel.run(function (ctx) { 
              var pointsCollection = 
                  ctx.workbook.worksheets.getItem("Sheet1").charts.getItem("Chart1").series.getItemAt(0).points;
              pointsCollection.load('items');
              return ctx.sync().then(function() {
                  console.log("Points Collection loaded");
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          // Get the number of points
          Excel.run(function (ctx) { 
              var pointsCollection = 
                  ctx.workbook.worksheets.getItem("Sheet1").charts.getItem("Chart1").series.getItemAt(0).points;
              pointsCollection.load('count');
              return ctx.sync().then(function() {
                  console.log("points: Count= " + pointsCollection.count);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: Uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.ChartPointsCollection#load:member(3)'
    summary: Coloca um comando na fila para carregar as propriedades especificadas do objeto. Você deve chamar `context.sync()` antes de ler as propriedades.
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: OfficeExtension.LoadOption): Excel.ChartPointsCollection;'
      return:
        type:
          - 'excel!Excel.ChartPointsCollection:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '`propertyNamesAndPaths.select`é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades a serem carregadas e `propertyNamesAndPaths.expand` é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades de navegação a serem carregadas.'
          type:
            - 'office!OfficeExtension.LoadOption:interface'
  - uid: 'excel!Excel.ChartPointsCollection#toJSON:member(1)'
    summary: 'Substitui o `toJSON()` método JavaScript para fornecer uma saída mais útil quando um objeto API é passado para`JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, por sua vez, chama o `toJSON` método do objeto que é passado para ele.) Enquanto o `Excel.ChartPointsCollection` objeto original é um objeto API, o `toJSON` método retorna um objeto JavaScript simples (digitado como`Excel.Interfaces.ChartPointsCollectionData`<!-- -->) que contém uma matriz de "itens" com cópias superficiais de qualquer propriedade carregada dos itens da coleção.'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.ChartPointsCollectionData;'
      return:
        type:
          - 'excel!Excel.Interfaces.ChartPointsCollectionData:interface'
        description: ''
references:
  - uid: 'office!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.ChartPoint:class'
    name: Excel.ChartPoint
  - uid: 'excel!Excel.ChartPointsCollection#items~0:complex'
    name: 'Excel.ChartPoint[]'
    fullName: 'Excel.ChartPoint[]'
    spec.typeScript:
      - uid: 'excel!Excel.ChartPoint:class'
        name: Excel.ChartPoint
        fullName: Excel.ChartPoint
      - name: '[]'
        fullName: '[]'
  - uid: 'excel!Excel.ChartPointsCollection:class'
    name: Excel.ChartPointsCollection
  - uid: 'excel!Excel.ChartPointsCollection#load~0:complex'
    name: Excel.Interfaces.ChartPointsCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    fullName: Excel.Interfaces.ChartPointsCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    spec.typeScript:
      - uid: 'excel!Excel.Interfaces.ChartPointsCollectionLoadOptions:interface'
        name: Excel.Interfaces.ChartPointsCollectionLoadOptions
        fullName: Excel.Interfaces.ChartPointsCollectionLoadOptions
      - name: ' & '
        fullName: ' & '
      - uid: 'excel!Excel.Interfaces.CollectionLoadOptions:interface'
        name: Excel.Interfaces.CollectionLoadOptions
        fullName: Excel.Interfaces.CollectionLoadOptions
  - uid: 'office!OfficeExtension.LoadOption:interface'
    name: OfficeExtension.LoadOption
  - uid: 'excel!Excel.Interfaces.ChartPointsCollectionData:interface'
    name: Excel.Interfaces.ChartPointsCollectionData