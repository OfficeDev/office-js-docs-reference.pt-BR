### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.ChartFill:class'
    summary: |-
      <span data-ttu-id="2b49e-101">Representa a formatação de preenchimento de um elemento do gráfico.</span><span class="sxs-lookup"><span data-stu-id="2b49e-101">Represents the fill formatting for a chart element.</span></span>

      <span data-ttu-id="2b49e-102">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2b49e-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.ChartFill
    fullName: Excel.ChartFill
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.ChartFill#clear:member(1)'
      - 'excel!Excel.ChartFill#context:member'
      - 'excel!Excel.ChartFill#load:member(1)'
      - 'excel!Excel.ChartFill#setSolidColor:member(1)'
      - 'excel!Excel.ChartFill#toJSON:member(1)'
  - uid: 'excel!Excel.ChartFill#clear:member(1)'
    summary: |-
      <span data-ttu-id="2b49e-103">Limpa a cor de preenchimento de um elemento do gráfico.</span><span class="sxs-lookup"><span data-stu-id="2b49e-103">Clear the fill color of a chart element.</span></span>

      <span data-ttu-id="2b49e-104">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2b49e-104">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: clear()
    fullName: clear()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clear(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="2b49e-105">Exemplos</span><span class="sxs-lookup"><span data-stu-id="2b49e-105">Examples</span></span>

          ```javascript
          // Clear the line format of the major Gridlines on value axis of the Chart named "Chart1"
          Excel.run(function (ctx) { 
              var gridlines = ctx.workbook.worksheets.getItem("Sheet1").charts.getItem("Chart1").axes.valueAxis.majorGridlines;
              gridlines.format.line.clear();
              return ctx.sync().then(function() {
                      console.log("Chart Major Gridlines Format Cleared");
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'excel!Excel.ChartFill#context:member'
    summary: <span data-ttu-id="2b49e-106">O contexto de solicitação associado ao objeto.</span><span class="sxs-lookup"><span data-stu-id="2b49e-106">The request context associated with the object.</span></span> <span data-ttu-id="2b49e-107">Isso conecta o processo do suplemento ao processo do aplicativo host do Office.</span><span class="sxs-lookup"><span data-stu-id="2b49e-107">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.ChartFill#load:member(1)'
    summary: <span data-ttu-id="2b49e-108">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="2b49e-108">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="2b49e-109">Você deve chamar "context.sync()" antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="2b49e-109">You must call "context.sync()" before reading the properties.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: string | string[] | OfficeExtension.LoadOption): Excel.ChartFill;'
      return:
        type:
          - 'excel!Excel.ChartFill:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'excel!Excel.ChartFill#load~0:complex'
  - uid: 'excel!Excel.ChartFill#setSolidColor:member(1)'
    summary: |-
      <span data-ttu-id="2b49e-110">Define a formatação de preenchimento de um elemento do gráfico com uma cor uniforme.</span><span class="sxs-lookup"><span data-stu-id="2b49e-110">Sets the fill formatting of a chart element to a uniform color.</span></span>

      <span data-ttu-id="2b49e-111">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2b49e-111">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: setSolidColor(color)
    fullName: setSolidColor(color)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setSolidColor(color: string): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="2b49e-112">Exemplos</span><span class="sxs-lookup"><span data-stu-id="2b49e-112">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var chart = ctx.workbook.worksheets.getItem("Sheet1").charts.getItem("Chart1");    

              chart.format.fill.setSolidColor("#FF0000");

              return ctx.sync().then(function() {
                      console.log("Chart1 Background Color Changed.");
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Sample");

              let pointsCollection = sheet.charts.getItemAt(0).series.getItemAt(0).points;
              let point = pointsCollection.getItemAt(2);

              // Set color for chart point.
              point.format.fill.setSolidColor('red');

              await context.sync();        
          });
          ```
      parameters:
        - id: color
          description: '<span data-ttu-id="2b49e-113">Código de cor HTML que representa a cor do plano de fundo, \#do formato RRGGBB (por exemplo, "FFA500") ou como uma cor de HTML nomeada (por exemplo, "laranja").</span><span class="sxs-lookup"><span data-stu-id="2b49e-113">HTML color code representing the color of the background, of the form \#RRGGBB (e.g. "FFA500") or as a named HTML color (e.g. "orange").</span></span>'
          type:
            - string
  - uid: 'excel!Excel.ChartFill#toJSON:member(1)'
    summary: '<span data-ttu-id="2b49e-114">Substitui o método `toJSON()` JavaScript para fornecer uma saída mais útil quando um objeto API é passado para`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="2b49e-114">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="2b49e-115">.</span><span class="sxs-lookup"><span data-stu-id="2b49e-115"></span></span> <span data-ttu-id="2b49e-116">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="2b49e-116"></span></span><!-- --><span data-ttu-id="2b49e-117">, por sua vez, chama `toJSON` o método do objeto que é passado para ele.) Enquanto o objeto Excel. ChartFill original é um objeto API, o `toJSON` método retorna um objeto JavaScript simples (digitado como`Excel.Interfaces.ChartFillData`</span><span class="sxs-lookup"><span data-stu-id="2b49e-117">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.ChartFill object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ChartFillData`</span></span><!-- --><span data-ttu-id="2b49e-118">) que contém cópias superficiais de qualquer propriedade filho carregada do objeto original.</span><span class="sxs-lookup"><span data-stu-id="2b49e-118">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        toJSON(): {
                    [key: string]: string;
                };
      return:
        type:
          - |-
            {
                        [key: string]: string;
                    }
        description: ''
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.ChartFill:class'
    name: Excel.ChartFill
  - uid: 'excel!Excel.ChartFill#load~0:complex'
    name: 'string | string[] | OfficeExtension.LoadOption'
    fullName: 'string | string[] | OfficeExtension.LoadOption'
    spec.typeScript:
      - name: 'string | string[] | '
        fullName: 'string | string[] | '
      - uid: 'excel!OfficeExtension.LoadOption:interface'
        name: OfficeExtension.LoadOption
        fullName: OfficeExtension.LoadOption