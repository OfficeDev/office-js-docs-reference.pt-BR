### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.Chart:class'
    summary: |-
      <span data-ttu-id="e40f7-101">Representa um objeto chart em uma pasta de trabalho.</span><span class="sxs-lookup"><span data-stu-id="e40f7-101">Represents a chart object in a workbook.</span></span> <span data-ttu-id="e40f7-102">Para saber mais sobre o modelo de objeto de gráfico, confira [trabalhar com gráficos usando a API JavaScript do Excel](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-charts)</span><span class="sxs-lookup"><span data-stu-id="e40f7-102">To learn more about the Chart object model, see [Work with charts using the Excel JavaScript API](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-charts)</span></span><!-- --><span data-ttu-id="e40f7-103">.</span><span class="sxs-lookup"><span data-stu-id="e40f7-103"></span></span>

      <span data-ttu-id="e40f7-104">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e40f7-104">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.Chart
    fullName: Excel.Chart
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.Chart#axes:member'
      - 'excel!Excel.Chart#context:member'
      - 'excel!Excel.Chart#dataLabels:member'
      - 'excel!Excel.Chart#delete:member(1)'
      - 'excel!Excel.Chart#format:member'
      - 'excel!Excel.Chart#height:member'
      - 'excel!Excel.Chart#left:member'
      - 'excel!Excel.Chart#legend:member'
      - 'excel!Excel.Chart#load:member(1)'
      - 'excel!Excel.Chart#load:member(2)'
      - 'excel!Excel.Chart#load:member(3)'
      - 'excel!Excel.Chart#name:member'
      - 'excel!Excel.Chart#series:member'
      - 'excel!Excel.Chart#set:member(1)'
      - 'excel!Excel.Chart#set:member(2)'
      - 'excel!Excel.Chart#setData:member(1)'
      - 'excel!Excel.Chart#setData:member(2)'
      - 'excel!Excel.Chart#setPosition:member(1)'
      - 'excel!Excel.Chart#title:member'
      - 'excel!Excel.Chart#toJSON:member(1)'
      - 'excel!Excel.Chart#top:member'
      - 'excel!Excel.Chart#width:member'
  - uid: 'excel!Excel.Chart#axes:member'
    summary: |-
      <span data-ttu-id="e40f7-105">Representa os eixos de um gráfico.</span><span class="sxs-lookup"><span data-stu-id="e40f7-105">Represents chart axes.</span></span> <span data-ttu-id="e40f7-106">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="e40f7-106">Read-only.</span></span>

      <span data-ttu-id="e40f7-107">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e40f7-107">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: axes
    fullName: axes
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly axes: Excel.ChartAxes;'
      return:
        type:
          - 'excel!Excel.ChartAxes:class'
  - uid: 'excel!Excel.Chart#context:member'
    summary: <span data-ttu-id="e40f7-108">O contexto de solicitação associado ao objeto.</span><span class="sxs-lookup"><span data-stu-id="e40f7-108">The request context associated with the object.</span></span> <span data-ttu-id="e40f7-109">Isso conecta o processo do suplemento ao processo do aplicativo host do Office.</span><span class="sxs-lookup"><span data-stu-id="e40f7-109">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.Chart#dataLabels:member'
    summary: |-
      <span data-ttu-id="e40f7-110">Representa os rótulos de dados no gráfico.</span><span class="sxs-lookup"><span data-stu-id="e40f7-110">Represents the datalabels on the chart.</span></span> <span data-ttu-id="e40f7-111">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="e40f7-111">Read-only.</span></span>

      <span data-ttu-id="e40f7-112">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e40f7-112">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: dataLabels
    fullName: dataLabels
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly dataLabels: Excel.ChartDataLabels;'
      return:
        type:
          - 'excel!Excel.ChartDataLabels:class'
  - uid: 'excel!Excel.Chart#delete:member(1)'
    summary: |-
      <span data-ttu-id="e40f7-113">Exclui o objeto de gráfico.</span><span class="sxs-lookup"><span data-stu-id="e40f7-113">Deletes the chart object.</span></span>

      <span data-ttu-id="e40f7-114">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e40f7-114">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="e40f7-115">Exemplos</span><span class="sxs-lookup"><span data-stu-id="e40f7-115">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var chart = ctx.workbook.worksheets.getItem("Sheet1").charts.getItem("Chart1");    
              chart.delete();
              return ctx.sync(); 
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'excel!Excel.Chart#format:member'
    summary: |-
      <span data-ttu-id="e40f7-116">Encapsula as propriedades de formato da área do gráfico.</span><span class="sxs-lookup"><span data-stu-id="e40f7-116">Encapsulates the format properties for the chart area.</span></span> <span data-ttu-id="e40f7-117">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="e40f7-117">Read-only.</span></span>

      <span data-ttu-id="e40f7-118">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e40f7-118">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: format
    fullName: format
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly format: Excel.ChartAreaFormat;'
      return:
        type:
          - 'excel!Excel.ChartAreaFormat:class'
  - uid: 'excel!Excel.Chart#height:member'
    summary: |-
      <span data-ttu-id="e40f7-119">Representa a altura, em pontos, do objeto Chart.</span><span class="sxs-lookup"><span data-stu-id="e40f7-119">Represents the height, in points, of the chart object.</span></span>

      <span data-ttu-id="e40f7-120">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e40f7-120">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: height
    fullName: height
    langs:
      - typeScript
    type: property
    syntax:
      content: 'height: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.Chart#left:member'
    summary: |-
      <span data-ttu-id="e40f7-121">A distância, em pontos, da esquerda do gráfico à origem da planilha.</span><span class="sxs-lookup"><span data-stu-id="e40f7-121">The distance, in points, from the left side of the chart to the worksheet origin.</span></span>

      <span data-ttu-id="e40f7-122">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e40f7-122">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: left
    fullName: left
    langs:
      - typeScript
    type: property
    syntax:
      content: 'left: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.Chart#legend:member'
    summary: |-
      <span data-ttu-id="e40f7-123">Representa a legenda do gráfico.</span><span class="sxs-lookup"><span data-stu-id="e40f7-123">Represents the legend for the chart.</span></span> <span data-ttu-id="e40f7-124">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="e40f7-124">Read-only.</span></span>

      <span data-ttu-id="e40f7-125">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e40f7-125">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: legend
    fullName: legend
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly legend: Excel.ChartLegend;'
      return:
        type:
          - 'excel!Excel.ChartLegend:class'
  - uid: 'excel!Excel.Chart#load:member(1)'
    summary: <span data-ttu-id="e40f7-126">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="e40f7-126">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="e40f7-127">Você deve chamar `context.sync()` antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="e40f7-127">You must call `context.sync()` before reading the properties.</span></span>
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.ChartLoadOptions): Excel.Chart;'
      return:
        type:
          - 'excel!Excel.Chart:class'
        description: ''
      parameters:
        - id: options
          description: <span data-ttu-id="e40f7-128">Fornece opções para as propriedades do objeto a ser carregado.</span><span class="sxs-lookup"><span data-stu-id="e40f7-128">Provides options for which properties of the object to load.</span></span>
          type:
            - 'excel!Excel.Interfaces.ChartLoadOptions:interface'
  - uid: 'excel!Excel.Chart#load:member(2)'
    summary: <span data-ttu-id="e40f7-129">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="e40f7-129">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="e40f7-130">Você deve chamar `context.sync()` antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="e40f7-130">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.Chart;'
      return:
        type:
          - 'excel!Excel.Chart:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="e40f7-131">Exemplos</span><span class="sxs-lookup"><span data-stu-id="e40f7-131">Examples</span></span>

          ```javascript
          // Get a chart named "Chart1"
          Excel.run(function (ctx) { 
              var chart = ctx.workbook.worksheets.getItem("Sheet1").charts.getItem("Chart1");    
              chart.load('name');
              return ctx.sync().then(function() {
                      console.log(chart.name);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="e40f7-132">Uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="e40f7-132">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.Chart#load:member(3)'
    summary: <span data-ttu-id="e40f7-133">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="e40f7-133">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="e40f7-134">Você deve chamar `context.sync()` antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="e40f7-134">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.Chart;
      return:
        type:
          - 'excel!Excel.Chart:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="e40f7-135">`propertyNamesAndPaths.select`é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades a serem `propertyNamesAndPaths.expand` carregadas e é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades de navegação a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="e40f7-135">`propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - |-
              {
                          select?: string;
                          expand?: string;
                      }
  - uid: 'excel!Excel.Chart#name:member'
    summary: |-
      <span data-ttu-id="e40f7-136">Representa o nome de um objeto Chart.</span><span class="sxs-lookup"><span data-stu-id="e40f7-136">Represents the name of a chart object.</span></span>

      <span data-ttu-id="e40f7-137">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e40f7-137">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: name
    fullName: name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'name: string;'
      return:
        type:
          - string
        description: |-


          #### <a name="examples"></a><span data-ttu-id="e40f7-138">Exemplos</span><span class="sxs-lookup"><span data-stu-id="e40f7-138">Examples</span></span>

          ```javascript
          // Rename the chart to new name, resize the chart to 200 points in both height and weight. 
          // Move Chart1 to 100 points to the top and left. 
          Excel.run(function (ctx) { 
              var chart = ctx.workbook.worksheets.getItem("Sheet1").charts.getItem("Chart1");    
              chart.name = "New Name";
              chart.top = 100;
              chart.left = 100;
              chart.height = 200;
              chart.width = 200;
              return ctx.sync(); 
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'excel!Excel.Chart#series:member'
    summary: |-
      <span data-ttu-id="e40f7-139">Representa uma única série ou uma coleção de séries no gráfico.</span><span class="sxs-lookup"><span data-stu-id="e40f7-139">Represents either a single series or collection of series in the chart.</span></span> <span data-ttu-id="e40f7-140">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="e40f7-140">Read-only.</span></span>

      <span data-ttu-id="e40f7-141">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e40f7-141">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: series
    fullName: series
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly series: Excel.ChartSeriesCollection;'
      return:
        type:
          - 'excel!Excel.ChartSeriesCollection:class'
  - uid: 'excel!Excel.Chart#set:member(1)'
    summary: '<span data-ttu-id="e40f7-142">Define várias propriedades de um objeto ao mesmo tempo.</span><span class="sxs-lookup"><span data-stu-id="e40f7-142">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="e40f7-143">Você pode passar um objeto simples com as propriedades apropriadas ou outro objeto API do mesmo tipo.</span><span class="sxs-lookup"><span data-stu-id="e40f7-143">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="e40f7-144">Este método tem a seguinte assinatura adicional:</span><span class="sxs-lookup"><span data-stu-id="e40f7-144">This method has the following additional signature:</span></span>

      `set(properties: Excel.Chart): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.ChartUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="e40f7-145">Um objeto JavaScript com propriedades que são estruturadas isomorphically para as propriedades do objeto no qual o método é chamado.</span><span class="sxs-lookup"><span data-stu-id="e40f7-145">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - 'excel!Excel.Interfaces.ChartUpdateData:interface'
        - id: options
          description: <span data-ttu-id="e40f7-146">Fornece uma opção para suprimir erros se o objeto Properties tentar definir qualquer propriedade somente leitura.</span><span class="sxs-lookup"><span data-stu-id="e40f7-146">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - 'excel!OfficeExtension.UpdateOptions:interface'
  - uid: 'excel!Excel.Chart#set:member(2)'
    summary: '<span data-ttu-id="e40f7-147">Define várias propriedades no objeto ao mesmo tempo, com base em um objeto carregado existente.</span><span class="sxs-lookup"><span data-stu-id="e40f7-147">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.Chart): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'excel!Excel.Chart:class'
  - uid: 'excel!Excel.Chart#setData:member(1)'
    summary: |-
      <span data-ttu-id="e40f7-148">Redefine os dados de origem do gráfico.</span><span class="sxs-lookup"><span data-stu-id="e40f7-148">Resets the source data for the chart.</span></span>

      <span data-ttu-id="e40f7-149">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e40f7-149">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'setData(sourceData, seriesBy)'
    fullName: 'setData(sourceData, seriesBy)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setData(sourceData: Range, seriesBy?: Excel.ChartSeriesBy): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="e40f7-150">Exemplos</span><span class="sxs-lookup"><span data-stu-id="e40f7-150">Examples</span></span>

          ```javascript
          // Set the sourceData to be "A1:B4" and seriesBy to be "Columns"
          Excel.run(function (ctx) { 
              var chart = ctx.workbook.worksheets.getItem("Sheet1").charts.getItem("Chart1");    
              var sourceData = "A1:B4";
              chart.setData(sourceData, "Columns");
              return ctx.sync(); 
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: sourceData
          description: <span data-ttu-id="e40f7-151">O objeto Range correspondente aos dados de origem.</span><span class="sxs-lookup"><span data-stu-id="e40f7-151">The range object corresponding to the source data.</span></span>
          type:
            - 'excel!Excel.Range:class'
        - id: seriesBy
          description: '<span data-ttu-id="e40f7-152">Especifica a forma como as colunas ou linhas são usadas como série de dados no gráfico.</span><span class="sxs-lookup"><span data-stu-id="e40f7-152">Specifies the way columns or rows are used as data series on the chart.</span></span> <span data-ttu-id="e40f7-153">Pode ser uma das seguintes opções: auto (padrão), linhas e colunas.</span><span class="sxs-lookup"><span data-stu-id="e40f7-153">Can be one of the following: Auto (default), Rows, and Columns.</span></span> <span data-ttu-id="e40f7-154">Consulte Excel. ChartSeriesBy para obter detalhes.</span><span class="sxs-lookup"><span data-stu-id="e40f7-154">See Excel.ChartSeriesBy for details.</span></span>'
          type:
            - 'excel!Excel.ChartSeriesBy:enum'
  - uid: 'excel!Excel.Chart#setData:member(2)'
    summary: |-
      <span data-ttu-id="e40f7-155">Redefine os dados de origem do gráfico.</span><span class="sxs-lookup"><span data-stu-id="e40f7-155">Resets the source data for the chart.</span></span>

      <span data-ttu-id="e40f7-156">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e40f7-156">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'setData(sourceData, seriesByString)'
    fullName: 'setData(sourceData, seriesByString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setData(sourceData: Range, seriesByString?: "Auto" | "Columns" | "Rows"): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: sourceData
          description: <span data-ttu-id="e40f7-157">O objeto Range correspondente aos dados de origem.</span><span class="sxs-lookup"><span data-stu-id="e40f7-157">The range object corresponding to the source data.</span></span>
          type:
            - 'excel!Excel.Range:class'
        - id: seriesByString
          description: '<span data-ttu-id="e40f7-158">Especifica a forma como as colunas ou linhas são usadas como série de dados no gráfico.</span><span class="sxs-lookup"><span data-stu-id="e40f7-158">Specifies the way columns or rows are used as data series on the chart.</span></span> <span data-ttu-id="e40f7-159">Pode ser uma das seguintes opções: auto (padrão), linhas e colunas.</span><span class="sxs-lookup"><span data-stu-id="e40f7-159">Can be one of the following: Auto (default), Rows, and Columns.</span></span> <span data-ttu-id="e40f7-160">Consulte Excel. ChartSeriesBy para obter detalhes.</span><span class="sxs-lookup"><span data-stu-id="e40f7-160">See Excel.ChartSeriesBy for details.</span></span>'
          type:
            - '"Auto" | "Columns" | "Rows"'
  - uid: 'excel!Excel.Chart#setPosition:member(1)'
    summary: |-
      <span data-ttu-id="e40f7-161">Posiciona o gráfico em relação às células na planilha.</span><span class="sxs-lookup"><span data-stu-id="e40f7-161">Positions the chart relative to cells on the worksheet.</span></span>

      <span data-ttu-id="e40f7-162">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e40f7-162">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'setPosition(startCell, endCell)'
    fullName: 'setPosition(startCell, endCell)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setPosition(startCell: Range | string, endCell?: Range | string): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="e40f7-163">Exemplos</span><span class="sxs-lookup"><span data-stu-id="e40f7-163">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var sheetName = "Charts";
              var rangeSelection = "A1:B4";
              var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeSelection);
              var sourceData = sheetName + "!" + "A1:B4";
              var chart = ctx.workbook.worksheets.getItem(sheetName).charts.add("pie", range, "auto");
              chart.width = 500;
              chart.height = 300;
              chart.setPosition("C2", null);
              return ctx.sync(); 
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: startCell
          description: '<span data-ttu-id="e40f7-p114">A célula inicial. Esse é o local para o qual o gráfico será movido. A célula inicial é a célula superior esquerda ou direita, dependendo das configurações de exibição do usuário, da esquerda para a direita.</span><span class="sxs-lookup"><span data-stu-id="e40f7-p114">The start cell. This is where the chart will be moved to. The start cell is the top-left or top-right cell, depending on the user''s right-to-left display settings.</span></span>'
          type:
            - 'excel!Excel.Chart#setPosition~0:complex'
        - id: endCell
          description: '<span data-ttu-id="e40f7-167">(Opcional) Na célula final.</span><span class="sxs-lookup"><span data-stu-id="e40f7-167">(Optional) The end cell.</span></span> <span data-ttu-id="e40f7-168">Quando é especificada, a altura e a largura do gráfico são definidas para cobrirem totalmente essa célula ou intervalo.</span><span class="sxs-lookup"><span data-stu-id="e40f7-168">If specified, the chart''s width and height will be set to fully cover up this cell/range.</span></span>'
          type:
            - 'excel!Excel.Chart#setPosition~1:complex'
  - uid: 'excel!Excel.Chart#title:member'
    summary: |-
      <span data-ttu-id="e40f7-169">Representa o título do gráfico especificado, incluindo o respectivo texto, a visibilidade, a posição e a formatação.</span><span class="sxs-lookup"><span data-stu-id="e40f7-169">Represents the title of the specified chart, including the text, visibility, position, and formatting of the title.</span></span> <span data-ttu-id="e40f7-170">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="e40f7-170">Read-only.</span></span>

      <span data-ttu-id="e40f7-171">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e40f7-171">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: title
    fullName: title
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly title: Excel.ChartTitle;'
      return:
        type:
          - 'excel!Excel.ChartTitle:class'
  - uid: 'excel!Excel.Chart#toJSON:member(1)'
    summary: '<span data-ttu-id="e40f7-172">Substitui o método `toJSON()` JavaScript para fornecer uma saída mais útil quando um objeto API é passado para`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="e40f7-172">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="e40f7-173">.</span><span class="sxs-lookup"><span data-stu-id="e40f7-173"></span></span> <span data-ttu-id="e40f7-174">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="e40f7-174"></span></span><!-- --><span data-ttu-id="e40f7-175">, por sua vez, chama `toJSON` o método do objeto que é passado para ele.) Enquanto o objeto Excel. Chart original é um objeto API, o `toJSON` método retorna um objeto JavaScript simples (digitado como`Excel.Interfaces.ChartData`</span><span class="sxs-lookup"><span data-stu-id="e40f7-175">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.Chart object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ChartData`</span></span><!-- --><span data-ttu-id="e40f7-176">) que contém cópias superficiais de qualquer propriedade filho carregada do objeto original.</span><span class="sxs-lookup"><span data-stu-id="e40f7-176">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.ChartData;'
      return:
        type:
          - 'excel!Excel.Interfaces.ChartData:interface'
        description: ''
  - uid: 'excel!Excel.Chart#top:member'
    summary: |-
      <span data-ttu-id="e40f7-177">Representa a distância, em pontos, da borda superior do objeto à parte superior da primeira linha de uma planilha ou da área de um gráfico.</span><span class="sxs-lookup"><span data-stu-id="e40f7-177">Represents the distance, in points, from the top edge of the object to the top of row 1 (on a worksheet) or the top of the chart area (on a chart).</span></span>

      <span data-ttu-id="e40f7-178">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e40f7-178">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: top
    fullName: top
    langs:
      - typeScript
    type: property
    syntax:
      content: 'top: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.Chart#width:member'
    summary: |-
      <span data-ttu-id="e40f7-179">Representa a largura, em pontos, do objeto de gráfico.</span><span class="sxs-lookup"><span data-stu-id="e40f7-179">Represents the width, in points, of the chart object.</span></span>

      <span data-ttu-id="e40f7-180">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e40f7-180">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: width
    fullName: width
    langs:
      - typeScript
    type: property
    syntax:
      content: 'width: number;'
      return:
        type:
          - number
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.ChartAxes:class'
    name: Excel.ChartAxes
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.ChartDataLabels:class'
    name: Excel.ChartDataLabels
  - uid: 'excel!Excel.ChartAreaFormat:class'
    name: Excel.ChartAreaFormat
  - uid: 'excel!Excel.ChartLegend:class'
    name: Excel.ChartLegend
  - uid: 'excel!Excel.Chart:class'
    name: Excel.Chart
  - uid: 'excel!Excel.Interfaces.ChartLoadOptions:interface'
    name: Excel.Interfaces.ChartLoadOptions
  - uid: 'excel!Excel.ChartSeriesCollection:class'
    name: Excel.ChartSeriesCollection
  - uid: 'excel!Excel.Interfaces.ChartUpdateData:interface'
    name: Interfaces.ChartUpdateData
  - uid: 'excel!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'excel!Excel.Range:class'
    name: Range
  - uid: 'excel!Excel.ChartSeriesBy:enum'
    name: Excel.ChartSeriesBy
  - uid: 'excel!Excel.Chart#setPosition~0:complex'
    name: Range | string
    fullName: Excel.Range | string
    spec.typeScript:
      - uid: 'excel!Excel.Range:class'
        name: Range
        fullName: Excel.Range
      - name: ' | string'
        fullName: ' | string'
  - uid: 'excel!Excel.Chart#setPosition~1:complex'
    name: Range | string
    fullName: Excel.Range | string
    spec.typeScript:
      - uid: 'excel!Excel.Range:class'
        name: Range
        fullName: Excel.Range
      - name: ' | string'
        fullName: ' | string'
  - uid: 'excel!Excel.ChartTitle:class'
    name: Excel.ChartTitle
  - uid: 'excel!Excel.Interfaces.ChartData:interface'
    name: Excel.Interfaces.ChartData