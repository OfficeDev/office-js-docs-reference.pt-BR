### YamlMime:TSType
name: Excel.NamedItem
uid: excel!Excel.NamedItem:class
package: excel!
fullName: Excel.NamedItem
summary: >-
  Representa um nome definido para um intervalo de células ou um valor. Os nomes podem ser objetos nomeados primitivos (como visto no tipo abaixo), objeto range ou uma referência a um intervalo. Use esse objeto para obter um objeto de intervalo associado aos nomes.


  \[[Conjunto de API: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
- name: context
  uid: excel!Excel.NamedItem#context:member
  package: excel!
  fullName: context
  summary: O contexto de solicitação associado ao objeto. Isso conecta o processo do complemento ao processo do aplicativo host do Office.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'context: RequestContext;'
    return:
      type: <xref uid="excel!Excel.RequestContext:class" />
- name: name
  uid: excel!Excel.NamedItem#name:member
  package: excel!
  fullName: name
  summary: >-
    O nome do objeto.


    \[[Conjunto de API: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly name: string;'
    return:
      type: string
- name: type
  uid: excel!Excel.NamedItem#type:member
  package: excel!
  fullName: type
  summary: >-
    Especifica o tipo do valor retornado pela fórmula do nome. Consulte `Excel.NamedItemType` para obter detalhes.


    \[[Conjunto de API: ExcelApi 1.1 para String,Integer,Double,Boolean,Range,Error; 1.7 para Array](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly type: Excel.NamedItemType | "String" | "Integer" | "Double" | "Boolean" | "Range" | "Error" | "Array";'
    return:
      type: <xref uid="excel!Excel.NamedItemType:enum" /> | "String" | "Integer" | "Double" | "Boolean" | "Range" | "Error" | "Array"
- name: value
  uid: excel!Excel.NamedItem#value:member
  package: excel!
  fullName: value
  summary: >-
    Representa o valor calculado pela fórmula do nome. Para um intervalo nomeado, retornará o endereço do intervalo.


    \[[Conjunto de API: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly value: any;'
    return:
      type: any
- name: visible
  uid: excel!Excel.NamedItem#visible:member
  package: excel!
  fullName: visible
  summary: >-
    Especifica se o objeto está visível.


    \[[Conjunto de API: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'visible: boolean;'
    return:
      type: boolean
methods:
- name: getRange()
  uid: excel!Excel.NamedItem#getRange:member(1)
  package: excel!
  fullName: getRange()
  summary: >-
    Retorna o objeto Range associado ao nome. Gerará um erro se o tipo do item nomeado não for um intervalo.


    \[[Conjunto de API: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getRange(): Excel.Range;'
    return:
      type: <xref uid="excel!Excel.Range:class" />
      description: "\n\n#### <a name=\"examples\"></a>Exemplos\n\n```javascript\n// Returns the Range object that is associated with the name. \n// null if the name is not of the type Range.\n// Note: This API currently supports only the Workbook scoped items.\nExcel.run(function (ctx) { \n    var names = ctx.workbook.names;\n    var range = names.getItem('MyRange').getRange();\n    range.load('address');\n    return ctx.sync().then(function() {\n        console.log(range.address);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: load(options)
  uid: excel!Excel.NamedItem#load:member(1)
  package: excel!
  fullName: load(options)
  summary: Coloca um comando na fila para carregar as propriedades especificadas do objeto. Você deve chamar `context.sync()` antes de ler as propriedades.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(options?: Excel.Interfaces.NamedItemLoadOptions): Excel.NamedItem;'
    parameters:
    - id: options
      description: Fornece opções para quais propriedades do objeto deve ser carregado.
      type: <xref uid="excel!Excel.Interfaces.NamedItemLoadOptions:interface" />
    return:
      type: <xref uid="excel!Excel.NamedItem:class" />
      description: ''
- name: load(propertyNames)
  uid: excel!Excel.NamedItem#load:member(2)
  package: excel!
  fullName: load(propertyNames)
  summary: Coloca um comando na fila para carregar as propriedades especificadas do objeto. Você deve chamar `context.sync()` antes de ler as propriedades.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.NamedItem;'
    parameters:
    - id: propertyNames
      description: Uma cadeia de caracteres delimitada por vírgulas ou uma matriz de cadeias de caracteres que especificam as propriedades a ser carregadas.
      type: string | string[]
    return:
      type: <xref uid="excel!Excel.NamedItem:class" />
      description: "\n\n#### <a name=\"examples\"></a>Exemplos\n\n```javascript\nExcel.run(function (ctx) { \n    var names = ctx.workbook.names;\n    var namedItem = names.getItem('MyRange');\n    namedItem.load('type');\n    return ctx.sync().then(function() {\n            console.log(namedItem.type);\n    });\n}).catch(function(error) {\n        console.log(\"Error: \" + error);\n        if (error instanceof OfficeExtension.Error) {\n            console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n        }\n});\n```"
- name: load(propertyNamesAndPaths)
  uid: excel!Excel.NamedItem#load:member(3)
  package: excel!
  fullName: load(propertyNamesAndPaths)
  summary: Coloca um comando na fila para carregar as propriedades especificadas do objeto. Você deve chamar `context.sync()` antes de ler as propriedades.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      load(propertyNamesAndPaths?: {
                  select?: string;
                  expand?: string;
              }): Excel.NamedItem;
    parameters:
    - id: propertyNamesAndPaths
      description: '`propertyNamesAndPaths.select` é uma cadeia de caracteres delimitada por vírgulas que especifica as propriedades a ser carregadas e é uma cadeia de caracteres delimitada por vírgulas que especifica as propriedades de navegação a `propertyNamesAndPaths.expand` ser carregadas.'
      type: >-
        {
                    select?: string;
                    expand?: string;
                }
    return:
      type: <xref uid="excel!Excel.NamedItem:class" />
      description: ''
- name: set(properties, options)
  uid: excel!Excel.NamedItem#set:member(1)
  package: excel!
  fullName: set(properties, options)
  summary: Define várias propriedades de um objeto ao mesmo tempo. Você pode passar um objeto simples com as propriedades apropriadas ou outro objeto API do mesmo tipo.
  remarks: >-
    Este método tem a seguinte assinatura adicional:


    `set(properties: Excel.NamedItem): void`
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(properties: Interfaces.NamedItemUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    parameters:
    - id: properties
      description: Um objeto JavaScript com propriedades estruturadas isomorficamente para as propriedades do objeto no qual o método é chamado.
      type: <xref uid="excel!Excel.Interfaces.NamedItemUpdateData:interface" />
    - id: options
      description: Fornece uma opção para suprimir erros se o objeto properties tentar definir qualquer propriedade somente leitura.
      type: <xref uid="office!OfficeExtension.UpdateOptions:interface" />
    return:
      type: void
      description: ''
- name: set(properties)
  uid: excel!Excel.NamedItem#set:member(2)
  package: excel!
  fullName: set(properties)
  summary: Define várias propriedades no objeto ao mesmo tempo, com base em um objeto carregado existente.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(properties: Excel.NamedItem): void;'
    parameters:
    - id: properties
      description: ''
      type: <xref uid="excel!Excel.NamedItem:class" />
    return:
      type: void
      description: ''
- name: toJSON()
  uid: excel!Excel.NamedItem#toJSON:member(1)
  package: excel!
  fullName: toJSON()
  summary: Substitui o método JavaScript `toJSON()` para fornecer uma saída mais útil quando um objeto API é passado para `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, por sua vez, chama `toJSON` o método do objeto que é passado a ele.) Enquanto o objeto Excel.NamedItem original é um objeto API, o método `toJSON` retorna um objeto JavaScript simples (digitado como `Excel.Interfaces.NamedItemData`<!-- -->) que contém cópias rasas de quaisquer propriedades filho carregadas do objeto original.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'toJSON(): Excel.Interfaces.NamedItemData;'
    return:
      type: <xref uid="excel!Excel.Interfaces.NamedItemData:interface" />
      description: ''
extends: <xref uid="office!OfficeExtension.ClientObject:class" />
metadata:
  ms.openlocfilehash: ccd3d831047901f1f7463e617fb7b2c7b332cd42
  ms.sourcegitcommit: ce09743deb2fc2a879cd63f96c8ff11ec84a42b2
  ms.translationtype: MT
  ms.contentlocale: pt-BR
  ms.lasthandoff: 04/02/2021
  ms.locfileid: "51555752"
