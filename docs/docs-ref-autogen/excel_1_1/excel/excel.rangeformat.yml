### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.RangeFormat:class'
    summary: |-
      <span data-ttu-id="e9de0-101">Um objeto de formato que encapsula a fonte, o preenchimento, as bordas, o alinhamento e outras propriedades do intervalo.</span><span class="sxs-lookup"><span data-stu-id="e9de0-101">A format object encapsulating the range's font, fill, borders, alignment, and other properties.</span></span>

      <span data-ttu-id="e9de0-102">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e9de0-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.RangeFormat
    fullName: Excel.RangeFormat
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.RangeFormat#borders:member'
      - 'excel!Excel.RangeFormat#context:member'
      - 'excel!Excel.RangeFormat#fill:member'
      - 'excel!Excel.RangeFormat#font:member'
      - 'excel!Excel.RangeFormat#horizontalAlignment:member'
      - 'excel!Excel.RangeFormat#load:member(1)'
      - 'excel!Excel.RangeFormat#load:member(2)'
      - 'excel!Excel.RangeFormat#load:member(3)'
      - 'excel!Excel.RangeFormat#set:member(1)'
      - 'excel!Excel.RangeFormat#set:member(2)'
      - 'excel!Excel.RangeFormat#toJSON:member(1)'
      - 'excel!Excel.RangeFormat#verticalAlignment:member'
      - 'excel!Excel.RangeFormat#wrapText:member'
  - uid: 'excel!Excel.RangeFormat#borders:member'
    summary: |-
      <span data-ttu-id="e9de0-103">Coleção de objetos border que se aplicam a todo o intervalo.</span><span class="sxs-lookup"><span data-stu-id="e9de0-103">Collection of border objects that apply to the overall range.</span></span> <span data-ttu-id="e9de0-104">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="e9de0-104">Read-only.</span></span>

      <span data-ttu-id="e9de0-105">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e9de0-105">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: borders
    fullName: borders
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly borders: Excel.RangeBorderCollection;'
      return:
        type:
          - 'excel!Excel.RangeBorderCollection:class'
  - uid: 'excel!Excel.RangeFormat#context:member'
    summary: <span data-ttu-id="e9de0-106">O contexto de solicitação associado ao objeto.</span><span class="sxs-lookup"><span data-stu-id="e9de0-106">The request context associated with the object.</span></span> <span data-ttu-id="e9de0-107">Isso conecta o processo do suplemento ao processo do aplicativo host do Office.</span><span class="sxs-lookup"><span data-stu-id="e9de0-107">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.RangeFormat#fill:member'
    summary: |-
      <span data-ttu-id="e9de0-108">Retorna o objeto de preenchimento definido em todo o intervalo.</span><span class="sxs-lookup"><span data-stu-id="e9de0-108">Returns the fill object defined on the overall range.</span></span> <span data-ttu-id="e9de0-109">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="e9de0-109">Read-only.</span></span>

      <span data-ttu-id="e9de0-110">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e9de0-110">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: fill
    fullName: fill
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly fill: Excel.RangeFill;'
      return:
        type:
          - 'excel!Excel.RangeFill:class'
  - uid: 'excel!Excel.RangeFormat#font:member'
    summary: |-
      <span data-ttu-id="e9de0-111">Retorna o objeto font definido em todo o intervalo.</span><span class="sxs-lookup"><span data-stu-id="e9de0-111">Returns the font object defined on the overall range.</span></span> <span data-ttu-id="e9de0-112">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="e9de0-112">Read-only.</span></span>

      <span data-ttu-id="e9de0-113">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e9de0-113">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: font
    fullName: font
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly font: Excel.RangeFont;'
      return:
        type:
          - 'excel!Excel.RangeFont:class'
  - uid: 'excel!Excel.RangeFormat#horizontalAlignment:member'
    summary: |-
      <span data-ttu-id="e9de0-114">Representa o alinhamento horizontal do objeto especificado.</span><span class="sxs-lookup"><span data-stu-id="e9de0-114">Represents the horizontal alignment for the specified object.</span></span> <span data-ttu-id="e9de0-115">Consulte Excel. HorizontalAlignment para obter detalhes.</span><span class="sxs-lookup"><span data-stu-id="e9de0-115">See Excel.HorizontalAlignment for details.</span></span>

      <span data-ttu-id="e9de0-116">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e9de0-116">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: horizontalAlignment
    fullName: horizontalAlignment
    langs:
      - typeScript
    type: property
    syntax:
      content: 'horizontalAlignment: Excel.HorizontalAlignment | "General" | "Left" | "Center" | "Right" | "Fill" | "Justify" | "CenterAcrossSelection" | "Distributed";'
      return:
        type:
          - 'excel!Excel.RangeFormat#horizontalAlignment~0:complex'
  - uid: 'excel!Excel.RangeFormat#load:member(1)'
    summary: <span data-ttu-id="e9de0-117">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="e9de0-117">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="e9de0-118">Você deve chamar "context.sync()" antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="e9de0-118">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="e9de0-119">Além dessa assinatura, este método tem as seguintes assinaturas:</span><span class="sxs-lookup"><span data-stu-id="e9de0-119">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="e9de0-120">`load(option?: string | string[]): Excel.RangeFormat`-Where Option é uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="e9de0-120">`load(option?: string | string[]): Excel.RangeFormat` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="e9de0-121">`load(option?: { select?: string; expand?: string; }): Excel.RangeFormat`-Onde Option. Select é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades a serem carregadas, e Options. Expand é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades de navegação a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="e9de0-121">`load(option?: { select?: string; expand?: string; }): Excel.RangeFormat` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="e9de0-122">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.RangeFormat`– Disponível somente nos tipos de coleção.</span><span class="sxs-lookup"><span data-stu-id="e9de0-122">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.RangeFormat` - Only available on collection types.</span></span> <span data-ttu-id="e9de0-123">É semelhante à assinatura anterior.</span><span class="sxs-lookup"><span data-stu-id="e9de0-123">It is similar to the preceding signature.</span></span> <span data-ttu-id="e9de0-124">Option. Top especifica o número máximo de itens de coleta que podem ser incluídos no resultado.</span><span class="sxs-lookup"><span data-stu-id="e9de0-124">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="e9de0-125">Option. Skip especifica o número de itens que devem ser ignorados e não incluídos no resultado.</span><span class="sxs-lookup"><span data-stu-id="e9de0-125">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="e9de0-126">Se Option. Top for especificado, o conjunto de resultados será iniciado depois de ignorar o número de itens especificado.</span><span class="sxs-lookup"><span data-stu-id="e9de0-126">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.RangeFormatLoadOptions): Excel.RangeFormat;'
      return:
        type:
          - 'excel!Excel.RangeFormat:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'excel!Excel.Interfaces.RangeFormatLoadOptions:interface'
  - uid: 'excel!Excel.RangeFormat#load:member(2)'
    summary: <span data-ttu-id="e9de0-127">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="e9de0-127">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="e9de0-128">Você deve chamar `context.sync()` antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="e9de0-128">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.RangeFormat;'
      return:
        type:
          - 'excel!Excel.RangeFormat:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="e9de0-129">Exemplos</span><span class="sxs-lookup"><span data-stu-id="e9de0-129">Examples</span></span>

          ```javascript
          // Below example selects all of the Range's format properties. 
          Excel.run(function (ctx) { 
              var sheetName = "Sheet1";
              var rangeAddress = "F:G";
              var worksheet = ctx.workbook.worksheets.getItem(sheetName);
              var range = worksheet.getRange(rangeAddress);
              range.load(["format/*", "format/fill", "format/borders", "format/font"]);
              return ctx.sync().then(function() {
                  console.log(range.format.wrapText);
                  console.log(range.format.fill.color);
                  console.log(range.format.font.name);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          // The example below sets font name, fill color and wraps text. 
          Excel.run(function (ctx) { 
              var sheetName = "Sheet1";
              var rangeAddress = "F:G";
              var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeAddress);
              range.format.wrapText = true;
              range.format.font.name = 'Times New Roman';
              range.format.fill.color = '0000FF';
              return ctx.sync(); 
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          // The example below adds grid border around the range.
          Excel.run(function (ctx) { 
              var sheetName = "Sheet1";
              var rangeAddress = "F:G";
              var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeAddress);
              range.format.borders.getItem('InsideHorizontal').style = 'Continuous';
              range.format.borders.getItem('InsideVertical').style = 'Continuous';
              range.format.borders.getItem('EdgeBottom').style = 'Continuous';
              range.format.borders.getItem('EdgeLeft').style = 'Continuous';
              range.format.borders.getItem('EdgeRight').style = 'Continuous';
              range.format.borders.getItem('EdgeTop').style = 'Continuous';
              return ctx.sync(); 
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="e9de0-130">Uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="e9de0-130">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.RangeFormat#load:member(3)'
    summary: <span data-ttu-id="e9de0-131">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="e9de0-131">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="e9de0-132">Você deve chamar `context.sync()` antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="e9de0-132">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.RangeFormat;'
      return:
        type:
          - 'excel!Excel.RangeFormat:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="e9de0-133">Onde propertyNamesAndPaths. Select é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades a serem carregadas e propertyNamesAndPaths. Expand é uma sequência de caracteres delimitada por vírgula que especifica as propriedades de navegação a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="e9de0-133">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: 'excel!Excel.RangeFormat#set:member(1)'
    summary: '<span data-ttu-id="e9de0-134">Define várias propriedades de um objeto ao mesmo tempo.</span><span class="sxs-lookup"><span data-stu-id="e9de0-134">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="e9de0-135">Você pode passar um objeto simples com as propriedades apropriadas ou outro objeto API do mesmo tipo.</span><span class="sxs-lookup"><span data-stu-id="e9de0-135">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="e9de0-136">Este método tem a seguinte assinatura adicional:</span><span class="sxs-lookup"><span data-stu-id="e9de0-136">This method has the following additional signature:</span></span>

      `set(properties: Excel.RangeFormat): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.RangeFormatUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="e9de0-137">Um objeto JavaScript com propriedades que são estruturadas isomorphically para as propriedades do objeto no qual o método é chamado.</span><span class="sxs-lookup"><span data-stu-id="e9de0-137">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - 'excel!Excel.Interfaces.RangeFormatUpdateData:interface'
        - id: options
          description: <span data-ttu-id="e9de0-138">Fornece uma opção para suprimir erros se o objeto Properties tentar definir qualquer propriedade somente leitura.</span><span class="sxs-lookup"><span data-stu-id="e9de0-138">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - 'excel!OfficeExtension.UpdateOptions:interface'
  - uid: 'excel!Excel.RangeFormat#set:member(2)'
    summary: '<span data-ttu-id="e9de0-139">Define várias propriedades no objeto ao mesmo tempo, com base em um objeto carregado existente.</span><span class="sxs-lookup"><span data-stu-id="e9de0-139">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.RangeFormat): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'excel!Excel.RangeFormat:class'
  - uid: 'excel!Excel.RangeFormat#toJSON:member(1)'
    summary: '<span data-ttu-id="e9de0-140">Substitui o método `toJSON()` JavaScript para fornecer uma saída mais útil quando um objeto API é passado para`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="e9de0-140">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="e9de0-141">.</span><span class="sxs-lookup"><span data-stu-id="e9de0-141"></span></span> <span data-ttu-id="e9de0-142">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="e9de0-142"></span></span><!-- --><span data-ttu-id="e9de0-143">, por sua vez, chama `toJSON` o método do objeto que é passado para ele.) Enquanto o objeto Excel. RangeFormat original é um objeto API, o `toJSON` método retorna um objeto JavaScript simples (digitado como`Excel.Interfaces.RangeFormatData`</span><span class="sxs-lookup"><span data-stu-id="e9de0-143">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.RangeFormat object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.RangeFormatData`</span></span><!-- --><span data-ttu-id="e9de0-144">) que contém cópias superficiais de qualquer propriedade filho carregada do objeto original.</span><span class="sxs-lookup"><span data-stu-id="e9de0-144">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.RangeFormatData;'
      return:
        type:
          - 'excel!Excel.Interfaces.RangeFormatData:interface'
        description: ''
  - uid: 'excel!Excel.RangeFormat#verticalAlignment:member'
    summary: |-
      <span data-ttu-id="e9de0-145">Representa o alinhamento vertical do objeto especificado.</span><span class="sxs-lookup"><span data-stu-id="e9de0-145">Represents the vertical alignment for the specified object.</span></span> <span data-ttu-id="e9de0-146">Consulte Excel. VerticalAlignment para obter detalhes.</span><span class="sxs-lookup"><span data-stu-id="e9de0-146">See Excel.VerticalAlignment for details.</span></span>

      <span data-ttu-id="e9de0-147">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e9de0-147">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: verticalAlignment
    fullName: verticalAlignment
    langs:
      - typeScript
    type: property
    syntax:
      content: 'verticalAlignment: Excel.VerticalAlignment | "Top" | "Center" | "Bottom" | "Justify" | "Distributed";'
      return:
        type:
          - 'excel!Excel.RangeFormat#verticalAlignment~0:complex'
  - uid: 'excel!Excel.RangeFormat#wrapText:member'
    summary: |-
      <span data-ttu-id="e9de0-148">Indica se o Excel quebra automaticamente a linha de texto no objeto.</span><span class="sxs-lookup"><span data-stu-id="e9de0-148">Indicates if Excel wraps the text in the object.</span></span> <span data-ttu-id="e9de0-149">Um valor nulo indica que o intervalo inteiro não tem configuração de quebra de linha automática uniforme.</span><span class="sxs-lookup"><span data-stu-id="e9de0-149">A null value indicates that the entire range doesn't have uniform wrap setting</span></span>

      <span data-ttu-id="e9de0-150">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e9de0-150">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: wrapText
    fullName: wrapText
    langs:
      - typeScript
    type: property
    syntax:
      content: 'wrapText: boolean;'
      return:
        type:
          - boolean
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RangeBorderCollection:class'
    name: Excel.RangeBorderCollection
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.RangeFill:class'
    name: Excel.RangeFill
  - uid: 'excel!Excel.RangeFont:class'
    name: Excel.RangeFont
  - uid: 'excel!Excel.RangeFormat#horizontalAlignment~0:complex'
    name: Excel.HorizontalAlignment | "General" | "Left" | "Center" | "Right" | "Fill" | "Justify" | "CenterAcrossSelection" | "Distributed"
    fullName: Excel.HorizontalAlignment | "General" | "Left" | "Center" | "Right" | "Fill" | "Justify" | "CenterAcrossSelection" | "Distributed"
    spec.typeScript:
      - uid: 'excel!Excel.HorizontalAlignment:enum'
        name: Excel.HorizontalAlignment
        fullName: Excel.HorizontalAlignment
      - name: ' | "General" | "Left" | "Center" | "Right" | "Fill" | "Justify" | "CenterAcrossSelection" | "Distributed"'
        fullName: ' | "General" | "Left" | "Center" | "Right" | "Fill" | "Justify" | "CenterAcrossSelection" | "Distributed"'
  - uid: 'excel!Excel.RangeFormat:class'
    name: Excel.RangeFormat
  - uid: 'excel!Excel.Interfaces.RangeFormatLoadOptions:interface'
    name: Excel.Interfaces.RangeFormatLoadOptions
  - uid: 'excel!Excel.Interfaces.RangeFormatUpdateData:interface'
    name: Interfaces.RangeFormatUpdateData
  - uid: 'excel!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'excel!Excel.Interfaces.RangeFormatData:interface'
    name: Excel.Interfaces.RangeFormatData
  - uid: 'excel!Excel.RangeFormat#verticalAlignment~0:complex'
    name: Excel.VerticalAlignment | "Top" | "Center" | "Bottom" | "Justify" | "Distributed"
    fullName: Excel.VerticalAlignment | "Top" | "Center" | "Bottom" | "Justify" | "Distributed"
    spec.typeScript:
      - uid: 'excel!Excel.VerticalAlignment:enum'
        name: Excel.VerticalAlignment
        fullName: Excel.VerticalAlignment
      - name: ' | "Top" | "Center" | "Bottom" | "Justify" | "Distributed"'
        fullName: ' | "Top" | "Center" | "Bottom" | "Justify" | "Distributed"'