### YamlMime:UniversalReference
items:
  - uid: excel.Excel.NamedItemCollection
    summary: |-
      <span data-ttu-id="13726-101">Uma coleção de todos os objetos NamedItem que fazem parte da pasta de trabalho ou planilha, dependendo de como ela foi atingida.</span><span class="sxs-lookup"><span data-stu-id="13726-101">A collection of all the NamedItem objects that are part of the workbook or worksheet, depending on how it was reached.</span></span>

      <span data-ttu-id="13726-102">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="13726-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.NamedItemCollection
    fullName: Excel.NamedItemCollection
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: excel
    children:
      - excel.Excel.NamedItemCollection.context
      - excel.Excel.NamedItemCollection.getItem
      - excel.Excel.NamedItemCollection.items
      - excel.Excel.NamedItemCollection.load
      - excel.Excel.NamedItemCollection.load_1
      - excel.Excel.NamedItemCollection.load_2
      - excel.Excel.NamedItemCollection.toJSON
  - uid: excel.Excel.NamedItemCollection.context
    summary: <span data-ttu-id="13726-103">O contexto de solicitação associado ao objeto.</span><span class="sxs-lookup"><span data-stu-id="13726-103">The request context associated with the object.</span></span> <span data-ttu-id="13726-104">Isso conecta o processo do suplemento ao processo do aplicativo host do Office.</span><span class="sxs-lookup"><span data-stu-id="13726-104">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - excel.Excel.RequestContext
  - uid: excel.Excel.NamedItemCollection.getItem
    summary: |-
      <span data-ttu-id="13726-105">Obtém um objeto NamedItem usando seu nome.</span><span class="sxs-lookup"><span data-stu-id="13726-105">Gets a NamedItem object using its name.</span></span>

      <span data-ttu-id="13726-106">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="13726-106">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItem(name)
    fullName: getItem(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(name: string): Excel.NamedItem;'
      return:
        type:
          - excel.Excel.NamedItem
        description: |-


          #### <a name="examples"></a><span data-ttu-id="13726-107">Exemplos</span><span class="sxs-lookup"><span data-stu-id="13726-107">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var sheetName = 'Sheet1';
              var nameditem = ctx.workbook.names.getItem(sheetName);
              nameditem.load('type');
              return ctx.sync().then(function() {
                      console.log(nameditem.type);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: name
          description: <span data-ttu-id="13726-108">NamedItem Name.</span><span class="sxs-lookup"><span data-stu-id="13726-108">Nameditem name.</span></span>
          type:
            - string
  - uid: excel.Excel.NamedItemCollection.items
    summary: <span data-ttu-id="13726-109">Obtém os itens filhos carregados nesta coleção.</span><span class="sxs-lookup"><span data-stu-id="13726-109">Gets the loaded child items in this collection.</span></span>
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.NamedItem[];'
      return:
        type:
          - 'Excel.NamedItem[]'
  - uid: excel.Excel.NamedItemCollection.load
    summary: <span data-ttu-id="13726-110">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="13726-110">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="13726-111">Você deve chamar "context.sync()" antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="13726-111">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="13726-112">Além dessa assinatura, este método tem as seguintes assinaturas:</span><span class="sxs-lookup"><span data-stu-id="13726-112">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="13726-113">`load(option?: string | string[]): Excel.NamedItemCollection`-Where Option é uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="13726-113">`load(option?: string | string[]): Excel.NamedItemCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="13726-114">`load(option?: { select?: string; expand?: string; }): Excel.NamedItemCollection`-Onde Option. Select é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades a serem carregadas, e Options. Expand é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades de navegação a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="13726-114">`load(option?: { select?: string; expand?: string; }): Excel.NamedItemCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="13726-115">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.NamedItemCollection`– Disponível somente nos tipos de coleção.</span><span class="sxs-lookup"><span data-stu-id="13726-115">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.NamedItemCollection` - Only available on collection types.</span></span> <span data-ttu-id="13726-116">É semelhante à assinatura anterior.</span><span class="sxs-lookup"><span data-stu-id="13726-116">It is similar to the preceding signature.</span></span> <span data-ttu-id="13726-117">Option. Top especifica o número máximo de itens de coleta que podem ser incluídos no resultado.</span><span class="sxs-lookup"><span data-stu-id="13726-117">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="13726-118">Option. Skip especifica o número de itens que devem ser ignorados e não incluídos no resultado.</span><span class="sxs-lookup"><span data-stu-id="13726-118">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="13726-119">Se Option. Top for especificado, o conjunto de resultados será iniciado depois de ignorar o número de itens especificado.</span><span class="sxs-lookup"><span data-stu-id="13726-119">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.NamedItemCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.NamedItemCollection;'
      return:
        type:
          - excel.Excel.NamedItemCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - Excel.Interfaces.NamedItemCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
  - uid: excel.Excel.NamedItemCollection.load_1
    summary: <span data-ttu-id="13726-120">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="13726-120">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="13726-121">Você deve chamar `context.sync()` antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="13726-121">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.NamedItemCollection;'
      return:
        type:
          - excel.Excel.NamedItemCollection
        description: |-


          #### <a name="examples"></a><span data-ttu-id="13726-122">Exemplos</span><span class="sxs-lookup"><span data-stu-id="13726-122">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var nameditems = ctx.workbook.names;
              nameditems.load('items');
              return ctx.sync().then(function() {
                  for (var i = 0; i < nameditems.items.length; i++)
                  {
                      console.log(nameditems.items[i].name);
                      console.log(nameditems.items[i].index);
                  }
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="13726-123">Uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="13726-123">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: excel.Excel.NamedItemCollection.load_2
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): Excel.NamedItemCollection;'
      return:
        type:
          - excel.Excel.NamedItemCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - OfficeExtension.LoadOption
  - uid: excel.Excel.NamedItemCollection.toJSON
    summary: '<span data-ttu-id="13726-124">Substitui o método `toJSON()` JavaScript para fornecer uma saída mais útil quando um objeto API é passado para`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="13726-124">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="13726-125">.</span><span class="sxs-lookup"><span data-stu-id="13726-125"></span></span> <span data-ttu-id="13726-126">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="13726-126"></span></span><!-- --><span data-ttu-id="13726-127">, por sua vez, chama `toJSON` o método do objeto que é passado para ele.) Enquanto o objeto `Excel.NamedItemCollection` original é um objeto API, o `toJSON` método retorna um objeto JavaScript simples (digitado como`Excel.Interfaces.NamedItemCollectionData`</span><span class="sxs-lookup"><span data-stu-id="13726-127">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.NamedItemCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.NamedItemCollectionData`</span></span><!-- --><span data-ttu-id="13726-128">) que contém uma matriz de "itens" com cópias superficiais de qualquer propriedade carregada dos itens da coleção.</span><span class="sxs-lookup"><span data-stu-id="13726-128">) that contains an "items" array with shallow copies of any loaded properties from the collection''s items.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.NamedItemCollectionData;'
      return:
        type:
          - excel.Excel.Interfaces.NamedItemCollectionData
        description: ''