### YamlMime:UniversalReference
ms.openlocfilehash: 695ea27fa1b45e5ae262c7812cb1681a2107c635
ms.sourcegitcommit: 016e17422cf62dc9f1de1809666e9244e41cc1a9
ms.translationtype: MT
ms.contentlocale: pt-BR
ms.lasthandoff: 11/09/2018
ms.locfileid: "26229750"
items:
- uid: office-runtime.OfficeRuntime.AsyncStorage
  summary: Armazenamento de chave-valor de assíncrono, global e persistente que pode ser usado por funções personalizados do Excel.
  remarks: >-
    Cada instância do suplemento tem sua própria partição de armazenamento, exclusiva para um usuário e seus dispositivos.


    A quantidade padrão de armazenamento total permitida por suplemento é de 5MB.


    Cada método listado a seguir retorna um objeto promessa.
  isPreview: true
  name: OfficeRuntime.AsyncStorage
  fullName: OfficeRuntime.AsyncStorage
  langs:
  - typeScript
  type: interface
  package: office-runtime
  children:
  - office-runtime.OfficeRuntime.AsyncStorage.getAllKeys
  - office-runtime.OfficeRuntime.AsyncStorage.getItem
  - office-runtime.OfficeRuntime.AsyncStorage.multiGet
  - office-runtime.OfficeRuntime.AsyncStorage.multiRemove
  - office-runtime.OfficeRuntime.AsyncStorage.multiSet
  - office-runtime.OfficeRuntime.AsyncStorage.removeItem
  - office-runtime.OfficeRuntime.AsyncStorage.setItem
- uid: office-runtime.OfficeRuntime.AsyncStorage.getAllKeys
  summary: Retorna uma promessa com todas as chaves.
  isPreview: true
  name: getAllKeys(callback)
  fullName: getAllKeys
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getAllKeys(callback?: (error?: Error, keys?: string[]) => void): Promise<string[]>;'
    return:
      type:
      - Promise<string[]>
      description: ''
    parameters:
    - id: callback
      description: ''
      type:
      - '(error?: Error, keys?: string[]) => void'
- uid: office-runtime.OfficeRuntime.AsyncStorage.getItem
  summary: Recupera um objeto com base em uma chave e invoca um retorno de chamada quando terminar. Retorna uma promessa.
  isPreview: true
  name: getItem(key, callback)
  fullName: getItem
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItem(key: string, callback?: (error?: Error, result?: string) => void): Promise<string>;'
    return:
      type:
      - Promise<string>
      description: ''
    parameters:
    - id: key
      description: ''
      type:
      - string
    - id: callback
      description: ''
      type:
      - '(error?: Error, result?: string) => void'
- uid: office-runtime.OfficeRuntime.AsyncStorage.multiGet
  summary: Buscar um lote de chaves, especificada no `keys` matriz. Quando uma chave não existe, retornará null.
  isPreview: true
  name: multiGet(keys, callback)
  fullName: multiGet
  langs:
  - typeScript
  type: method
  syntax:
    content: 'multiGet(keys: string[], callback?: (errors?: Error[], result?: string[][]) => void): Promise<string[][]>;'
    return:
      type:
      - Promise<string[][]>
      description: ''
    parameters:
    - id: keys
      description: ''
      type:
      - string[]
    - id: callback
      description: ''
      type:
      - '(errors?: Error[], result?: string[][]) => void'
- uid: office-runtime.OfficeRuntime.AsyncStorage.multiRemove
  summary: Exclui um lote de chaves, especificada no `keys` matriz.
  isPreview: true
  name: multiRemove(keys, callback)
  fullName: multiRemove
  langs:
  - typeScript
  type: method
  syntax:
    content: 'multiRemove(keys: string[], callback?: (errors?: Error[]) => void): Promise<void>;'
    return:
      type:
      - Promise<void>
      description: ''
    parameters:
    - id: keys
      description: ''
      type:
      - string[]
    - id: callback
      description: ''
      type:
      - '(errors?: Error[]) => void'
- uid: office-runtime.OfficeRuntime.AsyncStorage.multiSet
  summary: Armazena vários pares de chave-valor em um lote. Retorna uma promessa. Quando uma chave não existe, retornará null.
  isPreview: true
  name: multiSet(keyValuePairs, callback)
  fullName: multiSet
  langs:
  - typeScript
  type: method
  syntax:
    content: 'multiSet(keyValuePairs: string[][], callback?: (errors?: Error[]) => void): Promise<void>;'
    return:
      type:
      - Promise<void>
      description: ''
    parameters:
    - id: keyValuePairs
      description: ''
      type:
      - string[][]
    - id: callback
      description: ''
      type:
      - '(errors?: Error[]) => void'
- uid: office-runtime.OfficeRuntime.AsyncStorage.removeItem
  summary: Remove um item para a chave especificada e invoca um retorno de chamada quando terminar. Retorna uma promessa.
  isPreview: true
  name: removeItem(key, callback)
  fullName: removeItem
  langs:
  - typeScript
  type: method
  syntax:
    content: 'removeItem(key: string, callback?: (error?: Error) => void): Promise<void>;'
    return:
      type:
      - Promise<void>
      description: ''
    parameters:
    - id: key
      description: ''
      type:
      - string
    - id: callback
      description: ''
      type:
      - '(error?: Error) => void'
- uid: office-runtime.OfficeRuntime.AsyncStorage.setItem
  summary: Atribui o valor para um par de chave-valor e invoca um retorno de chamada quando terminar. Retorna uma promessa.
  isPreview: true
  name: setItem(key, value, callback)
  fullName: setItem
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setItem(key: string, value: string, callback?: (error?: Error) => void): Promise<void>;'
    return:
      type:
      - Promise<void>
      description: ''
    parameters:
    - id: key
      description: ''
      type:
      - string
    - id: value
      description: ''
      type:
      - string
    - id: callback
      description: ''
      type:
      - '(error?: Error) => void'
