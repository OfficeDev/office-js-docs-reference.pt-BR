### YamlMime:UniversalReference
ms.openlocfilehash: 2c28888378424ba2961e24a320e090e645d15a68
ms.sourcegitcommit: b0b614f5315ab2e5c1e0ea51c687498f87684a07
ms.translationtype: MT
ms.contentlocale: pt-BR
ms.lasthandoff: 02/15/2019
ms.locfileid: "30055651"
items:
- uid: Outlook_1_1.Office.MessageCompose
  summary: >-
    O modo de redação de mensagem de [Office. Context. Mailbox. Item](xref:Outlook_1_1.Office.Item)<!-- -->.


    **Importante**: Este é um objeto interno do Outlook, não diretamente exposto por meio de interfaces existentes. Você deve tratá-lo como um modo de Office. Context. Mailbox. Item. Consulte a página [modelo de objeto](https://docs.microsoft.com/office/dev/add-ins/reference/objectmodel/requirement-set-1.1/office.context.mailbox.item) para obter mais informações.
  name: Office.MessageCompose
  fullName: Office.MessageCompose
  langs:
  - typeScript
  type: interface
  extends:
  - Message
  - 'ItemCompose '
  package: Outlook_1_1
  children:
  - Outlook_1_1.Office.MessageCompose.addFileAttachmentAsync
  - Outlook_1_1.Office.MessageCompose.addFileAttachmentAsync_1
  - Outlook_1_1.Office.MessageCompose.addFileAttachmentAsync_2
  - Outlook_1_1.Office.MessageCompose.addFileAttachmentAsync_3
  - Outlook_1_1.Office.MessageCompose.addItemAttachmentAsync
  - Outlook_1_1.Office.MessageCompose.addItemAttachmentAsync_1
  - Outlook_1_1.Office.MessageCompose.addItemAttachmentAsync_2
  - Outlook_1_1.Office.MessageCompose.addItemAttachmentAsync_3
  - Outlook_1_1.Office.MessageCompose.loadCustomPropertiesAsync
  - Outlook_1_1.Office.MessageCompose.removeAttachmentAsync
  - Outlook_1_1.Office.MessageCompose.removeAttachmentAsync_1
  - Outlook_1_1.Office.MessageCompose.removeAttachmentAsync_2
  - Outlook_1_1.Office.MessageCompose.removeAttachmentAsync_3
  - Outlook_1_1.Office.MessageCompose.bcc
  - Outlook_1_1.Office.MessageCompose.body
  - Outlook_1_1.Office.MessageCompose.cc
  - Outlook_1_1.Office.MessageCompose.conversationId
  - Outlook_1_1.Office.MessageCompose.itemType
  - Outlook_1_1.Office.MessageCompose.subject
  - Outlook_1_1.Office.MessageCompose.to
- uid: Outlook_1_1.Office.MessageCompose.addFileAttachmentAsync
  summary: >-
    Adiciona um arquivo a uma mensagem ou um compromisso como um anexo.


    O método addFileAttachmentAsync carrega o arquivo no URI especificado e anexa-o ao item no formulário de composição.


    Posteriormente, você pode usar o identificador com o método removeAttachmentAsync para remover o anexo na mesma sessão.


    \[[Conjunto de APIs: caixa de correio 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Nível de permissão mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr>


    <tr><td>[Modo do Outlook aplicável](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Composição de mensagem</td></tr>


    <tr><td>Erros</td><td>AttachmentSizeExceeded-o anexo é maior do que o permitido.</td></tr><tr><td></td><td>FileTypeNotSupported-o anexo tem uma extensão que não é permitida.</td></tr><tr><td></td><td>NumberOfAttachmentsExceeded-a mensagem ou o compromisso possui muitos anexos.</td></tr></table>


    Além dessa assinatura, o método também tem as seguintes assinaturas:


    `addFileAttachmentAsync(uri: string, attachmentName: string): void;`


    `addFileAttachmentAsync(uri: string, attachmentName: string, options: AsyncContextOptions): void;`


    `addFileAttachmentAsync(uri: string, attachmentName: string, callback: (result: Office.AsyncResult<string>) => void): void;`

    #### <a name="examples"></a>Exemplos


    ```javascript

    function callback(result) {
        if (result.error) {
            console.log(result.error);
        } else {
            console.log("Attachment added");
        }
    }


    function addAttachment() {
        // The values in asyncContext can be accessed in the callback.
        var options = { 'asyncContext': { var1: 1, var2: 2 } };

        var attachmentURL = "https://contoso.com/rtm/icon.png";
        Office.context.mailbox.item.addFileAttachmentAsync(attachmentURL, attachmentURL, options, callback);
    }

    ```

    ```javascript

    // The following example adds an image file as an inline attachment and

    // references the attachment in the message body.

    Office.context.mailbox.item.addFileAttachmentAsync(
        "http://i.imgur.com/WJXklif.png",
        "cute_bird.png",
        {
            isInline: true
        },
        function (asyncResult) {
            Office.context.mailbox.item.body.setAsync(
                "<p>Here's a cute bird!</p><img src='cid:cute_bird.png'>",
                {
                    "coercionType": "html"
                },
                function (asyncResult) {
                    // Do something here.
                });
        });
    ```
  name: addFileAttachmentAsync(uri, attachmentName, options, callback)
  fullName: addFileAttachmentAsync(uri, attachmentName, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addFileAttachmentAsync(uri: string, attachmentName: string, options?: Office.AsyncContextOptions, callback?: (result: Office.AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: uri
      description: O URI que fornece o local do arquivo anexado à mensagem ou compromisso. O comprimento máximo é de 2048 caracteres.
      type:
      - string
    - id: attachmentName
      description: O nome do anexo que é mostrado enquanto o anexo está sendo carregado. O tamanho máximo é de 255 caracteres.
      type:
      - string
    - id: options
      description: 'Opcional. Um objeto literal que contém uma ou mais das propriedades a seguir. asyncContext: os desenvolvedores podem fornecer qualquer objeto que desejarem acessar no método de retorno de chamada. isInline: se true, indica que o anexo será mostrado embutido no corpo da mensagem e não deverá ser exibido na lista de anexos.'
      type:
      - Office.AsyncContextOptions
    - id: callback
      description: Quando o método for concluído, a função passada ao parâmetro callback será chamada com um único parâmetro do tipo Office. AsyncResult. Em caso de sucesso, o identificador do anexo será fornecido na propriedade asyncResult. Value. Se o carregamento do anexo falhar, o objeto asyncResult conterá um objeto Error que fornece uma descrição do erro.
      type:
      - '(result: Office.AsyncResult<string>) => void'
- uid: Outlook_1_1.Office.MessageCompose.addFileAttachmentAsync_1
  summary: >-
    Adiciona um arquivo a uma mensagem ou um compromisso como um anexo.


    O método addFileAttachmentAsync carrega o arquivo no URI especificado e anexa-o ao item no formulário de composição.


    Posteriormente, você pode usar o identificador com o método removeAttachmentAsync para remover o anexo na mesma sessão.


    \[[Conjunto de APIs: caixa de correio 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Nível de permissão mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr>


    <tr><td>[Modo do Outlook aplicável](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Composição de mensagem</td></tr>


    <tr><td>Erros</td><td>AttachmentSizeExceeded-o anexo é maior do que o permitido.</td></tr><tr><td></td><td>FileTypeNotSupported-o anexo tem uma extensão que não é permitida.</td></tr><tr><td></td><td>NumberOfAttachmentsExceeded-a mensagem ou o compromisso possui muitos anexos.</td></tr></table>
  name: addFileAttachmentAsync(uri, attachmentName)
  fullName: addFileAttachmentAsync(uri, attachmentName)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addFileAttachmentAsync(uri: string, attachmentName: string): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: uri
      description: O URI que fornece o local do arquivo anexado à mensagem ou compromisso. O comprimento máximo é de 2048 caracteres.
      type:
      - string
    - id: attachmentName
      description: O nome do anexo que é mostrado enquanto o anexo está sendo carregado. O tamanho máximo é de 255 caracteres.
      type:
      - string
- uid: Outlook_1_1.Office.MessageCompose.addFileAttachmentAsync_2
  summary: >-
    Adiciona um arquivo a uma mensagem ou um compromisso como um anexo.


    O método addFileAttachmentAsync carrega o arquivo no URI especificado e anexa-o ao item no formulário de composição.


    Posteriormente, você pode usar o identificador com o método removeAttachmentAsync para remover o anexo na mesma sessão.


    \[[Conjunto de APIs: caixa de correio 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Nível de permissão mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr>


    <tr><td>[Modo do Outlook aplicável](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Composição de mensagem</td></tr>


    <tr><td>Erros</td><td>AttachmentSizeExceeded-o anexo é maior do que o permitido.</td></tr><tr><td></td><td>FileTypeNotSupported-o anexo tem uma extensão que não é permitida.</td></tr><tr><td></td><td>NumberOfAttachmentsExceeded-a mensagem ou o compromisso possui muitos anexos.</td></tr></table>
  name: addFileAttachmentAsync(uri, attachmentName, options)
  fullName: addFileAttachmentAsync(uri, attachmentName, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addFileAttachmentAsync(uri: string, attachmentName: string, options: Office.AsyncContextOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: uri
      description: O URI que fornece o local do arquivo anexado à mensagem ou compromisso. O comprimento máximo é de 2048 caracteres.
      type:
      - string
    - id: attachmentName
      description: O nome do anexo que é mostrado enquanto o anexo está sendo carregado. O tamanho máximo é de 255 caracteres.
      type:
      - string
    - id: options
      description: 'Opcional. Um objeto literal que contém uma ou mais das propriedades a seguir. asyncContext: os desenvolvedores podem fornecer qualquer objeto que desejarem acessar no método de retorno de chamada. isInline: se true, indica que o anexo será mostrado embutido no corpo da mensagem e não deverá ser exibido na lista de anexos.'
      type:
      - Office.AsyncContextOptions
- uid: Outlook_1_1.Office.MessageCompose.addFileAttachmentAsync_3
  summary: >-
    Adiciona um arquivo a uma mensagem ou um compromisso como um anexo.


    O método addFileAttachmentAsync carrega o arquivo no URI especificado e anexa-o ao item no formulário de composição.


    Posteriormente, você pode usar o identificador com o método removeAttachmentAsync para remover o anexo na mesma sessão.


    \[[Conjunto de APIs: caixa de correio 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Nível de permissão mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr>


    <tr><td>[Modo do Outlook aplicável](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Composição de mensagem</td></tr>


    <tr><td>Erros</td><td>AttachmentSizeExceeded-o anexo é maior do que o permitido.</td></tr><tr><td></td><td>FileTypeNotSupported-o anexo tem uma extensão que não é permitida.</td></tr><tr><td></td><td>NumberOfAttachmentsExceeded-a mensagem ou o compromisso possui muitos anexos.</td></tr></table>
  name: addFileAttachmentAsync(uri, attachmentName, callback)
  fullName: addFileAttachmentAsync(uri, attachmentName, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addFileAttachmentAsync(uri: string, attachmentName: string, callback: (result: Office.AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: uri
      description: O URI que fornece o local do arquivo anexado à mensagem ou compromisso. O comprimento máximo é de 2048 caracteres.
      type:
      - string
    - id: attachmentName
      description: O nome do anexo que é mostrado enquanto o anexo está sendo carregado. O tamanho máximo é de 255 caracteres.
      type:
      - string
    - id: callback
      description: Quando o método for concluído, a função passada ao parâmetro callback será chamada com um único parâmetro do tipo Office. AsyncResult. Em caso de sucesso, o identificador do anexo será fornecido na propriedade asyncResult. Value. Se o carregamento do anexo falhar, o objeto asyncResult conterá um objeto Error que fornece uma descrição do erro.
      type:
      - '(result: Office.AsyncResult<string>) => void'
- uid: Outlook_1_1.Office.MessageCompose.addItemAttachmentAsync
  summary: >-
    Adiciona um item do Exchange, como uma mensagem, como anexo na mensagem ou no compromisso.


    O método addItemAttachmentAsync anexa o item com o identificador do Exchange especificado ao item no formulário de composição. Se você especificar um método de retorno de chamada, o método é chamado com um parâmetro, asyncResult, que contém o identificador do anexo ou um código que indica qualquer erro que tenha ocorrido ao anexar o item. Você pode usar o parâmetro options para passar informações de estado ao método de retorno de chamada, se necessário.


    Posteriormente, você pode usar o identificador com o método removeAttachmentAsync para remover o anexo na mesma sessão.


    Se o suplemento do Office está sendo executado no Outlook Web App, o método addItemAttachmentAsync pode anexar itens a itens que não sejam aquele que você está editando; no entanto, isso não é suportado e não é recomendado.


    \[[Conjunto de APIs: caixa de correio 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Nível de permissão mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr>


    <tr><td>[Modo do Outlook aplicável](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Composição de mensagem</td></tr>


    <tr><td>Erros</td><td>NumberOfAttachmentsExceeded-a mensagem ou o compromisso possui muitos anexos.</td></tr></table>


    Além dessa assinatura, esse método também tem as seguintes assinaturas:


    `addItemAttachmentAsync(itemId: any, attachmentName: string): void;`


    `addItemAttachmentAsync(itemId: any, attachmentName: string, options: Office.AsyncContextOptions): void;`


    `addItemAttachmentAsync(itemId: any, attachmentName: string, callback: (result: Office.AsyncResult<string>) => void): void;`

    #### <a name="examples"></a>Exemplos


    ```javascript

    // The following example adds an existing Outlook item as an attachment

    // with the name `My Attachment`.

    function callback(result) {
        if (result.error) {
            console.log(result.error);
        } else {
            console.log("Attachment added");
        }
    }


    function addAttachment() {
        // EWS ID of item to attach (shortened for readability).
        var itemId = "AAMkADI1...AAA=";

        // The values in asyncContext can be accessed in the callback.
        var options = { 'asyncContext': { var1: 1, var2: 2 } };

        Office.context.mailbox.item.addItemAttachmentAsync(itemId, "My Attachment", options, callback);
    }

    ```
  name: addItemAttachmentAsync(itemId, attachmentName, options, callback)
  fullName: addItemAttachmentAsync(itemId, attachmentName, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addItemAttachmentAsync(itemId: any, attachmentName: string, options?: Office.AsyncContextOptions, callback?: (result: Office.AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: itemId
      description: O identificador do Exchange do item a anexar. O comprimento máximo é de 100 caracteres.
      type:
      - any
    - id: attachmentName
      description: O nome do anexo que é mostrado enquanto o anexo está sendo carregado. O tamanho máximo é de 255 caracteres.
      type:
      - string
    - id: options
      description: 'Um objeto literal que contém uma ou mais das propriedades a seguir. asyncContext: os desenvolvedores podem fornecer qualquer objeto que desejarem acessar no método de retorno de chamada.'
      type:
      - Office.AsyncContextOptions
    - id: callback
      description: Quando o método for concluído, a função passada ao parâmetro callback será chamada com um único parâmetro do tipo Office. AsyncResult. Em caso de sucesso, o identificador do anexo será fornecido na propriedade asyncResult. Value. Se a adição do anexo falhar, o objeto asyncResult conterá um objeto Error que fornece uma descrição do erro.
      type:
      - '(result: Office.AsyncResult<string>) => void'
- uid: Outlook_1_1.Office.MessageCompose.addItemAttachmentAsync_1
  summary: >-
    Adiciona um item do Exchange, como uma mensagem, como anexo na mensagem ou no compromisso.


    O método addItemAttachmentAsync anexa o item com o identificador do Exchange especificado ao item no formulário de composição. Se você especificar um método de retorno de chamada, o método é chamado com um parâmetro, asyncResult, que contém o identificador do anexo ou um código que indica qualquer erro que tenha ocorrido ao anexar o item. Você pode usar o parâmetro options para passar informações de estado ao método de retorno de chamada, se necessário.


    Posteriormente, você pode usar o identificador com o método removeAttachmentAsync para remover o anexo na mesma sessão.


    Se o suplemento do Office está sendo executado no Outlook Web App, o método addItemAttachmentAsync pode anexar itens a itens que não sejam aquele que você está editando; no entanto, isso não é suportado e não é recomendado.


    \[[Conjunto de APIs: caixa de correio 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Nível de permissão mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr>


    <tr><td>[Modo do Outlook aplicável](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Composição de mensagem</td></tr>


    <tr><td>Erros</td><td>NumberOfAttachmentsExceeded-a mensagem ou o compromisso possui muitos anexos.</td></tr></table>
  name: addItemAttachmentAsync(itemId, attachmentName)
  fullName: addItemAttachmentAsync(itemId, attachmentName)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addItemAttachmentAsync(itemId: any, attachmentName: string): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: itemId
      description: O identificador do Exchange do item a anexar. O comprimento máximo é de 100 caracteres.
      type:
      - any
    - id: attachmentName
      description: O nome do anexo que é mostrado enquanto o anexo está sendo carregado. O tamanho máximo é de 255 caracteres.
      type:
      - string
- uid: Outlook_1_1.Office.MessageCompose.addItemAttachmentAsync_2
  summary: >-
    Adiciona um item do Exchange, como uma mensagem, como anexo na mensagem ou no compromisso.


    O método addItemAttachmentAsync anexa o item com o identificador do Exchange especificado ao item no formulário de composição. Se você especificar um método de retorno de chamada, o método é chamado com um parâmetro, asyncResult, que contém o identificador do anexo ou um código que indica qualquer erro que tenha ocorrido ao anexar o item. Você pode usar o parâmetro options para passar informações de estado ao método de retorno de chamada, se necessário.


    Posteriormente, você pode usar o identificador com o método removeAttachmentAsync para remover o anexo na mesma sessão.


    Se o suplemento do Office está sendo executado no Outlook Web App, o método addItemAttachmentAsync pode anexar itens a itens que não sejam aquele que você está editando; no entanto, isso não é suportado e não é recomendado.


    \[[Conjunto de APIs: caixa de correio 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Nível de permissão mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr>


    <tr><td>[Modo do Outlook aplicável](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Composição de mensagem</td></tr>


    <tr><td>Erros</td><td>NumberOfAttachmentsExceeded-a mensagem ou o compromisso possui muitos anexos.</td></tr></table>
  name: addItemAttachmentAsync(itemId, attachmentName, options)
  fullName: addItemAttachmentAsync(itemId, attachmentName, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addItemAttachmentAsync(itemId: any, attachmentName: string, options: Office.AsyncContextOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: itemId
      description: O identificador do Exchange do item a anexar. O comprimento máximo é de 100 caracteres.
      type:
      - any
    - id: attachmentName
      description: O nome do anexo que é mostrado enquanto o anexo está sendo carregado. O tamanho máximo é de 255 caracteres.
      type:
      - string
    - id: options
      description: 'Um objeto literal que contém uma ou mais das propriedades a seguir. asyncContext: os desenvolvedores podem fornecer qualquer objeto que desejarem acessar no método de retorno de chamada.'
      type:
      - Office.AsyncContextOptions
- uid: Outlook_1_1.Office.MessageCompose.addItemAttachmentAsync_3
  summary: >-
    Adiciona um item do Exchange, como uma mensagem, como anexo na mensagem ou no compromisso.


    O método addItemAttachmentAsync anexa o item com o identificador do Exchange especificado ao item no formulário de composição. Se você especificar um método de retorno de chamada, o método é chamado com um parâmetro, asyncResult, que contém o identificador do anexo ou um código que indica qualquer erro que tenha ocorrido ao anexar o item. Você pode usar o parâmetro options para passar informações de estado ao método de retorno de chamada, se necessário.


    Posteriormente, você pode usar o identificador com o método removeAttachmentAsync para remover o anexo na mesma sessão.


    Se o suplemento do Office está sendo executado no Outlook Web App, o método addItemAttachmentAsync pode anexar itens a itens que não sejam aquele que você está editando; no entanto, isso não é suportado e não é recomendado.


    \[[Conjunto de APIs: caixa de correio 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Nível de permissão mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr>


    <tr><td>[Modo do Outlook aplicável](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Composição de mensagem</td></tr>


    <tr><td>Erros</td><td>NumberOfAttachmentsExceeded-a mensagem ou o compromisso possui muitos anexos.</td></tr></table>
  name: addItemAttachmentAsync(itemId, attachmentName, callback)
  fullName: addItemAttachmentAsync(itemId, attachmentName, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addItemAttachmentAsync(itemId: any, attachmentName: string, callback: (result: Office.AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: itemId
      description: O identificador do Exchange do item a anexar. O comprimento máximo é de 100 caracteres.
      type:
      - any
    - id: attachmentName
      description: O nome do anexo que é mostrado enquanto o anexo está sendo carregado. O tamanho máximo é de 255 caracteres.
      type:
      - string
    - id: callback
      description: Quando o método for concluído, a função passada ao parâmetro callback será chamada com um único parâmetro do tipo Office. AsyncResult. Em caso de sucesso, o identificador do anexo será fornecido na propriedade asyncResult. Value. Se a adição do anexo falhar, o objeto asyncResult conterá um objeto Error que fornece uma descrição do erro.
      type:
      - '(result: Office.AsyncResult<string>) => void'
- uid: Outlook_1_1.Office.MessageCompose.loadCustomPropertiesAsync
  summary: >-
    Carrega de forma assíncrona as propriedades personalizadas para esse suplemento no item selecionado.


    Propriedades personalizadas são armazenadas como pares chave/valor de acordo com o aplicativo e o item. Este método retorna um objeto CustomProperties no retorno de chamada, que oferece métodos para acessar as propriedades personalizadas específicas para o item atual e o suplemento atual. Propriedades personalizadas não são criptografadas no item, portanto não devem ser usadas como armazenamento seguro.


    As propriedades personalizadas são fornecidas como um objeto CustomProperties na propriedade asyncResult.value. Esse objeto pode ser usado para obter, definir e remover as propriedades personalizadas do item e salvar as alterações na propriedade personalizada definida de volta no servidor.


    \[[Conjunto de APIs: caixa de correio 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Nível de permissão mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Modo do Outlook aplicável](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Composição de mensagem</td></tr></table>
  name: loadCustomPropertiesAsync(callback, userContext)
  fullName: loadCustomPropertiesAsync(callback, userContext)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'loadCustomPropertiesAsync(callback: (result: Office.AsyncResult<CustomProperties>) => void, userContext?: any): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: callback
      description: Quando o método for concluído, a função passada ao parâmetro callback será chamada com um único parâmetro do tipo Office. AsyncResult.
      type:
      - '(result: Office.AsyncResult<CustomProperties>) => void'
    - id: userContext
      description: Opcional. Os desenvolvedores podem fornecer qualquer objeto que desejarem acessar na função de retorno de chamada. Esse objeto pode ser acessado pela propriedade asyncResult. asyncContext na função de retorno de chamada.
      type:
      - any
- uid: Outlook_1_1.Office.MessageCompose.removeAttachmentAsync
  summary: >-
    Remove um anexo de uma mensagem ou de um compromisso.


    O método removeAttachmentAsync remove o anexo com o identificador especificado do item. Como prática recomendada, deve-se usar o identificador do anexo para remover um anexo somente se o mesmo aplicativo de email tiver adicionado esse anexo na mesma sessão. No Outlook Web App e no OWA para Dispositivos, o identificador do anexo é válido apenas dentro da mesma sessão. Uma sessão é finalizada quando o usuário fecha o aplicativo, ou se o usuário começa a compor em um formulário embutido e, subsequentemente, sai do formulário para continuar em uma janela separada.


    \[[Conjunto de APIs: caixa de correio 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Nível de permissão mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr>


    <tr><td>[Modo do Outlook aplicável](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Composição de mensagem</td></tr>


    <tr><td>Erros</td><td>InvalidAttachmentId-o identificador de anexo não existe.</td></tr></table>


    Além dessa assinatura, o método também tem as seguintes assinaturas:


    `removeAttachmentAsync(attachmentId: string): void;`


    `removeAttachmentAsync(attachmentId: string, options: Office.AsyncContextOptions): void;`


    `removeAttachmentAsync(attachmentId: string, callback: (result: Office.AsyncResult<void>) => void): void;`

    #### <a name="examples"></a>Exemplos


    ```javascript

    // The following code removes an attachment with an identifier of '0'.

    Office.context.mailbox.item.removeAttachmentAsync(
        '0',
        { asyncContext : null },
        function (asyncResult)
        {
            console.log(asyncResult.status);
        }
    );

    ```
  name: removeAttachmentAsync(attachmentId, options, callback)
  fullName: removeAttachmentAsync(attachmentId, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'removeAttachmentAsync(attachmentId: string, options?: Office.AsyncContextOptions, callback?: (result: Office.AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: attachmentId
      description: O identificador do anexo a remover.
      type:
      - string
    - id: options
      description: 'Opcional. Um objeto literal que contém uma ou mais das propriedades a seguir. asyncContext: os desenvolvedores podem fornecer qualquer objeto que desejarem acessar no método de retorno de chamada.'
      type:
      - Office.AsyncContextOptions
    - id: callback
      description: Opcional. Quando o método for concluído, a função passada ao parâmetro callback será chamada com um único parâmetro do tipo Office. AsyncResult. Se a remoção do anexo falhar, a propriedade asyncResult. Error conterá um código de erro com o motivo da falha.
      type:
      - '(result: Office.AsyncResult<void>) => void'
- uid: Outlook_1_1.Office.MessageCompose.removeAttachmentAsync_1
  summary: >-
    Remove um anexo de uma mensagem ou de um compromisso.


    O método removeAttachmentAsync remove o anexo com o identificador especificado do item. Como prática recomendada, deve-se usar o identificador do anexo para remover um anexo somente se o mesmo aplicativo de email tiver adicionado esse anexo na mesma sessão. No Outlook Web App e no OWA para Dispositivos, o identificador do anexo é válido apenas dentro da mesma sessão. Uma sessão é finalizada quando o usuário fecha o aplicativo, ou se o usuário começa a compor em um formulário embutido e, subsequentemente, sai do formulário para continuar em uma janela separada.


    \[[Conjunto de APIs: caixa de correio 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Nível de permissão mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr>


    <tr><td>[Modo do Outlook aplicável](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Composição de mensagem</td></tr>


    <tr><td>Erros</td><td>InvalidAttachmentId-o identificador de anexo não existe.</td></tr></table>
  name: removeAttachmentAsync(attachmentId)
  fullName: removeAttachmentAsync(attachmentId)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'removeAttachmentAsync(attachmentId: string): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: attachmentId
      description: O identificador do anexo a remover.
      type:
      - string
- uid: Outlook_1_1.Office.MessageCompose.removeAttachmentAsync_2
  summary: >-
    Remove um anexo de uma mensagem ou de um compromisso.


    O método removeAttachmentAsync remove o anexo com o identificador especificado do item. Como prática recomendada, deve-se usar o identificador do anexo para remover um anexo somente se o mesmo aplicativo de email tiver adicionado esse anexo na mesma sessão. No Outlook Web App e no OWA para Dispositivos, o identificador do anexo é válido apenas dentro da mesma sessão. Uma sessão é finalizada quando o usuário fecha o aplicativo, ou se o usuário começa a compor em um formulário embutido e, subsequentemente, sai do formulário para continuar em uma janela separada.


    \[[Conjunto de APIs: caixa de correio 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Nível de permissão mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr>


    <tr><td>[Modo do Outlook aplicável](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Composição de mensagem</td></tr>


    <tr><td>Erros</td><td>InvalidAttachmentId-o identificador de anexo não existe.</td></tr></table>
  name: removeAttachmentAsync(attachmentId, options)
  fullName: removeAttachmentAsync(attachmentId, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'removeAttachmentAsync(attachmentId: string, options: Office.AsyncContextOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: attachmentId
      description: O identificador do anexo a remover.
      type:
      - string
    - id: options
      description: 'Opcional. Um objeto literal que contém uma ou mais das propriedades a seguir. asyncContext: os desenvolvedores podem fornecer qualquer objeto que desejarem acessar no método de retorno de chamada.'
      type:
      - Office.AsyncContextOptions
- uid: Outlook_1_1.Office.MessageCompose.removeAttachmentAsync_3
  summary: >-
    Remove um anexo de uma mensagem ou de um compromisso.


    O método removeAttachmentAsync remove o anexo com o identificador especificado do item. Como prática recomendada, deve-se usar o identificador do anexo para remover um anexo somente se o mesmo aplicativo de email tiver adicionado esse anexo na mesma sessão. No Outlook Web App e no OWA para Dispositivos, o identificador do anexo é válido apenas dentro da mesma sessão. Uma sessão é finalizada quando o usuário fecha o aplicativo, ou se o usuário começa a compor em um formulário embutido e, subsequentemente, sai do formulário para continuar em uma janela separada.


    \[[Conjunto de APIs: caixa de correio 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Nível de permissão mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr>


    <tr><td>[Modo do Outlook aplicável](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Composição de mensagem</td></tr>


    <tr><td>Erros</td><td>InvalidAttachmentId-o identificador de anexo não existe.</td></tr></table>
  name: removeAttachmentAsync(attachmentId, callback)
  fullName: removeAttachmentAsync(attachmentId, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'removeAttachmentAsync(attachmentId: string, callback: (result: Office.AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: attachmentId
      description: O identificador do anexo a remover.
      type:
      - string
    - id: callback
      description: Opcional. Quando o método for concluído, a função passada ao parâmetro callback será chamada com um único parâmetro do tipo Office. AsyncResult. Se a remoção do anexo falhar, a propriedade asyncResult. Error conterá um código de erro com o motivo da falha.
      type:
      - '(result: Office.AsyncResult<void>) => void'
- uid: Outlook_1_1.Office.MessageCompose.bcc
  summary: >-
    Obtém um objeto que fornece métodos para acessar ou atualizar os destinatários na linha Cco (com cópia oculta) de uma mensagem.


    \[[Conjunto de APIs: caixa de correio 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Nível de permissão mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Modo do Outlook aplicável](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Composição de mensagem</td></tr></table>

    ####Veja


    ```javascript

    Office.context.mailbox.item.bcc.setAsync( ['alice@contoso.com', 'bob@contoso.com'] );

    Office.context.mailbox.item.bcc.addAsync( ['jason@contoso.com'] );

    Office.context.mailbox.item.bcc.getAsync(callback);


    function callback(asyncResult) {
        var arrayOfBccRecipients = asyncResult.value;
    }

    ```
  name: bcc
  fullName: bcc
  langs:
  - typeScript
  type: property
  syntax:
    content: 'bcc: Recipients;'
    return:
      type:
      - Recipients
- uid: Outlook_1_1.Office.MessageCompose.body
  summary: >-
    Obtém um objeto que fornece métodos para manipular o corpo de um item.


    \[[Conjunto de APIs: caixa de correio 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Nível de permissão mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Modo do Outlook aplicável](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Composição de mensagem</td></tr></table>

    ####Veja


    ```javascript

    // This example gets the body of the message in plain text.

    Office.context.mailbox.item.body.getAsync(
        "text",
        { asyncContext: "This is passed to the callback" },
        function callback(result) {
            // Do something with the result.
        });

    // The following is an example of the result parameter passed to the callback function.

    {
        "value": "TEXT of whole body (including threads below)",
        "status": "succeeded",
        "asyncContext": "This is passed to the callback"
    }

    ```
  name: body
  fullName: body
  langs:
  - typeScript
  type: property
  syntax:
    content: 'body: Body;'
    return:
      type:
      - Body
- uid: Outlook_1_1.Office.MessageCompose.cc
  summary: >-
    Fornece acesso aos destinatários na linha Cc (com cópia) de uma mensagem. O tipo de objeto e o nível de acesso dependem do modo do item atual.


    A propriedade CC retorna um objeto [Office. Recipients](xref:Outlook_1_1.Office.Recipients) que fornece métodos para obter ou atualizar os destinatários na linha CC da mensagem.


    \[[Conjunto de APIs: caixa de correio 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Nível de permissão mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Modo do Outlook aplicável](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Composição de mensagem</td></tr></table>

    ####Veja


    ```javascript

    Office.context.mailbox.item.cc.setAsync( ['alice@contoso.com', 'bob@contoso.com'] );

    Office.context.mailbox.item.cc.addAsync( ['jason@contoso.com'] );

    Office.context.mailbox.item.cc.getAsync(callback);


    function callback(asyncResult) {
        var arrayOfCcRecipients = asyncResult.value;
    }

    ```
  name: cc
  fullName: cc
  langs:
  - typeScript
  type: property
  syntax:
    content: 'cc: Recipients;'
    return:
      type:
      - Recipients
- uid: Outlook_1_1.Office.MessageCompose.conversationId
  summary: >-
    Obtém um identificador da conversa de email que contém uma mensagem específica.


    Você pode obter um número inteiro para esta propriedade se o aplicativo de email estiver ativado nos formulários de leitura ou nas respostas em formulários de composição. Se, posteriormente, o usuário alterar o assunto da mensagem de resposta, ao enviar a resposta, a ID da conversa daquela mensagem será alterada e o valor obtido anteriormente não mais se aplicará.


    Você obtém nulo para esta propriedade para um novo item em um formulário de composição. Se o usuário definir um assunto e salvar o item, a propriedade conversationId retornará um valor.


    \[[Conjunto de APIs: caixa de correio 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Nível de permissão mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Modo do Outlook aplicável](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Composição de mensagem</td></tr></table>

    ####Veja


    ```javascript

    var conversationId = Office.context.mailbox.item.conversationId;

    console.log("conversationId: " + conversationId);

    ```
  name: conversationId
  fullName: conversationId
  langs:
  - typeScript
  type: property
  syntax:
    content: 'conversationId: string;'
    return:
      type:
      - string
- uid: Outlook_1_1.Office.MessageCompose.itemType
  summary: >-
    Obtém o tipo de item que representa uma instância.


    A propriedade itemType retorna um dos valores de enumeração ItemType, indicando se a instância do objeto item é uma mensagem ou um compromisso.


    \[[Conjunto de APIs: caixa de correio 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Nível de permissão mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Modo do Outlook aplicável](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Composição de mensagem</td></tr></table>

    ####Veja


    ```javascript

    if (Office.context.mailbox.item.itemType === Office.MailboxEnums.ItemType.Message) {
        // Do something.
    } else {
        // Do something else.
    }

    ```
  name: itemType
  fullName: itemType
  langs:
  - typeScript
  type: property
  syntax:
    content: 'itemType: MailboxEnums.ItemType;'
    return:
      type:
      - MailboxEnums.ItemType
- uid: Outlook_1_1.Office.MessageCompose.subject
  summary: >-
    Obtém ou define a descrição que aparece no campo de assunto de um item.


    A propriedade subject obtém ou define o assunto completo do item, conforme enviado pelo servidor de email.


    A propriedade subject retorna um objeto Subject que fornece métodos para obter e definir o assunto.


    \[[Conjunto de APIs: caixa de correio 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Nível de permissão mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Modo do Outlook aplicável](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Composição de mensagem</td></tr></table>

    ####Veja


    ```javascript

    Office.context.mailbox.item.subject.getAsync(callback);


    function callback(asyncResult) {
        var subject = asyncResult.value;
    }

    ```
  name: subject
  fullName: subject
  langs:
  - typeScript
  type: property
  syntax:
    content: 'subject: Subject;'
    return:
      type:
      - Subject
- uid: Outlook_1_1.Office.MessageCompose.to
  summary: >-
    Fornece acesso aos destinatários na linha Para de uma mensagem. O tipo de objeto e o nível de acesso dependem do modo do item atual.


    A propriedade to retorna um objeto Recipients que fornece métodos para obter ou atualizar os destinatários na linha para da mensagem.


    \[[Conjunto de APIs: caixa de correio 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Nível de permissão mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Modo do Outlook aplicável](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Composição de mensagem</td></tr></table>

    ####Veja


    ```javascript

    Office.context.mailbox.item.to.setAsync( ['alice@contoso.com', 'bob@contoso.com'] );

    Office.context.mailbox.item.to.addAsync( ['jason@contoso.com'] );

    Office.context.mailbox.item.to.getAsync(callback);


    function callback(asyncResult) {
        var arrayOfToRecipients = asyncResult.value;
    }

    ```
  name: to
  fullName: to
  langs:
  - typeScript
  type: property
  syntax:
    content: 'to: Recipients;'
    return:
      type:
      - Recipients
