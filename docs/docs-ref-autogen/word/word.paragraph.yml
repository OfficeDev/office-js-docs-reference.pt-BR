### YamlMime:UniversalReference
ms.openlocfilehash: 01fbb86f3618e8923f6548d5ada64bdd1085e9f3
ms.sourcegitcommit: 016e17422cf62dc9f1de1809666e9244e41cc1a9
ms.translationtype: MT
ms.contentlocale: pt-BR
ms.lasthandoff: 11/09/2018
ms.locfileid: "26236848"
items:
- uid: word.Word.Paragraph
  summary: >-
    <span data-ttu-id="86272-101">Representa um único parágrafo em uma seleção, intervalo, controle de conteúdo ou corpo do documento.</span><span class="sxs-lookup"><span data-stu-id="86272-101">Represents a single paragraph in a selection, range, content control, or document body.</span></span>


    <span data-ttu-id="86272-102">\[[Conjunto de APIs: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="86272-102">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: Word.Paragraph
  fullName: Word.Paragraph
  langs:
  - typeScript
  type: class
  extends:
  - OfficeExtension.ClientObject
  package: word
  children:
  - word.Word.Paragraph.alignment
  - word.Word.Paragraph.attachToList
  - word.Word.Paragraph.clear
  - word.Word.Paragraph.contentControls
  - word.Word.Paragraph.delete
  - word.Word.Paragraph.detachFromList
  - word.Word.Paragraph.firstLineIndent
  - word.Word.Paragraph.font
  - word.Word.Paragraph.getHtml
  - word.Word.Paragraph.getNext
  - word.Word.Paragraph.getNextOrNullObject
  - word.Word.Paragraph.getOoxml
  - word.Word.Paragraph.getPrevious
  - word.Word.Paragraph.getPreviousOrNullObject
  - word.Word.Paragraph.getRange
  - word.Word.Paragraph.getTextRanges
  - word.Word.Paragraph.inlinePictures
  - word.Word.Paragraph.insertBreak
  - word.Word.Paragraph.insertContentControl
  - word.Word.Paragraph.insertFileFromBase64
  - word.Word.Paragraph.insertHtml
  - word.Word.Paragraph.insertInlinePictureFromBase64
  - word.Word.Paragraph.insertOoxml
  - word.Word.Paragraph.insertParagraph
  - word.Word.Paragraph.insertTable
  - word.Word.Paragraph.insertText
  - word.Word.Paragraph.isLastParagraph
  - word.Word.Paragraph.isListItem
  - word.Word.Paragraph.leftIndent
  - word.Word.Paragraph.lineSpacing
  - word.Word.Paragraph.lineUnitAfter
  - word.Word.Paragraph.lineUnitBefore
  - word.Word.Paragraph.list
  - word.Word.Paragraph.listItem
  - word.Word.Paragraph.listItemOrNullObject
  - word.Word.Paragraph.listOrNullObject
  - word.Word.Paragraph.load
  - word.Word.Paragraph.outlineLevel
  - word.Word.Paragraph.parentBody
  - word.Word.Paragraph.parentContentControl
  - word.Word.Paragraph.parentContentControlOrNullObject
  - word.Word.Paragraph.parentTable
  - word.Word.Paragraph.parentTableCell
  - word.Word.Paragraph.parentTableCellOrNullObject
  - word.Word.Paragraph.parentTableOrNullObject
  - word.Word.Paragraph.rightIndent
  - word.Word.Paragraph.search
  - word.Word.Paragraph.select
  - word.Word.Paragraph.spaceAfter
  - word.Word.Paragraph.spaceBefore
  - word.Word.Paragraph.split
  - word.Word.Paragraph.startNewList
  - word.Word.Paragraph.style
  - word.Word.Paragraph.styleBuiltIn
  - word.Word.Paragraph.tableNestingLevel
  - word.Word.Paragraph.text
  - word.Word.Paragraph.toJSON
  - word.Word.Paragraph.track
  - word.Word.Paragraph.untrack
- uid: word.Word.Paragraph.alignment
  summary: >-
    <span data-ttu-id="86272-103">Obtém ou define o alinhamento de um parágrafo.</span><span class="sxs-lookup"><span data-stu-id="86272-103">Gets or sets the alignment for a paragraph.</span></span> <span data-ttu-id="86272-104">O valor pode ser 'left', 'centered', 'right' ou 'justified'.</span><span class="sxs-lookup"><span data-stu-id="86272-104">The value can be 'left', 'centered', 'right', or 'justified'.</span></span>


    <span data-ttu-id="86272-105">\[[Conjunto de APIs: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="86272-105">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: alignment
  fullName: alignment
  langs:
  - typeScript
  type: property
  syntax:
    content: 'alignment: Word.Alignment | "Mixed" | "Unknown" | "Left" | "Centered" | "Right" | "Justified";'
    return:
      type:
      - Word.Alignment | "Mixed" | "Unknown" | "Left" | "Centered" | "Right" | "Justified"
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"86272-106\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"86272-106\">Examples</span></span>\n\n```typescript\nawait Word.run(async (context) => {\n    // Centers last paragraph alignment\n    context.document.body.paragraphs\n        .getLast().alignment = \"Centered\";\n\n    await context.sync();\n});\n```"
- uid: word.Word.Paragraph.attachToList
  summary: >-
    <span data-ttu-id="86272-p102">Permite que o parágrafo ingresse em uma lista existente no nível especificado. Falhará se o parágrafo não puder ingressar na lista ou se o parágrafo já for um item da lista.</span><span class="sxs-lookup"><span data-stu-id="86272-p102">Lets the paragraph join an existing list at the specified level. Fails if the paragraph cannot join the list or if the paragraph is already a list item.</span></span>


    <span data-ttu-id="86272-109">\[[Conjunto de APIs: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="86272-109">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: attachToList(listId, level)
  fullName: attachToList
  langs:
  - typeScript
  type: method
  syntax:
    content: 'attachToList(listId: number, level: number): Word.List;'
    return:
      type:
      - word.Word.List
      description: ''
    parameters:
    - id: listId
      description: <span data-ttu-id="86272-p103">Obrigatório. A ID de uma lista existente.</span><span class="sxs-lookup"><span data-stu-id="86272-p103">Required. The ID of an existing list.</span></span>
      type:
      - number
    - id: level
      description: <span data-ttu-id="86272-p104">Obrigatório. O nível na lista.</span><span class="sxs-lookup"><span data-stu-id="86272-p104">Required. The level in the list.</span></span>
      type:
      - number
- uid: word.Word.Paragraph.clear
  summary: >-
    <span data-ttu-id="86272-p105">Limpa o conteúdo do objeto Paragraph. O usuário pode executar a operação de desfazer no conteúdo limpo.</span><span class="sxs-lookup"><span data-stu-id="86272-p105">Clears the contents of the paragraph object. The user can perform the undo operation on the cleared content.</span></span>


    <span data-ttu-id="86272-116">\[[Conjunto de APIs: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="86272-116">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: clear()
  fullName: clear
  langs:
  - typeScript
  type: method
  syntax:
    content: 'clear(): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"86272-117\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"86272-117\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the paragraphs collection.\n    var paragraphs = context.document.body.paragraphs;\n\n    // Queue a commmand to load the style property for all of the paragraphs.\n    context.load(paragraphs, 'style');\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n\n        // Queue a command to clear the contents of the first paragraph.\n        paragraphs.items[0].clear();\n\n        // Synchronize the document state by executing the queued commands,\n        // and return a promise to indicate task completion.\n        return context.sync().then(function () {\n            console.log('Cleared the contents of the first paragraph.');\n        });\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: word.Word.Paragraph.contentControls
  summary: >-
    <span data-ttu-id="86272-p106">Obtém a coleção de objetos de controle de conteúdo presentes no parágrafo. Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="86272-p106">Gets the collection of content control objects in the paragraph. Read-only.</span></span>


    <span data-ttu-id="86272-120">\[[Conjunto de APIs: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="86272-120">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: contentControls
  fullName: contentControls
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly contentControls: Word.ContentControlCollection;'
    return:
      type:
      - word.Word.ContentControlCollection
- uid: word.Word.Paragraph.delete
  summary: >-
    <span data-ttu-id="86272-121">Exclui o parágrafo e o respectivo conteúdo do documento.</span><span class="sxs-lookup"><span data-stu-id="86272-121">Deletes the paragraph and its content from the document.</span></span>


    <span data-ttu-id="86272-122">\[[Conjunto de APIs: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="86272-122">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: delete()
  fullName: delete
  langs:
  - typeScript
  type: method
  syntax:
    content: 'delete(): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"86272-123\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"86272-123\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the paragraphs collection.\n    var paragraphs = context.document.body.paragraphs;\n\n    // Queue a commmand to load the text property for all of the paragraphs.\n    context.load(paragraphs, 'text');\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n\n        // Queue a command to delete the first paragraph.\n        paragraphs.items[0].delete();\n\n        // Synchronize the document state by executing the queued commands,\n        // and return a promise to indicate task completion.\n        return context.sync().then(function () {\n            console.log('Deleted the first paragraph.');\n        });\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: word.Word.Paragraph.detachFromList
  summary: >-
    <span data-ttu-id="86272-124">Move este parágrafo para fora de sua lista, caso o parágrafo seja um item da lista.</span><span class="sxs-lookup"><span data-stu-id="86272-124">Moves this paragraph out of its list, if the paragraph is a list item.</span></span>


    <span data-ttu-id="86272-125">\[[Conjunto de APIs: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="86272-125">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: detachFromList()
  fullName: detachFromList
  langs:
  - typeScript
  type: method
  syntax:
    content: 'detachFromList(): void;'
    return:
      type:
      - void
      description: ''
- uid: word.Word.Paragraph.firstLineIndent
  summary: >-
    <span data-ttu-id="86272-p107">Retorna ou define o valor, em pontos, para um recuo deslocado ou da primeira linha. Usa um valor positivo para definir um recuo da primeira linha e um valor negativo para definir um recuo deslocado.</span><span class="sxs-lookup"><span data-stu-id="86272-p107">Gets or sets the value, in points, for a first line or hanging indent. Use a positive value to set a first-line indent, and use a negative value to set a hanging indent.</span></span>


    <span data-ttu-id="86272-128">\[[Conjunto de APIs: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="86272-128">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: firstLineIndent
  fullName: firstLineIndent
  langs:
  - typeScript
  type: property
  syntax:
    content: 'firstLineIndent: number;'
    return:
      type:
      - number
- uid: word.Word.Paragraph.font
  summary: >-
    <span data-ttu-id="86272-p108">Obtém o formato de texto do parágrafo. Use isto para obter e definir o nome, o tamanho e a cor da fonte, além de outras propriedades. Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="86272-p108">Gets the text format of the paragraph. Use this to get and set font name, size, color, and other properties. Read-only.</span></span>


    <span data-ttu-id="86272-132">\[[Conjunto de APIs: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="86272-132">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: font
  fullName: font
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly font: Word.Font;'
    return:
      type:
      - word.Word.Font
- uid: word.Word.Paragraph.getHtml
  summary: >-
    <span data-ttu-id="86272-133">Obtém a representação HTML do objeto Paragraph.</span><span class="sxs-lookup"><span data-stu-id="86272-133">Gets the HTML representation of the paragraph object.</span></span>


    <span data-ttu-id="86272-134">\[[Conjunto de APIs: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="86272-134">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: getHtml()
  fullName: getHtml
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getHtml(): OfficeExtension.ClientResult<string>;'
    return:
      type:
      - OfficeExtension.ClientResult<string>
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"86272-135\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"86272-135\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the paragraphs collection.\n    var paragraphs = context.document.body.paragraphs;\n\n    // Queue a commmand to load the style property for all of the paragraphs.\n    context.load(paragraphs, 'style');\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n\n        // Queue a a set of commands to get the HTML of the first paragraph.\n        var html = paragraphs.items[0].getHtml();\n\n        // Synchronize the document state by executing the queued commands,\n        // and return a promise to indicate task completion.\n        return context.sync().then(function () {\n            console.log('Paragraph HTML: ' + html.value);\n        });\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: word.Word.Paragraph.getNext
  summary: >-
    <span data-ttu-id="86272-p109">Obtém o próximo parágrafo. Gera uma exceção se o parágrafo é o último.</span><span class="sxs-lookup"><span data-stu-id="86272-p109">Gets the next paragraph. Throws if the paragraph is the last one.</span></span>


    <span data-ttu-id="86272-138">\[[Conjunto de APIs: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="86272-138">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: getNext()
  fullName: getNext
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getNext(): Word.Paragraph;'
    return:
      type:
      - Word.Paragraph
      description: ''
- uid: word.Word.Paragraph.getNextOrNullObject
  summary: >-
    <span data-ttu-id="86272-p110">Obtém o próximo parágrafo. Retorna um objeto nulo se o parágrafo é o último.</span><span class="sxs-lookup"><span data-stu-id="86272-p110">Gets the next paragraph. Returns a null object if the paragraph is the last one.</span></span>


    <span data-ttu-id="86272-141">\[[Conjunto de APIs: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="86272-141">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: getNextOrNullObject()
  fullName: getNextOrNullObject
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getNextOrNullObject(): Word.Paragraph;'
    return:
      type:
      - Word.Paragraph
      description: ''
- uid: word.Word.Paragraph.getOoxml
  summary: >-
    <span data-ttu-id="86272-142">Obtém a representação OOXML (Office Open XML) do objeto Paragraph.</span><span class="sxs-lookup"><span data-stu-id="86272-142">Gets the Office Open XML (OOXML) representation of the paragraph object.</span></span>


    <span data-ttu-id="86272-143">\[[Conjunto de APIs: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="86272-143">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: getOoxml()
  fullName: getOoxml
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getOoxml(): OfficeExtension.ClientResult<string>;'
    return:
      type:
      - OfficeExtension.ClientResult<string>
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"86272-144\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"86272-144\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the paragraphs collection.\n    var paragraphs = context.document.body.paragraphs;\n\n    // Queue a commmand to load the style property for the top 2 paragraphs.\n    context.load(paragraphs, {select: 'style', top: 2} );\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n\n        // Queue a a set of commands to get the OOXML of the first paragraph.\n        var ooxml = paragraphs.items[0].getOoxml();\n\n        // Synchronize the document state by executing the queued commands,\n        // and return a promise to indicate task completion.\n        return context.sync().then(function () {\n            console.log('Paragraph OOXML: ' + ooxml.value);\n        });\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: word.Word.Paragraph.getPrevious
  summary: >-
    <span data-ttu-id="86272-p111">Obtém o parágrafo anterior. Gera uma exceção se o parágrafo é o primeiro.</span><span class="sxs-lookup"><span data-stu-id="86272-p111">Gets the previous paragraph. Throws if the paragraph is the first one.</span></span>


    <span data-ttu-id="86272-147">\[[Conjunto de APIs: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="86272-147">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: getPrevious()
  fullName: getPrevious
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getPrevious(): Word.Paragraph;'
    return:
      type:
      - Word.Paragraph
      description: ''
- uid: word.Word.Paragraph.getPreviousOrNullObject
  summary: >-
    <span data-ttu-id="86272-p112">Obtém o parágrafo anterior. Retorna um objeto nulo se o parágrafo é o primeiro.</span><span class="sxs-lookup"><span data-stu-id="86272-p112">Gets the previous paragraph. Returns a null object if the paragraph is the first one.</span></span>


    <span data-ttu-id="86272-150">\[[Conjunto de APIs: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="86272-150">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: getPreviousOrNullObject()
  fullName: getPreviousOrNullObject
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getPreviousOrNullObject(): Word.Paragraph;'
    return:
      type:
      - Word.Paragraph
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"86272-151\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"86272-151\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the paragraphs collection.\n    var paragraphs = context.document.body.paragraphs;\n\n    // Queue a commmand to load the text property for all of the paragraphs.\n    context.load(paragraphs, 'text');\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n\n        // Queue commands to create a proxy object for the next-to-last paragraph.\n        var indexOfLastParagraph = paragraphs.items.length - 1;\n        var precedingParagraph = paragraphs.items[indexOfLastParagraph].getPreviousOrNullObject();\n\n        // Queue a command to load the text of the preceding paragraph.\n        context.load(precedingParagraph, 'text');\n\n        // Synchronize the document state by executing the queued commands,\n        // and return a promise to indicate task completion.\n        return context.sync().then(function () {\n            if (precedingParagraph.isNullObject) {\n                console.log('There are no paragraphs before the current one.');\n            } else {\n                console.log('The preceding paragraph is: ' + precedingParagraph.text);\n            }\n        });\n    });\n}).catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: word.Word.Paragraph.getRange
  summary: >-
    <span data-ttu-id="86272-152">Obtém o parágrafo inteiro, ou então, os pontos inicial ou final do parágrafo, como um intervalo.</span><span class="sxs-lookup"><span data-stu-id="86272-152">Gets the whole paragraph, or the starting or ending point of the paragraph, as a range.</span></span>


    <span data-ttu-id="86272-153">\[[Conjunto de APIs: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="86272-153">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: getRange(rangeLocation)
  fullName: getRange
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getRange(rangeLocation?: Word.RangeLocation): Word.Range;'
    return:
      type:
      - Word.Range
      description: ''
    parameters:
    - id: rangeLocation
      description: <span data-ttu-id="86272-154">Opcional.</span><span class="sxs-lookup"><span data-stu-id="86272-154">Optional.</span></span> <span data-ttu-id="86272-155">A localização de intervalo pode ser 'Todo', 'Iniciar', 'End', 'Depois,' ou 'Conteúdo'.</span><span class="sxs-lookup"><span data-stu-id="86272-155">The range location can be 'Whole', 'Start', 'End', 'After', or 'Content'.</span></span>
      type:
      - word.Word.RangeLocation
- uid: word.Word.Paragraph.getTextRanges
  summary: >-
    <span data-ttu-id="86272-156">Obtém os intervalos de texto no parágrafo usando marcas de pontuação e/ou outras marcas finais.</span><span class="sxs-lookup"><span data-stu-id="86272-156">Gets the text ranges in the paragraph by using punctuation marks and/or other ending marks.</span></span>


    <span data-ttu-id="86272-157">\[[Conjunto de APIs: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="86272-157">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: getTextRanges(endingMarks, trimSpacing)
  fullName: getTextRanges
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getTextRanges(endingMarks: string[], trimSpacing?: boolean): Word.RangeCollection;'
    return:
      type:
      - word.Word.RangeCollection
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"86272-158\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"86272-158\">Examples</span></span>\n\n```typescript\nawait Word.run(async (context) => {\n    // Gets the complete sentence  (as range) associated with the insertion point.\n    let sentences = context.document\n        .getSelection().getTextRanges([\".\"] /* Using the \".\" as delimiter */, false /*means without trimming spaces*/);\n    sentences.load(\"$none\");\n\n    await context.sync();\n\n    // Expands the range to the end of the paragraph to get all the complete sentences.\n    let sentencesToTheEndOfParagraph = sentences.items[0].getRange()\n        .expandTo(context.document.getSelection().paragraphs\n            .getFirst().getRange(\"End\")).getTextRanges([\".\"], false /* Don't trim spaces*/);\n    sentencesToTheEndOfParagraph.load(\"text\");\n\n    await context.sync();\n    for (let i = 0; i < sentencesToTheEndOfParagraph.items.length; i++) {\n        console.log(sentencesToTheEndOfParagraph.items[i].text);\n    }\n});\n```"
    parameters:
    - id: endingMarks
      description: <span data-ttu-id="86272-p114">Obrigatório. As marcas de pontuação e/ou outras marcas finais como uma matriz de cadeias de caracteres.</span><span class="sxs-lookup"><span data-stu-id="86272-p114">Required. The punctuation marks and/or other ending marks as an array of strings.</span></span>
      type:
      - string[]
    - id: trimSpacing
      description: <span data-ttu-id="86272-161">Opcional.</span><span class="sxs-lookup"><span data-stu-id="86272-161">Optional.</span></span> <span data-ttu-id="86272-162">Indica se aparar caracteres espaçamento (espaços, guias, quebras de coluna e marcas de fim de parágrafo), do início e fim dos intervalos retornado na coleção de intervalo.</span><span class="sxs-lookup"><span data-stu-id="86272-162">Indicates whether to trim spacing characters (spaces, tabs, column breaks, and paragraph end marks) from the start and end of the ranges returned in the range collection.</span></span> <span data-ttu-id="86272-163">Padrão é false, que indica que os caracteres de espaçamento no início e fim dos intervalos estão incluídos na coleção range.</span><span class="sxs-lookup"><span data-stu-id="86272-163">Default is false which indicates that spacing characters at the start and end of the ranges are included in the range collection.</span></span>
      type:
      - boolean
- uid: word.Word.Paragraph.inlinePictures
  summary: >-
    <span data-ttu-id="86272-164">Obtém a coleção de objetos InlinePicture do parágrafo.</span><span class="sxs-lookup"><span data-stu-id="86272-164">Gets the collection of InlinePicture objects in the paragraph.</span></span> <span data-ttu-id="86272-165">A coleção não inclui imagens flutuantes.</span><span class="sxs-lookup"><span data-stu-id="86272-165">The collection does not include floating images.</span></span> <span data-ttu-id="86272-166">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="86272-166">Read-only.</span></span>


    <span data-ttu-id="86272-167">\[[Conjunto de APIs: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="86272-167">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: inlinePictures
  fullName: inlinePictures
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly inlinePictures: Word.InlinePictureCollection;'
    return:
      type:
      - word.Word.InlinePictureCollection
- uid: word.Word.Paragraph.insertBreak
  summary: >-
    <span data-ttu-id="86272-p117">Insere uma quebra no local especificado no documento principal. O valor de insertLocation pode ser 'Before' ou 'After'.</span><span class="sxs-lookup"><span data-stu-id="86272-p117">Inserts a break at the specified location in the main document. The insertLocation value can be 'Before' or 'After'.</span></span>


    <span data-ttu-id="86272-170">\[[Conjunto de APIs: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="86272-170">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: insertBreak(breakType, insertLocation)
  fullName: insertBreak
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertBreak(breakType: Word.BreakType, insertLocation: Word.InsertLocation): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"86272-171\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"86272-171\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the paragraphs collection.\n    var paragraphs = context.document.body.paragraphs;\n\n    // Queue a commmand to load the style property for the top 2 paragraphs.\n    // We never perform an empty load. We always must request a property.\n    context.load(paragraphs, {select: 'style', top: 2} );\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n\n        // Queue a command to get the first paragraph.\n        var paragraph = paragraphs.items[0];\n\n        // Queue a command to insert a page break after the first paragraph.\n        paragraph.insertBreak('page', 'After');\n\n        // Synchronize the document state by executing the queued commands,\n        // and return a promise to indicate task completion.\n        return context.sync().then(function () {\n            console.log('Inserted a page break after the paragraph.');\n        });\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```typescript\nWord.run(async (context) => {\n    context.document.body.paragraphs.getFirst().insertBreak(Word.BreakType.line, \"After\");\n\n    await context.sync();\n    console.log(\"success\");\n});\n```\n```typescript\nawait Word.run(async (context) => {\n    context.document.body.paragraphs.getFirst().insertBreak(Word.BreakType.page, \"After\");\n\n    await context.sync();\n    console.log(\"success\");\n});\n```"
    parameters:
    - id: breakType
      description: <span data-ttu-id="86272-p118">Obrigatória. O tipo de quebra a adicionar ao documento.</span><span class="sxs-lookup"><span data-stu-id="86272-p118">Required. The break type to add to the document.</span></span>
      type:
      - word.Word.BreakType
    - id: insertLocation
      description: <span data-ttu-id="86272-p119">Obrigatória. O valor pode ser 'Before' ou 'After'.</span><span class="sxs-lookup"><span data-stu-id="86272-p119">Required. The value can be 'Before' or 'After'.</span></span>
      type:
      - Word.InsertLocation
- uid: word.Word.Paragraph.insertContentControl
  summary: >-
    <span data-ttu-id="86272-176">Quebra o objeto Paragraph com um controle de conteúdo de rich text.</span><span class="sxs-lookup"><span data-stu-id="86272-176">Wraps the paragraph object with a rich text content control.</span></span>


    <span data-ttu-id="86272-177">\[[Conjunto de APIs: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="86272-177">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: insertContentControl()
  fullName: insertContentControl
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertContentControl(): Word.ContentControl;'
    return:
      type:
      - word.Word.ContentControl
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"86272-178\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"86272-178\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the paragraphs collection.\n    var paragraphs = context.document.body.paragraphs;\n\n    // Queue a commmand to load the style property for the top 2 paragraphs.\n    // We never perform an empty load. We always must request a property.\n    context.load(paragraphs, {select: 'style', top: 2} );\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n\n        // Queue a command to get the first paragraph.\n        var paragraph = paragraphs.items[0];\n\n        // Queue a command to wrap the first paragraph in a rich text content control.\n        paragraph.insertContentControl();\n\n        // Synchronize the document state by executing the queued commands,\n        // and return a promise to indicate task completion.\n        return context.sync().then(function () {\n            console.log('Wrapped the first paragraph in a content control.');\n        });\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: word.Word.Paragraph.insertFileFromBase64
  summary: >-
    <span data-ttu-id="86272-179">Insere um documento do parágrafo no local especificado.</span><span class="sxs-lookup"><span data-stu-id="86272-179">Inserts a document into the paragraph at the specified location.</span></span> <span data-ttu-id="86272-180">O valor de insertLocation pode ser 'Replace', 'Iniciar' ou 'End'.</span><span class="sxs-lookup"><span data-stu-id="86272-180">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>


    <span data-ttu-id="86272-181">\[[Conjunto de APIs: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="86272-181">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: insertFileFromBase64(base64File, insertLocation)
  fullName: insertFileFromBase64
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertFileFromBase64(base64File: string, insertLocation: Word.InsertLocation): Word.Range;'
    return:
      type:
      - Word.Range
      description: ''
    parameters:
    - id: base64File
      description: <span data-ttu-id="86272-p121">Obrigatório. O conteúdo em código de Base64 de um arquivo .docx.</span><span class="sxs-lookup"><span data-stu-id="86272-p121">Required. The base64 encoded content of a .docx file.</span></span>
      type:
      - string
    - id: insertLocation
      description: <span data-ttu-id="86272-p122">Obrigatório. O valor pode ser 'Replace', 'Start' ou 'End'.</span><span class="sxs-lookup"><span data-stu-id="86272-p122">Required. The value can be 'Replace', 'Start', or 'End'.</span></span>
      type:
      - Word.InsertLocation
- uid: word.Word.Paragraph.insertHtml
  summary: >-
    <span data-ttu-id="86272-p123">Insere HTML no local especificado dentro do parágrafo. O valor de insertLocation pode ser 'Replace', 'Start' ou 'End'.</span><span class="sxs-lookup"><span data-stu-id="86272-p123">Inserts HTML into the paragraph at the specified location. The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>


    <span data-ttu-id="86272-188">\[[Conjunto de APIs: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="86272-188">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: insertHtml(html, insertLocation)
  fullName: insertHtml
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertHtml(html: string, insertLocation: Word.InsertLocation): Word.Range;'
    return:
      type:
      - Word.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"86272-189\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"86272-189\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the paragraphs collection.\n    var paragraphs = context.document.body.paragraphs;\n\n    // Queue a commmand to load the style property for the top 2 paragraphs.\n    // We never perform an empty load. We always must request a property.\n    context.load(paragraphs, {select: 'style', top: 2} );\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n\n        // Queue a command to get the first paragraph.\n        var paragraph = paragraphs.items[0];\n\n        // Queue a command to insert HTML content at the end of the first paragraph.\n        paragraph.insertHtml('<strong>Inserted HTML.</strong>', Word.InsertLocation.end);\n\n        // Synchronize the document state by executing the queued commands,\n        // and return a promise to indicate task completion.\n        return context.sync().then(function () {\n            console.log('Inserted HTML content at the end of the first paragraph.');\n        });\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: html
      description: <span data-ttu-id="86272-p124">Obrigatória. O HTML a inserir no parágrafo.</span><span class="sxs-lookup"><span data-stu-id="86272-p124">Required. The HTML to be inserted in the paragraph.</span></span>
      type:
      - string
    - id: insertLocation
      description: <span data-ttu-id="86272-p125">Obrigatório. O valor pode ser 'Replace', 'Start' ou 'End'.</span><span class="sxs-lookup"><span data-stu-id="86272-p125">Required. The value can be 'Replace', 'Start', or 'End'.</span></span>
      type:
      - Word.InsertLocation
- uid: word.Word.Paragraph.insertInlinePictureFromBase64
  summary: >-
    <span data-ttu-id="86272-p126">Insere uma imagem no local especificado dentro do parágrafo. O valor de insertLocation pode ser 'Replace', 'Start' ou 'End'.</span><span class="sxs-lookup"><span data-stu-id="86272-p126">Inserts a picture into the paragraph at the specified location. The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>


    <span data-ttu-id="86272-196">\[[Conjunto de APIs: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="86272-196">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: insertInlinePictureFromBase64(base64EncodedImage, insertLocation)
  fullName: insertInlinePictureFromBase64
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertInlinePictureFromBase64(base64EncodedImage: string, insertLocation: Word.InsertLocation): Word.InlinePicture;'
    return:
      type:
      - word.Word.InlinePicture
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"86272-197\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"86272-197\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the paragraphs collection.\n    var paragraphs = context.document.body.paragraphs;\n\n    // Queue a commmand to load the style property for all of the paragraphs.\n    context.load(paragraphs, 'style');\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n\n        // Queue a command to get the first paragraph.\n        var paragraph = paragraphs.items[0];\n\n        var b64encodedImg = \"iVBORw0KGgoAAAANSUhEUgAAAB4AAAANCAIAAAAxEEnAAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAACFSURBVDhPtY1BEoQwDMP6/0+XgIMTBAeYoTqso9Rkx1zG+tNj1H94jgGzeNSjteO5vtQQuG2seO0av8LzGbe3anzRoJ4ybm/VeKEerAEbAUpW4aWQCmrGFWykRzGBCnYy2ha3oAIq2MloW9yCCqhgJ6NtcQsqoIKdjLbFLaiACnYyf2fODbrjZcXfr2F4AAAAAElFTkSuQmCC\";\n\n        // Queue a command to insert a base64 encoded image at the beginning of the first paragraph.\n        paragraph.insertInlinePictureFromBase64(b64encodedImg, Word.InsertLocation.start);\n\n        // Synchronize the document state by executing the queued commands,\n        // and return a promise to indicate task completion.\n        return context.sync().then(function () {\n            console.log('Added an image to the first paragraph.');\n        });\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: base64EncodedImage
      description: <span data-ttu-id="86272-p127">Obrigatório. A imagem em codificação de Base64 a inserir.</span><span class="sxs-lookup"><span data-stu-id="86272-p127">Required. The base64 encoded image to be inserted.</span></span>
      type:
      - string
    - id: insertLocation
      description: <span data-ttu-id="86272-p128">Obrigatório. O valor pode ser 'Replace', 'Start' ou 'End'.</span><span class="sxs-lookup"><span data-stu-id="86272-p128">Required. The value can be 'Replace', 'Start', or 'End'.</span></span>
      type:
      - Word.InsertLocation
- uid: word.Word.Paragraph.insertOoxml
  summary: >-
    <span data-ttu-id="86272-202">Insere OOXML do parágrafo no local especificado.</span><span class="sxs-lookup"><span data-stu-id="86272-202">Inserts OOXML into the paragraph at the specified location.</span></span> <span data-ttu-id="86272-203">O valor de insertLocation pode ser 'Replace', 'Iniciar' ou 'End'.</span><span class="sxs-lookup"><span data-stu-id="86272-203">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>


    <span data-ttu-id="86272-204">\[[Conjunto de APIs: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="86272-204">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: insertOoxml(ooxml, insertLocation)
  fullName: insertOoxml
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertOoxml(ooxml: string, insertLocation: Word.InsertLocation): Word.Range;'
    return:
      type:
      - Word.Range
      description: ''
    parameters:
    - id: ooxml
      description: <span data-ttu-id="86272-p130">Obrigatório. O OOXML a inserir no parágrafo.</span><span class="sxs-lookup"><span data-stu-id="86272-p130">Required. The OOXML to be inserted in the paragraph.</span></span>
      type:
      - string
    - id: insertLocation
      description: <span data-ttu-id="86272-p131">Obrigatório. O valor pode ser 'Replace', 'Start' ou 'End'.</span><span class="sxs-lookup"><span data-stu-id="86272-p131">Required. The value can be 'Replace', 'Start', or 'End'.</span></span>
      type:
      - Word.InsertLocation
- uid: word.Word.Paragraph.insertParagraph
  summary: >-
    <span data-ttu-id="86272-p132">Insere um parágrafo no local especificado. O valor de insertLocation pode ser 'Before' ou 'After'.</span><span class="sxs-lookup"><span data-stu-id="86272-p132">Inserts a paragraph at the specified location. The insertLocation value can be 'Before' or 'After'.</span></span>


    <span data-ttu-id="86272-211">\[[Conjunto de APIs: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="86272-211">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: insertParagraph(paragraphText, insertLocation)
  fullName: insertParagraph
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertParagraph(paragraphText: string, insertLocation: Word.InsertLocation): Word.Paragraph;'
    return:
      type:
      - Word.Paragraph
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"86272-212\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"86272-212\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the paragraphs collection.\n    var paragraphs = context.document.body.paragraphs;\n\n    // Queue a commmand to load the style property for the top 2 paragraphs.\n    // We never perform an empty load. We always must request a property.\n    context.load(paragraphs, {select: 'style', top: 2} );\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n\n        // Queue a command to get the first paragraph.\n        var paragraph = paragraphs.items[0];\n\n        // Queue a command to insert the paragraph after the current paragraph.\n        paragraph.insertParagraph('Content of a new paragraph', Word.InsertLocation.after);\n\n        // Synchronize the document state by executing the queued commands,\n        // and return a promise to indicate task completion.\n        return context.sync().then(function () {\n            console.log('Inserted a new paragraph at the end of the first paragraph.');\n        });\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```typescript\nawait Word.run(async (context) => {\n  // Second sentence, let's insert it as a paragraph after the previously inserted one.\n  let secondSentence = context.document.body.insertParagraph(\n    \"This is the first text with a custom style.\",\n    \"End\"\n  );\n  secondSentence.font.set({\n    bold: false,\n    italic: true,\n    name: \"Berlin Sans FB\",\n    color: \"blue\",\n    size: 30\n  });\n\n  await context.sync();\n});\n```"
    parameters:
    - id: paragraphText
      description: <span data-ttu-id="86272-p133">Obrigatória. O texto do parágrafo a ser inserido.</span><span class="sxs-lookup"><span data-stu-id="86272-p133">Required. The paragraph text to be inserted.</span></span>
      type:
      - string
    - id: insertLocation
      description: <span data-ttu-id="86272-p134">Obrigatória. O valor pode ser 'Before' ou 'After'.</span><span class="sxs-lookup"><span data-stu-id="86272-p134">Required. The value can be 'Before' or 'After'.</span></span>
      type:
      - Word.InsertLocation
- uid: word.Word.Paragraph.insertTable
  summary: >-
    <span data-ttu-id="86272-p135">Insere uma tabela com a quantidade especificada de linhas e colunas. O valor de insertLocation pode ser 'Before' ou 'After'.</span><span class="sxs-lookup"><span data-stu-id="86272-p135">Inserts a table with the specified number of rows and columns. The insertLocation value can be 'Before' or 'After'.</span></span>


    <span data-ttu-id="86272-219">\[[Conjunto de APIs: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="86272-219">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: insertTable(rowCount, columnCount, insertLocation, values)
  fullName: insertTable
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertTable(rowCount: number, columnCount: number, insertLocation: Word.InsertLocation, values?: string[][]): Word.Table;'
    return:
      type:
      - Word.Table
      description: ''
    parameters:
    - id: rowCount
      description: <span data-ttu-id="86272-p136">Obrigatório. A quantidade de linhas na tabela.</span><span class="sxs-lookup"><span data-stu-id="86272-p136">Required. The number of rows in the table.</span></span>
      type:
      - number
    - id: columnCount
      description: <span data-ttu-id="86272-p137">Obrigatório. A quantidade de colunas na tabela.</span><span class="sxs-lookup"><span data-stu-id="86272-p137">Required. The number of columns in the table.</span></span>
      type:
      - number
    - id: insertLocation
      description: <span data-ttu-id="86272-p138">Obrigatória. O valor pode ser 'Before' ou 'After'.</span><span class="sxs-lookup"><span data-stu-id="86272-p138">Required. The value can be 'Before' or 'After'.</span></span>
      type:
      - Word.InsertLocation
    - id: values
      description: <span data-ttu-id="86272-226">Matriz 2D opcional.</span><span class="sxs-lookup"><span data-stu-id="86272-226">Optional 2D array.</span></span> <span data-ttu-id="86272-227">As células serão preenchidas se as cadeias de caracteres correspondentes estiverem especificadas na matriz.</span><span class="sxs-lookup"><span data-stu-id="86272-227">Cells are filled if the corresponding strings are specified in the array.</span></span>
      type:
      - string[][]
- uid: word.Word.Paragraph.insertText
  summary: >-
    <span data-ttu-id="86272-p140">Insere texto no local especificado dentro do parágrafo. O valor de insertLocation pode ser 'Replace', 'Start' ou 'End'.</span><span class="sxs-lookup"><span data-stu-id="86272-p140">Inserts text into the paragraph at the specified location. The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>


    <span data-ttu-id="86272-230">\[[Conjunto de APIs: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="86272-230">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: insertText(text, insertLocation)
  fullName: insertText
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertText(text: string, insertLocation: Word.InsertLocation): Word.Range;'
    return:
      type:
      - Word.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"86272-231\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"86272-231\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the paragraphs collection.\n    var paragraphs = context.document.body.paragraphs;\n\n    // Queue a commmand to load the style property for the top 2 paragraphs.\n    // We never perform an empty load. We always must request a property.\n    context.load(paragraphs, {select: 'style', top: 2} );\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n\n        // Queue a command to get the first paragraph.\n        var paragraph = paragraphs.items[0];\n\n        // Queue a command to insert text into the end of the paragraph.\n        paragraph.insertText('New text inserted into the paragraph.', Word.InsertLocation.end);\n\n        // Synchronize the document state by executing the queued commands,\n        // and return a promise to indicate task completion.\n        return context.sync().then(function () {\n            console.log('Inserted text at the end of the first paragraph.');\n        });\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```typescript\nawait Word.run(async (context) => {\n    // Here we insert to replace text\n    let range = context.document.body.paragraphs\n        .getLast().insertText(\"Just replaced the last paragraph!\", \"Replace\");\n    range.font.highlightColor = \"black\";\n    range.font.color = \"white\";\n\n    await context.sync();\n});\n```"
    parameters:
    - id: text
      description: <span data-ttu-id="86272-p141">Obrigatória. Texto a inserir.</span><span class="sxs-lookup"><span data-stu-id="86272-p141">Required. Text to be inserted.</span></span>
      type:
      - string
    - id: insertLocation
      description: <span data-ttu-id="86272-p142">Obrigatório. O valor pode ser 'Replace', 'Start' ou 'End'.</span><span class="sxs-lookup"><span data-stu-id="86272-p142">Required. The value can be 'Replace', 'Start', or 'End'.</span></span>
      type:
      - Word.InsertLocation
- uid: word.Word.Paragraph.isLastParagraph
  summary: >-
    <span data-ttu-id="86272-p143">Indica que o parágrafo é o último dentro do corpo do pai. Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="86272-p143">Indicates the paragraph is the last one inside its parent body. Read-only.</span></span>


    <span data-ttu-id="86272-238">\[[Conjunto de APIs: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="86272-238">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: isLastParagraph
  fullName: isLastParagraph
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly isLastParagraph: boolean;'
    return:
      type:
      - boolean
- uid: word.Word.Paragraph.isListItem
  summary: >-
    <span data-ttu-id="86272-p144">Verifica se o parágrafo é um item da lista. Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="86272-p144">Checks whether the paragraph is a list item. Read-only.</span></span>


    <span data-ttu-id="86272-241">\[[Conjunto de APIs: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="86272-241">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: isListItem
  fullName: isListItem
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly isListItem: boolean;'
    return:
      type:
      - boolean
- uid: word.Word.Paragraph.leftIndent
  summary: >-
    <span data-ttu-id="86272-242">Obtém ou define o valor de recuo à esquerda, em pontos, para o parágrafo.</span><span class="sxs-lookup"><span data-stu-id="86272-242">Gets or sets the left indent value, in points, for the paragraph.</span></span>


    <span data-ttu-id="86272-243">\[[Conjunto de APIs: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="86272-243">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: leftIndent
  fullName: leftIndent
  langs:
  - typeScript
  type: property
  syntax:
    content: 'leftIndent: number;'
    return:
      type:
      - number
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"86272-244\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"86272-244\">Examples</span></span>\n\n```typescript\nawait Word.run(async (context) => {\n    // Indents the first paragraph\n    context.document.body.paragraphs.\n        getFirst().leftIndent = 75; //units = points\n\n    return context.sync();\n});\n```"
- uid: word.Word.Paragraph.lineSpacing
  summary: >-
    <span data-ttu-id="86272-p145">Obtém ou define o espaçamento entre linhas, em pontos, para o parágrafo especificado. Na interface do usuário do Word, esse valor é dividido por 12.</span><span class="sxs-lookup"><span data-stu-id="86272-p145">Gets or sets the line spacing, in points, for the specified paragraph. In the Word UI, this value is divided by 12.</span></span>


    <span data-ttu-id="86272-247">\[[Conjunto de APIs: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="86272-247">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: lineSpacing
  fullName: lineSpacing
  langs:
  - typeScript
  type: property
  syntax:
    content: 'lineSpacing: number;'
    return:
      type:
      - number
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"86272-248\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"86272-248\">Examples</span></span>\n\n```typescript\nawait Word.run(async (context) => {\n    // Adjusts line spacing \n    context.document.body.paragraphs\n        .getFirst().lineSpacing = 20;\n\n    await context.sync();\n});\n```"
- uid: word.Word.Paragraph.lineUnitAfter
  summary: >-
    <span data-ttu-id="86272-249">Obtém ou define a quantidade de espaçamento, nas linhas de grade, após o parágrafo.</span><span class="sxs-lookup"><span data-stu-id="86272-249">Gets or sets the amount of spacing, in grid lines, after the paragraph.</span></span>


    <span data-ttu-id="86272-250">\[[Conjunto de APIs: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="86272-250">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: lineUnitAfter
  fullName: lineUnitAfter
  langs:
  - typeScript
  type: property
  syntax:
    content: 'lineUnitAfter: number;'
    return:
      type:
      - number
- uid: word.Word.Paragraph.lineUnitBefore
  summary: >-
    <span data-ttu-id="86272-251">Obtém ou define a quantidade de espaçamento, em linhas de grade, antes do parágrafo.</span><span class="sxs-lookup"><span data-stu-id="86272-251">Gets or sets the amount of spacing, in grid lines, before the paragraph.</span></span>


    <span data-ttu-id="86272-252">\[[Conjunto de APIs: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="86272-252">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: lineUnitBefore
  fullName: lineUnitBefore
  langs:
  - typeScript
  type: property
  syntax:
    content: 'lineUnitBefore: number;'
    return:
      type:
      - number
- uid: word.Word.Paragraph.list
  summary: >-
    <span data-ttu-id="86272-p146">Obtém a lista à qual pertence esse parágrafo. Gera uma exceção se o parágrafo não está em uma lista. Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="86272-p146">Gets the List to which this paragraph belongs. Throws if the paragraph is not in a list. Read-only.</span></span>


    <span data-ttu-id="86272-256">\[[Conjunto de APIs: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="86272-256">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: list
  fullName: list
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly list: Word.List;'
    return:
      type:
      - word.Word.List
- uid: word.Word.Paragraph.listItem
  summary: >-
    <span data-ttu-id="86272-p147">Obtém o ListItem para o parágrafo. Gera uma exceção se o parágrafo não faz parte de uma lista. Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="86272-p147">Gets the ListItem for the paragraph. Throws if the paragraph is not part of a list. Read-only.</span></span>


    <span data-ttu-id="86272-260">\[[Conjunto de APIs: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="86272-260">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: listItem
  fullName: listItem
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly listItem: Word.ListItem;'
    return:
      type:
      - word.Word.ListItem
- uid: word.Word.Paragraph.listItemOrNullObject
  summary: >-
    <span data-ttu-id="86272-p148">Obtém o ListItem para o parágrafo. Retorna um objeto nulo se o parágrafo não fizer parte de uma lista. Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="86272-p148">Gets the ListItem for the paragraph. Returns a null object if the paragraph is not part of a list. Read-only.</span></span>


    <span data-ttu-id="86272-264">\[[Conjunto de APIs: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="86272-264">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: listItemOrNullObject
  fullName: listItemOrNullObject
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly listItemOrNullObject: Word.ListItem;'
    return:
      type:
      - word.Word.ListItem
- uid: word.Word.Paragraph.listOrNullObject
  summary: >-
    <span data-ttu-id="86272-p149">Obtém a lista à qual pertence esse parágrafo. Retorna um objeto nulo se o parágrafo não estiver em uma lista. Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="86272-p149">Gets the List to which this paragraph belongs. Returns a null object if the paragraph is not in a list. Read-only.</span></span>


    <span data-ttu-id="86272-268">\[[Conjunto de APIs: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="86272-268">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: listOrNullObject
  fullName: listOrNullObject
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly listOrNullObject: Word.List;'
    return:
      type:
      - word.Word.List
- uid: word.Word.Paragraph.load
  summary: <span data-ttu-id="86272-269">Filas de backup de um comando para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="86272-269">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="86272-270">Você deve chamar "context.sync()" antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="86272-270">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="86272-271">Além dessa assinatura, esse método tem as seguintes assinaturas:</span><span class="sxs-lookup"><span data-stu-id="86272-271">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="86272-272">`load(option?: { select?: string; expand?: string; }): Word.Paragraph`-Onde option.select é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades para carregar e options.expand é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades de navegação para carregar.</span><span class="sxs-lookup"><span data-stu-id="86272-272">`load(option?: { select?: string; expand?: string; }): Word.Paragraph` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="86272-273">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.Paragraph`-Só está disponível em tipos de coleção.</span><span class="sxs-lookup"><span data-stu-id="86272-273">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.Paragraph` - Only available on collection types.</span></span> <span data-ttu-id="86272-274">Ele é semelhante à assinatura anterior.</span><span class="sxs-lookup"><span data-stu-id="86272-274">It is similar to the preceding signature.</span></span> <span data-ttu-id="86272-275">Option.Top Especifica o número máximo de itens que podem ser incluídos no resultado da coleção.</span><span class="sxs-lookup"><span data-stu-id="86272-275">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="86272-276">Option.Skip Especifica o número de itens que devem ser ignorados e não são incluídos no resultado.</span><span class="sxs-lookup"><span data-stu-id="86272-276">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="86272-277">Se option.top for especificado, o conjunto de resultados será iniciado depois de ignorar o número de itens especificado.</span><span class="sxs-lookup"><span data-stu-id="86272-277">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Word.Paragraph;'
    return:
      type:
      - Word.Paragraph
      description: ''
    parameters:
    - id: option
      description: <span data-ttu-id="86272-278">Uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades de carga.</span><span class="sxs-lookup"><span data-stu-id="86272-278">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: word.Word.Paragraph.outlineLevel
  summary: >-
    <span data-ttu-id="86272-279">Obtém ou define o nível de estrutura de tópicos para o parágrafo.</span><span class="sxs-lookup"><span data-stu-id="86272-279">Gets or sets the outline level for the paragraph.</span></span>


    <span data-ttu-id="86272-280">\[[Conjunto de APIs: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="86272-280">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: outlineLevel
  fullName: outlineLevel
  langs:
  - typeScript
  type: property
  syntax:
    content: 'outlineLevel: number;'
    return:
      type:
      - number
- uid: word.Word.Paragraph.parentBody
  summary: >-
    <span data-ttu-id="86272-p152">Obtém o corpo pai do parágrafo. Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="86272-p152">Gets the parent body of the paragraph. Read-only.</span></span>


    <span data-ttu-id="86272-283">\[[Conjunto de APIs: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="86272-283">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: parentBody
  fullName: parentBody
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly parentBody: Word.Body;'
    return:
      type:
      - Word.Body
- uid: word.Word.Paragraph.parentContentControl
  summary: >-
    <span data-ttu-id="86272-p153">Obtém o controle de conteúdo que inclui o parágrafo. Retorna uma exceção quando não há um controle de conteúdo pai. Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="86272-p153">Gets the content control that contains the paragraph. Throws if there isn't a parent content control. Read-only.</span></span>


    <span data-ttu-id="86272-287">\[[Conjunto de APIs: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="86272-287">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: parentContentControl
  fullName: parentContentControl
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly parentContentControl: Word.ContentControl;'
    return:
      type:
      - word.Word.ContentControl
- uid: word.Word.Paragraph.parentContentControlOrNullObject
  summary: >-
    <span data-ttu-id="86272-p154">Obtém o controle de conteúdo que inclui o parágrafo. Retorna um objeto nulo quando não há um controle de conteúdo pai. Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="86272-p154">Gets the content control that contains the paragraph. Returns a null object if there isn't a parent content control. Read-only.</span></span>


    <span data-ttu-id="86272-291">\[[Conjunto de APIs: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="86272-291">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: parentContentControlOrNullObject
  fullName: parentContentControlOrNullObject
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly parentContentControlOrNullObject: Word.ContentControl;'
    return:
      type:
      - word.Word.ContentControl
- uid: word.Word.Paragraph.parentTable
  summary: >-
    <span data-ttu-id="86272-p155">Obtém a tabela que contém o parágrafo. Gera uma exceção se não está contido em uma tabela. Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="86272-p155">Gets the table that contains the paragraph. Throws if it is not contained in a table. Read-only.</span></span>


    <span data-ttu-id="86272-295">\[[Conjunto de APIs: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="86272-295">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: parentTable
  fullName: parentTable
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly parentTable: Word.Table;'
    return:
      type:
      - Word.Table
- uid: word.Word.Paragraph.parentTableCell
  summary: >-
    <span data-ttu-id="86272-p156">Obtém a célula de tabela que contém o parágrafo. Gera uma exceção se não está contido em uma célula de tabela. Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="86272-p156">Gets the table cell that contains the paragraph. Throws if it is not contained in a table cell. Read-only.</span></span>


    <span data-ttu-id="86272-299">\[[Conjunto de APIs: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="86272-299">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: parentTableCell
  fullName: parentTableCell
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly parentTableCell: Word.TableCell;'
    return:
      type:
      - Word.TableCell
- uid: word.Word.Paragraph.parentTableCellOrNullObject
  summary: >-
    <span data-ttu-id="86272-p157">Obtém a célula de tabela que contém o parágrafo. Retorna um objeto nulo se não estiver contido em uma célula de tabela. Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="86272-p157">Gets the table cell that contains the paragraph. Returns a null object if it is not contained in a table cell. Read-only.</span></span>


    <span data-ttu-id="86272-303">\[[Conjunto de APIs: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="86272-303">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: parentTableCellOrNullObject
  fullName: parentTableCellOrNullObject
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly parentTableCellOrNullObject: Word.TableCell;'
    return:
      type:
      - Word.TableCell
- uid: word.Word.Paragraph.parentTableOrNullObject
  summary: >-
    <span data-ttu-id="86272-p158">Obtém a tabela que contém o parágrafo. Retorna um objeto nulo se não estiver contido em uma tabela. Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="86272-p158">Gets the table that contains the paragraph. Returns a null object if it is not contained in a table. Read-only.</span></span>


    <span data-ttu-id="86272-307">\[[Conjunto de APIs: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="86272-307">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: parentTableOrNullObject
  fullName: parentTableOrNullObject
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly parentTableOrNullObject: Word.Table;'
    return:
      type:
      - Word.Table
- uid: word.Word.Paragraph.rightIndent
  summary: >-
    <span data-ttu-id="86272-308">Obtém ou define o valor de recuo à direita, em pontos, para o parágrafo.</span><span class="sxs-lookup"><span data-stu-id="86272-308">Gets or sets the right indent value, in points, for the paragraph.</span></span>


    <span data-ttu-id="86272-309">\[[Conjunto de APIs: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="86272-309">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: rightIndent
  fullName: rightIndent
  langs:
  - typeScript
  type: property
  syntax:
    content: 'rightIndent: number;'
    return:
      type:
      - number
- uid: word.Word.Paragraph.search
  summary: >-
    <span data-ttu-id="86272-310">Executa uma pesquisa com o SearchOptions especificado no escopo do objeto paragraph.</span><span class="sxs-lookup"><span data-stu-id="86272-310">Performs a search with the specified SearchOptions on the scope of the paragraph object.</span></span> <span data-ttu-id="86272-311">Os resultados da pesquisa são uma coleção de objetos range.</span><span class="sxs-lookup"><span data-stu-id="86272-311">The search results are a collection of range objects.</span></span>


    <span data-ttu-id="86272-312">\[[Conjunto de APIs: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="86272-312">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: search(searchText, searchOptions)
  fullName: search
  langs:
  - typeScript
  type: method
  syntax:
    content: >-
      search(searchText: string, searchOptions?: Word.SearchOptions | {
                  ignorePunct?: boolean;
                  ignoreSpace?: boolean;
                  matchCase?: boolean;
                  matchPrefix?: boolean;
                  matchSuffix?: boolean;
                  matchWholeWord?: boolean;
                  matchWildcards?: boolean;
              }): Word.RangeCollection;
    return:
      type:
      - word.Word.RangeCollection
      description: ''
    parameters:
    - id: searchText
      description: <span data-ttu-id="86272-p160">Obrigatória. O texto da pesquisa.</span><span class="sxs-lookup"><span data-stu-id="86272-p160">Required. The search text.</span></span>
      type:
      - string
    - id: searchOptions
      description: <span data-ttu-id="86272-p161">Opcional. Opções da pesquisa.</span><span class="sxs-lookup"><span data-stu-id="86272-p161">Optional. Options for the search.</span></span>
      type:
      - >-
        Word.SearchOptions | {
                    ignorePunct?: boolean;
                    ignoreSpace?: boolean;
                    matchCase?: boolean;
                    matchPrefix?: boolean;
                    matchSuffix?: boolean;
                    matchWholeWord?: boolean;
                    matchWildcards?: boolean;
                }
- uid: word.Word.Paragraph.select
  summary: >-
    <span data-ttu-id="86272-317">Seleciona e navega na interface do usuário do Word até o parágrafo.</span><span class="sxs-lookup"><span data-stu-id="86272-317">Selects and navigates the Word UI to the paragraph.</span></span>


    <span data-ttu-id="86272-318">\[[Conjunto de APIs: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="86272-318">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: select(selectionMode)
  fullName: select
  langs:
  - typeScript
  type: method
  syntax:
    content: 'select(selectionMode?: Word.SelectionMode): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"86272-319\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"86272-319\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the paragraphs collection.\n    var paragraphs = context.document.body.paragraphs;\n\n    // Queue a commmand to load the style property for all of the paragraphs.\n    context.load(paragraphs, 'style');\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n\n        // Queue a command to get the last paragraph a create a\n        // proxy paragraph object.\n        var paragraph = paragraphs.items[paragraphs.items.length - 1];\n\n        // Queue a command to select the paragraph. The Word UI will\n        // move to the selected paragraph.\n        paragraph.select();\n\n        // Synchronize the document state by executing the queued commands,\n        // and return a promise to indicate task completion.\n        return context.sync().then(function () {\n            console.log('Selected the last paragraph.');\n        });\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```typescript\nawait Word.run(async (context) => {\n    // If select is called, with no parameters it selects the object.\n    context.document.body.paragraphs.getLast().select();\n\n    await context.sync();\n});\n```\n```typescript\nawait Word.run(async (context) => {\n    //Select can be at the start or end of a range, this by definition moves the insertion point without selecting the range. \n    context.document.body.paragraphs.getLast().select(\"End\");\n\n    await context.sync();\n});\n```"
    parameters:
    - id: selectionMode
      description: <span data-ttu-id="86272-p162">Opcional.  O modo de seleção pode ser 'Select', 'Start' ou 'End'. 'Select' é o padrão.</span><span class="sxs-lookup"><span data-stu-id="86272-p162">Optional. The selection mode can be 'Select', 'Start', or 'End'. 'Select' is the default.</span></span>
      type:
      - Word.SelectionMode
- uid: word.Word.Paragraph.spaceAfter
  summary: >-
    <span data-ttu-id="86272-323">Obtém ou define o espaçamento, em pontos, após o parágrafo.</span><span class="sxs-lookup"><span data-stu-id="86272-323">Gets or sets the spacing, in points, after the paragraph.</span></span>


    <span data-ttu-id="86272-324">\[[Conjunto de APIs: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="86272-324">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: spaceAfter
  fullName: spaceAfter
  langs:
  - typeScript
  type: property
  syntax:
    content: 'spaceAfter: number;'
    return:
      type:
      - number
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"86272-325\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"86272-325\">Examples</span></span>\n\n```typescript\nawait Word.run(async (context) => {\n    //Adjust space between paragraphs\n    context.document.body.paragraphs\n        .getFirst().spaceAfter = 20;\n\n    await context.sync();\n});\n```"
- uid: word.Word.Paragraph.spaceBefore
  summary: >-
    <span data-ttu-id="86272-326">Obtém ou define o espaçamento, em pontos, antes o parágrafo.</span><span class="sxs-lookup"><span data-stu-id="86272-326">Gets or sets the spacing, in points, before the paragraph.</span></span>


    <span data-ttu-id="86272-327">\[[Conjunto de APIs: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="86272-327">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: spaceBefore
  fullName: spaceBefore
  langs:
  - typeScript
  type: property
  syntax:
    content: 'spaceBefore: number;'
    return:
      type:
      - number
- uid: word.Word.Paragraph.split
  summary: >-
    <span data-ttu-id="86272-328">Divide o parágrafo em intervalos filho usando delimitadores.</span><span class="sxs-lookup"><span data-stu-id="86272-328">Splits the paragraph into child ranges by using delimiters.</span></span>


    <span data-ttu-id="86272-329">\[[Conjunto de APIs: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="86272-329">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: split(delimiters, trimDelimiters, trimSpacing)
  fullName: split
  langs:
  - typeScript
  type: method
  syntax:
    content: 'split(delimiters: string[], trimDelimiters?: boolean, trimSpacing?: boolean): Word.RangeCollection;'
    return:
      type:
      - word.Word.RangeCollection
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"86272-330\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"86272-330\">Examples</span></span>\n\n```typescript\nawait Word.run(async (context) => {\n    let paragraph = context.document.body.paragraphs.getFirst();\n    let words = paragraph.split(\n        [\" \"], true /* trimDelimiters*/, true /* trimSpaces */);\n    words.load(\"text\");\n\n    await context.sync();\n\n    for (let i = 0; i < words.items.length; i++) {\n        if (i >= 1) {\n            words.items[i - 1].font.highlightColor = \"#FFFFFF\";\n        }\n        words.items[i].font.highlightColor = \"#FFFF00\";\n\n        await context.sync();\n        await pause(200);\n    }\n});\n```"
    parameters:
    - id: delimiters
      description: <span data-ttu-id="86272-p163">Obrigatório. Os delimitadores como uma matriz de cadeias de caracteres.</span><span class="sxs-lookup"><span data-stu-id="86272-p163">Required. The delimiters as an array of strings.</span></span>
      type:
      - string[]
    - id: trimDelimiters
      description: <span data-ttu-id="86272-333">Opcional.</span><span class="sxs-lookup"><span data-stu-id="86272-333">Optional.</span></span> <span data-ttu-id="86272-334">Indica se aparar delimitadores dos intervalos da coleção range.</span><span class="sxs-lookup"><span data-stu-id="86272-334">Indicates whether to trim delimiters from the ranges in the range collection.</span></span> <span data-ttu-id="86272-335">Padrão é false, que indica se os delimitadores estão incluídos nos intervalos retornados na coleção de intervalo.</span><span class="sxs-lookup"><span data-stu-id="86272-335">Default is false which indicates that the delimiters are included in the ranges returned in the range collection.</span></span>
      type:
      - boolean
    - id: trimSpacing
      description: <span data-ttu-id="86272-336">Opcional.</span><span class="sxs-lookup"><span data-stu-id="86272-336">Optional.</span></span> <span data-ttu-id="86272-337">Indica se aparar caracteres espaçamento (espaços, guias, quebras de coluna e marcas de fim de parágrafo), do início e fim dos intervalos retornado na coleção de intervalo.</span><span class="sxs-lookup"><span data-stu-id="86272-337">Indicates whether to trim spacing characters (spaces, tabs, column breaks, and paragraph end marks) from the start and end of the ranges returned in the range collection.</span></span> <span data-ttu-id="86272-338">Padrão é false, que indica que os caracteres de espaçamento no início e fim dos intervalos estão incluídos na coleção range.</span><span class="sxs-lookup"><span data-stu-id="86272-338">Default is false which indicates that spacing characters at the start and end of the ranges are included in the range collection.</span></span>
      type:
      - boolean
- uid: word.Word.Paragraph.startNewList
  summary: >-
    <span data-ttu-id="86272-p166">Inicia uma nova lista com este parágrafo. Falhará se o parágrafo já for um item da lista.</span><span class="sxs-lookup"><span data-stu-id="86272-p166">Starts a new list with this paragraph. Fails if the paragraph is already a list item.</span></span>


    <span data-ttu-id="86272-341">\[[Conjunto de APIs: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="86272-341">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: startNewList()
  fullName: startNewList
  langs:
  - typeScript
  type: method
  syntax:
    content: 'startNewList(): Word.List;'
    return:
      type:
      - word.Word.List
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"86272-342\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"86272-342\">Examples</span></span>\n\n```typescript\n//This example starts a new list stating with the second paragraph.\nawait Word.run(async (context) => {\n    let paragraphs = context.document.body.paragraphs;\n    paragraphs.load(\"$none\"); //We need no properties.\n\n    await context.sync();\n\n    var list = paragraphs.items[1].startNewList(); //Indicates new list to be started in the second paragraph.\n    list.load(\"$none\"); //We need no properties.\n\n    await context.sync();\n\n    //To add new items to the list use start/end on the insert location parameter.\n    list.insertParagraph('New list item on top of the list', 'Start');\n    let paragraph = list.insertParagraph('New list item at the end of the list (4th level)', 'End');\n    paragraph.listItem.level = 4; //Sets up list level for the lsit item.\n    //To add paragraphs outside the list use before/after:\n    list.insertParagraph('New paragraph goes after (not part of the list)', 'After');\n\n    await context.sync();\n});\n```"
- uid: word.Word.Paragraph.style
  summary: >-
    <span data-ttu-id="86272-p167">Obtém ou define o nome do estilo do parágrafo. Use esta propriedade de estilos personalizados e nomes de estilo localizados. Para usar os estilos internos que são portáteis entre localidades, confira a propriedade "styleBuiltIn".</span><span class="sxs-lookup"><span data-stu-id="86272-p167">Gets or sets the style name for the paragraph. Use this property for custom styles and localized style names. To use the built-in styles that are portable between locales, see the "styleBuiltIn" property.</span></span>


    <span data-ttu-id="86272-346">\[[Conjunto de APIs: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="86272-346">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: style
  fullName: style
  langs:
  - typeScript
  type: property
  syntax:
    content: 'style: string;'
    return:
      type:
      - string
- uid: word.Word.Paragraph.styleBuiltIn
  summary: >-
    <span data-ttu-id="86272-p168">Obtém ou define o nome do estilo interno para o parágrafo. Use esta propriedade para estilos internos que são portáteis entre localidades. Para usar estilos personalizados ou nomes de estilo localizados, confira a propriedade "estilo".</span><span class="sxs-lookup"><span data-stu-id="86272-p168">Gets or sets the built-in style name for the paragraph. Use this property for built-in styles that are portable between locales. To use custom styles or localized style names, see the "style" property.</span></span>


    <span data-ttu-id="86272-350">\[[Conjunto de APIs: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="86272-350">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: styleBuiltIn
  fullName: styleBuiltIn
  langs:
  - typeScript
  type: property
  syntax:
    content: 'styleBuiltIn: Word.Style | "Other" | "Normal" | "Heading1" | "Heading2" | "Heading3" | "Heading4" | "Heading5" | "Heading6" | "Heading7" | "Heading8" | "Heading9" | "Toc1" | "Toc2" | "Toc3" | "Toc4" | "Toc5" | "Toc6" | "Toc7" | "Toc8" | "Toc9" | "FootnoteText" | "Header" | "Footer" | "Caption" | "FootnoteReference" | "EndnoteReference" | "EndnoteText" | "Title" | "Subtitle" | "Hyperlink" | "Strong" | "Emphasis" | "NoSpacing" | "ListParagraph" | "Quote" | "IntenseQuote" | "SubtleEmphasis" | "IntenseEmphasis" | "SubtleReference" | "IntenseReference" | "BookTitle" | "Bibliography" | "TocHeading" | "TableGrid" | "PlainTable1" | "PlainTable2" | "PlainTable3" | "PlainTable4" | "PlainTable5" | "TableGridLight" | "GridTable1Light" | "GridTable1Light_Accent1" | "GridTable1Light_Accent2" | "GridTable1Light_Accent3" | "GridTable1Light_Accent4" | "GridTable1Light_Accent5" | "GridTable1Light_Accent6" | "GridTable2" | "GridTable2_Accent1" | "GridTable2_Accent2" | "GridTable2_Accent3" | "GridTable2_Accent4" | "GridTable2_Accent5" | "GridTable2_Accent6" | "GridTable3" | "GridTable3_Accent1" | "GridTable3_Accent2" | "GridTable3_Accent3" | "GridTable3_Accent4" | "GridTable3_Accent5" | "GridTable3_Accent6" | "GridTable4" | "GridTable4_Accent1" | "GridTable4_Accent2" | "GridTable4_Accent3" | "GridTable4_Accent4" | "GridTable4_Accent5" | "GridTable4_Accent6" | "GridTable5Dark" | "GridTable5Dark_Accent1" | "GridTable5Dark_Accent2" | "GridTable5Dark_Accent3" | "GridTable5Dark_Accent4" | "GridTable5Dark_Accent5" | "GridTable5Dark_Accent6" | "GridTable6Colorful" | "GridTable6Colorful_Accent1" | "GridTable6Colorful_Accent2" | "GridTable6Colorful_Accent3" | "GridTable6Colorful_Accent4" | "GridTable6Colorful_Accent5" | "GridTable6Colorful_Accent6" | "GridTable7Colorful" | "GridTable7Colorful_Accent1" | "GridTable7Colorful_Accent2" | "GridTable7Colorful_Accent3" | "GridTable7Colorful_Accent4" | "GridTable7Colorful_Accent5" | "GridTable7Colorful_Accent6" | "ListTable1Light" | "ListTable1Light_Accent1" | "ListTable1Light_Accent2" | "ListTable1Light_Accent3" | "ListTable1Light_Accent4" | "ListTable1Light_Accent5" | "ListTable1Light_Accent6" | "ListTable2" | "ListTable2_Accent1" | "ListTable2_Accent2" | "ListTable2_Accent3" | "ListTable2_Accent4" | "ListTable2_Accent5" | "ListTable2_Accent6" | "ListTable3" | "ListTable3_Accent1" | "ListTable3_Accent2" | "ListTable3_Accent3" | "ListTable3_Accent4" | "ListTable3_Accent5" | "ListTable3_Accent6" | "ListTable4" | "ListTable4_Accent1" | "ListTable4_Accent2" | "ListTable4_Accent3" | "ListTable4_Accent4" | "ListTable4_Accent5" | "ListTable4_Accent6" | "ListTable5Dark" | "ListTable5Dark_Accent1" | "ListTable5Dark_Accent2" | "ListTable5Dark_Accent3" | "ListTable5Dark_Accent4" | "ListTable5Dark_Accent5" | "ListTable5Dark_Accent6" | "ListTable6Colorful" | "ListTable6Colorful_Accent1" | "ListTable6Colorful_Accent2" | "ListTable6Colorful_Accent3" | "ListTable6Colorful_Accent4" | "ListTable6Colorful_Accent5" | "ListTable6Colorful_Accent6" | "ListTable7Colorful" | "ListTable7Colorful_Accent1" | "ListTable7Colorful_Accent2" | "ListTable7Colorful_Accent3" | "ListTable7Colorful_Accent4" | "ListTable7Colorful_Accent5" | "ListTable7Colorful_Accent6";'
    return:
      type:
      - Word.Style | "Other" | "Normal" | "Heading1" | "Heading2" | "Heading3" | "Heading4" | "Heading5" | "Heading6" | "Heading7" | "Heading8" | "Heading9" | "Toc1" | "Toc2" | "Toc3" | "Toc4" | "Toc5" | "Toc6" | "Toc7" | "Toc8" | "Toc9" | "FootnoteText" | "Header" | "Footer" | "Caption" | "FootnoteReference" | "EndnoteReference" | "EndnoteText" | "Title" | "Subtitle" | "Hyperlink" | "Strong" | "Emphasis" | "NoSpacing" | "ListParagraph" | "Quote" | "IntenseQuote" | "SubtleEmphasis" | "IntenseEmphasis" | "SubtleReference" | "IntenseReference" | "BookTitle" | "Bibliography" | "TocHeading" | "TableGrid" | "PlainTable1" | "PlainTable2" | "PlainTable3" | "PlainTable4" | "PlainTable5" | "TableGridLight" | "GridTable1Light" | "GridTable1Light_Accent1" | "GridTable1Light_Accent2" | "GridTable1Light_Accent3" | "GridTable1Light_Accent4" | "GridTable1Light_Accent5" | "GridTable1Light_Accent6" | "GridTable2" | "GridTable2_Accent1" | "GridTable2_Accent2" | "GridTable2_Accent3" | "GridTable2_Accent4" | "GridTable2_Accent5" | "GridTable2_Accent6" | "GridTable3" | "GridTable3_Accent1" | "GridTable3_Accent2" | "GridTable3_Accent3" | "GridTable3_Accent4" | "GridTable3_Accent5" | "GridTable3_Accent6" | "GridTable4" | "GridTable4_Accent1" | "GridTable4_Accent2" | "GridTable4_Accent3" | "GridTable4_Accent4" | "GridTable4_Accent5" | "GridTable4_Accent6" | "GridTable5Dark" | "GridTable5Dark_Accent1" | "GridTable5Dark_Accent2" | "GridTable5Dark_Accent3" | "GridTable5Dark_Accent4" | "GridTable5Dark_Accent5" | "GridTable5Dark_Accent6" | "GridTable6Colorful" | "GridTable6Colorful_Accent1" | "GridTable6Colorful_Accent2" | "GridTable6Colorful_Accent3" | "GridTable6Colorful_Accent4" | "GridTable6Colorful_Accent5" | "GridTable6Colorful_Accent6" | "GridTable7Colorful" | "GridTable7Colorful_Accent1" | "GridTable7Colorful_Accent2" | "GridTable7Colorful_Accent3" | "GridTable7Colorful_Accent4" | "GridTable7Colorful_Accent5" | "GridTable7Colorful_Accent6" | "ListTable1Light" | "ListTable1Light_Accent1" | "ListTable1Light_Accent2" | "ListTable1Light_Accent3" | "ListTable1Light_Accent4" | "ListTable1Light_Accent5" | "ListTable1Light_Accent6" | "ListTable2" | "ListTable2_Accent1" | "ListTable2_Accent2" | "ListTable2_Accent3" | "ListTable2_Accent4" | "ListTable2_Accent5" | "ListTable2_Accent6" | "ListTable3" | "ListTable3_Accent1" | "ListTable3_Accent2" | "ListTable3_Accent3" | "ListTable3_Accent4" | "ListTable3_Accent5" | "ListTable3_Accent6" | "ListTable4" | "ListTable4_Accent1" | "ListTable4_Accent2" | "ListTable4_Accent3" | "ListTable4_Accent4" | "ListTable4_Accent5" | "ListTable4_Accent6" | "ListTable5Dark" | "ListTable5Dark_Accent1" | "ListTable5Dark_Accent2" | "ListTable5Dark_Accent3" | "ListTable5Dark_Accent4" | "ListTable5Dark_Accent5" | "ListTable5Dark_Accent6" | "ListTable6Colorful" | "ListTable6Colorful_Accent1" | "ListTable6Colorful_Accent2" | "ListTable6Colorful_Accent3" | "ListTable6Colorful_Accent4" | "ListTable6Colorful_Accent5" | "ListTable6Colorful_Accent6" | "ListTable7Colorful" | "ListTable7Colorful_Accent1" | "ListTable7Colorful_Accent2" | "ListTable7Colorful_Accent3" | "ListTable7Colorful_Accent4" | "ListTable7Colorful_Accent5" | "ListTable7Colorful_Accent6"
- uid: word.Word.Paragraph.tableNestingLevel
  summary: >-
    <span data-ttu-id="86272-p169">Obtém o nível da tabela do parágrafo. Retorna 0 se o parágrafo não estiver em uma tabela. Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="86272-p169">Gets the level of the paragraph's table. It returns 0 if the paragraph is not in a table. Read-only.</span></span>


    <span data-ttu-id="86272-354">\[[Conjunto de APIs: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="86272-354">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: tableNestingLevel
  fullName: tableNestingLevel
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly tableNestingLevel: number;'
    return:
      type:
      - number
- uid: word.Word.Paragraph.text
  summary: >-
    <span data-ttu-id="86272-p170">Obtém o texto do parágrafo. Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="86272-p170">Gets the text of the paragraph. Read-only.</span></span>


    <span data-ttu-id="86272-357">\[[Conjunto de APIs: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="86272-357">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: text
  fullName: text
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly text: string;'
    return:
      type:
      - string
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"86272-358\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"86272-358\">Examples</span></span>\n\n```typescript\nawait Word.run(async (context) => {\n    // The collection of paragraphs of the current selection returns the full paragraphs contanied on it. \n    let paragraph = context.document.getSelection().paragraphs.getFirst();\n    paragraph.load(\"text\");\n\n    await context.sync();\n    console.log(paragraph.text);\n});\n```"
- uid: word.Word.Paragraph.toJSON
  name: toJSON()
  fullName: toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Word.Interfaces.ParagraphData;'
    return:
      type:
      - Word.Interfaces.ParagraphData
      description: ''
- uid: word.Word.Paragraph.track
  summary: <span data-ttu-id="86272-359">Rastrear o objeto para ajuste automático, com base em torno de alterações no documento.</span><span class="sxs-lookup"><span data-stu-id="86272-359">Track the object for automatic adjustment based on surrounding changes in the document.</span></span> <span data-ttu-id="86272-360">Essa chamada é uma forma abreviada de context.trackedObjects.add(thisObject).</span><span class="sxs-lookup"><span data-stu-id="86272-360">This call is a shorthand for context.trackedObjects.add(thisObject).</span></span> <span data-ttu-id="86272-361">Se você estiver usando este objeto nas chamadas ". Sync" e fora a execução sequencial de um lote de ".run" e get um erro "InvalidObjectPath" ao definir uma propriedade ou um método no objeto de invocação, você precisava adicionou o objeto ao objeto controlado coleção quando o objeto foi criado pela primeira vez.</span><span class="sxs-lookup"><span data-stu-id="86272-361">If you are using this object across ".sync" calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you needed to have added the object to the tracked object collection when the object was first created.</span></span>
  name: track()
  fullName: track
  langs:
  - typeScript
  type: method
  syntax:
    content: 'track(): Word.Paragraph;'
    return:
      type:
      - Word.Paragraph
      description: ''
- uid: word.Word.Paragraph.untrack
  summary: <span data-ttu-id="86272-362">Versão a memória associada a este objeto, se tiver sido rastreado anteriormente.</span><span class="sxs-lookup"><span data-stu-id="86272-362">Release the memory associated with this object, if it has previously been tracked.</span></span> <span data-ttu-id="86272-363">Essa chamada é um atalho para context.trackedObjects.remove(thisObject).</span><span class="sxs-lookup"><span data-stu-id="86272-363">This call is shorthand for context.trackedObjects.remove(thisObject).</span></span> <span data-ttu-id="86272-364">Ter vários objetos controlados fica mais lenta do aplicativo host, portanto Lembre-se liberar todos os objetos adicionar, depois que terminar usá-los.</span><span class="sxs-lookup"><span data-stu-id="86272-364">Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them.</span></span> <span data-ttu-id="86272-365">Você precisará chamar "context.sync()" antes do lançamento de memória entrará em vigor.</span><span class="sxs-lookup"><span data-stu-id="86272-365">You will need to call "context.sync()" before the memory release takes effect.</span></span>
  name: untrack()
  fullName: untrack
  langs:
  - typeScript
  type: method
  syntax:
    content: 'untrack(): Word.Paragraph;'
    return:
      type:
      - Word.Paragraph
      description: ''
