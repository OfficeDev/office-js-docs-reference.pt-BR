### YamlMime:UniversalReference
ms.openlocfilehash: 327229d2815ba83580a34969a12f22ac1e6fd417
ms.sourcegitcommit: d356f1545c328d4b59ce814fcab8191e4231f1dc
ms.translationtype: MT
ms.contentlocale: pt-BR
ms.lasthandoff: 02/13/2019
ms.locfileid: "29980279"
items:
- uid: word.Word.Paragraph
  summary: >-
    <span data-ttu-id="30033-101">Representa um único parágrafo em uma seleção, intervalo, controle de conteúdo ou corpo do documento.</span><span class="sxs-lookup"><span data-stu-id="30033-101">Represents a single paragraph in a selection, range, content control, or document body.</span></span>


    <span data-ttu-id="30033-102">\[[Conjunto de APIs: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="30033-102">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: Word.Paragraph
  fullName: Word.Paragraph
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: word
  children:
  - word.Word.Paragraph.alignment
  - word.Word.Paragraph.attachToList
  - word.Word.Paragraph.clear
  - word.Word.Paragraph.contentControls
  - word.Word.Paragraph.context
  - word.Word.Paragraph.delete
  - word.Word.Paragraph.detachFromList
  - word.Word.Paragraph.firstLineIndent
  - word.Word.Paragraph.font
  - word.Word.Paragraph.getHtml
  - word.Word.Paragraph.getNext
  - word.Word.Paragraph.getNextOrNullObject
  - word.Word.Paragraph.getOoxml
  - word.Word.Paragraph.getPrevious
  - word.Word.Paragraph.getPreviousOrNullObject
  - word.Word.Paragraph.getRange
  - word.Word.Paragraph.getRange_1
  - word.Word.Paragraph.getTextRanges
  - word.Word.Paragraph.inlinePictures
  - word.Word.Paragraph.insertBreak
  - word.Word.Paragraph.insertBreak_1
  - word.Word.Paragraph.insertContentControl
  - word.Word.Paragraph.insertFileFromBase64
  - word.Word.Paragraph.insertFileFromBase64_1
  - word.Word.Paragraph.insertHtml
  - word.Word.Paragraph.insertHtml_1
  - word.Word.Paragraph.insertInlinePictureFromBase64
  - word.Word.Paragraph.insertInlinePictureFromBase64_1
  - word.Word.Paragraph.insertOoxml
  - word.Word.Paragraph.insertOoxml_1
  - word.Word.Paragraph.insertParagraph
  - word.Word.Paragraph.insertParagraph_1
  - word.Word.Paragraph.insertTable
  - word.Word.Paragraph.insertTable_1
  - word.Word.Paragraph.insertText
  - word.Word.Paragraph.insertText_1
  - word.Word.Paragraph.isLastParagraph
  - word.Word.Paragraph.isListItem
  - word.Word.Paragraph.leftIndent
  - word.Word.Paragraph.lineSpacing
  - word.Word.Paragraph.lineUnitAfter
  - word.Word.Paragraph.lineUnitBefore
  - word.Word.Paragraph.list
  - word.Word.Paragraph.listItem
  - word.Word.Paragraph.listItemOrNullObject
  - word.Word.Paragraph.listOrNullObject
  - word.Word.Paragraph.load
  - word.Word.Paragraph.load_1
  - word.Word.Paragraph.load_2
  - word.Word.Paragraph.outlineLevel
  - word.Word.Paragraph.parentBody
  - word.Word.Paragraph.parentContentControl
  - word.Word.Paragraph.parentContentControlOrNullObject
  - word.Word.Paragraph.parentTable
  - word.Word.Paragraph.parentTableCell
  - word.Word.Paragraph.parentTableCellOrNullObject
  - word.Word.Paragraph.parentTableOrNullObject
  - word.Word.Paragraph.rightIndent
  - word.Word.Paragraph.search
  - word.Word.Paragraph.select
  - word.Word.Paragraph.select_1
  - word.Word.Paragraph.set
  - word.Word.Paragraph.set_1
  - word.Word.Paragraph.spaceAfter
  - word.Word.Paragraph.spaceBefore
  - word.Word.Paragraph.split
  - word.Word.Paragraph.startNewList
  - word.Word.Paragraph.style
  - word.Word.Paragraph.styleBuiltIn
  - word.Word.Paragraph.tableNestingLevel
  - word.Word.Paragraph.text
  - word.Word.Paragraph.toJSON
  - word.Word.Paragraph.track
  - word.Word.Paragraph.untrack
- uid: word.Word.Paragraph.alignment
  summary: >-
    <span data-ttu-id="30033-103">Obtém ou define o alinhamento de um parágrafo.</span><span class="sxs-lookup"><span data-stu-id="30033-103">Gets or sets the alignment for a paragraph.</span></span> <span data-ttu-id="30033-104">O valor pode ser 'left', 'centered', 'right' ou 'justified'.</span><span class="sxs-lookup"><span data-stu-id="30033-104">The value can be 'left', 'centered', 'right', or 'justified'.</span></span>


    <span data-ttu-id="30033-105">\[[Conjunto de APIs: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="30033-105">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: alignment
  fullName: alignment
  langs:
  - typeScript
  type: property
  syntax:
    content: 'alignment: Word.Alignment | "Mixed" | "Unknown" | "Left" | "Centered" | "Right" | "Justified";'
    return:
      type:
      - Word.Alignment | "Mixed" | "Unknown" | "Left" | "Centered" | "Right" | "Justified"
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"30033-106\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"30033-106\">Examples</span></span>\n\n```typescript\nawait Word.run(async (context) => {\n    // Centers last paragraph alignment\n    context.document.body.paragraphs\n        .getLast().alignment = \"Centered\";\n\n    await context.sync();\n});\n```"
- uid: word.Word.Paragraph.attachToList
  summary: >-
    <span data-ttu-id="30033-p102">Permite que o parágrafo ingresse em uma lista existente no nível especificado. Falhará se o parágrafo não puder ingressar na lista ou se o parágrafo já for um item da lista.</span><span class="sxs-lookup"><span data-stu-id="30033-p102">Lets the paragraph join an existing list at the specified level. Fails if the paragraph cannot join the list or if the paragraph is already a list item.</span></span>


    <span data-ttu-id="30033-109">\[[Conjunto de APIs: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="30033-109">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: attachToList(listId, level)
  fullName: attachToList(listId, level)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'attachToList(listId: number, level: number): Word.List;'
    return:
      type:
      - word.Word.List
      description: ''
    parameters:
    - id: listId
      description: <span data-ttu-id="30033-p103">Obrigatório. A ID de uma lista existente.</span><span class="sxs-lookup"><span data-stu-id="30033-p103">Required. The ID of an existing list.</span></span>
      type:
      - number
    - id: level
      description: <span data-ttu-id="30033-p104">Obrigatório. O nível na lista.</span><span class="sxs-lookup"><span data-stu-id="30033-p104">Required. The level in the list.</span></span>
      type:
      - number
- uid: word.Word.Paragraph.clear
  summary: >-
    <span data-ttu-id="30033-p105">Limpa o conteúdo do objeto Paragraph. O usuário pode executar a operação de desfazer no conteúdo limpo.</span><span class="sxs-lookup"><span data-stu-id="30033-p105">Clears the contents of the paragraph object. The user can perform the undo operation on the cleared content.</span></span>


    <span data-ttu-id="30033-116">\[[Conjunto de APIs: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="30033-116">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: clear()
  fullName: clear()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'clear(): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"30033-117\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"30033-117\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the paragraphs collection.\n    var paragraphs = context.document.body.paragraphs;\n\n    // Queue a commmand to load the style property for all of the paragraphs.\n    context.load(paragraphs, 'style');\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n\n        // Queue a command to clear the contents of the first paragraph.\n        paragraphs.items[0].clear();\n\n        // Synchronize the document state by executing the queued commands,\n        // and return a promise to indicate task completion.\n        return context.sync().then(function () {\n            console.log('Cleared the contents of the first paragraph.');\n        });\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: word.Word.Paragraph.contentControls
  summary: >-
    <span data-ttu-id="30033-p106">Obtém a coleção de objetos de controle de conteúdo presentes no parágrafo. Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="30033-p106">Gets the collection of content control objects in the paragraph. Read-only.</span></span>


    <span data-ttu-id="30033-120">\[[Conjunto de APIs: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="30033-120">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: contentControls
  fullName: contentControls
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly contentControls: Word.ContentControlCollection;'
    return:
      type:
      - word.Word.ContentControlCollection
- uid: word.Word.Paragraph.context
  summary: <span data-ttu-id="30033-121">O contexto de solicitação associado ao objeto.</span><span class="sxs-lookup"><span data-stu-id="30033-121">The request context associated with the object.</span></span> <span data-ttu-id="30033-122">Esse procedimento fará processo do suplemento de processo do aplicativo host do Office.</span><span class="sxs-lookup"><span data-stu-id="30033-122">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: word.Word.Paragraph.delete
  summary: >-
    <span data-ttu-id="30033-123">Exclui o parágrafo e o respectivo conteúdo do documento.</span><span class="sxs-lookup"><span data-stu-id="30033-123">Deletes the paragraph and its content from the document.</span></span>


    <span data-ttu-id="30033-124">\[[Conjunto de APIs: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="30033-124">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: delete()
  fullName: delete()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'delete(): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"30033-125\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"30033-125\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the paragraphs collection.\n    var paragraphs = context.document.body.paragraphs;\n\n    // Queue a commmand to load the text property for all of the paragraphs.\n    context.load(paragraphs, 'text');\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n\n        // Queue a command to delete the first paragraph.\n        paragraphs.items[0].delete();\n\n        // Synchronize the document state by executing the queued commands,\n        // and return a promise to indicate task completion.\n        return context.sync().then(function () {\n            console.log('Deleted the first paragraph.');\n        });\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: word.Word.Paragraph.detachFromList
  summary: >-
    <span data-ttu-id="30033-126">Move este parágrafo para fora de sua lista, caso o parágrafo seja um item da lista.</span><span class="sxs-lookup"><span data-stu-id="30033-126">Moves this paragraph out of its list, if the paragraph is a list item.</span></span>


    <span data-ttu-id="30033-127">\[[Conjunto de APIs: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="30033-127">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: detachFromList()
  fullName: detachFromList()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'detachFromList(): void;'
    return:
      type:
      - void
      description: ''
- uid: word.Word.Paragraph.firstLineIndent
  summary: >-
    <span data-ttu-id="30033-p108">Retorna ou define o valor, em pontos, para um recuo deslocado ou da primeira linha. Usa um valor positivo para definir um recuo da primeira linha e um valor negativo para definir um recuo deslocado.</span><span class="sxs-lookup"><span data-stu-id="30033-p108">Gets or sets the value, in points, for a first line or hanging indent. Use a positive value to set a first-line indent, and use a negative value to set a hanging indent.</span></span>


    <span data-ttu-id="30033-130">\[[Conjunto de APIs: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="30033-130">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: firstLineIndent
  fullName: firstLineIndent
  langs:
  - typeScript
  type: property
  syntax:
    content: 'firstLineIndent: number;'
    return:
      type:
      - number
- uid: word.Word.Paragraph.font
  summary: >-
    <span data-ttu-id="30033-p109">Obtém o formato de texto do parágrafo. Use isto para obter e definir o nome, o tamanho e a cor da fonte, além de outras propriedades. Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="30033-p109">Gets the text format of the paragraph. Use this to get and set font name, size, color, and other properties. Read-only.</span></span>


    <span data-ttu-id="30033-134">\[[Conjunto de APIs: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="30033-134">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: font
  fullName: font
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly font: Word.Font;'
    return:
      type:
      - word.Word.Font
- uid: word.Word.Paragraph.getHtml
  summary: >-
    <span data-ttu-id="30033-135">Obtém uma representação de HTML do objeto paragraph.</span><span class="sxs-lookup"><span data-stu-id="30033-135">Gets an HTML representation of the paragraph object.</span></span> <span data-ttu-id="30033-136">Quando processada em uma página da web ou o Visualizador de HTML, a formatação será uma correspondência close, mas não é exata, para a formatação do documento.</span><span class="sxs-lookup"><span data-stu-id="30033-136">When rendered in a web page or HTML viewer, the formatting will be a close, but not exact, match for of the formatting of the document.</span></span> <span data-ttu-id="30033-137">Este método não retorna o HTML mesmo exato para o mesmo documento em diferentes plataformas (Windows, Mac, Word Online, etc.).</span><span class="sxs-lookup"><span data-stu-id="30033-137">This method does not return the exact same HTML for the same document on different platforms (Windows, Mac, Word Online, etc.).</span></span> <span data-ttu-id="30033-138">Se você precisa exact fidelidade ou consistência entre as plataformas, use `Paragraph.getOoxml()` e converter o XML retornado para HTML.</span><span class="sxs-lookup"><span data-stu-id="30033-138">If you need exact fidelity, or consistency across platforms, use `Paragraph.getOoxml()` and convert the returned XML to HTML.</span></span>


    <span data-ttu-id="30033-139">\[[Conjunto de APIs: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="30033-139">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: getHtml()
  fullName: getHtml()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getHtml(): OfficeExtension.ClientResult<string>;'
    return:
      type:
      - OfficeExtension.ClientResult<string>
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"30033-140\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"30033-140\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the paragraphs collection.\n    var paragraphs = context.document.body.paragraphs;\n\n    // Queue a commmand to load the style property for all of the paragraphs.\n    context.load(paragraphs, 'style');\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n\n        // Queue a a set of commands to get the HTML of the first paragraph.\n        var html = paragraphs.items[0].getHtml();\n\n        // Synchronize the document state by executing the queued commands,\n        // and return a promise to indicate task completion.\n        return context.sync().then(function () {\n            console.log('Paragraph HTML: ' + html.value);\n        });\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: word.Word.Paragraph.getNext
  summary: >-
    <span data-ttu-id="30033-p111">Obtém o próximo parágrafo. Gera uma exceção se o parágrafo é o último.</span><span class="sxs-lookup"><span data-stu-id="30033-p111">Gets the next paragraph. Throws if the paragraph is the last one.</span></span>


    <span data-ttu-id="30033-143">\[[Conjunto de APIs: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="30033-143">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: getNext()
  fullName: getNext()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getNext(): Word.Paragraph;'
    return:
      type:
      - Word.Paragraph
      description: ''
- uid: word.Word.Paragraph.getNextOrNullObject
  summary: >-
    <span data-ttu-id="30033-p112">Obtém o próximo parágrafo. Retorna um objeto nulo se o parágrafo é o último.</span><span class="sxs-lookup"><span data-stu-id="30033-p112">Gets the next paragraph. Returns a null object if the paragraph is the last one.</span></span>


    <span data-ttu-id="30033-146">\[[Conjunto de APIs: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="30033-146">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: getNextOrNullObject()
  fullName: getNextOrNullObject()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getNextOrNullObject(): Word.Paragraph;'
    return:
      type:
      - Word.Paragraph
      description: ''
- uid: word.Word.Paragraph.getOoxml
  summary: >-
    <span data-ttu-id="30033-147">Obtém a representação OOXML (Office Open XML) do objeto Paragraph.</span><span class="sxs-lookup"><span data-stu-id="30033-147">Gets the Office Open XML (OOXML) representation of the paragraph object.</span></span>


    <span data-ttu-id="30033-148">\[[Conjunto de APIs: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="30033-148">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: getOoxml()
  fullName: getOoxml()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getOoxml(): OfficeExtension.ClientResult<string>;'
    return:
      type:
      - OfficeExtension.ClientResult<string>
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"30033-149\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"30033-149\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the paragraphs collection.\n    var paragraphs = context.document.body.paragraphs;\n\n    // Queue a commmand to load the style property for the top 2 paragraphs.\n    context.load(paragraphs, {select: 'style', top: 2} );\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n\n        // Queue a a set of commands to get the OOXML of the first paragraph.\n        var ooxml = paragraphs.items[0].getOoxml();\n\n        // Synchronize the document state by executing the queued commands,\n        // and return a promise to indicate task completion.\n        return context.sync().then(function () {\n            console.log('Paragraph OOXML: ' + ooxml.value);\n        });\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: word.Word.Paragraph.getPrevious
  summary: >-
    <span data-ttu-id="30033-p113">Obtém o parágrafo anterior. Gera uma exceção se o parágrafo é o primeiro.</span><span class="sxs-lookup"><span data-stu-id="30033-p113">Gets the previous paragraph. Throws if the paragraph is the first one.</span></span>


    <span data-ttu-id="30033-152">\[[Conjunto de APIs: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="30033-152">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: getPrevious()
  fullName: getPrevious()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getPrevious(): Word.Paragraph;'
    return:
      type:
      - Word.Paragraph
      description: ''
- uid: word.Word.Paragraph.getPreviousOrNullObject
  summary: >-
    <span data-ttu-id="30033-p114">Obtém o parágrafo anterior. Retorna um objeto nulo se o parágrafo é o primeiro.</span><span class="sxs-lookup"><span data-stu-id="30033-p114">Gets the previous paragraph. Returns a null object if the paragraph is the first one.</span></span>


    <span data-ttu-id="30033-155">\[[Conjunto de APIs: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="30033-155">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: getPreviousOrNullObject()
  fullName: getPreviousOrNullObject()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getPreviousOrNullObject(): Word.Paragraph;'
    return:
      type:
      - Word.Paragraph
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"30033-156\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"30033-156\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the paragraphs collection.\n    var paragraphs = context.document.body.paragraphs;\n\n    // Queue a commmand to load the text property for all of the paragraphs.\n    context.load(paragraphs, 'text');\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n\n        // Queue commands to create a proxy object for the next-to-last paragraph.\n        var indexOfLastParagraph = paragraphs.items.length - 1;\n        var precedingParagraph = paragraphs.items[indexOfLastParagraph].getPreviousOrNullObject();\n\n        // Queue a command to load the text of the preceding paragraph.\n        context.load(precedingParagraph, 'text');\n\n        // Synchronize the document state by executing the queued commands,\n        // and return a promise to indicate task completion.\n        return context.sync().then(function () {\n            if (precedingParagraph.isNullObject) {\n                console.log('There are no paragraphs before the current one.');\n            } else {\n                console.log('The preceding paragraph is: ' + precedingParagraph.text);\n            }\n        });\n    });\n}).catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: word.Word.Paragraph.getRange
  summary: >-
    <span data-ttu-id="30033-157">Obtém o parágrafo inteiro, ou então, os pontos inicial ou final do parágrafo, como um intervalo.</span><span class="sxs-lookup"><span data-stu-id="30033-157">Gets the whole paragraph, or the starting or ending point of the paragraph, as a range.</span></span>


    <span data-ttu-id="30033-158">\[[Conjunto de APIs: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="30033-158">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: getRange(rangeLocation)
  fullName: getRange(rangeLocation)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getRange(rangeLocation?: Word.RangeLocation): Word.Range;'
    return:
      type:
      - Word.Range
      description: ''
    parameters:
    - id: rangeLocation
      description: <span data-ttu-id="30033-159">Opcional.</span><span class="sxs-lookup"><span data-stu-id="30033-159">Optional.</span></span> <span data-ttu-id="30033-160">A localização de intervalo pode ser 'Todo', 'Iniciar', 'End', 'Depois,' ou 'Conteúdo'.</span><span class="sxs-lookup"><span data-stu-id="30033-160">The range location can be 'Whole', 'Start', 'End', 'After', or 'Content'.</span></span>
      type:
      - word.Word.RangeLocation
- uid: word.Word.Paragraph.getRange_1
  summary: >-
    <span data-ttu-id="30033-161">Obtém o parágrafo inteiro, ou então, os pontos inicial ou final do parágrafo, como um intervalo.</span><span class="sxs-lookup"><span data-stu-id="30033-161">Gets the whole paragraph, or the starting or ending point of the paragraph, as a range.</span></span>


    <span data-ttu-id="30033-162">\[[Conjunto de APIs: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="30033-162">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: getRange(rangeLocationString)
  fullName: getRange(rangeLocationString)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getRange(rangeLocationString?: "Whole" | "Start" | "End" | "Before" | "After" | "Content"): Word.Range;'
    return:
      type:
      - Word.Range
      description: ''
    parameters:
    - id: rangeLocationString
      description: <span data-ttu-id="30033-163">Opcional.</span><span class="sxs-lookup"><span data-stu-id="30033-163">Optional.</span></span> <span data-ttu-id="30033-164">A localização de intervalo pode ser 'Todo', 'Iniciar', 'End', 'Depois,' ou 'Conteúdo'.</span><span class="sxs-lookup"><span data-stu-id="30033-164">The range location can be 'Whole', 'Start', 'End', 'After', or 'Content'.</span></span>
      type:
      - "\"Whole\" | \"Start\" | \"End\" | \"Before\" | \"After\" | \"Content\""
- uid: word.Word.Paragraph.getTextRanges
  summary: >-
    <span data-ttu-id="30033-165">Obtém os intervalos de texto no parágrafo usando marcas de pontuação e/ou outras marcas finais.</span><span class="sxs-lookup"><span data-stu-id="30033-165">Gets the text ranges in the paragraph by using punctuation marks and/or other ending marks.</span></span>


    <span data-ttu-id="30033-166">\[[Conjunto de APIs: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="30033-166">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: getTextRanges(endingMarks, trimSpacing)
  fullName: getTextRanges(endingMarks, trimSpacing)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getTextRanges(endingMarks: string[], trimSpacing?: boolean): Word.RangeCollection;'
    return:
      type:
      - word.Word.RangeCollection
      description: ''
    parameters:
    - id: endingMarks
      description: <span data-ttu-id="30033-p117">Obrigatório. As marcas de pontuação e/ou outras marcas finais como uma matriz de cadeias de caracteres.</span><span class="sxs-lookup"><span data-stu-id="30033-p117">Required. The punctuation marks and/or other ending marks as an array of strings.</span></span>
      type:
      - string[]
    - id: trimSpacing
      description: <span data-ttu-id="30033-169">Opcional.</span><span class="sxs-lookup"><span data-stu-id="30033-169">Optional.</span></span> <span data-ttu-id="30033-170">Indica se aparar caracteres espaçamento (espaços, guias, quebras de coluna e marcas de fim de parágrafo), do início e fim dos intervalos retornado na coleção de intervalo.</span><span class="sxs-lookup"><span data-stu-id="30033-170">Indicates whether to trim spacing characters (spaces, tabs, column breaks, and paragraph end marks) from the start and end of the ranges returned in the range collection.</span></span> <span data-ttu-id="30033-171">Padrão é false, que indica que os caracteres de espaçamento no início e fim dos intervalos estão incluídos na coleção range.</span><span class="sxs-lookup"><span data-stu-id="30033-171">Default is false which indicates that spacing characters at the start and end of the ranges are included in the range collection.</span></span>
      type:
      - boolean
- uid: word.Word.Paragraph.inlinePictures
  summary: >-
    <span data-ttu-id="30033-172">Obtém a coleção de objetos InlinePicture do parágrafo.</span><span class="sxs-lookup"><span data-stu-id="30033-172">Gets the collection of InlinePicture objects in the paragraph.</span></span> <span data-ttu-id="30033-173">A coleção não inclui imagens flutuantes.</span><span class="sxs-lookup"><span data-stu-id="30033-173">The collection does not include floating images.</span></span> <span data-ttu-id="30033-174">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="30033-174">Read-only.</span></span>


    <span data-ttu-id="30033-175">\[[Conjunto de APIs: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="30033-175">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: inlinePictures
  fullName: inlinePictures
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly inlinePictures: Word.InlinePictureCollection;'
    return:
      type:
      - word.Word.InlinePictureCollection
- uid: word.Word.Paragraph.insertBreak
  summary: >-
    <span data-ttu-id="30033-p120">Insere uma quebra no local especificado no documento principal. O valor de insertLocation pode ser 'Before' ou 'After'.</span><span class="sxs-lookup"><span data-stu-id="30033-p120">Inserts a break at the specified location in the main document. The insertLocation value can be 'Before' or 'After'.</span></span>


    <span data-ttu-id="30033-178">\[[Conjunto de APIs: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="30033-178">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: insertBreak(breakType, insertLocation)
  fullName: insertBreak(breakType, insertLocation)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertBreak(breakType: Word.BreakType, insertLocation: Word.InsertLocation): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"30033-179\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"30033-179\">Examples</span></span>\n\n```typescript\nWord.run(async (context) => {\n    context.document.body.paragraphs.getFirst().insertBreak(Word.BreakType.line, \"After\");\n\n    await context.sync();\n    console.log(\"success\");\n});\n```\n```typescript\nawait Word.run(async (context) => {\n    context.document.body.paragraphs.getFirst().insertBreak(Word.BreakType.page, \"After\");\n\n    await context.sync();\n    console.log(\"success\");\n});\n```"
    parameters:
    - id: breakType
      description: <span data-ttu-id="30033-p121">Obrigatória. O tipo de quebra a adicionar ao documento.</span><span class="sxs-lookup"><span data-stu-id="30033-p121">Required. The break type to add to the document.</span></span>
      type:
      - word.Word.BreakType
    - id: insertLocation
      description: <span data-ttu-id="30033-p122">Obrigatória. O valor pode ser 'Before' ou 'After'.</span><span class="sxs-lookup"><span data-stu-id="30033-p122">Required. The value can be 'Before' or 'After'.</span></span>
      type:
      - Word.InsertLocation
- uid: word.Word.Paragraph.insertBreak_1
  summary: >-
    <span data-ttu-id="30033-p123">Insere uma quebra no local especificado no documento principal. O valor de insertLocation pode ser 'Before' ou 'After'.</span><span class="sxs-lookup"><span data-stu-id="30033-p123">Inserts a break at the specified location in the main document. The insertLocation value can be 'Before' or 'After'.</span></span>


    <span data-ttu-id="30033-186">\[[Conjunto de APIs: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="30033-186">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: insertBreak(breakTypeString, insertLocation)
  fullName: insertBreak(breakTypeString, insertLocation)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertBreak(breakTypeString: "Page" | "Next" | "SectionNext" | "SectionContinuous" | "SectionEven" | "SectionOdd" | "Line", insertLocation: "Before" | "After" | "Start" | "End" | "Replace"): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"30033-187\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"30033-187\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the paragraphs collection.\n    var paragraphs = context.document.body.paragraphs;\n\n    // Queue a commmand to load the style property for the top 2 paragraphs.\n    // We never perform an empty load. We always must request a property.\n    context.load(paragraphs, {select: 'style', top: 2} );\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n\n        // Queue a command to get the first paragraph.\n        var paragraph = paragraphs.items[0];\n\n        // Queue a command to insert a page break after the first paragraph.\n        paragraph.insertBreak('page', 'After');\n\n        // Synchronize the document state by executing the queued commands,\n        // and return a promise to indicate task completion.\n        return context.sync().then(function () {\n            console.log('Inserted a page break after the paragraph.');\n        });\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: breakTypeString
      description: <span data-ttu-id="30033-p124">Obrigatória. O tipo de quebra a adicionar ao documento.</span><span class="sxs-lookup"><span data-stu-id="30033-p124">Required. The break type to add to the document.</span></span>
      type:
      - "\"Page\" | \"Next\" | \"SectionNext\" | \"SectionContinuous\" | \"SectionEven\" | \"SectionOdd\" | \"Line\""
    - id: insertLocation
      description: <span data-ttu-id="30033-p125">Obrigatória. O valor pode ser 'Before' ou 'After'.</span><span class="sxs-lookup"><span data-stu-id="30033-p125">Required. The value can be 'Before' or 'After'.</span></span>
      type:
      - "\"Before\" | \"After\" | \"Start\" | \"End\" | \"Replace\""
- uid: word.Word.Paragraph.insertContentControl
  summary: >-
    <span data-ttu-id="30033-192">Quebra o objeto Paragraph com um controle de conteúdo de rich text.</span><span class="sxs-lookup"><span data-stu-id="30033-192">Wraps the paragraph object with a rich text content control.</span></span>


    <span data-ttu-id="30033-193">\[[Conjunto de APIs: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="30033-193">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: insertContentControl()
  fullName: insertContentControl()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertContentControl(): Word.ContentControl;'
    return:
      type:
      - word.Word.ContentControl
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"30033-194\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"30033-194\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the paragraphs collection.\n    var paragraphs = context.document.body.paragraphs;\n\n    // Queue a commmand to load the style property for the top 2 paragraphs.\n    // We never perform an empty load. We always must request a property.\n    context.load(paragraphs, {select: 'style', top: 2} );\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n\n        // Queue a command to get the first paragraph.\n        var paragraph = paragraphs.items[0];\n\n        // Queue a command to wrap the first paragraph in a rich text content control.\n        paragraph.insertContentControl();\n\n        // Synchronize the document state by executing the queued commands,\n        // and return a promise to indicate task completion.\n        return context.sync().then(function () {\n            console.log('Wrapped the first paragraph in a content control.');\n        });\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: word.Word.Paragraph.insertFileFromBase64
  summary: >-
    <span data-ttu-id="30033-195">Insere um documento do parágrafo no local especificado.</span><span class="sxs-lookup"><span data-stu-id="30033-195">Inserts a document into the paragraph at the specified location.</span></span> <span data-ttu-id="30033-196">O valor de insertLocation pode ser 'Replace', 'Iniciar' ou 'End'.</span><span class="sxs-lookup"><span data-stu-id="30033-196">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>


    <span data-ttu-id="30033-197">\[[Conjunto de APIs: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="30033-197">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: insertFileFromBase64(base64File, insertLocation)
  fullName: insertFileFromBase64(base64File, insertLocation)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertFileFromBase64(base64File: string, insertLocation: Word.InsertLocation): Word.Range;'
    return:
      type:
      - Word.Range
      description: ''
    parameters:
    - id: base64File
      description: <span data-ttu-id="30033-p127">Obrigatório. O conteúdo em código de Base64 de um arquivo .docx.</span><span class="sxs-lookup"><span data-stu-id="30033-p127">Required. The base64 encoded content of a .docx file.</span></span>
      type:
      - string
    - id: insertLocation
      description: <span data-ttu-id="30033-p128">Obrigatório. O valor pode ser 'Replace', 'Start' ou 'End'.</span><span class="sxs-lookup"><span data-stu-id="30033-p128">Required. The value can be 'Replace', 'Start', or 'End'.</span></span>
      type:
      - Word.InsertLocation
- uid: word.Word.Paragraph.insertFileFromBase64_1
  summary: >-
    <span data-ttu-id="30033-202">Insere um documento do parágrafo no local especificado.</span><span class="sxs-lookup"><span data-stu-id="30033-202">Inserts a document into the paragraph at the specified location.</span></span> <span data-ttu-id="30033-203">O valor de insertLocation pode ser 'Replace', 'Iniciar' ou 'End'.</span><span class="sxs-lookup"><span data-stu-id="30033-203">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>


    <span data-ttu-id="30033-204">\[[Conjunto de APIs: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="30033-204">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: insertFileFromBase64(base64File, insertLocationString)
  fullName: insertFileFromBase64(base64File, insertLocationString)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertFileFromBase64(base64File: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
    return:
      type:
      - Word.Range
      description: ''
    parameters:
    - id: base64File
      description: <span data-ttu-id="30033-p130">Obrigatório. O conteúdo em código de Base64 de um arquivo .docx.</span><span class="sxs-lookup"><span data-stu-id="30033-p130">Required. The base64 encoded content of a .docx file.</span></span>
      type:
      - string
    - id: insertLocationString
      description: <span data-ttu-id="30033-p131">Obrigatório. O valor pode ser 'Replace', 'Start' ou 'End'.</span><span class="sxs-lookup"><span data-stu-id="30033-p131">Required. The value can be 'Replace', 'Start', or 'End'.</span></span>
      type:
      - "\"Before\" | \"After\" | \"Start\" | \"End\" | \"Replace\""
- uid: word.Word.Paragraph.insertHtml
  summary: >-
    <span data-ttu-id="30033-p132">Insere HTML no local especificado dentro do parágrafo. O valor de insertLocation pode ser 'Replace', 'Start' ou 'End'.</span><span class="sxs-lookup"><span data-stu-id="30033-p132">Inserts HTML into the paragraph at the specified location. The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>


    <span data-ttu-id="30033-211">\[[Conjunto de APIs: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="30033-211">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: insertHtml(html, insertLocation)
  fullName: insertHtml(html, insertLocation)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertHtml(html: string, insertLocation: Word.InsertLocation): Word.Range;'
    return:
      type:
      - Word.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"30033-212\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"30033-212\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the paragraphs collection.\n    var paragraphs = context.document.body.paragraphs;\n\n    // Queue a commmand to load the style property for the top 2 paragraphs.\n    // We never perform an empty load. We always must request a property.\n    context.load(paragraphs, {select: 'style', top: 2} );\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n\n        // Queue a command to get the first paragraph.\n        var paragraph = paragraphs.items[0];\n\n        // Queue a command to insert HTML content at the end of the first paragraph.\n        paragraph.insertHtml('<strong>Inserted HTML.</strong>', Word.InsertLocation.end);\n\n        // Synchronize the document state by executing the queued commands,\n        // and return a promise to indicate task completion.\n        return context.sync().then(function () {\n            console.log('Inserted HTML content at the end of the first paragraph.');\n        });\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: html
      description: <span data-ttu-id="30033-p133">Obrigatória. O HTML a inserir no parágrafo.</span><span class="sxs-lookup"><span data-stu-id="30033-p133">Required. The HTML to be inserted in the paragraph.</span></span>
      type:
      - string
    - id: insertLocation
      description: <span data-ttu-id="30033-p134">Obrigatório. O valor pode ser 'Replace', 'Start' ou 'End'.</span><span class="sxs-lookup"><span data-stu-id="30033-p134">Required. The value can be 'Replace', 'Start', or 'End'.</span></span>
      type:
      - Word.InsertLocation
- uid: word.Word.Paragraph.insertHtml_1
  summary: >-
    <span data-ttu-id="30033-p135">Insere HTML no local especificado dentro do parágrafo. O valor de insertLocation pode ser 'Replace', 'Start' ou 'End'.</span><span class="sxs-lookup"><span data-stu-id="30033-p135">Inserts HTML into the paragraph at the specified location. The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>


    <span data-ttu-id="30033-219">\[[Conjunto de APIs: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="30033-219">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: insertHtml(html, insertLocationString)
  fullName: insertHtml(html, insertLocationString)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertHtml(html: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
    return:
      type:
      - Word.Range
      description: ''
    parameters:
    - id: html
      description: <span data-ttu-id="30033-p136">Obrigatória. O HTML a inserir no parágrafo.</span><span class="sxs-lookup"><span data-stu-id="30033-p136">Required. The HTML to be inserted in the paragraph.</span></span>
      type:
      - string
    - id: insertLocationString
      description: <span data-ttu-id="30033-p137">Obrigatório. O valor pode ser 'Replace', 'Start' ou 'End'.</span><span class="sxs-lookup"><span data-stu-id="30033-p137">Required. The value can be 'Replace', 'Start', or 'End'.</span></span>
      type:
      - "\"Before\" | \"After\" | \"Start\" | \"End\" | \"Replace\""
- uid: word.Word.Paragraph.insertInlinePictureFromBase64
  summary: >-
    <span data-ttu-id="30033-p138">Insere uma imagem no local especificado dentro do parágrafo. O valor de insertLocation pode ser 'Replace', 'Start' ou 'End'.</span><span class="sxs-lookup"><span data-stu-id="30033-p138">Inserts a picture into the paragraph at the specified location. The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>


    <span data-ttu-id="30033-226">\[[Conjunto de APIs: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="30033-226">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: insertInlinePictureFromBase64(base64EncodedImage, insertLocation)
  fullName: insertInlinePictureFromBase64(base64EncodedImage, insertLocation)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertInlinePictureFromBase64(base64EncodedImage: string, insertLocation: Word.InsertLocation): Word.InlinePicture;'
    return:
      type:
      - word.Word.InlinePicture
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"30033-227\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"30033-227\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the paragraphs collection.\n    var paragraphs = context.document.body.paragraphs;\n\n    // Queue a commmand to load the style property for all of the paragraphs.\n    context.load(paragraphs, 'style');\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n\n        // Queue a command to get the first paragraph.\n        var paragraph = paragraphs.items[0];\n\n        var b64encodedImg = \"iVBORw0KGgoAAAANSUhEUgAAAB4AAAANCAIAAAAxEEnAAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAACFSURBVDhPtY1BEoQwDMP6/0+XgIMTBAeYoTqso9Rkx1zG+tNj1H94jgGzeNSjteO5vtQQuG2seO0av8LzGbe3anzRoJ4ybm/VeKEerAEbAUpW4aWQCmrGFWykRzGBCnYy2ha3oAIq2MloW9yCCqhgJ6NtcQsqoIKdjLbFLaiACnYyf2fODbrjZcXfr2F4AAAAAElFTkSuQmCC\";\n\n        // Queue a command to insert a base64 encoded image at the beginning of the first paragraph.\n        paragraph.insertInlinePictureFromBase64(b64encodedImg, Word.InsertLocation.start);\n\n        // Synchronize the document state by executing the queued commands,\n        // and return a promise to indicate task completion.\n        return context.sync().then(function () {\n            console.log('Added an image to the first paragraph.');\n        });\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: base64EncodedImage
      description: <span data-ttu-id="30033-p139">Obrigatório. A imagem em codificação de Base64 a inserir.</span><span class="sxs-lookup"><span data-stu-id="30033-p139">Required. The base64 encoded image to be inserted.</span></span>
      type:
      - string
    - id: insertLocation
      description: <span data-ttu-id="30033-p140">Obrigatório. O valor pode ser 'Replace', 'Start' ou 'End'.</span><span class="sxs-lookup"><span data-stu-id="30033-p140">Required. The value can be 'Replace', 'Start', or 'End'.</span></span>
      type:
      - Word.InsertLocation
- uid: word.Word.Paragraph.insertInlinePictureFromBase64_1
  summary: >-
    <span data-ttu-id="30033-p141">Insere uma imagem no local especificado dentro do parágrafo. O valor de insertLocation pode ser 'Replace', 'Start' ou 'End'.</span><span class="sxs-lookup"><span data-stu-id="30033-p141">Inserts a picture into the paragraph at the specified location. The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>


    <span data-ttu-id="30033-234">\[[Conjunto de APIs: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="30033-234">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: insertInlinePictureFromBase64(base64EncodedImage, insertLocationString)
  fullName: insertInlinePictureFromBase64(base64EncodedImage, insertLocationString)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertInlinePictureFromBase64(base64EncodedImage: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.InlinePicture;'
    return:
      type:
      - word.Word.InlinePicture
      description: ''
    parameters:
    - id: base64EncodedImage
      description: <span data-ttu-id="30033-p142">Obrigatório. A imagem em codificação de Base64 a inserir.</span><span class="sxs-lookup"><span data-stu-id="30033-p142">Required. The base64 encoded image to be inserted.</span></span>
      type:
      - string
    - id: insertLocationString
      description: <span data-ttu-id="30033-p143">Obrigatório. O valor pode ser 'Replace', 'Start' ou 'End'.</span><span class="sxs-lookup"><span data-stu-id="30033-p143">Required. The value can be 'Replace', 'Start', or 'End'.</span></span>
      type:
      - "\"Before\" | \"After\" | \"Start\" | \"End\" | \"Replace\""
- uid: word.Word.Paragraph.insertOoxml
  summary: >-
    <span data-ttu-id="30033-239">Insere OOXML do parágrafo no local especificado.</span><span class="sxs-lookup"><span data-stu-id="30033-239">Inserts OOXML into the paragraph at the specified location.</span></span> <span data-ttu-id="30033-240">O valor de insertLocation pode ser 'Replace', 'Iniciar' ou 'End'.</span><span class="sxs-lookup"><span data-stu-id="30033-240">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>


    <span data-ttu-id="30033-241">\[[Conjunto de APIs: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="30033-241">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: insertOoxml(ooxml, insertLocation)
  fullName: insertOoxml(ooxml, insertLocation)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertOoxml(ooxml: string, insertLocation: Word.InsertLocation): Word.Range;'
    return:
      type:
      - Word.Range
      description: ''
    parameters:
    - id: ooxml
      description: <span data-ttu-id="30033-p145">Obrigatório. O OOXML a inserir no parágrafo.</span><span class="sxs-lookup"><span data-stu-id="30033-p145">Required. The OOXML to be inserted in the paragraph.</span></span>
      type:
      - string
    - id: insertLocation
      description: <span data-ttu-id="30033-p146">Obrigatório. O valor pode ser 'Replace', 'Start' ou 'End'.</span><span class="sxs-lookup"><span data-stu-id="30033-p146">Required. The value can be 'Replace', 'Start', or 'End'.</span></span>
      type:
      - Word.InsertLocation
- uid: word.Word.Paragraph.insertOoxml_1
  summary: >-
    <span data-ttu-id="30033-246">Insere OOXML do parágrafo no local especificado.</span><span class="sxs-lookup"><span data-stu-id="30033-246">Inserts OOXML into the paragraph at the specified location.</span></span> <span data-ttu-id="30033-247">O valor de insertLocation pode ser 'Replace', 'Iniciar' ou 'End'.</span><span class="sxs-lookup"><span data-stu-id="30033-247">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>


    <span data-ttu-id="30033-248">\[[Conjunto de APIs: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="30033-248">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: insertOoxml(ooxml, insertLocationString)
  fullName: insertOoxml(ooxml, insertLocationString)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertOoxml(ooxml: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
    return:
      type:
      - Word.Range
      description: ''
    parameters:
    - id: ooxml
      description: <span data-ttu-id="30033-p148">Obrigatório. O OOXML a inserir no parágrafo.</span><span class="sxs-lookup"><span data-stu-id="30033-p148">Required. The OOXML to be inserted in the paragraph.</span></span>
      type:
      - string
    - id: insertLocationString
      description: <span data-ttu-id="30033-p149">Obrigatório. O valor pode ser 'Replace', 'Start' ou 'End'.</span><span class="sxs-lookup"><span data-stu-id="30033-p149">Required. The value can be 'Replace', 'Start', or 'End'.</span></span>
      type:
      - "\"Before\" | \"After\" | \"Start\" | \"End\" | \"Replace\""
- uid: word.Word.Paragraph.insertParagraph
  summary: >-
    <span data-ttu-id="30033-p150">Insere um parágrafo no local especificado. O valor de insertLocation pode ser 'Before' ou 'After'.</span><span class="sxs-lookup"><span data-stu-id="30033-p150">Inserts a paragraph at the specified location. The insertLocation value can be 'Before' or 'After'.</span></span>


    <span data-ttu-id="30033-255">\[[Conjunto de APIs: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="30033-255">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: insertParagraph(paragraphText, insertLocation)
  fullName: insertParagraph(paragraphText, insertLocation)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertParagraph(paragraphText: string, insertLocation: Word.InsertLocation): Word.Paragraph;'
    return:
      type:
      - Word.Paragraph
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"30033-256\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"30033-256\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the paragraphs collection.\n    var paragraphs = context.document.body.paragraphs;\n\n    // Queue a commmand to load the style property for the top 2 paragraphs.\n    // We never perform an empty load. We always must request a property.\n    context.load(paragraphs, {select: 'style', top: 2} );\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n\n        // Queue a command to get the first paragraph.\n        var paragraph = paragraphs.items[0];\n\n        // Queue a command to insert the paragraph after the current paragraph.\n        paragraph.insertParagraph('Content of a new paragraph', Word.InsertLocation.after);\n\n        // Synchronize the document state by executing the queued commands,\n        // and return a promise to indicate task completion.\n        return context.sync().then(function () {\n            console.log('Inserted a new paragraph at the end of the first paragraph.');\n        });\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```typescript\nawait Word.run(async (context) => {\n  // Second sentence, let's insert it as a paragraph after the previously inserted one.\n  let secondSentence = context.document.body.insertParagraph(\n    \"This is the first text with a custom style.\",\n    \"End\"\n  );\n  secondSentence.font.set({\n    bold: false,\n    italic: true,\n    name: \"Berlin Sans FB\",\n    color: \"blue\",\n    size: 30\n  });\n\n  await context.sync();\n});\n```"
    parameters:
    - id: paragraphText
      description: <span data-ttu-id="30033-p151">Obrigatória. O texto do parágrafo a ser inserido.</span><span class="sxs-lookup"><span data-stu-id="30033-p151">Required. The paragraph text to be inserted.</span></span>
      type:
      - string
    - id: insertLocation
      description: <span data-ttu-id="30033-p152">Obrigatória. O valor pode ser 'Before' ou 'After'.</span><span class="sxs-lookup"><span data-stu-id="30033-p152">Required. The value can be 'Before' or 'After'.</span></span>
      type:
      - Word.InsertLocation
- uid: word.Word.Paragraph.insertParagraph_1
  summary: >-
    <span data-ttu-id="30033-p153">Insere um parágrafo no local especificado. O valor de insertLocation pode ser 'Before' ou 'After'.</span><span class="sxs-lookup"><span data-stu-id="30033-p153">Inserts a paragraph at the specified location. The insertLocation value can be 'Before' or 'After'.</span></span>


    <span data-ttu-id="30033-263">\[[Conjunto de APIs: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="30033-263">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: insertParagraph(paragraphText, insertLocationString)
  fullName: insertParagraph(paragraphText, insertLocationString)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertParagraph(paragraphText: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Paragraph;'
    return:
      type:
      - Word.Paragraph
      description: ''
    parameters:
    - id: paragraphText
      description: <span data-ttu-id="30033-p154">Obrigatória. O texto do parágrafo a ser inserido.</span><span class="sxs-lookup"><span data-stu-id="30033-p154">Required. The paragraph text to be inserted.</span></span>
      type:
      - string
    - id: insertLocationString
      description: <span data-ttu-id="30033-p155">Obrigatória. O valor pode ser 'Before' ou 'After'.</span><span class="sxs-lookup"><span data-stu-id="30033-p155">Required. The value can be 'Before' or 'After'.</span></span>
      type:
      - "\"Before\" | \"After\" | \"Start\" | \"End\" | \"Replace\""
- uid: word.Word.Paragraph.insertTable
  summary: >-
    <span data-ttu-id="30033-p156">Insere uma tabela com a quantidade especificada de linhas e colunas. O valor de insertLocation pode ser 'Before' ou 'After'.</span><span class="sxs-lookup"><span data-stu-id="30033-p156">Inserts a table with the specified number of rows and columns. The insertLocation value can be 'Before' or 'After'.</span></span>


    <span data-ttu-id="30033-270">\[[Conjunto de APIs: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="30033-270">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: insertTable(rowCount, columnCount, insertLocation, values)
  fullName: insertTable(rowCount, columnCount, insertLocation, values)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertTable(rowCount: number, columnCount: number, insertLocation: Word.InsertLocation, values?: string[][]): Word.Table;'
    return:
      type:
      - Word.Table
      description: ''
    parameters:
    - id: rowCount
      description: <span data-ttu-id="30033-p157">Obrigatório. A quantidade de linhas na tabela.</span><span class="sxs-lookup"><span data-stu-id="30033-p157">Required. The number of rows in the table.</span></span>
      type:
      - number
    - id: columnCount
      description: <span data-ttu-id="30033-p158">Obrigatório. A quantidade de colunas na tabela.</span><span class="sxs-lookup"><span data-stu-id="30033-p158">Required. The number of columns in the table.</span></span>
      type:
      - number
    - id: insertLocation
      description: <span data-ttu-id="30033-p159">Obrigatória. O valor pode ser 'Before' ou 'After'.</span><span class="sxs-lookup"><span data-stu-id="30033-p159">Required. The value can be 'Before' or 'After'.</span></span>
      type:
      - Word.InsertLocation
    - id: values
      description: <span data-ttu-id="30033-277">Matriz 2D opcional.</span><span class="sxs-lookup"><span data-stu-id="30033-277">Optional 2D array.</span></span> <span data-ttu-id="30033-278">As células serão preenchidas se as cadeias de caracteres correspondentes estiverem especificadas na matriz.</span><span class="sxs-lookup"><span data-stu-id="30033-278">Cells are filled if the corresponding strings are specified in the array.</span></span>
      type:
      - string[][]
- uid: word.Word.Paragraph.insertTable_1
  summary: >-
    <span data-ttu-id="30033-p161">Insere uma tabela com a quantidade especificada de linhas e colunas. O valor de insertLocation pode ser 'Before' ou 'After'.</span><span class="sxs-lookup"><span data-stu-id="30033-p161">Inserts a table with the specified number of rows and columns. The insertLocation value can be 'Before' or 'After'.</span></span>


    <span data-ttu-id="30033-281">\[[Conjunto de APIs: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="30033-281">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: insertTable(rowCount, columnCount, insertLocationString, values)
  fullName: insertTable(rowCount, columnCount, insertLocationString, values)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertTable(rowCount: number, columnCount: number, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace", values?: string[][]): Word.Table;'
    return:
      type:
      - Word.Table
      description: ''
    parameters:
    - id: rowCount
      description: <span data-ttu-id="30033-p162">Obrigatório. A quantidade de linhas na tabela.</span><span class="sxs-lookup"><span data-stu-id="30033-p162">Required. The number of rows in the table.</span></span>
      type:
      - number
    - id: columnCount
      description: <span data-ttu-id="30033-p163">Obrigatório. A quantidade de colunas na tabela.</span><span class="sxs-lookup"><span data-stu-id="30033-p163">Required. The number of columns in the table.</span></span>
      type:
      - number
    - id: insertLocationString
      description: <span data-ttu-id="30033-p164">Obrigatória. O valor pode ser 'Before' ou 'After'.</span><span class="sxs-lookup"><span data-stu-id="30033-p164">Required. The value can be 'Before' or 'After'.</span></span>
      type:
      - "\"Before\" | \"After\" | \"Start\" | \"End\" | \"Replace\""
    - id: values
      description: <span data-ttu-id="30033-288">Matriz 2D opcional.</span><span class="sxs-lookup"><span data-stu-id="30033-288">Optional 2D array.</span></span> <span data-ttu-id="30033-289">As células serão preenchidas se as cadeias de caracteres correspondentes estiverem especificadas na matriz.</span><span class="sxs-lookup"><span data-stu-id="30033-289">Cells are filled if the corresponding strings are specified in the array.</span></span>
      type:
      - string[][]
- uid: word.Word.Paragraph.insertText
  summary: >-
    <span data-ttu-id="30033-p166">Insere texto no local especificado dentro do parágrafo. O valor de insertLocation pode ser 'Replace', 'Start' ou 'End'.</span><span class="sxs-lookup"><span data-stu-id="30033-p166">Inserts text into the paragraph at the specified location. The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>


    <span data-ttu-id="30033-292">\[[Conjunto de APIs: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="30033-292">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: insertText(text, insertLocation)
  fullName: insertText(text, insertLocation)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertText(text: string, insertLocation: Word.InsertLocation): Word.Range;'
    return:
      type:
      - Word.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"30033-293\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"30033-293\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the paragraphs collection.\n    var paragraphs = context.document.body.paragraphs;\n\n    // Queue a commmand to load the style property for the top 2 paragraphs.\n    // We never perform an empty load. We always must request a property.\n    context.load(paragraphs, {select: 'style', top: 2} );\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n\n        // Queue a command to get the first paragraph.\n        var paragraph = paragraphs.items[0];\n\n        // Queue a command to insert text into the end of the paragraph.\n        paragraph.insertText('New text inserted into the paragraph.', Word.InsertLocation.end);\n\n        // Synchronize the document state by executing the queued commands,\n        // and return a promise to indicate task completion.\n        return context.sync().then(function () {\n            console.log('Inserted text at the end of the first paragraph.');\n        });\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```typescript\nawait Word.run(async (context) => {\n    // Here we insert to replace text\n    let range = context.document.body.paragraphs\n        .getLast().insertText(\"Just replaced the last paragraph!\", \"Replace\");\n    range.font.highlightColor = \"black\";\n    range.font.color = \"white\";\n\n    await context.sync();\n});\n```"
    parameters:
    - id: text
      description: <span data-ttu-id="30033-p167">Obrigatória. Texto a inserir.</span><span class="sxs-lookup"><span data-stu-id="30033-p167">Required. Text to be inserted.</span></span>
      type:
      - string
    - id: insertLocation
      description: <span data-ttu-id="30033-p168">Obrigatório. O valor pode ser 'Replace', 'Start' ou 'End'.</span><span class="sxs-lookup"><span data-stu-id="30033-p168">Required. The value can be 'Replace', 'Start', or 'End'.</span></span>
      type:
      - Word.InsertLocation
- uid: word.Word.Paragraph.insertText_1
  summary: >-
    <span data-ttu-id="30033-p169">Insere texto no local especificado dentro do parágrafo. O valor de insertLocation pode ser 'Replace', 'Start' ou 'End'.</span><span class="sxs-lookup"><span data-stu-id="30033-p169">Inserts text into the paragraph at the specified location. The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>


    <span data-ttu-id="30033-300">\[[Conjunto de APIs: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="30033-300">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: insertText(text, insertLocationString)
  fullName: insertText(text, insertLocationString)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertText(text: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
    return:
      type:
      - Word.Range
      description: ''
    parameters:
    - id: text
      description: <span data-ttu-id="30033-p170">Obrigatória. Texto a inserir.</span><span class="sxs-lookup"><span data-stu-id="30033-p170">Required. Text to be inserted.</span></span>
      type:
      - string
    - id: insertLocationString
      description: <span data-ttu-id="30033-p171">Obrigatório. O valor pode ser 'Replace', 'Start' ou 'End'.</span><span class="sxs-lookup"><span data-stu-id="30033-p171">Required. The value can be 'Replace', 'Start', or 'End'.</span></span>
      type:
      - "\"Before\" | \"After\" | \"Start\" | \"End\" | \"Replace\""
- uid: word.Word.Paragraph.isLastParagraph
  summary: >-
    <span data-ttu-id="30033-p172">Indica que o parágrafo é o último dentro do corpo do pai. Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="30033-p172">Indicates the paragraph is the last one inside its parent body. Read-only.</span></span>


    <span data-ttu-id="30033-307">\[[Conjunto de APIs: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="30033-307">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: isLastParagraph
  fullName: isLastParagraph
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly isLastParagraph: boolean;'
    return:
      type:
      - boolean
- uid: word.Word.Paragraph.isListItem
  summary: >-
    <span data-ttu-id="30033-p173">Verifica se o parágrafo é um item da lista. Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="30033-p173">Checks whether the paragraph is a list item. Read-only.</span></span>


    <span data-ttu-id="30033-310">\[[Conjunto de APIs: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="30033-310">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: isListItem
  fullName: isListItem
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly isListItem: boolean;'
    return:
      type:
      - boolean
- uid: word.Word.Paragraph.leftIndent
  summary: >-
    <span data-ttu-id="30033-311">Obtém ou define o valor de recuo à esquerda, em pontos, para o parágrafo.</span><span class="sxs-lookup"><span data-stu-id="30033-311">Gets or sets the left indent value, in points, for the paragraph.</span></span>


    <span data-ttu-id="30033-312">\[[Conjunto de APIs: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="30033-312">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: leftIndent
  fullName: leftIndent
  langs:
  - typeScript
  type: property
  syntax:
    content: 'leftIndent: number;'
    return:
      type:
      - number
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"30033-313\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"30033-313\">Examples</span></span>\n\n```typescript\nawait Word.run(async (context) => {\n    // Indents the first paragraph\n    context.document.body.paragraphs.\n        getFirst().leftIndent = 75; //units = points\n\n    return context.sync();\n});\n```"
- uid: word.Word.Paragraph.lineSpacing
  summary: >-
    <span data-ttu-id="30033-p174">Obtém ou define o espaçamento entre linhas, em pontos, para o parágrafo especificado. Na interface do usuário do Word, esse valor é dividido por 12.</span><span class="sxs-lookup"><span data-stu-id="30033-p174">Gets or sets the line spacing, in points, for the specified paragraph. In the Word UI, this value is divided by 12.</span></span>


    <span data-ttu-id="30033-316">\[[Conjunto de APIs: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="30033-316">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: lineSpacing
  fullName: lineSpacing
  langs:
  - typeScript
  type: property
  syntax:
    content: 'lineSpacing: number;'
    return:
      type:
      - number
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"30033-317\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"30033-317\">Examples</span></span>\n\n```typescript\nawait Word.run(async (context) => {\n    // Adjusts line spacing \n    context.document.body.paragraphs\n        .getFirst().lineSpacing = 20;\n\n    await context.sync();\n});\n```"
- uid: word.Word.Paragraph.lineUnitAfter
  summary: >-
    <span data-ttu-id="30033-318">Obtém ou define a quantidade de espaçamento, nas linhas de grade, após o parágrafo.</span><span class="sxs-lookup"><span data-stu-id="30033-318">Gets or sets the amount of spacing, in grid lines, after the paragraph.</span></span>


    <span data-ttu-id="30033-319">\[[Conjunto de APIs: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="30033-319">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: lineUnitAfter
  fullName: lineUnitAfter
  langs:
  - typeScript
  type: property
  syntax:
    content: 'lineUnitAfter: number;'
    return:
      type:
      - number
- uid: word.Word.Paragraph.lineUnitBefore
  summary: >-
    <span data-ttu-id="30033-320">Obtém ou define a quantidade de espaçamento, em linhas de grade, antes do parágrafo.</span><span class="sxs-lookup"><span data-stu-id="30033-320">Gets or sets the amount of spacing, in grid lines, before the paragraph.</span></span>


    <span data-ttu-id="30033-321">\[[Conjunto de APIs: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="30033-321">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: lineUnitBefore
  fullName: lineUnitBefore
  langs:
  - typeScript
  type: property
  syntax:
    content: 'lineUnitBefore: number;'
    return:
      type:
      - number
- uid: word.Word.Paragraph.list
  summary: >-
    <span data-ttu-id="30033-p175">Obtém a lista à qual pertence esse parágrafo. Gera uma exceção se o parágrafo não está em uma lista. Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="30033-p175">Gets the List to which this paragraph belongs. Throws if the paragraph is not in a list. Read-only.</span></span>


    <span data-ttu-id="30033-325">\[[Conjunto de APIs: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="30033-325">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: list
  fullName: list
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly list: Word.List;'
    return:
      type:
      - word.Word.List
- uid: word.Word.Paragraph.listItem
  summary: >-
    <span data-ttu-id="30033-p176">Obtém o ListItem para o parágrafo. Gera uma exceção se o parágrafo não faz parte de uma lista. Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="30033-p176">Gets the ListItem for the paragraph. Throws if the paragraph is not part of a list. Read-only.</span></span>


    <span data-ttu-id="30033-329">\[[Conjunto de APIs: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="30033-329">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: listItem
  fullName: listItem
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly listItem: Word.ListItem;'
    return:
      type:
      - word.Word.ListItem
- uid: word.Word.Paragraph.listItemOrNullObject
  summary: >-
    <span data-ttu-id="30033-p177">Obtém o ListItem para o parágrafo. Retorna um objeto nulo se o parágrafo não fizer parte de uma lista. Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="30033-p177">Gets the ListItem for the paragraph. Returns a null object if the paragraph is not part of a list. Read-only.</span></span>


    <span data-ttu-id="30033-333">\[[Conjunto de APIs: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="30033-333">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: listItemOrNullObject
  fullName: listItemOrNullObject
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly listItemOrNullObject: Word.ListItem;'
    return:
      type:
      - word.Word.ListItem
- uid: word.Word.Paragraph.listOrNullObject
  summary: >-
    <span data-ttu-id="30033-p178">Obtém a lista à qual pertence esse parágrafo. Retorna um objeto nulo se o parágrafo não estiver em uma lista. Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="30033-p178">Gets the List to which this paragraph belongs. Returns a null object if the paragraph is not in a list. Read-only.</span></span>


    <span data-ttu-id="30033-337">\[[Conjunto de APIs: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="30033-337">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: listOrNullObject
  fullName: listOrNullObject
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly listOrNullObject: Word.List;'
    return:
      type:
      - word.Word.List
- uid: word.Word.Paragraph.load
  summary: <span data-ttu-id="30033-338">Filas de backup de um comando para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="30033-338">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="30033-339">Você deve chamar "context.sync()" antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="30033-339">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="30033-340">Além dessa assinatura, esse método tem as seguintes assinaturas:</span><span class="sxs-lookup"><span data-stu-id="30033-340">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="30033-341">`load(option?: string | string[]): Word.Paragraph`-Onde opção é uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades de carga.</span><span class="sxs-lookup"><span data-stu-id="30033-341">`load(option?: string | string[]): Word.Paragraph` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="30033-342">`load(option?: { select?: string; expand?: string; }): Word.Paragraph`-Onde option.select é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades para carregar e options.expand é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades de navegação para carregar.</span><span class="sxs-lookup"><span data-stu-id="30033-342">`load(option?: { select?: string; expand?: string; }): Word.Paragraph` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="30033-343">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.Paragraph`-Só está disponível em tipos de coleção.</span><span class="sxs-lookup"><span data-stu-id="30033-343">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.Paragraph` - Only available on collection types.</span></span> <span data-ttu-id="30033-344">Ele é semelhante à assinatura anterior.</span><span class="sxs-lookup"><span data-stu-id="30033-344">It is similar to the preceding signature.</span></span> <span data-ttu-id="30033-345">Option.Top Especifica o número máximo de itens que podem ser incluídos no resultado da coleção.</span><span class="sxs-lookup"><span data-stu-id="30033-345">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="30033-346">Option.Skip Especifica o número de itens que devem ser ignorados e não são incluídos no resultado.</span><span class="sxs-lookup"><span data-stu-id="30033-346">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="30033-347">Se option.top for especificado, o conjunto de resultados será iniciado depois de ignorar o número de itens especificado.</span><span class="sxs-lookup"><span data-stu-id="30033-347">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Word.Interfaces.ParagraphLoadOptions): Word.Paragraph;'
    return:
      type:
      - Word.Paragraph
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - Word.Interfaces.ParagraphLoadOptions
- uid: word.Word.Paragraph.load_1
  summary: <span data-ttu-id="30033-348">Filas de backup de um comando para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="30033-348">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="30033-349">Você deve chamar `context.sync()` antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="30033-349">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Word.Paragraph;'
    return:
      type:
      - Word.Paragraph
      description: ''
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="30033-350">Uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades de carga.</span><span class="sxs-lookup"><span data-stu-id="30033-350">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: word.Word.Paragraph.load_2
  summary: <span data-ttu-id="30033-351">Filas de backup de um comando para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="30033-351">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="30033-352">Você deve chamar `context.sync()` antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="30033-352">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Word.Paragraph;'
    return:
      type:
      - Word.Paragraph
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: <span data-ttu-id="30033-353">Onde propertyNamesAndPaths.select é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades para carregar e propertyNamesAndPaths.expand é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades de navegação para carregar.</span><span class="sxs-lookup"><span data-stu-id="30033-353">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>
      type:
      - '{ select?: string; expand?: string; }'
- uid: word.Word.Paragraph.outlineLevel
  summary: >-
    <span data-ttu-id="30033-354">Obtém ou define o nível de estrutura de tópicos para o parágrafo.</span><span class="sxs-lookup"><span data-stu-id="30033-354">Gets or sets the outline level for the paragraph.</span></span>


    <span data-ttu-id="30033-355">\[[Conjunto de APIs: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="30033-355">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: outlineLevel
  fullName: outlineLevel
  langs:
  - typeScript
  type: property
  syntax:
    content: 'outlineLevel: number;'
    return:
      type:
      - number
- uid: word.Word.Paragraph.parentBody
  summary: >-
    <span data-ttu-id="30033-p183">Obtém o corpo pai do parágrafo. Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="30033-p183">Gets the parent body of the paragraph. Read-only.</span></span>


    <span data-ttu-id="30033-358">\[[Conjunto de APIs: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="30033-358">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: parentBody
  fullName: parentBody
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly parentBody: Word.Body;'
    return:
      type:
      - Word.Body
- uid: word.Word.Paragraph.parentContentControl
  summary: >-
    <span data-ttu-id="30033-p184">Obtém o controle de conteúdo que inclui o parágrafo. Retorna uma exceção quando não há um controle de conteúdo pai. Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="30033-p184">Gets the content control that contains the paragraph. Throws if there isn't a parent content control. Read-only.</span></span>


    <span data-ttu-id="30033-362">\[[Conjunto de APIs: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="30033-362">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: parentContentControl
  fullName: parentContentControl
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly parentContentControl: Word.ContentControl;'
    return:
      type:
      - word.Word.ContentControl
- uid: word.Word.Paragraph.parentContentControlOrNullObject
  summary: >-
    <span data-ttu-id="30033-p185">Obtém o controle de conteúdo que inclui o parágrafo. Retorna um objeto nulo quando não há um controle de conteúdo pai. Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="30033-p185">Gets the content control that contains the paragraph. Returns a null object if there isn't a parent content control. Read-only.</span></span>


    <span data-ttu-id="30033-366">\[[Conjunto de APIs: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="30033-366">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: parentContentControlOrNullObject
  fullName: parentContentControlOrNullObject
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly parentContentControlOrNullObject: Word.ContentControl;'
    return:
      type:
      - word.Word.ContentControl
- uid: word.Word.Paragraph.parentTable
  summary: >-
    <span data-ttu-id="30033-p186">Obtém a tabela que contém o parágrafo. Gera uma exceção se não está contido em uma tabela. Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="30033-p186">Gets the table that contains the paragraph. Throws if it is not contained in a table. Read-only.</span></span>


    <span data-ttu-id="30033-370">\[[Conjunto de APIs: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="30033-370">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: parentTable
  fullName: parentTable
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly parentTable: Word.Table;'
    return:
      type:
      - Word.Table
- uid: word.Word.Paragraph.parentTableCell
  summary: >-
    <span data-ttu-id="30033-p187">Obtém a célula de tabela que contém o parágrafo. Gera uma exceção se não está contido em uma célula de tabela. Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="30033-p187">Gets the table cell that contains the paragraph. Throws if it is not contained in a table cell. Read-only.</span></span>


    <span data-ttu-id="30033-374">\[[Conjunto de APIs: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="30033-374">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: parentTableCell
  fullName: parentTableCell
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly parentTableCell: Word.TableCell;'
    return:
      type:
      - Word.TableCell
- uid: word.Word.Paragraph.parentTableCellOrNullObject
  summary: >-
    <span data-ttu-id="30033-p188">Obtém a célula de tabela que contém o parágrafo. Retorna um objeto nulo se não estiver contido em uma célula de tabela. Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="30033-p188">Gets the table cell that contains the paragraph. Returns a null object if it is not contained in a table cell. Read-only.</span></span>


    <span data-ttu-id="30033-378">\[[Conjunto de APIs: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="30033-378">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: parentTableCellOrNullObject
  fullName: parentTableCellOrNullObject
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly parentTableCellOrNullObject: Word.TableCell;'
    return:
      type:
      - Word.TableCell
- uid: word.Word.Paragraph.parentTableOrNullObject
  summary: >-
    <span data-ttu-id="30033-p189">Obtém a tabela que contém o parágrafo. Retorna um objeto nulo se não estiver contido em uma tabela. Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="30033-p189">Gets the table that contains the paragraph. Returns a null object if it is not contained in a table. Read-only.</span></span>


    <span data-ttu-id="30033-382">\[[Conjunto de APIs: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="30033-382">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: parentTableOrNullObject
  fullName: parentTableOrNullObject
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly parentTableOrNullObject: Word.Table;'
    return:
      type:
      - Word.Table
- uid: word.Word.Paragraph.rightIndent
  summary: >-
    <span data-ttu-id="30033-383">Obtém ou define o valor de recuo à direita, em pontos, para o parágrafo.</span><span class="sxs-lookup"><span data-stu-id="30033-383">Gets or sets the right indent value, in points, for the paragraph.</span></span>


    <span data-ttu-id="30033-384">\[[Conjunto de APIs: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="30033-384">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: rightIndent
  fullName: rightIndent
  langs:
  - typeScript
  type: property
  syntax:
    content: 'rightIndent: number;'
    return:
      type:
      - number
- uid: word.Word.Paragraph.search
  summary: >-
    <span data-ttu-id="30033-385">Executa uma pesquisa com o SearchOptions especificado no escopo do objeto paragraph.</span><span class="sxs-lookup"><span data-stu-id="30033-385">Performs a search with the specified SearchOptions on the scope of the paragraph object.</span></span> <span data-ttu-id="30033-386">Os resultados da pesquisa são uma coleção de objetos range.</span><span class="sxs-lookup"><span data-stu-id="30033-386">The search results are a collection of range objects.</span></span>


    <span data-ttu-id="30033-387">\[[Conjunto de APIs: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="30033-387">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: search(searchText, searchOptions)
  fullName: search(searchText, searchOptions)
  langs:
  - typeScript
  type: method
  syntax:
    content: >-
      search(searchText: string, searchOptions?: Word.SearchOptions | {
                  ignorePunct?: boolean;
                  ignoreSpace?: boolean;
                  matchCase?: boolean;
                  matchPrefix?: boolean;
                  matchSuffix?: boolean;
                  matchWholeWord?: boolean;
                  matchWildcards?: boolean;
              }): Word.RangeCollection;
    return:
      type:
      - word.Word.RangeCollection
      description: ''
    parameters:
    - id: searchText
      description: <span data-ttu-id="30033-p191">Obrigatória. O texto da pesquisa.</span><span class="sxs-lookup"><span data-stu-id="30033-p191">Required. The search text.</span></span>
      type:
      - string
    - id: searchOptions
      description: <span data-ttu-id="30033-p192">Opcional. Opções da pesquisa.</span><span class="sxs-lookup"><span data-stu-id="30033-p192">Optional. Options for the search.</span></span>
      type:
      - >-
        Word.SearchOptions | {
                    ignorePunct?: boolean;
                    ignoreSpace?: boolean;
                    matchCase?: boolean;
                    matchPrefix?: boolean;
                    matchSuffix?: boolean;
                    matchWholeWord?: boolean;
                    matchWildcards?: boolean;
                }
- uid: word.Word.Paragraph.select
  summary: >-
    <span data-ttu-id="30033-392">Seleciona e navega na interface do usuário do Word até o parágrafo.</span><span class="sxs-lookup"><span data-stu-id="30033-392">Selects and navigates the Word UI to the paragraph.</span></span>


    <span data-ttu-id="30033-393">\[[Conjunto de APIs: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="30033-393">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: select(selectionMode)
  fullName: select(selectionMode)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'select(selectionMode?: Word.SelectionMode): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"30033-394\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"30033-394\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the paragraphs collection.\n    var paragraphs = context.document.body.paragraphs;\n\n    // Queue a commmand to load the style property for all of the paragraphs.\n    context.load(paragraphs, 'style');\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n\n        // Queue a command to get the last paragraph a create a\n        // proxy paragraph object.\n        var paragraph = paragraphs.items[paragraphs.items.length - 1];\n\n        // Queue a command to select the paragraph. The Word UI will\n        // move to the selected paragraph.\n        paragraph.select();\n\n        // Synchronize the document state by executing the queued commands,\n        // and return a promise to indicate task completion.\n        return context.sync().then(function () {\n            console.log('Selected the last paragraph.');\n        });\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```typescript\nawait Word.run(async (context) => {\n    // If select is called, with no parameters it selects the object.\n    context.document.body.paragraphs.getLast().select();\n\n    await context.sync();\n});\n```\n```typescript\nawait Word.run(async (context) => {\n    //Select can be at the start or end of a range, this by definition moves the insertion point without selecting the range. \n    context.document.body.paragraphs.getLast().select(\"End\");\n\n    await context.sync();\n});\n```"
    parameters:
    - id: selectionMode
      description: <span data-ttu-id="30033-p193">Opcional.  O modo de seleção pode ser 'Select', 'Start' ou 'End'. 'Select' é o padrão.</span><span class="sxs-lookup"><span data-stu-id="30033-p193">Optional. The selection mode can be 'Select', 'Start', or 'End'. 'Select' is the default.</span></span>
      type:
      - Word.SelectionMode
- uid: word.Word.Paragraph.select_1
  summary: >-
    <span data-ttu-id="30033-398">Seleciona e navega na interface do usuário do Word até o parágrafo.</span><span class="sxs-lookup"><span data-stu-id="30033-398">Selects and navigates the Word UI to the paragraph.</span></span>


    <span data-ttu-id="30033-399">\[[Conjunto de APIs: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="30033-399">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: select(selectionModeString)
  fullName: select(selectionModeString)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'select(selectionModeString?: "Select" | "Start" | "End"): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: selectionModeString
      description: <span data-ttu-id="30033-p194">Opcional.  O modo de seleção pode ser 'Select', 'Start' ou 'End'. 'Select' é o padrão.</span><span class="sxs-lookup"><span data-stu-id="30033-p194">Optional. The selection mode can be 'Select', 'Start', or 'End'. 'Select' is the default.</span></span>
      type:
      - "\"Select\" | \"Start\" | \"End\""
- uid: word.Word.Paragraph.set
  summary: <span data-ttu-id="30033-403">Define várias propriedades de um objeto ao mesmo tempo.</span><span class="sxs-lookup"><span data-stu-id="30033-403">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="30033-404">Você pode passar um objeto sem formatação com as propriedades adequadas ou outro objeto API do mesmo tipo.</span><span class="sxs-lookup"><span data-stu-id="30033-404">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>
  remarks: >-
    <span data-ttu-id="30033-405">Esse método tem a seguinte assinatura adicional:</span><span class="sxs-lookup"><span data-stu-id="30033-405">This method has the following additional signature:</span></span>


    `set(properties: Word.Paragraph): void`

    #### <a name="examples"></a><span data-ttu-id="30033-406">Exemplos</span><span class="sxs-lookup"><span data-stu-id="30033-406">Examples</span></span>


    ```typescript

    await Word.run(async (context) => {
      const paragraph = context.document.body.paragraphs.getFirst();
      paragraph.set({
        leftIndent: 30,
        font: {
          bold: true,
          color: "red"
        }
      });

      await context.sync();
    });

    ```

    ```typescript

    await Word.run(async (context) => {
      const firstParagraph = context.document.body.paragraphs.getFirst();
      const secondParagraph = firstParagraph.getNext();
      firstParagraph.load("text, font/color, font/bold, leftIndent");

      await context.sync();

      secondParagraph.set(firstParagraph);

      await context.sync();
    });

    ```
  name: set(properties, options)
  fullName: set(properties, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Interfaces.ParagraphUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: <span data-ttu-id="30033-407">Um objeto de JavaScript com propriedades que são estruturadas isomorphically às propriedades do objeto no qual o método é chamado.</span><span class="sxs-lookup"><span data-stu-id="30033-407">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
      type:
      - Interfaces.ParagraphUpdateData
    - id: options
      description: <span data-ttu-id="30033-408">Fornece uma opção para suprimir erros se o objeto properties tenta definir todas as propriedades somente leitura.</span><span class="sxs-lookup"><span data-stu-id="30033-408">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
      type:
      - office.OfficeExtension.UpdateOptions
- uid: word.Word.Paragraph.set_1
  summary: <span data-ttu-id="30033-409">Define várias propriedades em um objeto ao mesmo tempo, com base em um objeto carregado existente.</span><span class="sxs-lookup"><span data-stu-id="30033-409">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>
  name: set(properties)
  fullName: set(properties)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Word.Paragraph): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: ''
      type:
      - Word.Paragraph
- uid: word.Word.Paragraph.spaceAfter
  summary: >-
    <span data-ttu-id="30033-410">Obtém ou define o espaçamento, em pontos, após o parágrafo.</span><span class="sxs-lookup"><span data-stu-id="30033-410">Gets or sets the spacing, in points, after the paragraph.</span></span>


    <span data-ttu-id="30033-411">\[[Conjunto de APIs: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="30033-411">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: spaceAfter
  fullName: spaceAfter
  langs:
  - typeScript
  type: property
  syntax:
    content: 'spaceAfter: number;'
    return:
      type:
      - number
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"30033-412\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"30033-412\">Examples</span></span>\n\n```typescript\nawait Word.run(async (context) => {\n    //Adjust space between paragraphs\n    context.document.body.paragraphs\n        .getFirst().spaceAfter = 20;\n\n    await context.sync();\n});\n```"
- uid: word.Word.Paragraph.spaceBefore
  summary: >-
    <span data-ttu-id="30033-413">Obtém ou define o espaçamento, em pontos, antes o parágrafo.</span><span class="sxs-lookup"><span data-stu-id="30033-413">Gets or sets the spacing, in points, before the paragraph.</span></span>


    <span data-ttu-id="30033-414">\[[Conjunto de APIs: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="30033-414">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: spaceBefore
  fullName: spaceBefore
  langs:
  - typeScript
  type: property
  syntax:
    content: 'spaceBefore: number;'
    return:
      type:
      - number
- uid: word.Word.Paragraph.split
  summary: >-
    <span data-ttu-id="30033-415">Divide o parágrafo em intervalos filho usando delimitadores.</span><span class="sxs-lookup"><span data-stu-id="30033-415">Splits the paragraph into child ranges by using delimiters.</span></span>


    <span data-ttu-id="30033-416">\[[Conjunto de APIs: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="30033-416">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: split(delimiters, trimDelimiters, trimSpacing)
  fullName: split(delimiters, trimDelimiters, trimSpacing)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'split(delimiters: string[], trimDelimiters?: boolean, trimSpacing?: boolean): Word.RangeCollection;'
    return:
      type:
      - word.Word.RangeCollection
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"30033-417\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"30033-417\">Examples</span></span>\n\n```typescript\nawait Word.run(async (context) => {\n    let paragraph = context.document.body.paragraphs.getFirst();\n    let words = paragraph.split(\n        [\" \"], true /* trimDelimiters*/, true /* trimSpaces */);\n    words.load(\"text\");\n\n    await context.sync();\n\n    for (let i = 0; i < words.items.length; i++) {\n        if (i >= 1) {\n            words.items[i - 1].font.highlightColor = \"#FFFFFF\";\n        }\n        words.items[i].font.highlightColor = \"#FFFF00\";\n\n        await context.sync();\n        await pause(200);\n    }\n});\n```"
    parameters:
    - id: delimiters
      description: <span data-ttu-id="30033-p196">Obrigatório. Os delimitadores como uma matriz de cadeias de caracteres.</span><span class="sxs-lookup"><span data-stu-id="30033-p196">Required. The delimiters as an array of strings.</span></span>
      type:
      - string[]
    - id: trimDelimiters
      description: <span data-ttu-id="30033-420">Opcional.</span><span class="sxs-lookup"><span data-stu-id="30033-420">Optional.</span></span> <span data-ttu-id="30033-421">Indica se aparar delimitadores dos intervalos da coleção range.</span><span class="sxs-lookup"><span data-stu-id="30033-421">Indicates whether to trim delimiters from the ranges in the range collection.</span></span> <span data-ttu-id="30033-422">Padrão é false, que indica se os delimitadores estão incluídos nos intervalos retornados na coleção de intervalo.</span><span class="sxs-lookup"><span data-stu-id="30033-422">Default is false which indicates that the delimiters are included in the ranges returned in the range collection.</span></span>
      type:
      - boolean
    - id: trimSpacing
      description: <span data-ttu-id="30033-423">Opcional.</span><span class="sxs-lookup"><span data-stu-id="30033-423">Optional.</span></span> <span data-ttu-id="30033-424">Indica se aparar caracteres espaçamento (espaços, guias, quebras de coluna e marcas de fim de parágrafo), do início e fim dos intervalos retornado na coleção de intervalo.</span><span class="sxs-lookup"><span data-stu-id="30033-424">Indicates whether to trim spacing characters (spaces, tabs, column breaks, and paragraph end marks) from the start and end of the ranges returned in the range collection.</span></span> <span data-ttu-id="30033-425">Padrão é false, que indica que os caracteres de espaçamento no início e fim dos intervalos estão incluídos na coleção range.</span><span class="sxs-lookup"><span data-stu-id="30033-425">Default is false which indicates that spacing characters at the start and end of the ranges are included in the range collection.</span></span>
      type:
      - boolean
- uid: word.Word.Paragraph.startNewList
  summary: >-
    <span data-ttu-id="30033-p199">Inicia uma nova lista com este parágrafo. Falhará se o parágrafo já for um item da lista.</span><span class="sxs-lookup"><span data-stu-id="30033-p199">Starts a new list with this paragraph. Fails if the paragraph is already a list item.</span></span>


    <span data-ttu-id="30033-428">\[[Conjunto de APIs: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="30033-428">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: startNewList()
  fullName: startNewList()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'startNewList(): Word.List;'
    return:
      type:
      - word.Word.List
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"30033-429\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"30033-429\">Examples</span></span>\n\n```typescript\n//This example starts a new list stating with the second paragraph.\nawait Word.run(async (context) => {\n    let paragraphs = context.document.body.paragraphs;\n    paragraphs.load(\"$none\"); //We need no properties.\n\n    await context.sync();\n\n    var list = paragraphs.items[1].startNewList(); //Indicates new list to be started in the second paragraph.\n    list.load(\"$none\"); //We need no properties.\n\n    await context.sync();\n\n    //To add new items to the list use start/end on the insert location parameter.\n    list.insertParagraph('New list item on top of the list', 'Start');\n    let paragraph = list.insertParagraph('New list item at the end of the list (4th level)', 'End');\n    paragraph.listItem.level = 4; //Sets up list level for the lsit item.\n    //To add paragraphs outside the list use before/after:\n    list.insertParagraph('New paragraph goes after (not part of the list)', 'After');\n\n    await context.sync();\n});\n```"
- uid: word.Word.Paragraph.style
  summary: >-
    <span data-ttu-id="30033-p200">Obtém ou define o nome do estilo do parágrafo. Use esta propriedade de estilos personalizados e nomes de estilo localizados. Para usar os estilos internos que são portáteis entre localidades, confira a propriedade "styleBuiltIn".</span><span class="sxs-lookup"><span data-stu-id="30033-p200">Gets or sets the style name for the paragraph. Use this property for custom styles and localized style names. To use the built-in styles that are portable between locales, see the "styleBuiltIn" property.</span></span>


    <span data-ttu-id="30033-433">\[[Conjunto de APIs: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="30033-433">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: style
  fullName: style
  langs:
  - typeScript
  type: property
  syntax:
    content: 'style: string;'
    return:
      type:
      - string
- uid: word.Word.Paragraph.styleBuiltIn
  summary: >-
    <span data-ttu-id="30033-p201">Obtém ou define o nome do estilo interno para o parágrafo. Use esta propriedade para estilos internos que são portáteis entre localidades. Para usar estilos personalizados ou nomes de estilo localizados, confira a propriedade "estilo".</span><span class="sxs-lookup"><span data-stu-id="30033-p201">Gets or sets the built-in style name for the paragraph. Use this property for built-in styles that are portable between locales. To use custom styles or localized style names, see the "style" property.</span></span>


    <span data-ttu-id="30033-437">\[[Conjunto de APIs: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="30033-437">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: styleBuiltIn
  fullName: styleBuiltIn
  langs:
  - typeScript
  type: property
  syntax:
    content: 'styleBuiltIn: Word.Style | "Other" | "Normal" | "Heading1" | "Heading2" | "Heading3" | "Heading4" | "Heading5" | "Heading6" | "Heading7" | "Heading8" | "Heading9" | "Toc1" | "Toc2" | "Toc3" | "Toc4" | "Toc5" | "Toc6" | "Toc7" | "Toc8" | "Toc9" | "FootnoteText" | "Header" | "Footer" | "Caption" | "FootnoteReference" | "EndnoteReference" | "EndnoteText" | "Title" | "Subtitle" | "Hyperlink" | "Strong" | "Emphasis" | "NoSpacing" | "ListParagraph" | "Quote" | "IntenseQuote" | "SubtleEmphasis" | "IntenseEmphasis" | "SubtleReference" | "IntenseReference" | "BookTitle" | "Bibliography" | "TocHeading" | "TableGrid" | "PlainTable1" | "PlainTable2" | "PlainTable3" | "PlainTable4" | "PlainTable5" | "TableGridLight" | "GridTable1Light" | "GridTable1Light_Accent1" | "GridTable1Light_Accent2" | "GridTable1Light_Accent3" | "GridTable1Light_Accent4" | "GridTable1Light_Accent5" | "GridTable1Light_Accent6" | "GridTable2" | "GridTable2_Accent1" | "GridTable2_Accent2" | "GridTable2_Accent3" | "GridTable2_Accent4" | "GridTable2_Accent5" | "GridTable2_Accent6" | "GridTable3" | "GridTable3_Accent1" | "GridTable3_Accent2" | "GridTable3_Accent3" | "GridTable3_Accent4" | "GridTable3_Accent5" | "GridTable3_Accent6" | "GridTable4" | "GridTable4_Accent1" | "GridTable4_Accent2" | "GridTable4_Accent3" | "GridTable4_Accent4" | "GridTable4_Accent5" | "GridTable4_Accent6" | "GridTable5Dark" | "GridTable5Dark_Accent1" | "GridTable5Dark_Accent2" | "GridTable5Dark_Accent3" | "GridTable5Dark_Accent4" | "GridTable5Dark_Accent5" | "GridTable5Dark_Accent6" | "GridTable6Colorful" | "GridTable6Colorful_Accent1" | "GridTable6Colorful_Accent2" | "GridTable6Colorful_Accent3" | "GridTable6Colorful_Accent4" | "GridTable6Colorful_Accent5" | "GridTable6Colorful_Accent6" | "GridTable7Colorful" | "GridTable7Colorful_Accent1" | "GridTable7Colorful_Accent2" | "GridTable7Colorful_Accent3" | "GridTable7Colorful_Accent4" | "GridTable7Colorful_Accent5" | "GridTable7Colorful_Accent6" | "ListTable1Light" | "ListTable1Light_Accent1" | "ListTable1Light_Accent2" | "ListTable1Light_Accent3" | "ListTable1Light_Accent4" | "ListTable1Light_Accent5" | "ListTable1Light_Accent6" | "ListTable2" | "ListTable2_Accent1" | "ListTable2_Accent2" | "ListTable2_Accent3" | "ListTable2_Accent4" | "ListTable2_Accent5" | "ListTable2_Accent6" | "ListTable3" | "ListTable3_Accent1" | "ListTable3_Accent2" | "ListTable3_Accent3" | "ListTable3_Accent4" | "ListTable3_Accent5" | "ListTable3_Accent6" | "ListTable4" | "ListTable4_Accent1" | "ListTable4_Accent2" | "ListTable4_Accent3" | "ListTable4_Accent4" | "ListTable4_Accent5" | "ListTable4_Accent6" | "ListTable5Dark" | "ListTable5Dark_Accent1" | "ListTable5Dark_Accent2" | "ListTable5Dark_Accent3" | "ListTable5Dark_Accent4" | "ListTable5Dark_Accent5" | "ListTable5Dark_Accent6" | "ListTable6Colorful" | "ListTable6Colorful_Accent1" | "ListTable6Colorful_Accent2" | "ListTable6Colorful_Accent3" | "ListTable6Colorful_Accent4" | "ListTable6Colorful_Accent5" | "ListTable6Colorful_Accent6" | "ListTable7Colorful" | "ListTable7Colorful_Accent1" | "ListTable7Colorful_Accent2" | "ListTable7Colorful_Accent3" | "ListTable7Colorful_Accent4" | "ListTable7Colorful_Accent5" | "ListTable7Colorful_Accent6";'
    return:
      type:
      - Word.Style | "Other" | "Normal" | "Heading1" | "Heading2" | "Heading3" | "Heading4" | "Heading5" | "Heading6" | "Heading7" | "Heading8" | "Heading9" | "Toc1" | "Toc2" | "Toc3" | "Toc4" | "Toc5" | "Toc6" | "Toc7" | "Toc8" | "Toc9" | "FootnoteText" | "Header" | "Footer" | "Caption" | "FootnoteReference" | "EndnoteReference" | "EndnoteText" | "Title" | "Subtitle" | "Hyperlink" | "Strong" | "Emphasis" | "NoSpacing" | "ListParagraph" | "Quote" | "IntenseQuote" | "SubtleEmphasis" | "IntenseEmphasis" | "SubtleReference" | "IntenseReference" | "BookTitle" | "Bibliography" | "TocHeading" | "TableGrid" | "PlainTable1" | "PlainTable2" | "PlainTable3" | "PlainTable4" | "PlainTable5" | "TableGridLight" | "GridTable1Light" | "GridTable1Light_Accent1" | "GridTable1Light_Accent2" | "GridTable1Light_Accent3" | "GridTable1Light_Accent4" | "GridTable1Light_Accent5" | "GridTable1Light_Accent6" | "GridTable2" | "GridTable2_Accent1" | "GridTable2_Accent2" | "GridTable2_Accent3" | "GridTable2_Accent4" | "GridTable2_Accent5" | "GridTable2_Accent6" | "GridTable3" | "GridTable3_Accent1" | "GridTable3_Accent2" | "GridTable3_Accent3" | "GridTable3_Accent4" | "GridTable3_Accent5" | "GridTable3_Accent6" | "GridTable4" | "GridTable4_Accent1" | "GridTable4_Accent2" | "GridTable4_Accent3" | "GridTable4_Accent4" | "GridTable4_Accent5" | "GridTable4_Accent6" | "GridTable5Dark" | "GridTable5Dark_Accent1" | "GridTable5Dark_Accent2" | "GridTable5Dark_Accent3" | "GridTable5Dark_Accent4" | "GridTable5Dark_Accent5" | "GridTable5Dark_Accent6" | "GridTable6Colorful" | "GridTable6Colorful_Accent1" | "GridTable6Colorful_Accent2" | "GridTable6Colorful_Accent3" | "GridTable6Colorful_Accent4" | "GridTable6Colorful_Accent5" | "GridTable6Colorful_Accent6" | "GridTable7Colorful" | "GridTable7Colorful_Accent1" | "GridTable7Colorful_Accent2" | "GridTable7Colorful_Accent3" | "GridTable7Colorful_Accent4" | "GridTable7Colorful_Accent5" | "GridTable7Colorful_Accent6" | "ListTable1Light" | "ListTable1Light_Accent1" | "ListTable1Light_Accent2" | "ListTable1Light_Accent3" | "ListTable1Light_Accent4" | "ListTable1Light_Accent5" | "ListTable1Light_Accent6" | "ListTable2" | "ListTable2_Accent1" | "ListTable2_Accent2" | "ListTable2_Accent3" | "ListTable2_Accent4" | "ListTable2_Accent5" | "ListTable2_Accent6" | "ListTable3" | "ListTable3_Accent1" | "ListTable3_Accent2" | "ListTable3_Accent3" | "ListTable3_Accent4" | "ListTable3_Accent5" | "ListTable3_Accent6" | "ListTable4" | "ListTable4_Accent1" | "ListTable4_Accent2" | "ListTable4_Accent3" | "ListTable4_Accent4" | "ListTable4_Accent5" | "ListTable4_Accent6" | "ListTable5Dark" | "ListTable5Dark_Accent1" | "ListTable5Dark_Accent2" | "ListTable5Dark_Accent3" | "ListTable5Dark_Accent4" | "ListTable5Dark_Accent5" | "ListTable5Dark_Accent6" | "ListTable6Colorful" | "ListTable6Colorful_Accent1" | "ListTable6Colorful_Accent2" | "ListTable6Colorful_Accent3" | "ListTable6Colorful_Accent4" | "ListTable6Colorful_Accent5" | "ListTable6Colorful_Accent6" | "ListTable7Colorful" | "ListTable7Colorful_Accent1" | "ListTable7Colorful_Accent2" | "ListTable7Colorful_Accent3" | "ListTable7Colorful_Accent4" | "ListTable7Colorful_Accent5" | "ListTable7Colorful_Accent6"
- uid: word.Word.Paragraph.tableNestingLevel
  summary: >-
    <span data-ttu-id="30033-p202">Obtém o nível da tabela do parágrafo. Retorna 0 se o parágrafo não estiver em uma tabela. Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="30033-p202">Gets the level of the paragraph's table. It returns 0 if the paragraph is not in a table. Read-only.</span></span>


    <span data-ttu-id="30033-441">\[[Conjunto de APIs: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="30033-441">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: tableNestingLevel
  fullName: tableNestingLevel
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly tableNestingLevel: number;'
    return:
      type:
      - number
- uid: word.Word.Paragraph.text
  summary: >-
    <span data-ttu-id="30033-p203">Obtém o texto do parágrafo. Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="30033-p203">Gets the text of the paragraph. Read-only.</span></span>


    <span data-ttu-id="30033-444">\[[Conjunto de APIs: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="30033-444">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: text
  fullName: text
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly text: string;'
    return:
      type:
      - string
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"30033-445\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"30033-445\">Examples</span></span>\n\n```typescript\nawait Word.run(async (context) => {\n    // The collection of paragraphs of the current selection returns the full paragraphs contanied on it. \n    let paragraph = context.document.getSelection().paragraphs.getFirst();\n    paragraph.load(\"text\");\n\n    await context.sync();\n    console.log(paragraph.text);\n});\n```"
- uid: word.Word.Paragraph.toJSON
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Word.Interfaces.ParagraphData;'
    return:
      type:
      - Word.Interfaces.ParagraphData
      description: ''
- uid: word.Word.Paragraph.track
  summary: <span data-ttu-id="30033-446">Rastrear o objeto para ajuste automático, com base em torno de alterações no documento.</span><span class="sxs-lookup"><span data-stu-id="30033-446">Track the object for automatic adjustment based on surrounding changes in the document.</span></span> <span data-ttu-id="30033-447">Essa chamada é uma forma abreviada de context.trackedObjects.add(thisObject).</span><span class="sxs-lookup"><span data-stu-id="30033-447">This call is a shorthand for context.trackedObjects.add(thisObject).</span></span> <span data-ttu-id="30033-448">Se você estiver usando este objeto nas chamadas ". Sync" e fora a execução sequencial de um lote de ".run" e get um erro "InvalidObjectPath" ao definir uma propriedade ou um método no objeto de invocação, você precisava adicionou o objeto ao objeto controlado coleção quando o objeto foi criado pela primeira vez.</span><span class="sxs-lookup"><span data-stu-id="30033-448">If you are using this object across ".sync" calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you needed to have added the object to the tracked object collection when the object was first created.</span></span>
  name: track()
  fullName: track()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'track(): Word.Paragraph;'
    return:
      type:
      - Word.Paragraph
      description: ''
- uid: word.Word.Paragraph.untrack
  summary: <span data-ttu-id="30033-449">Versão a memória associada a este objeto, se tiver sido rastreado anteriormente.</span><span class="sxs-lookup"><span data-stu-id="30033-449">Release the memory associated with this object, if it has previously been tracked.</span></span> <span data-ttu-id="30033-450">Essa chamada é um atalho para context.trackedObjects.remove(thisObject).</span><span class="sxs-lookup"><span data-stu-id="30033-450">This call is shorthand for context.trackedObjects.remove(thisObject).</span></span> <span data-ttu-id="30033-451">Ter vários objetos controlados fica mais lenta do aplicativo host, portanto Lembre-se liberar todos os objetos adicionar, depois que terminar usá-los.</span><span class="sxs-lookup"><span data-stu-id="30033-451">Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them.</span></span> <span data-ttu-id="30033-452">Você precisará chamar "context.sync()" antes do lançamento de memória entrará em vigor.</span><span class="sxs-lookup"><span data-stu-id="30033-452">You will need to call "context.sync()" before the memory release takes effect.</span></span>
  name: untrack()
  fullName: untrack()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'untrack(): Word.Paragraph;'
    return:
      type:
      - Word.Paragraph
      description: ''
