### YamlMime:UniversalReference
ms.openlocfilehash: 990db0af48c256761dd985fbbd1137741ae560a0
ms.sourcegitcommit: d356f1545c328d4b59ce814fcab8191e4231f1dc
ms.translationtype: MT
ms.contentlocale: pt-BR
ms.lasthandoff: 02/13/2019
ms.locfileid: "29977801"
items:
- uid: word.Word.ContentControlCollection
  summary: >-
    <span data-ttu-id="1cc52-101">Contém uma coleção de objetos [Word.ContentControl](xref:word.Word.ContentControl) .</span><span class="sxs-lookup"><span data-stu-id="1cc52-101">Contains a collection of [Word.ContentControl](xref:word.Word.ContentControl) objects.</span></span> <span data-ttu-id="1cc52-102">Os controles de conteúdo são regiões associadas e potencialmente rotuladas em um documento que servem como contêineres para tipos específicos de conteúdo.</span><span class="sxs-lookup"><span data-stu-id="1cc52-102">Content controls are bounded and potentially labeled regions in a document that serve as containers for specific types of content.</span></span> <span data-ttu-id="1cc52-103">Controles de conteúdo individuais podem conter conteúdo, como imagens, tabelas ou parágrafos de texto formatado.</span><span class="sxs-lookup"><span data-stu-id="1cc52-103">Individual content controls may contain contents such as images, tables, or paragraphs of formatted text.</span></span> <span data-ttu-id="1cc52-104">Atualmente, somente controles de conteúdo rich text são suportados.</span><span class="sxs-lookup"><span data-stu-id="1cc52-104">Currently, only rich text content controls are supported.</span></span>


    <span data-ttu-id="1cc52-105">\[[Conjunto de APIs: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1cc52-105">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: Word.ContentControlCollection
  fullName: Word.ContentControlCollection
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: word
  children:
  - word.Word.ContentControlCollection.context
  - word.Word.ContentControlCollection.getById
  - word.Word.ContentControlCollection.getByIdOrNullObject
  - word.Word.ContentControlCollection.getByTag
  - word.Word.ContentControlCollection.getByTitle
  - word.Word.ContentControlCollection.getByTypes
  - word.Word.ContentControlCollection.getFirst
  - word.Word.ContentControlCollection.getFirstOrNullObject
  - word.Word.ContentControlCollection.getItem
  - word.Word.ContentControlCollection.items
  - word.Word.ContentControlCollection.load
  - word.Word.ContentControlCollection.load_1
  - word.Word.ContentControlCollection.load_2
  - word.Word.ContentControlCollection.toJSON
  - word.Word.ContentControlCollection.track
  - word.Word.ContentControlCollection.untrack
- uid: word.Word.ContentControlCollection.context
  summary: <span data-ttu-id="1cc52-106">O contexto de solicitação associado ao objeto.</span><span class="sxs-lookup"><span data-stu-id="1cc52-106">The request context associated with the object.</span></span> <span data-ttu-id="1cc52-107">Esse procedimento fará processo do suplemento de processo do aplicativo host do Office.</span><span class="sxs-lookup"><span data-stu-id="1cc52-107">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: word.Word.ContentControlCollection.getById
  summary: >-
    <span data-ttu-id="1cc52-p103">Obtém um controle de conteúdo pelo respectivo identificador. Gera uma se não há um controle de conteúdo com o identificador nesta coleção.</span><span class="sxs-lookup"><span data-stu-id="1cc52-p103">Gets a content control by its identifier. Throws if there isn't a content control with the identifier in this collection.</span></span>


    <span data-ttu-id="1cc52-110">\[[Conjunto de APIs: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1cc52-110">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: getById(id)
  fullName: getById(id)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getById(id: number): Word.ContentControl;'
    return:
      type:
      - word.Word.ContentControl
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"1cc52-111\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"1cc52-111\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the content control that contains a specific id.\n    var contentControl = context.document.contentControls.getById(30086310);\n\n    // Queue a command to load the text property for a content control.\n    context.load(contentControl, 'text');\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log('The content control with that Id has been found in this document.');\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the content control that contains a specific id.\n    var contentControl = context.document.contentControls.getByIdOrNullObject(30086310);\n\n    // Queue a command to load the text property for a content control.\n    context.load(contentControl, 'text');\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        if (contentControl.isNullObject) {\n            console.log('There is no content control with that ID.')\n        } else {\n            console.log('The content control with that ID has been found in this document.');\n        }\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: id
      description: <span data-ttu-id="1cc52-p104">Obrigatória. Um identificador de controle de conteúdo.</span><span class="sxs-lookup"><span data-stu-id="1cc52-p104">Required. A content control identifier.</span></span>
      type:
      - number
- uid: word.Word.ContentControlCollection.getByIdOrNullObject
  summary: >-
    <span data-ttu-id="1cc52-p105">Obtém um controle de conteúdo pelo respectivo identificador. Retorna um objeto nulo se não há um controle de conteúdo com o identificador neste conjunto.</span><span class="sxs-lookup"><span data-stu-id="1cc52-p105">Gets a content control by its identifier. Returns a null object if there isn't a content control with the identifier in this collection.</span></span>


    <span data-ttu-id="1cc52-116">\[[Conjunto de APIs: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1cc52-116">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: getByIdOrNullObject(id)
  fullName: getByIdOrNullObject(id)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getByIdOrNullObject(id: number): Word.ContentControl;'
    return:
      type:
      - word.Word.ContentControl
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"1cc52-117\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"1cc52-117\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the content control that contains a specific id.\n    var contentControl = context.document.contentControls.getByIdOrNullObject(30086310);\n\n    // Queue a command to load the text property for a content control.\n    context.load(contentControl, 'text');\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        if (contentControl.isNullObject) {\n            console.log('There is no content control with that ID.')\n        } else {\n            console.log('The content control with that ID has been found in this document.');\n        }\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: id
      description: <span data-ttu-id="1cc52-p106">Obrigatória. Um identificador de controle de conteúdo.</span><span class="sxs-lookup"><span data-stu-id="1cc52-p106">Required. A content control identifier.</span></span>
      type:
      - number
- uid: word.Word.ContentControlCollection.getByTag
  summary: >-
    <span data-ttu-id="1cc52-120">Obtém os controles de conteúdo com a marca especificada.</span><span class="sxs-lookup"><span data-stu-id="1cc52-120">Gets the content controls that have the specified tag.</span></span>


    <span data-ttu-id="1cc52-121">\[[Conjunto de APIs: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1cc52-121">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: getByTag(tag)
  fullName: getByTag(tag)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getByTag(tag: string): Word.ContentControlCollection;'
    return:
      type:
      - word.Word.ContentControlCollection
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"1cc52-122\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"1cc52-122\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the content controls collection that contains a specific tag.\n    var contentControlsWithTag = context.document.contentControls.getByTag('Customer-Address');\n\n    // Queue a command to load the text property for all of content controls with a specific tag.\n    context.load(contentControlsWithTag, 'text');\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        if (contentControlsWithTag.items.length === 0) {\n            console.log(\"There isn't a content control with a tag of Customer-Address in this document.\");\n        } else {\n            console.log(\n                'The first content control with the tag of Customer-Address has this text: ' + \n                contentControlsWithTag.items[0].text);\n        }\n\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n\n// The Word-Add-in-DocumentAssembly sample has another example of using the getByTag method.\n// https://github.com/OfficeDev/Word-Add-in-DocumentAssembly\n```\n```typescript\nawait Word.run(async (context) => {\n    let contentControls = context.document.contentControls.getByTag(\"customer\");\n    contentControls.load(\"text\");\n\n    await context.sync();\n\n    for (let i = 0; i < contentControls.items.length; i++) {\n      contentControls.items[i].insertText(\"Fabrikam\", \"Replace\");\n    }\n\n    await context.sync();\n});\n```"
    parameters:
    - id: tag
      description: <span data-ttu-id="1cc52-p107">Obrigatória. Uma marca definida em um controle de conteúdo.</span><span class="sxs-lookup"><span data-stu-id="1cc52-p107">Required. A tag set on a content control.</span></span>
      type:
      - string
- uid: word.Word.ContentControlCollection.getByTitle
  summary: >-
    <span data-ttu-id="1cc52-125">Obtém os controles de conteúdo com o título especificado.</span><span class="sxs-lookup"><span data-stu-id="1cc52-125">Gets the content controls that have the specified title.</span></span>


    <span data-ttu-id="1cc52-126">\[[Conjunto de APIs: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1cc52-126">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: getByTitle(title)
  fullName: getByTitle(title)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getByTitle(title: string): Word.ContentControlCollection;'
    return:
      type:
      - word.Word.ContentControlCollection
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"1cc52-127\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"1cc52-127\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the content controls collection that contains a specific title.\n    var contentControlsWithTitle = context.document.contentControls.getByTitle('Enter Customer Address Here');\n\n    // Queue a command to load the text property for all of content controls with a specific title.\n    context.load(contentControlsWithTitle, 'text');\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        if (contentControlsWithTitle.items.length === 0) {\n            console.log(\n                \"There isn't a content control with a title of 'Enter Customer Address Here' in this document.\");\n        } else {\n            console.log(\n                \"The first content control with the title of 'Enter Customer Address Here' has this text: \" + \n                contentControlsWithTitle.items[0].text);\n        }\n\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n\n// The Word-Add-in-DocumentAssembly sample has another example of using the getByTitle method.\n// https://github.com/OfficeDev/Word-Add-in-DocumentAssembly\n```"
    parameters:
    - id: title
      description: <span data-ttu-id="1cc52-p108">Obrigatória. O título de um controle de conteúdo.</span><span class="sxs-lookup"><span data-stu-id="1cc52-p108">Required. The title of a content control.</span></span>
      type:
      - string
- uid: word.Word.ContentControlCollection.getByTypes
  summary: >-
    <span data-ttu-id="1cc52-130">Obtém os controles de conteúdo que possuem a tipos especificados e/ou subtipos.</span><span class="sxs-lookup"><span data-stu-id="1cc52-130">Gets the content controls that have the specified types and/or subtypes.</span></span>


    <span data-ttu-id="1cc52-131">\[[Conjunto de APIs: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1cc52-131">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: getByTypes(types)
  fullName: getByTypes(types)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getByTypes(types: Word.ContentControlType[]): Word.ContentControlCollection;'
    return:
      type:
      - word.Word.ContentControlCollection
      description: ''
    parameters:
    - id: types
      description: <span data-ttu-id="1cc52-p109">Obrigatório. Uma matriz de tipos e/ou subtipos de controle de conteúdo.</span><span class="sxs-lookup"><span data-stu-id="1cc52-p109">Required. An array of content control types and/or subtypes.</span></span>
      type:
      - Word.ContentControlType[]
- uid: word.Word.ContentControlCollection.getFirst
  summary: >-
    <span data-ttu-id="1cc52-p110">Obtém o primeiro controle de conteúdo nesta coleção. Gera se esta coleção está vazia.</span><span class="sxs-lookup"><span data-stu-id="1cc52-p110">Gets the first content control in this collection. Throws if this collection is empty.</span></span>


    <span data-ttu-id="1cc52-136">\[[Conjunto de APIs: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1cc52-136">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: getFirst()
  fullName: getFirst()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getFirst(): Word.ContentControl;'
    return:
      type:
      - word.Word.ContentControl
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"1cc52-137\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"1cc52-137\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the first content control in the document.\n    var contentControl = context.document.contentControls.getFirstOrNullObject();\n\n    // Queue a command to load the text property for a content control.\n    context.load(contentControl, 'text');\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        if (contentControl.isNullObject) {\n            console.log('There are no content controls in this document.')\n        } else {\n            console.log('The first content control has been found in this document.');\n        }\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: word.Word.ContentControlCollection.getFirstOrNullObject
  summary: >-
    <span data-ttu-id="1cc52-p111">Obtém o primeiro controle de conteúdo nesta coleção. Retorna um objeto nulo se esta coleção está vazia.</span><span class="sxs-lookup"><span data-stu-id="1cc52-p111">Gets the first content control in this collection. Returns a null object if this collection is empty.</span></span>


    <span data-ttu-id="1cc52-140">\[[Conjunto de APIs: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1cc52-140">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: getFirstOrNullObject()
  fullName: getFirstOrNullObject()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getFirstOrNullObject(): Word.ContentControl;'
    return:
      type:
      - word.Word.ContentControl
      description: ''
- uid: word.Word.ContentControlCollection.getItem
  summary: >-
    <span data-ttu-id="1cc52-141">Obtém um controle de conteúdo por seu índice no conjunto.</span><span class="sxs-lookup"><span data-stu-id="1cc52-141">Gets a content control by its index in the collection.</span></span>


    <span data-ttu-id="1cc52-142">\[[Conjunto de APIs: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1cc52-142">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: getItem(index)
  fullName: getItem(index)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItem(index: number): Word.ContentControl;'
    return:
      type:
      - word.Word.ContentControl
      description: ''
    parameters:
    - id: index
      description: <span data-ttu-id="1cc52-143">O índice.</span><span class="sxs-lookup"><span data-stu-id="1cc52-143">The index.</span></span>
      type:
      - number
- uid: word.Word.ContentControlCollection.items
  summary: <span data-ttu-id="1cc52-144">Obtém o filho carregado itens nesta coleção.</span><span class="sxs-lookup"><span data-stu-id="1cc52-144">Gets the loaded child items in this collection.</span></span>
  name: items
  fullName: items
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly items: Word.ContentControl[];'
    return:
      type:
      - Word.ContentControl[]
- uid: word.Word.ContentControlCollection.load
  summary: <span data-ttu-id="1cc52-145">Filas de backup de um comando para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="1cc52-145">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="1cc52-146">Você deve chamar "context.sync()" antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="1cc52-146">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="1cc52-147">Além dessa assinatura, esse método tem as seguintes assinaturas:</span><span class="sxs-lookup"><span data-stu-id="1cc52-147">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="1cc52-148">`load(option?: string | string[]): Word.ContentControlCollection`-Onde opção é uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades de carga.</span><span class="sxs-lookup"><span data-stu-id="1cc52-148">`load(option?: string | string[]): Word.ContentControlCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="1cc52-149">`load(option?: { select?: string; expand?: string; }): Word.ContentControlCollection`-Onde option.select é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades para carregar e options.expand é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades de navegação para carregar.</span><span class="sxs-lookup"><span data-stu-id="1cc52-149">`load(option?: { select?: string; expand?: string; }): Word.ContentControlCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="1cc52-150">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.ContentControlCollection`-Só está disponível em tipos de coleção.</span><span class="sxs-lookup"><span data-stu-id="1cc52-150">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.ContentControlCollection` - Only available on collection types.</span></span> <span data-ttu-id="1cc52-151">Ele é semelhante à assinatura anterior.</span><span class="sxs-lookup"><span data-stu-id="1cc52-151">It is similar to the preceding signature.</span></span> <span data-ttu-id="1cc52-152">Option.Top Especifica o número máximo de itens que podem ser incluídos no resultado da coleção.</span><span class="sxs-lookup"><span data-stu-id="1cc52-152">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="1cc52-153">Option.Skip Especifica o número de itens que devem ser ignorados e não são incluídos no resultado.</span><span class="sxs-lookup"><span data-stu-id="1cc52-153">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="1cc52-154">Se option.top for especificado, o conjunto de resultados será iniciado depois de ignorar o número de itens especificado.</span><span class="sxs-lookup"><span data-stu-id="1cc52-154">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>

    #### <a name="examples"></a><span data-ttu-id="1cc52-155">Exemplos</span><span class="sxs-lookup"><span data-stu-id="1cc52-155">Examples</span></span>


    ```javascript

    // Run a batch operation against the Word object model.

    Word.run(function (context) {

        // Create a proxy object for the content controls collection.
        var contentControls = context.document.contentControls;

        // Queue a command to load the id property for all of the content controls.
        context.load(contentControls, 'id');

        // Synchronize the document state by executing the queued commands,
        // and return a promise to indicate task completion.
        return context.sync().then(function () {
            if (contentControls.items.length === 0) {
                console.log('No content control found.');
            }
            else {
                // Queue a command to load the properties on the first content control.
                contentControls.items[0].load(  'appearance,' +
                                                'cannotDelete,' +
                                                'cannotEdit,' +
                                                'id,' +
                                                'placeHolderText,' +
                                                'removeWhenEdited,' +
                                                'title,' +
                                                'text,' +
                                                'type,' +
                                                'style,' +
                                                'tag,' +
                                                'font/size,' +
                                                'font/name,' +
                                                'font/color');

                // Synchronize the document state by executing the queued commands,
                // and return a promise to indicate task completion.
                return context.sync()
                    .then(function () {
                        console.log('Property values of the first content control:' +
                            '   ----- appearance: ' + contentControls.items[0].appearance +
                            '   ----- cannotDelete: ' + contentControls.items[0].cannotDelete +
                            '   ----- cannotEdit: ' + contentControls.items[0].cannotEdit +
                            '   ----- color: ' + contentControls.items[0].color +
                            '   ----- id: ' + contentControls.items[0].id +
                            '   ----- placeHolderText: ' + contentControls.items[0].placeholderText +
                            '   ----- removeWhenEdited: ' + contentControls.items[0].removeWhenEdited +
                            '   ----- title: ' + contentControls.items[0].title +
                            '   ----- text: ' + contentControls.items[0].text +
                            '   ----- type: ' + contentControls.items[0].type +
                            '   ----- style: ' + contentControls.items[0].style +
                            '   ----- tag: ' + contentControls.items[0].tag +
                            '   ----- font size: ' + contentControls.items[0].font.size +
                            '   ----- font name: ' + contentControls.items[0].font.name +
                            '   ----- font color: ' + contentControls.items[0].font.color);
                });
            }
        });
    })

    .catch(function (error) {
        console.log('Error: ' + JSON.stringify(error));
        if (error instanceof OfficeExtension.Error) {
            console.log('Debug info: ' + JSON.stringify(error.debugInfo));
        }
    });


    // The Silly stories add-in sample shows how the load method is used

    // to load the content control collection with the tag and title properties.

    // https://aka.ms/sillystorywordaddin

    ```
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Word.Interfaces.ContentControlCollectionLoadOptions & Word.Interfaces.CollectionLoadOptions): Word.ContentControlCollection;'
    return:
      type:
      - word.Word.ContentControlCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - Word.Interfaces.ContentControlCollectionLoadOptions & Word.Interfaces.CollectionLoadOptions
- uid: word.Word.ContentControlCollection.load_1
  summary: <span data-ttu-id="1cc52-156">Filas de backup de um comando para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="1cc52-156">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="1cc52-157">Você deve chamar `context.sync()` antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="1cc52-157">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Word.ContentControlCollection;'
    return:
      type:
      - word.Word.ContentControlCollection
      description: ''
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="1cc52-158">Uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades de carga.</span><span class="sxs-lookup"><span data-stu-id="1cc52-158">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: word.Word.ContentControlCollection.load_2
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: OfficeExtension.LoadOption): Word.ContentControlCollection;'
    return:
      type:
      - word.Word.ContentControlCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - office.OfficeExtension.LoadOption
- uid: word.Word.ContentControlCollection.toJSON
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Word.Interfaces.ContentControlCollectionData;'
    return:
      type:
      - word.Word.Interfaces.ContentControlCollectionData
      description: ''
- uid: word.Word.ContentControlCollection.track
  summary: <span data-ttu-id="1cc52-159">Rastrear o objeto para ajuste automático, com base em torno de alterações no documento.</span><span class="sxs-lookup"><span data-stu-id="1cc52-159">Track the object for automatic adjustment based on surrounding changes in the document.</span></span> <span data-ttu-id="1cc52-160">Essa chamada é uma forma abreviada de context.trackedObjects.add(thisObject).</span><span class="sxs-lookup"><span data-stu-id="1cc52-160">This call is a shorthand for context.trackedObjects.add(thisObject).</span></span> <span data-ttu-id="1cc52-161">Se você estiver usando este objeto nas chamadas ". Sync" e fora a execução sequencial de um lote de ".run" e get um erro "InvalidObjectPath" ao definir uma propriedade ou um método no objeto de invocação, você precisava adicionou o objeto ao objeto controlado coleção quando o objeto foi criado pela primeira vez.</span><span class="sxs-lookup"><span data-stu-id="1cc52-161">If you are using this object across ".sync" calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you needed to have added the object to the tracked object collection when the object was first created.</span></span>
  name: track()
  fullName: track()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'track(): Word.ContentControlCollection;'
    return:
      type:
      - word.Word.ContentControlCollection
      description: ''
- uid: word.Word.ContentControlCollection.untrack
  summary: <span data-ttu-id="1cc52-162">Versão a memória associada a este objeto, se tiver sido rastreado anteriormente.</span><span class="sxs-lookup"><span data-stu-id="1cc52-162">Release the memory associated with this object, if it has previously been tracked.</span></span> <span data-ttu-id="1cc52-163">Essa chamada é um atalho para context.trackedObjects.remove(thisObject).</span><span class="sxs-lookup"><span data-stu-id="1cc52-163">This call is shorthand for context.trackedObjects.remove(thisObject).</span></span> <span data-ttu-id="1cc52-164">Ter vários objetos controlados fica mais lenta do aplicativo host, portanto Lembre-se liberar todos os objetos adicionar, depois que terminar usá-los.</span><span class="sxs-lookup"><span data-stu-id="1cc52-164">Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them.</span></span> <span data-ttu-id="1cc52-165">Você precisará chamar "context.sync()" antes do lançamento de memória entrará em vigor.</span><span class="sxs-lookup"><span data-stu-id="1cc52-165">You will need to call "context.sync()" before the memory release takes effect.</span></span>
  name: untrack()
  fullName: untrack()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'untrack(): Word.ContentControlCollection;'
    return:
      type:
      - word.Word.ContentControlCollection
      description: ''
