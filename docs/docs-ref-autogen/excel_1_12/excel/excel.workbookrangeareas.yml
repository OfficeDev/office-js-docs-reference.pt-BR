### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.WorkbookRangeAreas:class'
    summary: |-
      Representa uma coleção de um ou mais intervalos retangulares em várias planilhas.

      \[[Conjunto de APIs: ExcelApi 1,12](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: Excel.WorkbookRangeAreas
    fullName: Excel.WorkbookRangeAreas
    langs:
      - typeScript
    type: class
    extends:
      - 'office!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.WorkbookRangeAreas#addresses:member'
      - 'excel!Excel.WorkbookRangeAreas#areas:member'
      - 'excel!Excel.WorkbookRangeAreas#context:member'
      - 'excel!Excel.WorkbookRangeAreas#getRangeAreasBySheet:member(1)'
      - 'excel!Excel.WorkbookRangeAreas#getRangeAreasOrNullObjectBySheet:member(1)'
      - 'excel!Excel.WorkbookRangeAreas#load:member(1)'
      - 'excel!Excel.WorkbookRangeAreas#load:member(2)'
      - 'excel!Excel.WorkbookRangeAreas#load:member(3)'
      - 'excel!Excel.WorkbookRangeAreas#ranges:member'
      - 'excel!Excel.WorkbookRangeAreas#toJSON:member(1)'
      - 'excel!Excel.WorkbookRangeAreas#track:member(1)'
      - 'excel!Excel.WorkbookRangeAreas#untrack:member(1)'
  - uid: 'excel!Excel.WorkbookRangeAreas#addresses:member'
    summary: |-
      Retorna uma matriz de endereço em estilo a1. O valor de endereço conterá o nome da planilha para cada bloco retangular de células (por exemplo, "Planilha1! A1: B4, Planilha1! D1: D4 "). Somente leitura.

      \[[Conjunto de APIs: ExcelApi 1,12](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: addresses
    fullName: addresses
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly addresses: string[];'
      return:
        type:
          - 'string[]'
  - uid: 'excel!Excel.WorkbookRangeAreas#areas:member'
    summary: |-
      Retorna o `RangeAreasCollection` objeto. Cada `RangeAreas` objeto na coleção representa um ou mais intervalos de retângulo em uma planilha.

      \[[Conjunto de APIs: ExcelApi 1,12](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: areas
    fullName: areas
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly areas: Excel.RangeAreasCollection;'
      return:
        type:
          - 'excel!Excel.RangeAreasCollection:class'
        description: |-


          #### <a name="examples"></a>Exemplos

          ```typescript
          // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/85-preview-apis/direct-precedents.yaml
          await Excel.run(async (context) => {
            // Precedents are cells referenced by the formula in a cell.
            let range = context.workbook.getActiveCell();
            let directPrecedents = range.getDirectPrecedents();
            range.load("address");
            directPrecedents.areas.load("address");
            await context.sync();

            console.log(`Direct precedent cells of ${range.address}:`);

            // Use the direct precedents API to loop through precedents of the active cell. 
            for (var i = 0; i < directPrecedents.areas.items.length; i++) {
              // Highlight and console the address of each precedent cell.
              directPrecedents.areas.items[i].format.fill.color = "Yellow";
              console.log(`  ${directPrecedents.areas.items[i].address}`);
            }
            await context.sync();
          });
          ```
  - uid: 'excel!Excel.WorkbookRangeAreas#context:member'
    summary: O contexto de solicitação associado ao objeto. Isso conecta o processo do suplemento ao processo do aplicativo host do Office.
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.WorkbookRangeAreas#getRangeAreasBySheet:member(1)'
    summary: |-
      Retorna o `RangeAreas` objeto com base na ID ou no nome da planilha na coleção.

      \[[Conjunto de APIs: ExcelApi 1,12](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getRangeAreasBySheet(key)
    fullName: getRangeAreasBySheet(key)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRangeAreasBySheet(key: string): Excel.RangeAreas;'
      return:
        type:
          - 'excel!Excel.RangeAreas:class'
        description: ''
      parameters:
        - id: key
          description: O nome ou a ID da planilha.
          type:
            - string
  - uid: 'excel!Excel.WorkbookRangeAreas#getRangeAreasOrNullObjectBySheet:member(1)'
    summary: |-
      Retorna o `RangeAreas` objeto com base no nome ou na ID da planilha na coleção. Se a planilha não existir, retornará um objeto null.

      \[[Conjunto de APIs: ExcelApi 1,12](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getRangeAreasOrNullObjectBySheet(key)
    fullName: getRangeAreasOrNullObjectBySheet(key)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRangeAreasOrNullObjectBySheet(key: string): Excel.RangeAreas;'
      return:
        type:
          - 'excel!Excel.RangeAreas:class'
        description: ''
      parameters:
        - id: key
          description: O nome ou a ID da planilha.
          type:
            - string
  - uid: 'excel!Excel.WorkbookRangeAreas#load:member(1)'
    summary: Coloca um comando na fila para carregar as propriedades especificadas do objeto. Você deve chamar `context.sync()` antes de ler as propriedades.
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.WorkbookRangeAreasLoadOptions): Excel.WorkbookRangeAreas;'
      return:
        type:
          - 'excel!Excel.WorkbookRangeAreas:class'
        description: ''
      parameters:
        - id: options
          description: Fornece opções para as propriedades do objeto a ser carregado.
          type:
            - 'excel!Excel.Interfaces.WorkbookRangeAreasLoadOptions:interface'
  - uid: 'excel!Excel.WorkbookRangeAreas#load:member(2)'
    summary: Coloca um comando na fila para carregar as propriedades especificadas do objeto. Você deve chamar `context.sync()` antes de ler as propriedades.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.WorkbookRangeAreas;'
      return:
        type:
          - 'excel!Excel.WorkbookRangeAreas:class'
        description: ''
      parameters:
        - id: propertyNames
          description: Uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.WorkbookRangeAreas#load:member(3)'
    summary: Coloca um comando na fila para carregar as propriedades especificadas do objeto. Você deve chamar `context.sync()` antes de ler as propriedades.
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.WorkbookRangeAreas;
      return:
        type:
          - 'excel!Excel.WorkbookRangeAreas:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '`propertyNamesAndPaths.select` é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades a serem carregadas e `propertyNamesAndPaths.expand` é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades de navegação a serem carregadas.'
          type:
            - |-
              {
                          select?: string;
                          expand?: string;
                      }
  - uid: 'excel!Excel.WorkbookRangeAreas#ranges:member'
    summary: |-
      Retorna intervalos que compõem este objeto em um `RangeCollection` objeto.

      \[[Conjunto de APIs: ExcelApi 1,12](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: ranges
    fullName: ranges
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly ranges: Excel.RangeCollection;'
      return:
        type:
          - 'excel!Excel.RangeCollection:class'
  - uid: 'excel!Excel.WorkbookRangeAreas#toJSON:member(1)'
    summary: 'Substitui o `toJSON()` método JavaScript para fornecer uma saída mais útil quando um objeto API é passado para `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, por sua vez, chama o `toJSON` método do objeto que é passado para ele.) Enquanto o objeto Excel. WorkbookRangeAreas original é um objeto API, o `toJSON` método retorna um objeto JavaScript simples (digitado como `Excel.Interfaces.WorkbookRangeAreasData`<!-- -->) que contém cópias superficiais de qualquer propriedade filho carregada do objeto original.'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.WorkbookRangeAreasData;'
      return:
        type:
          - 'excel!Excel.Interfaces.WorkbookRangeAreasData:interface'
        description: ''
  - uid: 'excel!Excel.WorkbookRangeAreas#track:member(1)'
    summary: 'Acompanha o objeto para ajuste automático com base nas alterações adjacentes no documento. Essa chamada é uma abreviação para `context.trackedObjects.add(thisObject)`<!-- -->. Se você estiver usando esse objeto nas `.sync` chamadas e fora da execução seqüencial de um lote ". Run" e obter um erro "InvalidObjectPath" ao definir uma propriedade ou invocar um método no objeto, você precisa ter adicionado o objeto à coleção de objetos rastreados quando o objeto foi criado pela primeira vez.'
    name: track()
    fullName: track()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'track(): Excel.WorkbookRangeAreas;'
      return:
        type:
          - 'excel!Excel.WorkbookRangeAreas:class'
        description: ''
  - uid: 'excel!Excel.WorkbookRangeAreas#untrack:member(1)'
    summary: 'Libere a memória associada a este objeto, se ele já tiver sido rastreado anteriormente. Essa chamada é abreviada para `context.trackedObjects.remove(thisObject)`<!-- -->. Ter muitos objetos rastreados desacelera o aplicativo host, por isso, lembre-se de liberar todos os objetos adicionados após usá-los. Você precisará chamar `context.sync()` antes que o lançamento da memória entre em vigor.'
    name: untrack()
    fullName: untrack()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'untrack(): Excel.WorkbookRangeAreas;'
      return:
        type:
          - 'excel!Excel.WorkbookRangeAreas:class'
        description: ''
references:
  - uid: 'office!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RangeAreasCollection:class'
    name: Excel.RangeAreasCollection
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.RangeAreas:class'
    name: Excel.RangeAreas
  - uid: 'excel!Excel.WorkbookRangeAreas:class'
    name: Excel.WorkbookRangeAreas
  - uid: 'excel!Excel.Interfaces.WorkbookRangeAreasLoadOptions:interface'
    name: Excel.Interfaces.WorkbookRangeAreasLoadOptions
  - uid: 'excel!Excel.RangeCollection:class'
    name: Excel.RangeCollection
  - uid: 'excel!Excel.Interfaces.WorkbookRangeAreasData:interface'
    name: Excel.Interfaces.WorkbookRangeAreasData