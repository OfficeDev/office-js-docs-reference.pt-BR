### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.WorksheetFreezePanes:class'
    summary: '\[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]'
    name: Excel.WorksheetFreezePanes
    fullName: Excel.WorksheetFreezePanes
    langs:
      - typeScript
    type: class
    extends:
      - 'office!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.WorksheetFreezePanes#context:member'
      - 'excel!Excel.WorksheetFreezePanes#freezeAt:member(1)'
      - 'excel!Excel.WorksheetFreezePanes#freezeColumns:member(1)'
      - 'excel!Excel.WorksheetFreezePanes#freezeRows:member(1)'
      - 'excel!Excel.WorksheetFreezePanes#getLocation:member(1)'
      - 'excel!Excel.WorksheetFreezePanes#getLocationOrNullObject:member(1)'
      - 'excel!Excel.WorksheetFreezePanes#toJSON:member(1)'
      - 'excel!Excel.WorksheetFreezePanes#unfreeze:member(1)'
  - uid: 'excel!Excel.WorksheetFreezePanes#context:member'
    summary: O contexto de solicitação associado ao objeto. Isso conecta o processo do suplemento ao processo do aplicativo host do Office.
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.WorksheetFreezePanes#freezeAt:member(1)'
    summary: |-
      Define as células congeladas no modo de exibição da planilha ativa. O intervalo fornecido corresponde a células que serão congeladas no painel superior e à esquerda.

      \[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: freezeAt(frozenRange)
    fullName: freezeAt(frozenRange)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'freezeAt(frozenRange: Range | string): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a>Exemplos

          ```typescript
          // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/54-worksheet/worksheet-freeze-panes.yaml
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Sample");

              // Freeze the specified range in top-and-left-most pane of the worksheet.
              sheet.freezePanes.freezeAt(sheet.getRange("H2:K5"));

              await context.sync();
          });
          ```
      parameters:
        - id: frozenRange
          description: Um intervalo que representa as células a serem congeladas ou nulo para remover todos os painéis congelados.
          type:
            - 'excel!Excel.WorksheetFreezePanes#freezeAt~0:complex'
  - uid: 'excel!Excel.WorksheetFreezePanes#freezeColumns:member(1)'
    summary: |-
      Congela a primeira colunas da planilha no local.

      \[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: freezeColumns(count)
    fullName: freezeColumns(count)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'freezeColumns(count?: number): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a>Exemplos

          ```typescript
          // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/54-worksheet/worksheet-freeze-panes.yaml
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Sample");

              // Freeze the first two columns in the worksheet.
              sheet.freezePanes.freezeColumns(2);

              await context.sync();
          });
          ```
      parameters:
        - id: count
          description: Número opcional de colunas a serem congeladas ou zero para descongelar todas as colunas
          type:
            - number
  - uid: 'excel!Excel.WorksheetFreezePanes#freezeRows:member(1)'
    summary: |-
      Congela as linhas superiores da planilha no local.

      \[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: freezeRows(count)
    fullName: freezeRows(count)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'freezeRows(count?: number): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a>Exemplos

          ```typescript
          // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/54-worksheet/worksheet-freeze-panes.yaml
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Sample");

              // Freeze the top two rows in the worksheet.
              sheet.freezePanes.freezeRows(2);

              await context.sync();
          });
          ```
      parameters:
        - id: count
          description: Número opcional de linhas a serem congeladas ou zero para descongelar todas as linhas
          type:
            - number
  - uid: 'excel!Excel.WorksheetFreezePanes#getLocation:member(1)'
    summary: |-
      Obtém um intervalo que descreve as células congeladas no modo de exibição da planilha ativa. O intervalo congelado corresponde às células que estão congeladas no painel superior e à esquerda.

      \[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getLocation()
    fullName: getLocation()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getLocation(): Excel.Range;'
      return:
        type:
          - 'excel!Excel.Range:class'
        description: ''
  - uid: 'excel!Excel.WorksheetFreezePanes#getLocationOrNullObject:member(1)'
    summary: |-
      Obtém um intervalo que descreve as células congeladas no modo de exibição da planilha ativa. O intervalo congelado corresponde às células que estão congeladas no painel superior e à esquerda. Se não houver nenhum painel congelado, retorna um objeto NULL.

      \[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getLocationOrNullObject()
    fullName: getLocationOrNullObject()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getLocationOrNullObject(): Excel.Range;'
      return:
        type:
          - 'excel!Excel.Range:class'
        description: |-


          #### <a name="examples"></a>Exemplos

          ```typescript
          // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/54-worksheet/worksheet-freeze-panes.yaml
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Sample");
              const frozenRange = sheet.freezePanes.getLocationOrNullObject();
              frozenRange.load("address");

              await context.sync();

              if (frozenRange.isNullObject) {
                  console.log(`The worksheet does not contain a frozen pane.`);
              } else {
                  console.log(`The address of the frozen range (cells that are frozen in the top-and-left-most pane) is "${frozenRange.address}"`);
              }
          });
          ```
  - uid: 'excel!Excel.WorksheetFreezePanes#toJSON:member(1)'
    summary: 'Substitui o `toJSON()` método JavaScript para fornecer uma saída mais útil quando um objeto API é passado para `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, por sua vez, chama o `toJSON` método do objeto que é passado para ele.) Enquanto o objeto Excel. WorksheetFreezePanes original é um objeto API, o `toJSON` método retorna um objeto JavaScript simples (digitado como `Excel.Interfaces.WorksheetFreezePanesData`<!-- -->) que contém cópias superficiais de qualquer propriedade filho carregada do objeto original.'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        toJSON(): {
                    [key: string]: string;
                };
      return:
        type:
          - |-
            {
                        [key: string]: string;
                    }
        description: ''
  - uid: 'excel!Excel.WorksheetFreezePanes#unfreeze:member(1)'
    summary: |-
      Remove todos os painéis congelados na planilha.

      \[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: unfreeze()
    fullName: unfreeze()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'unfreeze(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a>Exemplos

          ```typescript
          // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/54-worksheet/worksheet-freeze-panes.yaml
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Sample");
              sheet.freezePanes.unfreeze();

              await context.sync();
          });
          ```
references:
  - uid: 'office!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.WorksheetFreezePanes#freezeAt~0:complex'
    name: Range | string
    fullName: Excel.Range | string
    spec.typeScript:
      - uid: 'excel!Excel.Range:class'
        name: Range
        fullName: Excel.Range
      - name: ' | string'
        fullName: ' | string'
  - uid: 'excel!Excel.Range:class'
    name: Excel.Range