### YamlMime:UniversalReference
items:
  - uid: 'word!Word.List:class'
    summary: |-
      Contém uma coleção de objetos [Word. Paragraph](xref:word!Word.Paragraph:class) .

      \[[Conjunto de APIs: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: Word.List
    fullName: Word.List
    langs:
      - typeScript
    type: class
    extends:
      - 'office!OfficeExtension.ClientObject:class'
    package: word!
    children:
      - 'word!Word.List#context:member'
      - 'word!Word.List#getLevelParagraphs:member(1)'
      - 'word!Word.List#getLevelString:member(1)'
      - 'word!Word.List#id:member'
      - 'word!Word.List#insertParagraph:member(1)'
      - 'word!Word.List#insertParagraph:member(2)'
      - 'word!Word.List#levelExistences:member'
      - 'word!Word.List#levelTypes:member'
      - 'word!Word.List#load:member(1)'
      - 'word!Word.List#load:member(2)'
      - 'word!Word.List#load:member(3)'
      - 'word!Word.List#paragraphs:member'
      - 'word!Word.List#setLevelAlignment:member(1)'
      - 'word!Word.List#setLevelAlignment:member(2)'
      - 'word!Word.List#setLevelBullet:member(1)'
      - 'word!Word.List#setLevelBullet:member(2)'
      - 'word!Word.List#setLevelIndents:member(1)'
      - 'word!Word.List#setLevelNumbering:member(1)'
      - 'word!Word.List#setLevelNumbering:member(2)'
      - 'word!Word.List#setLevelStartingNumber:member(1)'
      - 'word!Word.List#toJSON:member(1)'
      - 'word!Word.List#track:member(1)'
      - 'word!Word.List#untrack:member(1)'
  - uid: 'word!Word.List#context:member'
    summary: O contexto de solicitação associado ao objeto. Isso conecta o processo do suplemento ao processo do aplicativo host do Office.
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'word!Word.RequestContext:class'
  - uid: 'word!Word.List#getLevelParagraphs:member(1)'
    summary: |-
      Obtém os parágrafos que ocorrem no nível especificado na lista.

      \[[Conjunto de APIs: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: getLevelParagraphs(level)
    fullName: getLevelParagraphs(level)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getLevelParagraphs(level: number): Word.ParagraphCollection;'
      return:
        type:
          - 'word!Word.ParagraphCollection:class'
        description: ''
      parameters:
        - id: level
          description: Obrigatório. O nível na lista.
          type:
            - number
  - uid: 'word!Word.List#getLevelString:member(1)'
    summary: |-
      Obtém o marcador, o número ou a imagem no nível especificado como uma cadeia de caracteres.

      \[[Conjunto de APIs: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: getLevelString(level)
    fullName: getLevelString(level)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getLevelString(level: number): OfficeExtension.ClientResult<string>;'
      return:
        type:
          - 'word!Word.List#getLevelString~0:complex'
        description: ''
      parameters:
        - id: level
          description: Obrigatório. O nível na lista.
          type:
            - number
  - uid: 'word!Word.List#id:member'
    summary: |-
      Obtém a ID da lista.

      \[[Conjunto de APIs: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: number;'
      return:
        type:
          - number
  - uid: 'word!Word.List#insertParagraph:member(1)'
    summary: |-
      Insere um parágrafo no local especificado.

      \[[Conjunto de APIs: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: 'insertParagraph(paragraphText, insertLocation)'
    fullName: 'insertParagraph(paragraphText, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertParagraph(paragraphText: string, insertLocation: Word.InsertLocation): Word.Paragraph;'
      return:
        type:
          - 'word!Word.Paragraph:class'
        description: ''
      parameters:
        - id: paragraphText
          description: Obrigatória. O texto do parágrafo a ser inserido.
          type:
            - string
        - id: insertLocation
          description: 'Obrigatório. O valor pode ser '' Start '', '' End '', '' before '' ou '' after ''.'
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.List#insertParagraph:member(2)'
    summary: |-
      Insere um parágrafo no local especificado.

      \[[Conjunto de APIs: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: 'insertParagraph(paragraphText, insertLocationString)'
    fullName: 'insertParagraph(paragraphText, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertParagraph(paragraphText: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Paragraph;'
      return:
        type:
          - 'word!Word.Paragraph:class'
        description: ''
      parameters:
        - id: paragraphText
          description: Obrigatória. O texto do parágrafo a ser inserido.
          type:
            - string
        - id: insertLocationString
          description: 'Obrigatório. O valor pode ser '' Start '', '' End '', '' before '' ou '' after ''.'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.List#levelExistences:member'
    summary: |-
      Verifica se cada um dos 9 níveis existe na lista. Um valor true indica que o nível existe, o que significa que há pelo menos um item de lista nesse nível. Somente leitura.

      \[[Conjunto de APIs: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: levelExistences
    fullName: levelExistences
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly levelExistences: boolean[];'
      return:
        type:
          - 'boolean[]'
  - uid: 'word!Word.List#levelTypes:member'
    summary: |-
      Obtém todos os tipos de nível 9 na lista. Cada tipo pode ser ' marcador ', ' número ' ou ' imagem '. Somente leitura.

      \[[Conjunto de APIs: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: levelTypes
    fullName: levelTypes
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly levelTypes: Word.ListLevelType[];'
      return:
        type:
          - 'word!Word.List#levelTypes~0:complex'
  - uid: 'word!Word.List#load:member(1)'
    summary: Coloca um comando na fila para carregar as propriedades especificadas do objeto. Você deve chamar `context.sync()` antes de ler as propriedades.
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Word.Interfaces.ListLoadOptions): Word.List;'
      return:
        type:
          - 'word!Word.List:class'
        description: ''
      parameters:
        - id: options
          description: Fornece opções para as propriedades do objeto a ser carregado.
          type:
            - 'word!Word.Interfaces.ListLoadOptions:interface'
  - uid: 'word!Word.List#load:member(2)'
    summary: Coloca um comando na fila para carregar as propriedades especificadas do objeto. Você deve chamar `context.sync()` antes de ler as propriedades.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Word.List;'
      return:
        type:
          - 'word!Word.List:class'
        description: ''
      parameters:
        - id: propertyNames
          description: Uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.
          type:
            - 'string | string[]'
  - uid: 'word!Word.List#load:member(3)'
    summary: Coloca um comando na fila para carregar as propriedades especificadas do objeto. Você deve chamar `context.sync()` antes de ler as propriedades.
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Word.List;
      return:
        type:
          - 'word!Word.List:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '`propertyNamesAndPaths.select`é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades a serem carregadas e `propertyNamesAndPaths.expand` é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades de navegação a serem carregadas.'
          type:
            - |-
              {
                          select?: string;
                          expand?: string;
                      }
  - uid: 'word!Word.List#paragraphs:member'
    summary: |-
      Obtém parágrafos na lista. Somente leitura.

      \[[Conjunto de APIs: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: paragraphs
    fullName: paragraphs
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly paragraphs: Word.ParagraphCollection;'
      return:
        type:
          - 'word!Word.ParagraphCollection:class'
  - uid: 'word!Word.List#setLevelAlignment:member(1)'
    summary: |-
      Define o alinhamento do marcador, o número ou a imagem no nível especificado na lista.

      \[[Conjunto de APIs: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: 'setLevelAlignment(level, alignment)'
    fullName: 'setLevelAlignment(level, alignment)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setLevelAlignment(level: number, alignment: Word.Alignment): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: level
          description: Obrigatório. O nível na lista.
          type:
            - number
        - id: alignment
          description: 'Obrigatório. O alinhamento de nível que pode ser '' left '', '' centered '' ou '' right ''.'
          type:
            - 'word!Word.Alignment:enum'
  - uid: 'word!Word.List#setLevelAlignment:member(2)'
    summary: |-
      Define o alinhamento do marcador, o número ou a imagem no nível especificado na lista.

      \[[Conjunto de APIs: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: 'setLevelAlignment(level, alignmentString)'
    fullName: 'setLevelAlignment(level, alignmentString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setLevelAlignment(level: number, alignmentString: "Mixed" | "Unknown" | "Left" | "Centered" | "Right" | "Justified"): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: level
          description: Obrigatório. O nível na lista.
          type:
            - number
        - id: alignmentString
          description: 'Obrigatório. O alinhamento de nível que pode ser '' left '', '' centered '' ou '' right ''.'
          type:
            - '"Mixed" | "Unknown" | "Left" | "Centered" | "Right" | "Justified"'
  - uid: 'word!Word.List#setLevelBullet:member(1)'
    summary: |-
      Define o formato de marcador no nível especificado na lista. Se o marcador é 'Custom', o charCode é necessário.

      \[[Conjunto de APIs: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: 'setLevelBullet(level, listBullet, charCode, fontName)'
    fullName: 'setLevelBullet(level, listBullet, charCode, fontName)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setLevelBullet(level: number, listBullet: Word.ListBullet, charCode?: number, fontName?: string): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: level
          description: Obrigatório. O nível na lista.
          type:
            - number
        - id: listBullet
          description: Obrigatório. O marcador.
          type:
            - 'word!Word.ListBullet:enum'
        - id: charCode
          description: Opcional. O valor do código do caractere marcador. Usado somente se o marcador for ' Custom '.
          type:
            - number
        - id: fontName
          description: Opcional. O nome da fonte do marcador. Usado somente se o marcador for ' Custom '.
          type:
            - string
  - uid: 'word!Word.List#setLevelBullet:member(2)'
    summary: |-
      Define o formato de marcador no nível especificado na lista. Se o marcador é 'Custom', o charCode é necessário.

      \[[Conjunto de APIs: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: 'setLevelBullet(level, listBulletString, charCode, fontName)'
    fullName: 'setLevelBullet(level, listBulletString, charCode, fontName)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setLevelBullet(level: number, listBulletString: "Custom" | "Solid" | "Hollow" | "Square" | "Diamonds" | "Arrow" | "Checkmark", charCode?: number, fontName?: string): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: level
          description: Obrigatório. O nível na lista.
          type:
            - number
        - id: listBulletString
          description: Obrigatório. O marcador.
          type:
            - '"Custom" | "Solid" | "Hollow" | "Square" | "Diamonds" | "Arrow" | "Checkmark"'
        - id: charCode
          description: Opcional. O valor do código do caractere marcador. Usado somente se o marcador for ' Custom '.
          type:
            - number
        - id: fontName
          description: Opcional. O nome da fonte do marcador. Usado somente se o marcador for ' Custom '.
          type:
            - string
  - uid: 'word!Word.List#setLevelIndents:member(1)'
    summary: |-
      Define os dois recuos do nível especificado na lista.

      \[[Conjunto de APIs: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: 'setLevelIndents(level, textIndent, bulletNumberPictureIndent)'
    fullName: 'setLevelIndents(level, textIndent, bulletNumberPictureIndent)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setLevelIndents(level: number, textIndent: number, bulletNumberPictureIndent: number): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: level
          description: Obrigatório. O nível na lista.
          type:
            - number
        - id: textIndent
          description: Obrigatório. O recuo do texto em pontos. É o mesmo que recuo à esquerda de parágrafo.
          type:
            - number
        - id: bulletNumberPictureIndent
          description: 'Obrigatório. O recuo relativo, em pontos, do marcador, número ou imagem. É o mesmo que o recuo da primeira linha do parágrafo.'
          type:
            - number
  - uid: 'word!Word.List#setLevelNumbering:member(1)'
    summary: |-
      Define o formato de numeração no nível especificado na lista.

      \[[Conjunto de APIs: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: 'setLevelNumbering(level, listNumbering, formatString)'
    fullName: 'setLevelNumbering(level, listNumbering, formatString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setLevelNumbering(level: number, listNumbering: Word.ListNumbering, formatString?: Array<string | number>): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: level
          description: Obrigatório. O nível na lista.
          type:
            - number
        - id: listNumbering
          description: Obrigatório. O formato ordinal.
          type:
            - 'word!Word.ListNumbering:enum'
        - id: formatString
          description: 'Opcional. O formato da cadeia de caracteres de numeração definido como uma matriz de cadeias de caracteres e/ou inteiros. Cada inteiro é um nível de tipo de número que é maior ou igual a este nível. Por exemplo, uma matriz de \[ "(", Level-1, ".", Level, ")" \] pode definir o formato de "(2. c)", onde 2 é o número do item do pai e c é o número do item do nível.'
          type:
            - 'word!Word.List#setLevelNumbering~0:complex'
  - uid: 'word!Word.List#setLevelNumbering:member(2)'
    summary: |-
      Define o formato de numeração no nível especificado na lista.

      \[[Conjunto de APIs: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: 'setLevelNumbering(level, listNumberingString, formatString)'
    fullName: 'setLevelNumbering(level, listNumberingString, formatString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setLevelNumbering(level: number, listNumberingString: "None" | "Arabic" | "UpperRoman" | "LowerRoman" | "UpperLetter" | "LowerLetter", formatString?: Array<string | number>): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: level
          description: Obrigatório. O nível na lista.
          type:
            - number
        - id: listNumberingString
          description: Obrigatório. O formato ordinal.
          type:
            - '"None" | "Arabic" | "UpperRoman" | "LowerRoman" | "UpperLetter" | "LowerLetter"'
        - id: formatString
          description: 'Opcional. O formato da cadeia de caracteres de numeração definido como uma matriz de cadeias de caracteres e/ou inteiros. Cada inteiro é um nível de tipo de número que é maior ou igual a este nível. Por exemplo, uma matriz de \[ "(", Level-1, ".", Level, ")" \] pode definir o formato de "(2. c)", onde 2 é o número do item do pai e c é o número do item do nível.'
          type:
            - 'word!Word.List#setLevelNumbering~1:complex'
  - uid: 'word!Word.List#setLevelStartingNumber:member(1)'
    summary: |-
      Define o número inicial no nível especificado na lista. O valor padrão é 1.

      \[[Conjunto de APIs: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: 'setLevelStartingNumber(level, startingNumber)'
    fullName: 'setLevelStartingNumber(level, startingNumber)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setLevelStartingNumber(level: number, startingNumber: number): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: level
          description: Obrigatório. O nível na lista.
          type:
            - number
        - id: startingNumber
          description: Obrigatório. O número com o qual começar.
          type:
            - number
  - uid: 'word!Word.List#toJSON:member(1)'
    summary: 'Substitui o `toJSON()` método JavaScript para fornecer uma saída mais útil quando um objeto API é passado para`JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, por sua vez, chama o `toJSON` método do objeto que é passado para ele.) Enquanto o objeto Word. List original é um objeto API, o `toJSON` método retorna um objeto JavaScript simples (digitado como`Word.Interfaces.ListData`<!-- -->) que contém cópias superficiais de qualquer propriedade filho carregada do objeto original.'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Word.Interfaces.ListData;'
      return:
        type:
          - 'word!Word.Interfaces.ListData:interface'
        description: ''
  - uid: 'word!Word.List#track:member(1)'
    summary: 'Acompanha o objeto para ajuste automático com base nas alterações adjacentes no documento. Essa chamada é uma abreviação para`context.trackedObjects.add(thisObject)`<!-- -->. Se você estiver usando esse objeto nas `.sync` chamadas e fora da execução seqüencial de um lote ". Run" e obter um erro "InvalidObjectPath" ao definir uma propriedade ou invocar um método no objeto, você precisa ter adicionado o objeto à coleção de objetos rastreados quando o objeto foi criado pela primeira vez.'
    name: track()
    fullName: track()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'track(): Word.List;'
      return:
        type:
          - 'word!Word.List:class'
        description: ''
  - uid: 'word!Word.List#untrack:member(1)'
    summary: 'Libere a memória associada a este objeto, se ele já tiver sido rastreado anteriormente. Essa chamada é abreviada para`context.trackedObjects.remove(thisObject)`<!-- -->. Ter muitos objetos rastreados desacelera o aplicativo host, por isso, lembre-se de liberar todos os objetos adicionados após usá-los. Você precisará chamar `context.sync()` antes que o lançamento da memória entre em vigor.'
    name: untrack()
    fullName: untrack()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'untrack(): Word.List;'
      return:
        type:
          - 'word!Word.List:class'
        description: ''
references:
  - uid: 'office!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'word!Word.RequestContext:class'
    name: RequestContext
  - uid: 'word!Word.ParagraphCollection:class'
    name: Word.ParagraphCollection
  - uid: 'word!Word.List#getLevelString~0:complex'
    name: OfficeExtension.ClientResult<string>
    fullName: OfficeExtension.ClientResult<string>
    spec.typeScript:
      - uid: 'office!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <string>
        fullName: <string>
  - uid: 'word!Word.Paragraph:class'
    name: Word.Paragraph
  - uid: 'word!Word.InsertLocation:enum'
    name: Word.InsertLocation
  - uid: 'word!Word.List#levelTypes~0:complex'
    name: 'Word.ListLevelType[]'
    fullName: 'Word.ListLevelType[]'
    spec.typeScript:
      - uid: 'word!Word.ListLevelType:enum'
        name: Word.ListLevelType
        fullName: Word.ListLevelType
      - name: '[]'
        fullName: '[]'
  - uid: 'word!Word.List:class'
    name: Word.List
  - uid: 'word!Word.Interfaces.ListLoadOptions:interface'
    name: Word.Interfaces.ListLoadOptions
  - uid: 'word!Word.Alignment:enum'
    name: Word.Alignment
  - uid: 'word!Word.ListBullet:enum'
    name: Word.ListBullet
  - uid: 'word!Word.ListNumbering:enum'
    name: Word.ListNumbering
  - uid: 'word!Word.List#setLevelNumbering~0:complex'
    name: Array<string | number>
    fullName: Array<string | number>
    spec.typeScript:
      - uid: '!Array:interface'
        name: Array
        fullName: Array
      - name: <string | number>
        fullName: <string | number>
  - uid: 'word!Word.List#setLevelNumbering~1:complex'
    name: Array<string | number>
    fullName: Array<string | number>
    spec.typeScript:
      - uid: '!Array:interface'
        name: Array
        fullName: Array
      - name: <string | number>
        fullName: <string | number>
  - uid: 'word!Word.Interfaces.ListData:interface'
    name: Word.Interfaces.ListData