### YamlMime:UniversalReference
items:
  - uid: word.Word.ContentControlCollection
    summary: |-
      <span data-ttu-id="f9a2d-101">Contém uma coleção de objetos [Word. ContentControl](xref:word.Word.ContentControl) .</span><span class="sxs-lookup"><span data-stu-id="f9a2d-101">Contains a collection of [Word.ContentControl](xref:word.Word.ContentControl) objects.</span></span> <span data-ttu-id="f9a2d-102">Os controles de conteúdo são regiões associadas e potencialmente rotuladas em um documento que servem como contêineres para tipos específicos de conteúdo.</span><span class="sxs-lookup"><span data-stu-id="f9a2d-102">Content controls are bounded and potentially labeled regions in a document that serve as containers for specific types of content.</span></span> <span data-ttu-id="f9a2d-103">Os controles de conteúdo individuais podem incluir conteúdo, como imagens, tabelas ou parágrafos de texto formatado.</span><span class="sxs-lookup"><span data-stu-id="f9a2d-103">Individual content controls may contain contents such as images, tables, or paragraphs of formatted text.</span></span> <span data-ttu-id="f9a2d-104">Atualmente, temos suporte apenas para controles de conteúdo de rich text.</span><span class="sxs-lookup"><span data-stu-id="f9a2d-104">Currently, only rich text content controls are supported.</span></span>

      <span data-ttu-id="f9a2d-105">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="f9a2d-105">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: Word.ContentControlCollection
    fullName: Word.ContentControlCollection
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: word
    children:
      - word.Word.ContentControlCollection.context
      - word.Word.ContentControlCollection.getById
      - word.Word.ContentControlCollection.getByIdOrNullObject
      - word.Word.ContentControlCollection.getByTag
      - word.Word.ContentControlCollection.getByTitle
      - word.Word.ContentControlCollection.getByTypes
      - word.Word.ContentControlCollection.getFirst
      - word.Word.ContentControlCollection.getFirstOrNullObject
      - word.Word.ContentControlCollection.getItem
      - word.Word.ContentControlCollection.items
      - word.Word.ContentControlCollection.load
      - word.Word.ContentControlCollection.load_1
      - word.Word.ContentControlCollection.load_2
      - word.Word.ContentControlCollection.toJSON
      - word.Word.ContentControlCollection.track
      - word.Word.ContentControlCollection.untrack
  - uid: word.Word.ContentControlCollection.context
    summary: <span data-ttu-id="f9a2d-106">O contexto de solicitação associado ao objeto.</span><span class="sxs-lookup"><span data-stu-id="f9a2d-106">The request context associated with the object.</span></span> <span data-ttu-id="f9a2d-107">Isso conecta o processo do suplemento ao processo do aplicativo host do Office.</span><span class="sxs-lookup"><span data-stu-id="f9a2d-107">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - word.Word.RequestContext
  - uid: word.Word.ContentControlCollection.getById
    summary: |-
      <span data-ttu-id="f9a2d-108">Obtém um controle de conteúdo pelo respectivo identificador.</span><span class="sxs-lookup"><span data-stu-id="f9a2d-108">Gets a content control by its identifier.</span></span> <span data-ttu-id="f9a2d-109">Gera se não há um controle de conteúdo com o identificador nesta coleção.</span><span class="sxs-lookup"><span data-stu-id="f9a2d-109">Throws if there isn't a content control with the identifier in this collection.</span></span>

      <span data-ttu-id="f9a2d-110">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="f9a2d-110">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getById(id)
    fullName: getById(id)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getById(id: number): Word.ContentControl;'
      return:
        type:
          - word.Word.ContentControl
        description: |-


          #### <a name="examples"></a><span data-ttu-id="f9a2d-111">Exemplos</span><span class="sxs-lookup"><span data-stu-id="f9a2d-111">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the content control that contains a specific id.
              var contentControl = context.document.contentControls.getById(30086310);

              // Queue a command to load the text property for a content control.
              context.load(contentControl, 'text');

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('The content control with that Id has been found in this document.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the content control that contains a specific id.
              var contentControl = context.document.contentControls.getByIdOrNullObject(30086310);

              // Queue a command to load the text property for a content control.
              context.load(contentControl, 'text');

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  if (contentControl.isNullObject) {
                      console.log('There is no content control with that ID.')
                  } else {
                      console.log('The content control with that ID has been found in this document.');
                  }
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: id
          description: <span data-ttu-id="f9a2d-112">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="f9a2d-112">Required.</span></span> <span data-ttu-id="f9a2d-113">Um identificador de controle de conteúdo.</span><span class="sxs-lookup"><span data-stu-id="f9a2d-113">A content control identifier.</span></span>
          type:
            - number
  - uid: word.Word.ContentControlCollection.getByIdOrNullObject
    summary: |-
      <span data-ttu-id="f9a2d-114">Obtém um controle de conteúdo pelo respectivo identificador.</span><span class="sxs-lookup"><span data-stu-id="f9a2d-114">Gets a content control by its identifier.</span></span> <span data-ttu-id="f9a2d-115">Retorna um objeto NULL se não houver um controle de conteúdo com o identificador nessa coleção.</span><span class="sxs-lookup"><span data-stu-id="f9a2d-115">Returns a null object if there isn't a content control with the identifier in this collection.</span></span>

      <span data-ttu-id="f9a2d-116">\[[Conjunto de APIs: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="f9a2d-116">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getByIdOrNullObject(id)
    fullName: getByIdOrNullObject(id)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getByIdOrNullObject(id: number): Word.ContentControl;'
      return:
        type:
          - word.Word.ContentControl
        description: |-


          #### <a name="examples"></a><span data-ttu-id="f9a2d-117">Exemplos</span><span class="sxs-lookup"><span data-stu-id="f9a2d-117">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the content control that contains a specific id.
              var contentControl = context.document.contentControls.getByIdOrNullObject(30086310);

              // Queue a command to load the text property for a content control.
              context.load(contentControl, 'text');

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  if (contentControl.isNullObject) {
                      console.log('There is no content control with that ID.')
                  } else {
                      console.log('The content control with that ID has been found in this document.');
                  }
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: id
          description: <span data-ttu-id="f9a2d-118">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="f9a2d-118">Required.</span></span> <span data-ttu-id="f9a2d-119">Um identificador de controle de conteúdo.</span><span class="sxs-lookup"><span data-stu-id="f9a2d-119">A content control identifier.</span></span>
          type:
            - number
  - uid: word.Word.ContentControlCollection.getByTag
    summary: |-
      <span data-ttu-id="f9a2d-120">Obtém os controles de conteúdo com a marca especificada.</span><span class="sxs-lookup"><span data-stu-id="f9a2d-120">Gets the content controls that have the specified tag.</span></span>

      <span data-ttu-id="f9a2d-121">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="f9a2d-121">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getByTag(tag)
    fullName: getByTag(tag)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getByTag(tag: string): Word.ContentControlCollection;'
      return:
        type:
          - word.Word.ContentControlCollection
        description: |-


          #### <a name="examples"></a><span data-ttu-id="f9a2d-122">Exemplos</span><span class="sxs-lookup"><span data-stu-id="f9a2d-122">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the content controls collection that contains a specific tag.
              var contentControlsWithTag = context.document.contentControls.getByTag('Customer-Address');

              // Queue a command to load the text property for all of content controls with a specific tag.
              context.load(contentControlsWithTag, 'text');

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  if (contentControlsWithTag.items.length === 0) {
                      console.log("There isn't a content control with a tag of Customer-Address in this document.");
                  } else {
                      console.log(
                          'The first content control with the tag of Customer-Address has this text: ' + 
                          contentControlsWithTag.items[0].text);
                  }

              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });

          // The Word-Add-in-DocumentAssembly sample has another example of using the getByTag method.
          // https://github.com/OfficeDev/Word-Add-in-DocumentAssembly
          ```
          ```typescript
          await Word.run(async (context) => {
              let contentControls = context.document.contentControls.getByTag("customer");
              contentControls.load("text");

              await context.sync();

              for (let i = 0; i < contentControls.items.length; i++) {
                contentControls.items[i].insertText("Fabrikam", "Replace");
              }

              await context.sync();
          });
          ```
      parameters:
        - id: tag
          description: <span data-ttu-id="f9a2d-123">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="f9a2d-123">Required.</span></span> <span data-ttu-id="f9a2d-124">Uma marca definida em um controle de conteúdo.</span><span class="sxs-lookup"><span data-stu-id="f9a2d-124">A tag set on a content control.</span></span>
          type:
            - string
  - uid: word.Word.ContentControlCollection.getByTitle
    summary: |-
      <span data-ttu-id="f9a2d-125">Obtém os controles de conteúdo com o título especificado.</span><span class="sxs-lookup"><span data-stu-id="f9a2d-125">Gets the content controls that have the specified title.</span></span>

      <span data-ttu-id="f9a2d-126">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="f9a2d-126">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getByTitle(title)
    fullName: getByTitle(title)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getByTitle(title: string): Word.ContentControlCollection;'
      return:
        type:
          - word.Word.ContentControlCollection
        description: |-


          #### <a name="examples"></a><span data-ttu-id="f9a2d-127">Exemplos</span><span class="sxs-lookup"><span data-stu-id="f9a2d-127">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the content controls collection that contains a specific title.
              var contentControlsWithTitle = context.document.contentControls.getByTitle('Enter Customer Address Here');

              // Queue a command to load the text property for all of content controls with a specific title.
              context.load(contentControlsWithTitle, 'text');

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  if (contentControlsWithTitle.items.length === 0) {
                      console.log(
                          "There isn't a content control with a title of 'Enter Customer Address Here' in this document.");
                  } else {
                      console.log(
                          "The first content control with the title of 'Enter Customer Address Here' has this text: " + 
                          contentControlsWithTitle.items[0].text);
                  }

              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });

          // The Word-Add-in-DocumentAssembly sample has another example of using the getByTitle method.
          // https://github.com/OfficeDev/Word-Add-in-DocumentAssembly
          ```
      parameters:
        - id: title
          description: <span data-ttu-id="f9a2d-128">Obrigatória.</span><span class="sxs-lookup"><span data-stu-id="f9a2d-128">Required.</span></span> <span data-ttu-id="f9a2d-129">O título de um controle de conteúdo.</span><span class="sxs-lookup"><span data-stu-id="f9a2d-129">The title of a content control.</span></span>
          type:
            - string
  - uid: word.Word.ContentControlCollection.getByTypes
    summary: |-
      <span data-ttu-id="f9a2d-130">Obtém os controles de conteúdo que têm os tipos e/ou subtipos especificados.</span><span class="sxs-lookup"><span data-stu-id="f9a2d-130">Gets the content controls that have the specified types and/or subtypes.</span></span>

      <span data-ttu-id="f9a2d-131">\[[Conjunto de APIs: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="f9a2d-131">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getByTypes(types)
    fullName: getByTypes(types)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getByTypes(types: Word.ContentControlType[]): Word.ContentControlCollection;'
      return:
        type:
          - word.Word.ContentControlCollection
        description: ''
      parameters:
        - id: types
          description: <span data-ttu-id="f9a2d-132">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="f9a2d-132">Required.</span></span> <span data-ttu-id="f9a2d-133">Uma matriz de tipos de controle de conteúdo e/ou subtipos.</span><span class="sxs-lookup"><span data-stu-id="f9a2d-133">An array of content control types and/or subtypes.</span></span>
          type:
            - 'Word.ContentControlType[]'
  - uid: word.Word.ContentControlCollection.getFirst
    summary: |-
      <span data-ttu-id="f9a2d-134">Obtém o primeiro controle de conteúdo nesta coleção.</span><span class="sxs-lookup"><span data-stu-id="f9a2d-134">Gets the first content control in this collection.</span></span> <span data-ttu-id="f9a2d-135">Lança se esta coleção está vazia.</span><span class="sxs-lookup"><span data-stu-id="f9a2d-135">Throws if this collection is empty.</span></span>

      <span data-ttu-id="f9a2d-136">\[[Conjunto de APIs: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="f9a2d-136">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getFirst()
    fullName: getFirst()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getFirst(): Word.ContentControl;'
      return:
        type:
          - word.Word.ContentControl
        description: |-


          #### <a name="examples"></a><span data-ttu-id="f9a2d-137">Exemplos</span><span class="sxs-lookup"><span data-stu-id="f9a2d-137">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the first content control in the document.
              var contentControl = context.document.contentControls.getFirstOrNullObject();

              // Queue a command to load the text property for a content control.
              context.load(contentControl, 'text');

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  if (contentControl.isNullObject) {
                      console.log('There are no content controls in this document.')
                  } else {
                      console.log('The first content control has been found in this document.');
                  }
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: word.Word.ContentControlCollection.getFirstOrNullObject
    summary: |-
      <span data-ttu-id="f9a2d-138">Obtém o primeiro controle de conteúdo nesta coleção.</span><span class="sxs-lookup"><span data-stu-id="f9a2d-138">Gets the first content control in this collection.</span></span> <span data-ttu-id="f9a2d-139">Retorna um objeto NULL se essa coleção estiver vazia.</span><span class="sxs-lookup"><span data-stu-id="f9a2d-139">Returns a null object if this collection is empty.</span></span>

      <span data-ttu-id="f9a2d-140">\[[Conjunto de APIs: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="f9a2d-140">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getFirstOrNullObject()
    fullName: getFirstOrNullObject()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getFirstOrNullObject(): Word.ContentControl;'
      return:
        type:
          - word.Word.ContentControl
        description: ''
  - uid: word.Word.ContentControlCollection.getItem
    summary: |-
      <span data-ttu-id="f9a2d-141">Obtém um controle de conteúdo por seu índice na coleção.</span><span class="sxs-lookup"><span data-stu-id="f9a2d-141">Gets a content control by its index in the collection.</span></span>

      <span data-ttu-id="f9a2d-142">\[[Conjunto de APIs: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="f9a2d-142">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getItem(index)
    fullName: getItem(index)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(index: number): Word.ContentControl;'
      return:
        type:
          - word.Word.ContentControl
        description: ''
      parameters:
        - id: index
          description: <span data-ttu-id="f9a2d-143">O índice.</span><span class="sxs-lookup"><span data-stu-id="f9a2d-143">The index.</span></span>
          type:
            - number
  - uid: word.Word.ContentControlCollection.items
    summary: <span data-ttu-id="f9a2d-144">Obtém os itens filhos carregados nesta coleção.</span><span class="sxs-lookup"><span data-stu-id="f9a2d-144">Gets the loaded child items in this collection.</span></span>
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Word.ContentControl[];'
      return:
        type:
          - 'Word.ContentControl[]'
  - uid: word.Word.ContentControlCollection.load
    summary: <span data-ttu-id="f9a2d-145">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="f9a2d-145">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="f9a2d-146">Você deve chamar "context.sync()" antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="f9a2d-146">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="f9a2d-147">Além dessa assinatura, este método tem as seguintes assinaturas:</span><span class="sxs-lookup"><span data-stu-id="f9a2d-147">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="f9a2d-148">`load(option?: string | string[]): Word.ContentControlCollection`-Where Option é uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="f9a2d-148">`load(option?: string | string[]): Word.ContentControlCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="f9a2d-149">`load(option?: { select?: string; expand?: string; }): Word.ContentControlCollection`-Onde Option. Select é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades a serem carregadas, e Options. Expand é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades de navegação a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="f9a2d-149">`load(option?: { select?: string; expand?: string; }): Word.ContentControlCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="f9a2d-150">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.ContentControlCollection`– Disponível somente nos tipos de coleção.</span><span class="sxs-lookup"><span data-stu-id="f9a2d-150">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.ContentControlCollection` - Only available on collection types.</span></span> <span data-ttu-id="f9a2d-151">É semelhante à assinatura anterior.</span><span class="sxs-lookup"><span data-stu-id="f9a2d-151">It is similar to the preceding signature.</span></span> <span data-ttu-id="f9a2d-152">Option. Top especifica o número máximo de itens de coleta que podem ser incluídos no resultado.</span><span class="sxs-lookup"><span data-stu-id="f9a2d-152">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="f9a2d-153">Option. Skip especifica o número de itens que devem ser ignorados e não incluídos no resultado.</span><span class="sxs-lookup"><span data-stu-id="f9a2d-153">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="f9a2d-154">Se Option. Top for especificado, o conjunto de resultados será iniciado depois de ignorar o número de itens especificado.</span><span class="sxs-lookup"><span data-stu-id="f9a2d-154">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>

      #### <a name="examples"></a><span data-ttu-id="f9a2d-155">Exemplos</span><span class="sxs-lookup"><span data-stu-id="f9a2d-155">Examples</span></span>

      ```javascript
      // Run a batch operation against the Word object model.
      Word.run(function (context) {

          // Create a proxy object for the content controls collection.
          var contentControls = context.document.contentControls;

          // Queue a command to load the id property for all of the content controls.
          context.load(contentControls, 'id');

          // Synchronize the document state by executing the queued commands,
          // and return a promise to indicate task completion.
          return context.sync().then(function () {
              if (contentControls.items.length === 0) {
                  console.log('No content control found.');
              }
              else {
                  // Queue a command to load the properties on the first content control.
                  contentControls.items[0].load(  'appearance,' +
                                                  'cannotDelete,' +
                                                  'cannotEdit,' +
                                                  'id,' +
                                                  'placeHolderText,' +
                                                  'removeWhenEdited,' +
                                                  'title,' +
                                                  'text,' +
                                                  'type,' +
                                                  'style,' +
                                                  'tag,' +
                                                  'font/size,' +
                                                  'font/name,' +
                                                  'font/color');

                  // Synchronize the document state by executing the queued commands,
                  // and return a promise to indicate task completion.
                  return context.sync()
                      .then(function () {
                          console.log('Property values of the first content control:' +
                              '   ----- appearance: ' + contentControls.items[0].appearance +
                              '   ----- cannotDelete: ' + contentControls.items[0].cannotDelete +
                              '   ----- cannotEdit: ' + contentControls.items[0].cannotEdit +
                              '   ----- color: ' + contentControls.items[0].color +
                              '   ----- id: ' + contentControls.items[0].id +
                              '   ----- placeHolderText: ' + contentControls.items[0].placeholderText +
                              '   ----- removeWhenEdited: ' + contentControls.items[0].removeWhenEdited +
                              '   ----- title: ' + contentControls.items[0].title +
                              '   ----- text: ' + contentControls.items[0].text +
                              '   ----- type: ' + contentControls.items[0].type +
                              '   ----- style: ' + contentControls.items[0].style +
                              '   ----- tag: ' + contentControls.items[0].tag +
                              '   ----- font size: ' + contentControls.items[0].font.size +
                              '   ----- font name: ' + contentControls.items[0].font.name +
                              '   ----- font color: ' + contentControls.items[0].font.color);
                  });
              }
          });
      })
      .catch(function (error) {
          console.log('Error: ' + JSON.stringify(error));
          if (error instanceof OfficeExtension.Error) {
              console.log('Debug info: ' + JSON.stringify(error.debugInfo));
          }
      });

      // The Silly stories add-in sample shows how the load method is used
      // to load the content control collection with the tag and title properties.
      // https://aka.ms/sillystorywordaddin
      ```
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Word.Interfaces.ContentControlCollectionLoadOptions & Word.Interfaces.CollectionLoadOptions): Word.ContentControlCollection;'
      return:
        type:
          - word.Word.ContentControlCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - Word.Interfaces.ContentControlCollectionLoadOptions & Word.Interfaces.CollectionLoadOptions
  - uid: word.Word.ContentControlCollection.load_1
    summary: <span data-ttu-id="f9a2d-156">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="f9a2d-156">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="f9a2d-157">Você deve chamar `context.sync()` antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="f9a2d-157">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Word.ContentControlCollection;'
      return:
        type:
          - word.Word.ContentControlCollection
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="f9a2d-158">Uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="f9a2d-158">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: word.Word.ContentControlCollection.load_2
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): Word.ContentControlCollection;'
      return:
        type:
          - word.Word.ContentControlCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - OfficeExtension.LoadOption
  - uid: word.Word.ContentControlCollection.toJSON
    summary: '<span data-ttu-id="f9a2d-159">Substitui o método `toJSON()` JavaScript para fornecer uma saída mais útil quando um objeto API é passado para`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="f9a2d-159">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="f9a2d-160">.</span><span class="sxs-lookup"><span data-stu-id="f9a2d-160"></span></span> <span data-ttu-id="f9a2d-161">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="f9a2d-161"></span></span><!-- --><span data-ttu-id="f9a2d-162">, por sua vez, chama `toJSON` o método do objeto que é passado para ele.) Enquanto o objeto `Word.ContentControlCollection` original é um objeto API, o `toJSON` método retorna um objeto JavaScript simples (digitado como`Word.Interfaces.ContentControlCollectionData`</span><span class="sxs-lookup"><span data-stu-id="f9a2d-162">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Word.ContentControlCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.ContentControlCollectionData`</span></span><!-- --><span data-ttu-id="f9a2d-163">) que contém uma matriz de "itens" com cópias superficiais de qualquer propriedade carregada dos itens da coleção.</span><span class="sxs-lookup"><span data-stu-id="f9a2d-163">) that contains an "items" array with shallow copies of any loaded properties from the collection''s items.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Word.Interfaces.ContentControlCollectionData;'
      return:
        type:
          - word.Word.Interfaces.ContentControlCollectionData
        description: ''
  - uid: word.Word.ContentControlCollection.track
    summary: '<span data-ttu-id="f9a2d-164">Acompanha o objeto para ajuste automático com base nas alterações adjacentes no documento.</span><span class="sxs-lookup"><span data-stu-id="f9a2d-164">Track the object for automatic adjustment based on surrounding changes in the document.</span></span> <span data-ttu-id="f9a2d-165">Essa chamada é uma abreviação de context.trackedObjects.add(thisObject).</span><span class="sxs-lookup"><span data-stu-id="f9a2d-165">This call is a shorthand for context.trackedObjects.add(thisObject).</span></span> <span data-ttu-id="f9a2d-166">Se você estiver usando esse objeto em chamadas ".sync" e fora da execução sequencial de um lote ".run" e receber um erro "InvalidObjectPath" ao definir uma propriedade ou invocar um método no objeto, era necessário ter adicionado o objeto à coleção de objetos rastreados quando o objeto foi criado pela primeira vez.</span><span class="sxs-lookup"><span data-stu-id="f9a2d-166">If you are using this object across ".sync" calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you needed to have added the object to the tracked object collection when the object was first created.</span></span>'
    name: track()
    fullName: track()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'track(): Word.ContentControlCollection;'
      return:
        type:
          - word.Word.ContentControlCollection
        description: ''
  - uid: word.Word.ContentControlCollection.untrack
    summary: '<span data-ttu-id="f9a2d-167">Libere a memória associada a este objeto, se ele já tiver sido rastreado anteriormente.</span><span class="sxs-lookup"><span data-stu-id="f9a2d-167">Release the memory associated with this object, if it has previously been tracked.</span></span> <span data-ttu-id="f9a2d-168">Essa chamada é uma abreviação de context.trackedObjects.remove(thisObject).</span><span class="sxs-lookup"><span data-stu-id="f9a2d-168">This call is shorthand for context.trackedObjects.remove(thisObject).</span></span> <span data-ttu-id="f9a2d-169">Ter muitos objetos rastreados desacelera o aplicativo host, por isso, lembre-se de liberar todos os objetos adicionados após usá-los.</span><span class="sxs-lookup"><span data-stu-id="f9a2d-169">Having many tracked objects slows down the host application, so please remember to free any objects you add, once you''re done using them.</span></span> <span data-ttu-id="f9a2d-170">Você precisa chamar "context.sync()" antes da liberação da memória entrar em vigor.</span><span class="sxs-lookup"><span data-stu-id="f9a2d-170">You will need to call "context.sync()" before the memory release takes effect.</span></span>'
    name: untrack()
    fullName: untrack()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'untrack(): Word.ContentControlCollection;'
      return:
        type:
          - word.Word.ContentControlCollection
        description: ''