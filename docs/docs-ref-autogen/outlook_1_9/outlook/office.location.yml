### YamlMime:TSType
name: Office.Location
uid: outlook!Office.Location:interface
package: outlook!
fullName: Office.Location
summary: >-
  Fornece métodos para obter e definir o local de uma reunião em um suplemento do Outlook.


  \[[Conjunto de API: Caixa de Correio 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
remarks: >-
  **[Nível mínimo de permissão](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**:`ReadItem`


  **[Modo do Outlook aplicável](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- -->**: Redação
isPreview: false
isDeprecated: false
type: interface
methods:
- name: getAsync(options, callback)
  uid: outlook!Office.Location#getAsync:member(1)
  package: outlook!
  fullName: getAsync(options, callback)
  summary: >-
    Obtém o local de um compromisso.


    O método `getAsync` inicia uma chamada assíncrona para o Exchange Server para obter o local de um compromisso. O local do compromisso é fornecido como uma cadeia de caracteres na `asyncResult.value` propriedade.


    \[[Conjunto de API: Caixa de Correio 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    **[Nível mínimo de permissão](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**:`ReadItem`


    **[Modo do Outlook aplicável](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- -->**: Redação


    #### <a name="examples"></a>Exemplos


    ```javascript

    var userContext = { value : 1 };

    Office.context.mailbox.item.location.getAsync( { context: userContext}, callback);


    function callback(asyncResult) {
        var context = asyncResult.context;
        var location = asyncResult.value;
    }

    ```
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getAsync(options: Office.AsyncContextOptions, callback: (asyncResult: Office.AsyncResult<string>) => void): void;'
    parameters:
    - id: options
      description: 'Um objeto literal que contém uma ou mais das propriedades a seguir. `asyncContext`<!-- -->: Os desenvolvedores podem fornecer qualquer objeto que desejam acessar no método de retorno de chamada.'
      type: <xref uid="office!Office.AsyncContextOptions:interface" />
    - id: callback
      description: Quando o método é concluído, a função passada no `callback` parâmetro é chamada com um único parâmetro de tipo `Office.AsyncResult`<!-- -->.
      type: '(asyncResult: <xref uid="office!Office.AsyncResult:interface" />&lt;string&gt;) =&gt; void'
    return:
      type: void
      description: ''
- name: getAsync(callback)
  uid: outlook!Office.Location#getAsync:member(2)
  package: outlook!
  fullName: getAsync(callback)
  summary: >-
    Obtém o local de um compromisso.


    O método `getAsync` inicia uma chamada assíncrona para o Exchange Server para obter o local de um compromisso. O local do compromisso é fornecido como uma cadeia de caracteres na `asyncResult.value` propriedade.


    \[[Conjunto de API: Caixa de Correio 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    **[Nível mínimo de permissão](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**:`ReadItem`


    **[Modo do Outlook aplicável](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- -->**: Redação


    #### <a name="examples"></a>Exemplos


    ```javascript

    // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/outlook/90-other-item-apis/get-set-location-appointment-organizer.yaml

    Office.context.mailbox.item.location.getAsync((result) => {
      if (result.status !== Office.AsyncResultStatus.Succeeded) {
        console.error(`Action failed with message ${result.error.message}`);
        return;
      }
      console.log(`Appointment location: ${result.value}`);
    });

    ```
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getAsync(callback: (asyncResult: Office.AsyncResult<string>) => void): void;'
    parameters:
    - id: callback
      description: Quando o método é concluído, a função passada no `callback` parâmetro é chamada com um único parâmetro de tipo `Office.AsyncResult`<!-- -->.
      type: '(asyncResult: <xref uid="office!Office.AsyncResult:interface" />&lt;string&gt;) =&gt; void'
    return:
      type: void
      description: ''
- name: setAsync(location, options, callback)
  uid: outlook!Office.Location#setAsync:member(1)
  package: outlook!
  fullName: setAsync(location, options, callback)
  summary: >-
    Define o local de um compromisso.


    O método `setAsync` inicia uma chamada assíncrona para o Exchange Server para definir o local de um compromisso. Definir o local de um compromisso substitui o local atual.


    \[[Conjunto de API: Caixa de Correio 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    **[Nível mínimo de permissão](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**:`ReadItem`


    **[Modo do Outlook aplicável](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- -->**: Redação


    **Erros**:


    - DataExceedsMaximumSize: o parâmetro location tem mais de 255 caracteres.


    #### <a name="examples"></a>Exemplos


    ```javascript

    // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/outlook/90-other-item-apis/get-set-location-appointment-organizer.yaml

    var location = "my office";

    Office.context.mailbox.item.location.setAsync(location, (result) => {
      if (result.status !== Office.AsyncResultStatus.Succeeded) {
        console.error(`Action failed with message ${result.error.message}`);
        return;
      }
      console.log(`Successfully set location to ${location}`);
    });

    ```
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setAsync(location: string, options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
    parameters:
    - id: location
      description: O local do compromisso. A cadeia de caracteres está limitada a 255 caracteres.
      type: string
    - id: options
      description: 'Opcional. Um objeto literal que contém uma ou mais das propriedades a seguir. `asyncContext`<!-- -->: Os desenvolvedores podem fornecer qualquer objeto que desejam acessar no método de retorno de chamada.'
      type: <xref uid="office!Office.AsyncContextOptions:interface" />
    - id: callback
      description: Opcional. Quando o método é concluído, a função passada no `callback` parâmetro é chamada com um único parâmetro de tipo `Office.AsyncResult`<!-- -->. Se a configuração do local falhar, a propriedade `asyncResult.error` conterá um código de erro.
      type: '(asyncResult: <xref uid="office!Office.AsyncResult:interface" />&lt;void&gt;) =&gt; void'
    return:
      type: void
      description: ''
metadata:
  ms.openlocfilehash: ceef84cb5b020de89118abf02086cb3f6a9e8c9e
  ms.sourcegitcommit: a8a86cfcaff5ad7dacc653d63502c76b1fedbebe
  ms.translationtype: MT
  ms.contentlocale: pt-BR
  ms.lasthandoff: 03/26/2021
  ms.locfileid: "51234313"
