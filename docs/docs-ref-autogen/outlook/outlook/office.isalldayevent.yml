### YamlMime:UniversalReference
items:
  - uid: 'outlook!Office.IsAllDayEvent:interface'
    summary: |-
      Fornece métodos para obter e definir o status de evento de dia inteiro de uma reunião em um suplemento do Outlook.

      \[[Conjunto de APIs: visualização de caixa de correio](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **<!-- --> [Nível de permissão mínimo](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)**:`ReadItem`

      **<!-- --> [Modo do Outlook aplicável](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)**: redigir
    isPreview: true
    name: Office.IsAllDayEvent
    fullName: Office.IsAllDayEvent
    langs:
      - typeScript
    type: interface
    package: outlook!
    children:
      - 'outlook!Office.IsAllDayEvent#getAsync:member(1)'
      - 'outlook!Office.IsAllDayEvent#getAsync:member(2)'
      - 'outlook!Office.IsAllDayEvent#setAsync:member(1)'
      - 'outlook!Office.IsAllDayEvent#setAsync:member(2)'
  - uid: 'outlook!Office.IsAllDayEvent#getAsync:member(1)'
    summary: |-
      Obtém o valor booliano que indica se o evento é o dia inteiro ou não.

      \[[Conjunto de APIs: visualização de caixa de correio](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **<!-- --> [Nível de permissão mínimo](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)**:`ReadItem`

      **<!-- --> [Modo do Outlook aplicável](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)**: redigir
    isPreview: true
    name: 'getAsync(options, callback)'
    fullName: 'getAsync(options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getAsync(options: Office.AsyncContextOptions, callback: (asyncResult: Office.AsyncResult<boolean>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: 'Um objeto literal que contém uma ou mais das propriedades a seguir. `asyncContext`<!-- -->: Os desenvolvedores podem fornecer qualquer objeto que desejarem acessar no método de retorno de chamada.'
          type:
            - 'outlook!Office.AsyncContextOptions:interface'
        - id: callback
          description: 'Quando o método for concluído, a função passada ao `callback` parâmetro será chamada com um único parâmetro do tipo`Office.AsyncResult`<!-- -->.'
          type:
            - 'outlook!Office.IsAllDayEvent#getAsync~0:complex'
  - uid: 'outlook!Office.IsAllDayEvent#getAsync:member(2)'
    summary: |-
      Obtém o valor booliano que indica se o evento é o dia inteiro ou não.

      \[[Conjunto de APIs: visualização de caixa de correio](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **<!-- --> [Nível de permissão mínimo](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)**:`ReadItem`

      **<!-- --> [Modo do Outlook aplicável](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)**: redigir

      #### <a name="examples"></a>Exemplos

      ```javascript
      // Get isAllDayEvent property.
      console.log(Office.context.mailbox.item.isAllDayEvent.getAsync(
          function(asyncResult) {
              if (asyncResult.status === Office.AsyncResultStatus.Succeeded) {
                  console.log("Is an all-day event? " + asyncResult.value);
              } else {
                  console.log("Failed to get if this is an all-day event. Error: " + JSON.stringify(asyncResult.error));
              }
          });
      ```
    isPreview: true
    name: getAsync(callback)
    fullName: getAsync(callback)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getAsync(callback: (asyncResult: Office.AsyncResult<boolean>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: 'Quando o método for concluído, a função passada ao `callback` parâmetro será chamada com um único parâmetro do tipo`Office.AsyncResult`<!-- -->.'
          type:
            - 'outlook!Office.IsAllDayEvent#getAsync~1:complex'
  - uid: 'outlook!Office.IsAllDayEvent#setAsync:member(1)'
    summary: |-
      Define o status de evento de dia inteiro de um compromisso.

      \[[Conjunto de APIs: visualização de caixa de correio](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      Se um compromisso for marcado como um evento de dia inteiro:-o horário de início e de término será marcado como 12:00 AM (assim como na interface do usuário do Outlook). A hora de início retornará 12:00 AM e a hora de término será 12:00 no dia seguinte.

      **<!-- --> [Nível de permissão mínimo](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)**:`ReadWriteItem`

      **<!-- --> [Modo do Outlook aplicável](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)**: redigir
    isPreview: true
    name: 'setAsync(isAllDayEvent, options, callback)'
    fullName: 'setAsync(isAllDayEvent, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setAsync(isAllDayEvent: boolean, options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: isAllDayEvent
          description: valor booliano para definir o status do evento de dia inteiro.
          type:
            - boolean
        - id: options
          description: 'Opcional. Um objeto literal que contém uma ou mais das propriedades a seguir. `asyncContext`<!-- -->: Os desenvolvedores podem fornecer qualquer objeto que desejarem acessar no método de retorno de chamada.'
          type:
            - 'outlook!Office.AsyncContextOptions:interface'
        - id: callback
          description: 'Opcional. Quando o método for concluído, a função passada ao `callback` parâmetro será chamada com um único parâmetro,`asyncResult`<!-- -->, que é um `Office.AsyncResult` objeto.'
          type:
            - 'outlook!Office.IsAllDayEvent#setAsync~0:complex'
  - uid: 'outlook!Office.IsAllDayEvent#setAsync:member(2)'
    summary: |-
      Define o status de evento de dia inteiro de um compromisso.

      \[[Conjunto de APIs: visualização de caixa de correio](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      Se um compromisso for marcado como um evento de dia inteiro:-o horário de início e de término será marcado como 12:00 AM (assim como na interface do usuário do Outlook). A hora de início retornará 12:00 AM e a hora de término será 12:00 no dia seguinte.

      **<!-- --> [Nível de permissão mínimo](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)**:`ReadWriteItem`

      **<!-- --> [Modo do Outlook aplicável](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)**: redigir

      #### <a name="examples"></a>Exemplos

      ```javascript
      // Set isAllDayEvent property.
      Office.context.mailbox.item.isAllDayEvent.setAsync(
          true,
          function (asyncResult) {
              if (asyncResult.status === Office.AsyncResultStatus.Failed) {
                  console.log("Failed to set all-day event: " + JSON.stringify(asyncResult.error));
              } else {
                  console.log("Appointment set to all-day event.");
              }
          });
      ```
    isPreview: true
    name: 'setAsync(isAllDayEvent, callback)'
    fullName: 'setAsync(isAllDayEvent, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setAsync(isAllDayEvent: boolean, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: isAllDayEvent
          description: valor booliano para definir o status do evento de dia inteiro.
          type:
            - boolean
        - id: callback
          description: 'Opcional. Quando o método for concluído, a função passada ao `callback` parâmetro será chamada com um único parâmetro,`asyncResult`<!-- -->, que é um `Office.AsyncResult` objeto.'
          type:
            - 'outlook!Office.IsAllDayEvent#setAsync~1:complex'
references:
  - uid: 'outlook!Office.AsyncContextOptions:interface'
    name: Office.AsyncContextOptions
  - uid: 'outlook!Office.IsAllDayEvent#getAsync~0:complex'
    name: '(asyncResult: Office.AsyncResult<boolean>) => void'
    fullName: '(asyncResult: Office.AsyncResult<boolean>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <boolean>) => void
        fullName: <boolean>) => void
  - uid: 'outlook!Office.IsAllDayEvent#getAsync~1:complex'
    name: '(asyncResult: Office.AsyncResult<boolean>) => void'
    fullName: '(asyncResult: Office.AsyncResult<boolean>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <boolean>) => void
        fullName: <boolean>) => void
  - uid: 'outlook!Office.IsAllDayEvent#setAsync~0:complex'
    name: '(asyncResult: Office.AsyncResult<void>) => void'
    fullName: '(asyncResult: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'outlook!Office.IsAllDayEvent#setAsync~1:complex'
    name: '(asyncResult: Office.AsyncResult<void>) => void'
    fullName: '(asyncResult: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void