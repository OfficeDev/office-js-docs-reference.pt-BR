### YamlMime:UniversalReference
items:
  - uid: 'outlook!Office.MasterCategories:interface'
    summary: |-
      Representa a lista mestra de categorias da caixa de correio.

      No Outlook, um usuário pode marcar mensagens e compromissos usando uma categoria para codificar as cores. O usuário define as categorias em uma lista mestra em sua caixa de correio. Ele pode, em seguida, aplicar uma ou mais categorias a um item.

      **Importante**: em cenários delegados ou compartilhados, o representante pode obter as categorias na lista mestre, mas não pode adicionar ou remover categorias.

      \[[Conjunto de APIs: caixa de correio 1,8](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      ** <!-- --> [Nível de permissão mínimo](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)**:`ReadWriteMailbox`

      ** <!-- --> [Modo do Outlook aplicável](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)**: redação ou leitura
    name: Office.MasterCategories
    fullName: Office.MasterCategories
    langs:
      - typeScript
    type: interface
    package: outlook!
    children:
      - 'outlook!Office.MasterCategories#addAsync:member(1)'
      - 'outlook!Office.MasterCategories#addAsync:member(2)'
      - 'outlook!Office.MasterCategories#getAsync:member(1)'
      - 'outlook!Office.MasterCategories#getAsync:member(2)'
      - 'outlook!Office.MasterCategories#removeAsync:member(1)'
      - 'outlook!Office.MasterCategories#removeAsync:member(2)'
  - uid: 'outlook!Office.MasterCategories#addAsync:member(1)'
    summary: |-
      Adiciona categorias à lista mestra em uma caixa de correio. Cada categoria deve ter um nome exclusivo, mas várias categorias podem usar a mesma cor.

      \[[Conjunto de APIs: caixa de correio 1,8](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      ** <!-- --> [Nível de permissão mínimo](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)**:`ReadWriteMailbox`

      ** <!-- --> [Modo do Outlook aplicável](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)**: redação ou leitura

      **Erros**:

      - `DuplicateCategory`<!-- -->: Uma das categorias fornecidas já está na lista mestra de categorias.

      - `PermissionDenied`<!-- -->: O usuário não tem permissão para executar esta ação.
    name: 'addAsync(categories, options, callback)'
    fullName: 'addAsync(categories, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addAsync(categories: CategoryDetails[], options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: categories
          description: As categorias a serem adicionadas à lista mestra da caixa de correio.
          type:
            - 'outlook!Office.MasterCategories#addAsync~0:complex'
        - id: options
          description: 'Opcional. Um objeto literal que contém uma ou mais das propriedades a seguir. `asyncContext`<!-- -->: Os desenvolvedores podem fornecer qualquer objeto que desejarem acessar no método de retorno de chamada.'
          type:
            - 'office!Office.AsyncContextOptions:interface'
        - id: callback
          description: 'Opcional. Quando o método for concluído, a função passada ao `callback` parâmetro será chamada com um único parâmetro do tipo`Office.AsyncResult`<!-- -->.'
          type:
            - 'outlook!Office.MasterCategories#addAsync~1:complex'
  - uid: 'outlook!Office.MasterCategories#addAsync:member(2)'
    summary: |-
      Adiciona categorias à lista mestra em uma caixa de correio. Cada categoria deve ter um nome exclusivo, mas várias categorias podem usar a mesma cor.

      \[[Conjunto de APIs: caixa de correio 1,8](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      ** <!-- --> [Nível de permissão mínimo](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)**:`ReadWriteMailbox`

      ** <!-- --> [Modo do Outlook aplicável](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)**: redação ou leitura

      **Erros**:

      - `DuplicateCategory`<!-- -->: Uma das categorias fornecidas já está na lista mestra de categorias.

      - `PermissionDenied`<!-- -->: O usuário não tem permissão para executar esta ação.

      #### <a name="examples"></a>Exemplos

      ```javascript
      // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/outlook/45-categories/work-with-master-categories.yaml
      var masterCategoriesToAdd = [
        {
          displayName: "TestCategory",
          color: Office.MailboxEnums.CategoryColor.Preset0
        }
      ];

      Office.context.mailbox.masterCategories.addAsync(masterCategoriesToAdd, function(asyncResult) {
        if (asyncResult.status === Office.AsyncResultStatus.Succeeded) {
          console.log("Successfully added categories to master list");
        } else {
          console.log("masterCategories.addAsync call failed with error: " + asyncResult.error.message);
        }
      });
      ```
    name: 'addAsync(categories, callback)'
    fullName: 'addAsync(categories, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addAsync(categories: CategoryDetails[], callback: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: categories
          description: As categorias a serem adicionadas à lista mestra da caixa de correio.
          type:
            - 'outlook!Office.MasterCategories#addAsync~2:complex'
        - id: callback
          description: 'Quando o método for concluído, a função passada ao `callback` parâmetro será chamada com um único parâmetro do tipo`Office.AsyncResult`<!-- -->. Se a adição de categorias falhar, a `asyncResult.error` Propriedade conterá um código de erro.'
          type:
            - 'outlook!Office.MasterCategories#addAsync~3:complex'
  - uid: 'outlook!Office.MasterCategories#getAsync:member(1)'
    summary: |-
      Obtém a lista mestra de categorias em uma caixa de correio.

      \[[Conjunto de APIs: caixa de correio 1,8](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      ** <!-- --> [Nível de permissão mínimo](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)**:`ReadWriteMailbox`

      ** <!-- --> [Modo do Outlook aplicável](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)**: redação ou leitura
    name: 'getAsync(options, callback)'
    fullName: 'getAsync(options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getAsync(options: Office.AsyncContextOptions, callback: (asyncResult: Office.AsyncResult<CategoryDetails[]>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: 'Um objeto literal que contém uma ou mais das propriedades a seguir. `asyncContext`<!-- -->: Os desenvolvedores podem fornecer qualquer objeto que desejarem acessar no método de retorno de chamada.'
          type:
            - 'office!Office.AsyncContextOptions:interface'
        - id: callback
          description: 'Quando o método for concluído, a função passada ao `callback` parâmetro será chamada com um único parâmetro do tipo`Office.AsyncResult`<!-- -->. Se a adição de categorias falhar, a `asyncResult.error` Propriedade conterá um código de erro.'
          type:
            - 'outlook!Office.MasterCategories#getAsync~0:complex'
  - uid: 'outlook!Office.MasterCategories#getAsync:member(2)'
    summary: |-
      Obtém a lista mestra de categorias em uma caixa de correio.

      \[[Conjunto de APIs: caixa de correio 1,8](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      ** <!-- --> [Nível de permissão mínimo](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)**:`ReadWriteMailbox`

      ** <!-- --> [Modo do Outlook aplicável](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)**: redação ou leitura

      #### <a name="examples"></a>Exemplos

      ```javascript
      // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/outlook/45-categories/work-with-master-categories.yaml
      Office.context.mailbox.masterCategories.getAsync(function(asyncResult) {
        if (asyncResult.status === Office.AsyncResultStatus.Succeeded) {
          var categories = asyncResult.value;
          if (categories && categories.length > 0) {
            console.log("Master categories:");
            console.log(JSON.stringify(categories));
          } else {
            console.log("There are no categories in the master list.");
          }
        } else {
          console.error(asyncResult.error);
        }
      });
      ```
    name: getAsync(callback)
    fullName: getAsync(callback)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getAsync(callback: (asyncResult: Office.AsyncResult<CategoryDetails[]>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: 'Quando o método for concluído, a função passada ao `callback` parâmetro será chamada com um único parâmetro do tipo`Office.AsyncResult`<!-- -->.'
          type:
            - 'outlook!Office.MasterCategories#getAsync~1:complex'
  - uid: 'outlook!Office.MasterCategories#removeAsync:member(1)'
    summary: |-
      Remove categorias da lista mestra em uma caixa de correio.

      \[[Conjunto de APIs: caixa de correio 1,8](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      ** <!-- --> [Nível de permissão mínimo](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)**:`ReadWriteMailbox`

      ** <!-- --> [Modo do Outlook aplicável](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)**: redação ou leitura

      **Erros**:

      - `PermissionDenied`<!-- -->: O usuário não tem permissão para executar esta ação.
    name: 'removeAsync(categories, options, callback)'
    fullName: 'removeAsync(categories, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removeAsync(categories: string[], options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: categories
          description: As categorias a serem removidas da lista mestra na caixa de correio.
          type:
            - 'string[]'
        - id: options
          description: 'Opcional. Um objeto literal que contém uma ou mais das propriedades a seguir. `asyncContext`<!-- -->: Os desenvolvedores podem fornecer qualquer objeto que desejarem acessar no método de retorno de chamada.'
          type:
            - 'office!Office.AsyncContextOptions:interface'
        - id: callback
          description: 'Opcional. Quando o método for concluído, a função passada ao `callback` parâmetro será chamada com um único parâmetro do tipo`Office.AsyncResult`<!-- -->. Se a remoção de categorias falhar, a `asyncResult.error` Propriedade conterá um código de erro.'
          type:
            - 'outlook!Office.MasterCategories#removeAsync~0:complex'
  - uid: 'outlook!Office.MasterCategories#removeAsync:member(2)'
    summary: |-
      Remove categorias da lista mestra em uma caixa de correio.

      \[[Conjunto de APIs: caixa de correio 1,8](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      ** <!-- --> [Nível de permissão mínimo](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)**:`ReadWriteMailbox`

      ** <!-- --> [Modo do Outlook aplicável](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)**: redação ou leitura

      **Erros**:

      - `PermissionDenied`<!-- -->: O usuário não tem permissão para executar esta ação.

      #### <a name="examples"></a>Exemplos

      ```javascript
      // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/outlook/45-categories/work-with-master-categories.yaml
      var masterCategoriesToRemove = ["TestCategory"];

      Office.context.mailbox.masterCategories.removeAsync(masterCategoriesToRemove, function(asyncResult) {
        if (asyncResult.status === Office.AsyncResultStatus.Succeeded) {
          console.log("Successfully removed categories from master list");
        } else {
          console.log("masterCategories.removeAsync call failed with error: " + asyncResult.error.message);
        }
      });
      ```
    name: 'removeAsync(categories, callback)'
    fullName: 'removeAsync(categories, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removeAsync(categories: string[], callback: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: categories
          description: As categorias a serem removidas da lista mestra na caixa de correio.
          type:
            - 'string[]'
        - id: callback
          description: 'Quando o método for concluído, a função passada ao `callback` parâmetro será chamada com um único parâmetro do tipo`Office.AsyncResult`<!-- -->. Se a remoção de categorias falhar, a `asyncResult.error` Propriedade conterá um código de erro.'
          type:
            - 'outlook!Office.MasterCategories#removeAsync~1:complex'
references:
  - uid: 'outlook!Office.MasterCategories#addAsync~0:complex'
    name: 'CategoryDetails[]'
    fullName: 'Office.CategoryDetails[]'
    spec.typeScript:
      - uid: 'outlook!Office.CategoryDetails:interface'
        name: CategoryDetails
        fullName: Office.CategoryDetails
      - name: '[]'
        fullName: '[]'
  - uid: 'office!Office.AsyncContextOptions:interface'
    name: Office.AsyncContextOptions
  - uid: 'outlook!Office.MasterCategories#addAsync~1:complex'
    name: '(asyncResult: Office.AsyncResult<void>) => void'
    fullName: '(asyncResult: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'office!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'outlook!Office.MasterCategories#addAsync~2:complex'
    name: 'CategoryDetails[]'
    fullName: 'Office.CategoryDetails[]'
    spec.typeScript:
      - uid: 'outlook!Office.CategoryDetails:interface'
        name: CategoryDetails
        fullName: Office.CategoryDetails
      - name: '[]'
        fullName: '[]'
  - uid: 'outlook!Office.MasterCategories#addAsync~3:complex'
    name: '(asyncResult: Office.AsyncResult<void>) => void'
    fullName: '(asyncResult: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'office!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'outlook!Office.MasterCategories#getAsync~0:complex'
    name: '(asyncResult: Office.AsyncResult<CategoryDetails[]>) => void'
    fullName: '(asyncResult: Office.AsyncResult<Office.CategoryDetails[]>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'office!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <
        fullName: <
      - uid: 'outlook!Office.CategoryDetails:interface'
        name: CategoryDetails
        fullName: Office.CategoryDetails
      - name: '[]>) => void'
        fullName: '[]>) => void'
  - uid: 'outlook!Office.MasterCategories#getAsync~1:complex'
    name: '(asyncResult: Office.AsyncResult<CategoryDetails[]>) => void'
    fullName: '(asyncResult: Office.AsyncResult<Office.CategoryDetails[]>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'office!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <
        fullName: <
      - uid: 'outlook!Office.CategoryDetails:interface'
        name: CategoryDetails
        fullName: Office.CategoryDetails
      - name: '[]>) => void'
        fullName: '[]>) => void'
  - uid: 'outlook!Office.MasterCategories#removeAsync~0:complex'
    name: '(asyncResult: Office.AsyncResult<void>) => void'
    fullName: '(asyncResult: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'office!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'outlook!Office.MasterCategories#removeAsync~1:complex'
    name: '(asyncResult: Office.AsyncResult<void>) => void'
    fullName: '(asyncResult: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'office!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void