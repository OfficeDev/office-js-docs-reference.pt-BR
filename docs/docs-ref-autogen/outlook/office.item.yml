### YamlMime:UniversalReference
items:
  - uid: outlook.Office.Item
    summary: |-
      <span data-ttu-id="43760-101">O namespace do item é usado para acessar a mensagem, solicitação de reunião ou compromisso atualmente selecionado.</span><span class="sxs-lookup"><span data-stu-id="43760-101">The item namespace is used to access the currently selected message, meeting request, or appointment.</span></span> <span data-ttu-id="43760-102">Você pode determinar o tipo do item usando a `itemType` propriedade.</span><span class="sxs-lookup"><span data-stu-id="43760-102">You can determine the type of the item by using the `itemType` property.</span></span>

      <span data-ttu-id="43760-103">\[[Conjunto de APIs: caixa de correio 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="43760-103">\[ [API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: '<table> <tr><td>[<span data-ttu-id="43760-104">Nível de permissão mínimo</span><span class="sxs-lookup"><span data-stu-id="43760-104">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="43760-105">Restrito</span><span class="sxs-lookup"><span data-stu-id="43760-105">Restricted</span></span></td></tr> <tr><td>[<span data-ttu-id="43760-106">Modo do Outlook aplicável</span><span class="sxs-lookup"><span data-stu-id="43760-106">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="43760-107">Escrever ou Ler</span><span class="sxs-lookup"><span data-stu-id="43760-107">Compose or Read</span></span></td></tr> </table>'
    name: Office.Item
    fullName: Office.Item
    langs:
      - typeScript
    type: interface
    package: outlook
    children:
      - outlook.Office.Item.addHandlerAsync
      - outlook.Office.Item.addHandlerAsync_1
      - outlook.Office.Item.getAttachmentContentAsync
      - outlook.Office.Item.getAttachmentContentAsync_1
      - outlook.Office.Item.getInitializationContextAsync
      - outlook.Office.Item.getInitializationContextAsync_1
      - outlook.Office.Item.getSharedPropertiesAsync
      - outlook.Office.Item.getSharedPropertiesAsync_1
      - outlook.Office.Item.loadCustomPropertiesAsync
      - outlook.Office.Item.removeHandlerAsync
      - outlook.Office.Item.removeHandlerAsync_1
      - outlook.Office.Item.body
      - outlook.Office.Item.categories
      - outlook.Office.Item.itemType
      - outlook.Office.Item.notificationMessages
      - outlook.Office.Item.seriesId
  - uid: outlook.Office.Item.addHandlerAsync
    summary: |-
      <span data-ttu-id="43760-108">Adiciona um manipulador de eventos a um evento com suporte.</span><span class="sxs-lookup"><span data-stu-id="43760-108">Adds an event handler for a supported event.</span></span>

      <span data-ttu-id="43760-109">Atualmente, os tipos de eventos com suporte são`Office.EventType.AppointmentTimeChanged`</span><span class="sxs-lookup"><span data-stu-id="43760-109">Currently the supported event types are `Office.EventType.AppointmentTimeChanged`</span></span><!-- --><span data-ttu-id="43760-110">, `Office.EventType.RecipientsChanged`</span><span class="sxs-lookup"><span data-stu-id="43760-110"></span></span><!-- --><span data-ttu-id="43760-111">, e`Office.EventType.RecurrenceChanged`</span><span class="sxs-lookup"><span data-stu-id="43760-111">, and `Office.EventType.RecurrenceChanged`</span></span><!-- --><span data-ttu-id="43760-112">.</span><span class="sxs-lookup"><span data-stu-id="43760-112"></span></span> <span data-ttu-id="43760-113">Em visualização `Office.EventType.AttachmentsChanged` e `Office.EventType.EnhancedLocationsChanged` também são compatíveis.</span><span class="sxs-lookup"><span data-stu-id="43760-113">In Preview, `Office.EventType.AttachmentsChanged` and `Office.EventType.EnhancedLocationsChanged` are also supported.</span></span>

      <span data-ttu-id="43760-114">\[[Conjunto de APIs: caixa de correio 1,7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="43760-114">\[ [API set: Mailbox 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: '<table> <tr><td>[<span data-ttu-id="43760-115">Nível de permissão mínimo</span><span class="sxs-lookup"><span data-stu-id="43760-115">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="43760-116">ReadItem</span><span class="sxs-lookup"><span data-stu-id="43760-116">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="43760-117">Modo do Outlook aplicável</span><span class="sxs-lookup"><span data-stu-id="43760-117">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="43760-118">Escrever ou Ler</span><span class="sxs-lookup"><span data-stu-id="43760-118">Compose or Read</span></span></td></tr> </table>'
    name: 'addHandlerAsync(eventType, handler, options, callback)'
    fullName: 'addHandlerAsync(eventType, handler, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addHandlerAsync(eventType: Office.EventType, handler: any, options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: eventType
          description: <span data-ttu-id="43760-119">O evento que deve invocar o manipulador.</span><span class="sxs-lookup"><span data-stu-id="43760-119">The event that should invoke the handler.</span></span>
          type:
            - Office.EventType
        - id: handler
          description: '<span data-ttu-id="43760-120">A função para manipular o evento.</span><span class="sxs-lookup"><span data-stu-id="43760-120">The function to handle the event.</span></span> <span data-ttu-id="43760-121">A função deve aceitar um parâmetro exclusivo, que é um objeto literal.</span><span class="sxs-lookup"><span data-stu-id="43760-121">The function must accept a single parameter, which is an object literal.</span></span> <span data-ttu-id="43760-122">A propriedade Type no parâmetro corresponderá ao parâmetro eventType passado para addHandlerAsync.</span><span class="sxs-lookup"><span data-stu-id="43760-122">The type property on the parameter will match the eventType parameter passed to addHandlerAsync.</span></span>'
          type:
            - any
        - id: options
          description: '<span data-ttu-id="43760-123">Opcional.</span><span class="sxs-lookup"><span data-stu-id="43760-123">Optional.</span></span> <span data-ttu-id="43760-124">Um objeto literal que contém uma ou mais das propriedades a seguir.</span><span class="sxs-lookup"><span data-stu-id="43760-124">An object literal that contains one or more of the following properties.</span></span> <span data-ttu-id="43760-125">asyncContext: os desenvolvedores podem fornecer qualquer objeto que desejarem acessar no método de retorno de chamada.</span><span class="sxs-lookup"><span data-stu-id="43760-125">asyncContext: Developers can provide any object they wish to access in the callback method.</span></span>'
          type:
            - Office.AsyncContextOptions
        - id: callback
          description: '<span data-ttu-id="43760-126">Opcional.</span><span class="sxs-lookup"><span data-stu-id="43760-126">Optional.</span></span> <span data-ttu-id="43760-127">Quando o método é concluído, a função passada no parâmetro callback é chamada com um único parâmetro, asyncResult, que é um objeto Office. AsyncResult.</span><span class="sxs-lookup"><span data-stu-id="43760-127">When the method completes, the function passed in the callback parameter is called with a single parameter, asyncResult, which is an Office.AsyncResult object.</span></span>'
          type:
            - '(asyncResult: Office.AsyncResult<void>) => void'
  - uid: outlook.Office.Item.addHandlerAsync_1
    summary: |-
      <span data-ttu-id="43760-128">Adiciona um manipulador de eventos a um evento com suporte.</span><span class="sxs-lookup"><span data-stu-id="43760-128">Adds an event handler for a supported event.</span></span>

      <span data-ttu-id="43760-129">Atualmente, os tipos de eventos com suporte são`Office.EventType.AppointmentTimeChanged`</span><span class="sxs-lookup"><span data-stu-id="43760-129">Currently the supported event types are `Office.EventType.AppointmentTimeChanged`</span></span><!-- --><span data-ttu-id="43760-130">, `Office.EventType.RecipientsChanged`</span><span class="sxs-lookup"><span data-stu-id="43760-130"></span></span><!-- --><span data-ttu-id="43760-131">, e`Office.EventType.RecurrenceChanged`</span><span class="sxs-lookup"><span data-stu-id="43760-131">, and `Office.EventType.RecurrenceChanged`</span></span><!-- --><span data-ttu-id="43760-132">.</span><span class="sxs-lookup"><span data-stu-id="43760-132"></span></span> <span data-ttu-id="43760-133">Em visualização `Office.EventType.AttachmentsChanged` e `Office.EventType.EnhancedLocationsChanged` também são compatíveis.</span><span class="sxs-lookup"><span data-stu-id="43760-133">In Preview, `Office.EventType.AttachmentsChanged` and `Office.EventType.EnhancedLocationsChanged` are also supported.</span></span>

      <span data-ttu-id="43760-134">\[[Conjunto de APIs: caixa de correio 1,7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="43760-134">\[ [API set: Mailbox 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <table> <tr><td>[<span data-ttu-id="43760-135">Nível de permissão mínimo</span><span class="sxs-lookup"><span data-stu-id="43760-135">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="43760-136">ReadItem</span><span class="sxs-lookup"><span data-stu-id="43760-136">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="43760-137">Modo do Outlook aplicável</span><span class="sxs-lookup"><span data-stu-id="43760-137">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="43760-138">Escrever ou Ler</span><span class="sxs-lookup"><span data-stu-id="43760-138">Compose or Read</span></span></td></tr> </table><span data-ttu-id="43760-139">
      ####Veja</span><span class="sxs-lookup"><span data-stu-id="43760-139">
      #### Examples</span></span>

      ```javascript
      function myHandlerFunction(eventarg) {
          if (eventarg.attachmentStatus === Office.MailboxEnums.AttachmentStatus.Added) {
              var attachment = eventarg.attachmentDetails;
              console.log("Event Fired and Attachment Added!");
              getAttachmentContentAsync(attachment.id, options, callback);
          }
      }

      Office.context.mailbox.item.addHandlerAsync(Office.EventType.AttachmentsChanged, myHandlerFunction, myCallback);
      ```
    name: 'addHandlerAsync(eventType, handler, callback)'
    fullName: 'addHandlerAsync(eventType, handler, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addHandlerAsync(eventType: Office.EventType, handler: any, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: eventType
          description: <span data-ttu-id="43760-140">O evento que deve invocar o manipulador.</span><span class="sxs-lookup"><span data-stu-id="43760-140">The event that should invoke the handler.</span></span>
          type:
            - Office.EventType
        - id: handler
          description: '<span data-ttu-id="43760-141">A função para manipular o evento.</span><span class="sxs-lookup"><span data-stu-id="43760-141">The function to handle the event.</span></span> <span data-ttu-id="43760-142">A função deve aceitar um parâmetro exclusivo, que é um objeto literal.</span><span class="sxs-lookup"><span data-stu-id="43760-142">The function must accept a single parameter, which is an object literal.</span></span> <span data-ttu-id="43760-143">A propriedade Type no parâmetro corresponderá ao parâmetro eventType passado para addHandlerAsync.</span><span class="sxs-lookup"><span data-stu-id="43760-143">The type property on the parameter will match the eventType parameter passed to addHandlerAsync.</span></span>'
          type:
            - any
        - id: callback
          description: '<span data-ttu-id="43760-144">Opcional.</span><span class="sxs-lookup"><span data-stu-id="43760-144">Optional.</span></span> <span data-ttu-id="43760-145">Quando o método é concluído, a função passada no parâmetro callback é chamada com um único parâmetro, asyncResult, que é um objeto Office. AsyncResult.</span><span class="sxs-lookup"><span data-stu-id="43760-145">When the method completes, the function passed in the callback parameter is called with a single parameter, asyncResult, which is an Office.AsyncResult object.</span></span>'
          type:
            - '(asyncResult: Office.AsyncResult<void>) => void'
  - uid: outlook.Office.Item.getAttachmentContentAsync
    summary: |-
      <span data-ttu-id="43760-146">Obtém um anexo de uma mensagem ou de um compromisso e o retorna como um objeto **AttachmentContent** .</span><span class="sxs-lookup"><span data-stu-id="43760-146">Gets an attachment from a message or appointment and returns it as an **AttachmentContent** object.</span></span>

      <span data-ttu-id="43760-147">O `getAttachmentContentAsync` método obtém o anexo com o identificador especificado do item.</span><span class="sxs-lookup"><span data-stu-id="43760-147">The `getAttachmentContentAsync` method gets the attachment with the specified identifier from the item.</span></span> <span data-ttu-id="43760-148">Como prática recomendada, você deve usar o identificador para recuperar um anexo na mesma sessão em que o attachmentIds foi recuperado com a `getAttachmentsAsync` chamada ou `item.attachments` .</span><span class="sxs-lookup"><span data-stu-id="43760-148">As a best practice, you should use the identifier to retrieve an attachment in the same session that the attachmentIds were retrieved with the `getAttachmentsAsync` or `item.attachments` call.</span></span> <span data-ttu-id="43760-149">No Outlook Web App e no OWA para Dispositivos, o identificador do anexo é válido apenas dentro da mesma sessão.</span><span class="sxs-lookup"><span data-stu-id="43760-149">In Outlook Web App and OWA for Devices, the attachment identifier is valid only within the same session.</span></span> <span data-ttu-id="43760-150">Uma sessão termina quando o usuário fecha o aplicativo, ou se o usuário começa a redigir um formulário embutido e, em seguida, abre o formulário para continuar em uma janela separada.</span><span class="sxs-lookup"><span data-stu-id="43760-150">A session is over when the user closes the app, or if the user starts composing an inline form then subsequently pops out the form to continue in a separate window.</span></span>

      <span data-ttu-id="43760-151">\[[Conjunto de APIs: visualização de caixa de correio](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="43760-151">\[ [API set: Mailbox Preview](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <table> <tr><td>[<span data-ttu-id="43760-152">Nível de permissão mínimo</span><span class="sxs-lookup"><span data-stu-id="43760-152">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="43760-153">ReadItem</span><span class="sxs-lookup"><span data-stu-id="43760-153">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="43760-154">Modo do Outlook aplicável</span><span class="sxs-lookup"><span data-stu-id="43760-154">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="43760-155">Escrever ou Ler</span><span class="sxs-lookup"><span data-stu-id="43760-155">Compose or Read</span></span></td></tr> <tr><td><span data-ttu-id="43760-156">Erros</span><span class="sxs-lookup"><span data-stu-id="43760-156">Errors</span></span></td><td><span data-ttu-id="43760-157">InvalidAttachmentId-o identificador de anexo não existe.</span><span class="sxs-lookup"><span data-stu-id="43760-157">InvalidAttachmentId - The attachment identifier does not exist.</span></span></td></tr> </table><span data-ttu-id="43760-158">
      ####Veja</span><span class="sxs-lookup"><span data-stu-id="43760-158">
      #### Examples</span></span>

      ```javascript
      var item = Office.context.mailbox.item;
      var listOfAttachments = [];
      item.getAttachmentsAsync(callback);

      function callback(result) {
          if (result.value.length > 0) {
              for (i = 0 ; i < result.value.length ; i++) {
                  var options = {asyncContext: {type: result.value[i].attachmentType}};
                  getAttachmentContentAsync(result.value[i].id, options, handleAttachmentsCallback);
              }
          }
      }

      function handleAttachmentsCallback(result) {
          // Parse string to be a url, an .eml file, a base64-encoded string, or an .icalendar file.
          if (result.format === Office.MailboxEnums.AttachmentContentFormat.Base64) {
              // Handle file attachment.
          } else if (result.format === Office.MailboxEnums.AttachmentContentFormat.Eml) {
              // Handle email item attachment.
          } else if (result.format === Office.MailboxEnums.AttachmentContentFormat.ICalendar) {
              // Handle .icalender attachment.
          } else if (result.format === Office.MailboxEnums.AttachmentContentFormat.Url) {
              // Handle cloud attachment.
          } else {
              // Handle attachment formats that are not supported.
          }
      }
      ```
    isPreview: true
    name: 'getAttachmentContentAsync(attachmentId, options, callback)'
    fullName: 'getAttachmentContentAsync(attachmentId, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getAttachmentContentAsync(attachmentId: string, options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<AttachmentContent>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: attachmentId
          description: <span data-ttu-id="43760-159">O identificador do anexo que você deseja obter.</span><span class="sxs-lookup"><span data-stu-id="43760-159">The identifier of the attachment you want to get.</span></span>
          type:
            - string
        - id: options
          description: '<span data-ttu-id="43760-160">Opcional.</span><span class="sxs-lookup"><span data-stu-id="43760-160">Optional.</span></span> <span data-ttu-id="43760-161">Um objeto literal que contém uma ou mais das propriedades a seguir.</span><span class="sxs-lookup"><span data-stu-id="43760-161">An object literal that contains one or more of the following properties.</span></span> <span data-ttu-id="43760-162">asyncContext: os desenvolvedores podem fornecer qualquer objeto que desejarem acessar no método de retorno de chamada.</span><span class="sxs-lookup"><span data-stu-id="43760-162">asyncContext: Developers can provide any object they wish to access in the callback method.</span></span>'
          type:
            - Office.AsyncContextOptions
        - id: callback
          description: '<span data-ttu-id="43760-163">Opcional.</span><span class="sxs-lookup"><span data-stu-id="43760-163">Optional.</span></span> <span data-ttu-id="43760-164">Quando o método é concluído, a função passada no parâmetro callback é chamada com um único parâmetro, asyncResult, que é um objeto Office. AsyncResult.</span><span class="sxs-lookup"><span data-stu-id="43760-164">When the method completes, the function passed in the callback parameter is called with a single parameter, asyncResult, which is an Office.AsyncResult object.</span></span> <span data-ttu-id="43760-165">Se a chamada falhar, a propriedade asyncResult. Error conterá e o código de erro com o motivo da falha.</span><span class="sxs-lookup"><span data-stu-id="43760-165">If the call fails, the asyncResult.error property will contain and error code with the reason for the failure.</span></span>'
          type:
            - '(asyncResult: Office.AsyncResult<AttachmentContent>) => void'
  - uid: outlook.Office.Item.getAttachmentContentAsync_1
    summary: |-
      <span data-ttu-id="43760-166">Obtém um anexo de uma mensagem ou de um compromisso e o retorna como um objeto **AttachmentContent** .</span><span class="sxs-lookup"><span data-stu-id="43760-166">Gets an attachment from a message or appointment and returns it as an **AttachmentContent** object.</span></span>

      <span data-ttu-id="43760-167">O `getAttachmentContentAsync` método obtém o anexo com o identificador especificado do item.</span><span class="sxs-lookup"><span data-stu-id="43760-167">The `getAttachmentContentAsync` method gets the attachment with the specified identifier from the item.</span></span> <span data-ttu-id="43760-168">Como prática recomendada, você deve usar o identificador para recuperar um anexo na mesma sessão em que o attachmentIds foi recuperado com a `getAttachmentsAsync` chamada ou `item.attachments` .</span><span class="sxs-lookup"><span data-stu-id="43760-168">As a best practice, you should use the identifier to retrieve an attachment in the same session that the attachmentIds were retrieved with the `getAttachmentsAsync` or `item.attachments` call.</span></span> <span data-ttu-id="43760-169">No Outlook Web App e no OWA para Dispositivos, o identificador do anexo é válido apenas dentro da mesma sessão.</span><span class="sxs-lookup"><span data-stu-id="43760-169">In Outlook Web App and OWA for Devices, the attachment identifier is valid only within the same session.</span></span> <span data-ttu-id="43760-170">Uma sessão termina quando o usuário fecha o aplicativo, ou se o usuário começa a redigir um formulário embutido e, em seguida, abre o formulário para continuar em uma janela separada.</span><span class="sxs-lookup"><span data-stu-id="43760-170">A session is over when the user closes the app, or if the user starts composing an inline form then subsequently pops out the form to continue in a separate window.</span></span>

      <span data-ttu-id="43760-171">\[[Conjunto de APIs: visualização de caixa de correio](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="43760-171">\[ [API set: Mailbox Preview](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: '<table> <tr><td>[<span data-ttu-id="43760-172">Nível de permissão mínimo</span><span class="sxs-lookup"><span data-stu-id="43760-172">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="43760-173">ReadItem</span><span class="sxs-lookup"><span data-stu-id="43760-173">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="43760-174">Modo do Outlook aplicável</span><span class="sxs-lookup"><span data-stu-id="43760-174">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="43760-175">Escrever ou Ler</span><span class="sxs-lookup"><span data-stu-id="43760-175">Compose or Read</span></span></td></tr> <tr><td><span data-ttu-id="43760-176">Erros</span><span class="sxs-lookup"><span data-stu-id="43760-176">Errors</span></span></td><td><span data-ttu-id="43760-177">InvalidAttachmentId-o identificador de anexo não existe.</span><span class="sxs-lookup"><span data-stu-id="43760-177">InvalidAttachmentId - The attachment identifier does not exist.</span></span></td></tr> </table>'
    isPreview: true
    name: 'getAttachmentContentAsync(attachmentId, callback)'
    fullName: 'getAttachmentContentAsync(attachmentId, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getAttachmentContentAsync(attachmentId: string, callback?: (asyncResult: Office.AsyncResult<AttachmentContent>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: attachmentId
          description: <span data-ttu-id="43760-178">O identificador do anexo que você deseja obter.</span><span class="sxs-lookup"><span data-stu-id="43760-178">The identifier of the attachment you want to get.</span></span>
          type:
            - string
        - id: callback
          description: '<span data-ttu-id="43760-179">Opcional.</span><span class="sxs-lookup"><span data-stu-id="43760-179">Optional.</span></span> <span data-ttu-id="43760-180">Quando o método é concluído, a função passada no parâmetro callback é chamada com um único parâmetro, asyncResult, que é um objeto Office. AsyncResult.</span><span class="sxs-lookup"><span data-stu-id="43760-180">When the method completes, the function passed in the callback parameter is called with a single parameter, asyncResult, which is an Office.AsyncResult object.</span></span> <span data-ttu-id="43760-181">Se a chamada falhar, a propriedade asyncResult. Error conterá e o código de erro com o motivo da falha.</span><span class="sxs-lookup"><span data-stu-id="43760-181">If the call fails, the asyncResult.error property will contain and error code with the reason for the failure.</span></span>'
          type:
            - '(asyncResult: Office.AsyncResult<AttachmentContent>) => void'
  - uid: outlook.Office.Item.getInitializationContextAsync
    summary: |-
      <span data-ttu-id="43760-182">Obtém dados de inicialização passados quando o suplemento é [ativado por uma mensagem acionável](https://docs.microsoft.com/outlook/actionable-messages/invoke-add-in-from-actionable-message)</span><span class="sxs-lookup"><span data-stu-id="43760-182">Gets initialization data passed when the add-in is [activated by an actionable message](https://docs.microsoft.com/outlook/actionable-messages/invoke-add-in-from-actionable-message)</span></span><!-- --><span data-ttu-id="43760-183">.</span><span class="sxs-lookup"><span data-stu-id="43760-183"></span></span>

      <span data-ttu-id="43760-184">**Observação**: esse método só é compatível com o Outlook 2016 para Windows (versões clique para executar acima de 16.0.8413.1000) e Outlook na Web para o Office 365.</span><span class="sxs-lookup"><span data-stu-id="43760-184">**Note**: This method is only supported by Outlook 2016 for Windows (Click-to-Run versions greater than 16.0.8413.1000) and Outlook on the web for Office 365.</span></span>

      <span data-ttu-id="43760-185">\[[Conjunto de APIs: visualização de caixa de correio](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="43760-185">\[ [API set: Mailbox Preview](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: '<table> <tr><td>[<span data-ttu-id="43760-186">Nível de permissão mínimo</span><span class="sxs-lookup"><span data-stu-id="43760-186">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="43760-187">ReadItem</span><span class="sxs-lookup"><span data-stu-id="43760-187">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="43760-188">Modo do Outlook aplicável</span><span class="sxs-lookup"><span data-stu-id="43760-188">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="43760-189">Escrever ou Ler</span><span class="sxs-lookup"><span data-stu-id="43760-189">Compose or Read</span></span></td></tr> </table>'
    isPreview: true
    name: 'getInitializationContextAsync(options, callback)'
    fullName: 'getInitializationContextAsync(options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getInitializationContextAsync(options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: '<span data-ttu-id="43760-190">Opcional.</span><span class="sxs-lookup"><span data-stu-id="43760-190">Optional.</span></span> <span data-ttu-id="43760-191">Um objeto literal que contém uma ou mais das propriedades a seguir.</span><span class="sxs-lookup"><span data-stu-id="43760-191">An object literal that contains one or more of the following properties.</span></span> <span data-ttu-id="43760-192">asyncContext: os desenvolvedores podem fornecer qualquer objeto que desejarem acessar no método de retorno de chamada.</span><span class="sxs-lookup"><span data-stu-id="43760-192">asyncContext: Developers can provide any object they wish to access in the callback method.</span></span>'
          type:
            - Office.AsyncContextOptions
        - id: callback
          description: '<span data-ttu-id="43760-193">Opcional.</span><span class="sxs-lookup"><span data-stu-id="43760-193">Optional.</span></span> <span data-ttu-id="43760-194">Quando o método é concluído, a função passada no parâmetro callback é chamada com um único parâmetro, asyncResult, que é um objeto Office. AsyncResult.</span><span class="sxs-lookup"><span data-stu-id="43760-194">When the method completes, the function passed in the callback parameter is called with a single parameter, asyncResult, which is an Office.AsyncResult object.</span></span> <span data-ttu-id="43760-195">Em caso de êxito, os dados de inicialização são fornecidos na propriedade asyncResult. Value como uma cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="43760-195">On success, the initialization data is provided in the asyncResult.value property as a string.</span></span> <span data-ttu-id="43760-196">Se não houver nenhum contexto de inicialização, o objeto asyncResult conterá um objeto Error com sua propriedade Code definida como 9020 e sua propriedade Name definida como GenericResponseError.</span><span class="sxs-lookup"><span data-stu-id="43760-196">If there is no initialization context, the asyncResult object will contain an Error object with its code property set to 9020 and its name property set to GenericResponseError.</span></span>'
          type:
            - '(asyncResult: Office.AsyncResult<string>) => void'
  - uid: outlook.Office.Item.getInitializationContextAsync_1
    summary: |-
      <span data-ttu-id="43760-197">Obtém dados de inicialização passados quando o suplemento é [ativado por uma mensagem acionável](https://docs.microsoft.com/outlook/actionable-messages/invoke-add-in-from-actionable-message)</span><span class="sxs-lookup"><span data-stu-id="43760-197">Gets initialization data passed when the add-in is [activated by an actionable message](https://docs.microsoft.com/outlook/actionable-messages/invoke-add-in-from-actionable-message)</span></span><!-- --><span data-ttu-id="43760-198">.</span><span class="sxs-lookup"><span data-stu-id="43760-198"></span></span>

      <span data-ttu-id="43760-199">**Observação**: esse método só é compatível com o Outlook 2016 para Windows (versões clique para executar acima de 16.0.8413.1000) e Outlook na Web para o Office 365.</span><span class="sxs-lookup"><span data-stu-id="43760-199">**Note**: This method is only supported by Outlook 2016 for Windows (Click-to-Run versions greater than 16.0.8413.1000) and Outlook on the web for Office 365.</span></span>

      <span data-ttu-id="43760-200">\[[Conjunto de APIs: visualização de caixa de correio](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="43760-200">\[ [API set: Mailbox Preview](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <table> <tr><td>[<span data-ttu-id="43760-201">Nível de permissão mínimo</span><span class="sxs-lookup"><span data-stu-id="43760-201">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="43760-202">ReadItem</span><span class="sxs-lookup"><span data-stu-id="43760-202">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="43760-203">Modo do Outlook aplicável</span><span class="sxs-lookup"><span data-stu-id="43760-203">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="43760-204">Escrever ou Ler</span><span class="sxs-lookup"><span data-stu-id="43760-204">Compose or Read</span></span></td></tr> </table><span data-ttu-id="43760-205">
      ####Veja</span><span class="sxs-lookup"><span data-stu-id="43760-205">
      #### Examples</span></span>

      ```javascript
      // Get the initialization context (if present).
      Office.context.mailbox.item.getInitializationContextAsync(
          function(asyncResult) {
              if (asyncResult.status === Office.AsyncResultStatus.Succeeded) {
                  if (asyncResult.value != null && asyncResult.value.length > 0) {
                      // The value is a string, parse to an object.
                      var context = JSON.parse(asyncResult.value);
                      // Do something with context.
                  } else {
                      // Empty context, treat as no context.
                  }
              } else {
                  if (asyncResult.error.code == 9020) {
                      // GenericResponseError returned when there is no context.
                      // Treat as no context.
                  } else {
                      // Handle the error.
                  }
              }
          }
      );
      ```
    isPreview: true
    name: getInitializationContextAsync(callback)
    fullName: getInitializationContextAsync(callback)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getInitializationContextAsync(callback?: (asyncResult: Office.AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: '<span data-ttu-id="43760-206">Opcional.</span><span class="sxs-lookup"><span data-stu-id="43760-206">Optional.</span></span> <span data-ttu-id="43760-207">Quando o método é concluído, a função passada no parâmetro callback é chamada com um único parâmetro, asyncResult, que é um objeto Office. AsyncResult.</span><span class="sxs-lookup"><span data-stu-id="43760-207">When the method completes, the function passed in the callback parameter is called with a single parameter, asyncResult, which is an Office.AsyncResult object.</span></span> <span data-ttu-id="43760-208">Em caso de êxito, os dados de inicialização são fornecidos na propriedade asyncResult. Value como uma cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="43760-208">On success, the initialization data is provided in the asyncResult.value property as a string.</span></span> <span data-ttu-id="43760-209">Se não houver nenhum contexto de inicialização, o objeto asyncResult conterá um objeto Error com sua propriedade Code definida como 9020 e sua propriedade Name definida como GenericResponseError.</span><span class="sxs-lookup"><span data-stu-id="43760-209">If there is no initialization context, the asyncResult object will contain an Error object with its code property set to 9020 and its name property set to GenericResponseError.</span></span>'
          type:
            - '(asyncResult: Office.AsyncResult<string>) => void'
  - uid: outlook.Office.Item.getSharedPropertiesAsync
    summary: |-
      <span data-ttu-id="43760-210">Obtém as propriedades de um compromisso ou uma mensagem em uma pasta compartilhada, calendário ou caixa de correio.</span><span class="sxs-lookup"><span data-stu-id="43760-210">Gets the properties of an appointment or message in a shared folder, calendar, or mailbox.</span></span>

      <span data-ttu-id="43760-211">\[[Conjunto de APIs: visualização de caixa de correio](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="43760-211">\[ [API set: Mailbox Preview](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: '<table> <tr><td>[<span data-ttu-id="43760-212">Nível de permissão mínimo</span><span class="sxs-lookup"><span data-stu-id="43760-212">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="43760-213">ReadItem</span><span class="sxs-lookup"><span data-stu-id="43760-213">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="43760-214">Modo do Outlook aplicável</span><span class="sxs-lookup"><span data-stu-id="43760-214">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="43760-215">Escrever ou Ler</span><span class="sxs-lookup"><span data-stu-id="43760-215">Compose or Read</span></span></td></tr> </table>'
    isPreview: true
    name: 'getSharedPropertiesAsync(options, callback)'
    fullName: 'getSharedPropertiesAsync(options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getSharedPropertiesAsync(options: Office.AsyncContextOptions, callback: (asyncResult: Office.AsyncResult<SharedProperties>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: '<span data-ttu-id="43760-216">Um objeto literal que contém uma ou mais das propriedades a seguir.</span><span class="sxs-lookup"><span data-stu-id="43760-216">An object literal that contains one or more of the following properties.</span></span> <span data-ttu-id="43760-217">asyncContext: os desenvolvedores podem fornecer qualquer objeto que desejarem acessar no método de retorno de chamada.</span><span class="sxs-lookup"><span data-stu-id="43760-217">asyncContext: Developers can provide any object they wish to access in the callback method.</span></span>'
          type:
            - Office.AsyncContextOptions
        - id: callback
          description: '<span data-ttu-id="43760-218">Quando o método for concluído, a função passada ao parâmetro callback será chamada com um único parâmetro do tipo Office. AsyncResult.</span><span class="sxs-lookup"><span data-stu-id="43760-218">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span> <span data-ttu-id="43760-219">A `value` Propriedade do resultado é as propriedades do item compartilhado.</span><span class="sxs-lookup"><span data-stu-id="43760-219">The `value` property of the result is the properties of the shared item.</span></span>'
          type:
            - '(asyncResult: Office.AsyncResult<SharedProperties>) => void'
  - uid: outlook.Office.Item.getSharedPropertiesAsync_1
    summary: |-
      <span data-ttu-id="43760-220">Obtém as propriedades de um compromisso ou uma mensagem em uma pasta compartilhada, calendário ou caixa de correio.</span><span class="sxs-lookup"><span data-stu-id="43760-220">Gets the properties of an appointment or message in a shared folder, calendar, or mailbox.</span></span>

      <span data-ttu-id="43760-221">\[[Conjunto de APIs: visualização de caixa de correio](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="43760-221">\[ [API set: Mailbox Preview](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <table> <tr><td>[<span data-ttu-id="43760-222">Nível de permissão mínimo</span><span class="sxs-lookup"><span data-stu-id="43760-222">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="43760-223">ReadItem</span><span class="sxs-lookup"><span data-stu-id="43760-223">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="43760-224">Modo do Outlook aplicável</span><span class="sxs-lookup"><span data-stu-id="43760-224">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="43760-225">Escrever ou Ler</span><span class="sxs-lookup"><span data-stu-id="43760-225">Compose or Read</span></span></td></tr> </table><span data-ttu-id="43760-226">
      ####Veja</span><span class="sxs-lookup"><span data-stu-id="43760-226">
      #### Examples</span></span>

      ```javascript
      Office.context.mailbox.item.getSharedPropertiesAsync(callback);

      function callback (asyncResult) {
          var context = asyncResult.context;
          var sharedProperties = asyncResult.value;
      }
      ```
    isPreview: true
    name: getSharedPropertiesAsync(callback)
    fullName: getSharedPropertiesAsync(callback)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getSharedPropertiesAsync(callback: (asyncResult: Office.AsyncResult<SharedProperties>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: '<span data-ttu-id="43760-227">Quando o método for concluído, a função passada ao parâmetro callback será chamada com um único parâmetro do tipo Office. AsyncResult.</span><span class="sxs-lookup"><span data-stu-id="43760-227">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span> <span data-ttu-id="43760-228">A `value` Propriedade do resultado é as propriedades do item compartilhado.</span><span class="sxs-lookup"><span data-stu-id="43760-228">The `value` property of the result is the properties of the shared item.</span></span>'
          type:
            - '(asyncResult: Office.AsyncResult<SharedProperties>) => void'
  - uid: outlook.Office.Item.loadCustomPropertiesAsync
    summary: |-
      <span data-ttu-id="43760-229">Carrega de forma assíncrona as propriedades personalizadas para esse suplemento no item selecionado.</span><span class="sxs-lookup"><span data-stu-id="43760-229">Asynchronously loads custom properties for this add-in on the selected item.</span></span>

      <span data-ttu-id="43760-230">Propriedades personalizadas são armazenadas como pares chave/valor de acordo com o aplicativo e o item.</span><span class="sxs-lookup"><span data-stu-id="43760-230">Custom properties are stored as key/value pairs on a per-app, per-item basis.</span></span> <span data-ttu-id="43760-231">Esse método retorna um objeto CustomProperties no retorno de chamada, que fornece métodos para acessar as propriedades personalizadas específicas para o item atual e o suplemento atual.</span><span class="sxs-lookup"><span data-stu-id="43760-231">This method returns a CustomProperties object in the callback, which provides methods to access the custom properties specific to the current item and the current add-in.</span></span> <span data-ttu-id="43760-232">Propriedades personalizadas não são criptografadas no item, portanto não devem ser usadas como armazenamento seguro.</span><span class="sxs-lookup"><span data-stu-id="43760-232">Custom properties are not encrypted on the item, so this should not be used as secure storage.</span></span>

      <span data-ttu-id="43760-233">As propriedades personalizadas são fornecidas como um objeto CustomProperties na propriedade asyncResult. Value.</span><span class="sxs-lookup"><span data-stu-id="43760-233">The custom properties are provided as a CustomProperties object in the asyncResult.value property.</span></span> <span data-ttu-id="43760-234">Esse objeto pode ser usado para obter, definir e remover as propriedades personalizadas do item e salvar as alterações na propriedade personalizada definida de volta no servidor.</span><span class="sxs-lookup"><span data-stu-id="43760-234">This object can be used to get, set, and remove custom properties from the item and save changes to the custom property set back to the server.</span></span>

      <span data-ttu-id="43760-235">\[[Conjunto de APIs: caixa de correio 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="43760-235">\[ [API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <table> <tr><td>[<span data-ttu-id="43760-236">Nível de permissão mínimo</span><span class="sxs-lookup"><span data-stu-id="43760-236">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="43760-237">ReadItem</span><span class="sxs-lookup"><span data-stu-id="43760-237">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="43760-238">Modo do Outlook aplicável</span><span class="sxs-lookup"><span data-stu-id="43760-238">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="43760-239">Escrever ou Ler</span><span class="sxs-lookup"><span data-stu-id="43760-239">Compose or Read</span></span></td></tr> </table><span data-ttu-id="43760-240">
      ####Veja</span><span class="sxs-lookup"><span data-stu-id="43760-240">
      #### Examples</span></span>

      ```javascript
      // The following example shows how to use the loadCustomPropertiesAsync method
      // to asynchronously load custom properties that are specific to the current item.
      // The example also shows how to use the saveAsync method to save these properties
      // back to the server. After loading the custom properties, the example uses the
      // get method to read the custom property myProp, the set method to write the
      // custom property otherProp, and then finally calls the saveAsync method to save
      // the custom properties.
      Office.initialize = function () {
          // Checks for the DOM to load using the jQuery ready function.
          $(document).ready(function () {
              // After the DOM is loaded, add-in-specific code can run.
              var mailbox = Office.context.mailbox;
              mailbox.item.loadCustomPropertiesAsync(customPropsCallback);
          });
      };

      function customPropsCallback(asyncResult) {
          var customProps = asyncResult.value;
          var myProp = customProps.get("myProp");

          customProps.set("otherProp", "value");
          customProps.saveAsync(saveCallback);
      }

      function saveCallback(asyncResult) {
      }
      ```
    name: 'loadCustomPropertiesAsync(callback, userContext)'
    fullName: 'loadCustomPropertiesAsync(callback, userContext)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'loadCustomPropertiesAsync(callback: (asyncResult: Office.AsyncResult<CustomProperties>) => void, userContext?: any): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: '<span data-ttu-id="43760-241">Quando o método for concluído, a função passada ao parâmetro callback será chamada com um único parâmetro do tipo Office. AsyncResult.</span><span class="sxs-lookup"><span data-stu-id="43760-241">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span>'
          type:
            - '(asyncResult: Office.AsyncResult<CustomProperties>) => void'
        - id: userContext
          description: <span data-ttu-id="43760-242">Opcional.</span><span class="sxs-lookup"><span data-stu-id="43760-242">Optional.</span></span> <span data-ttu-id="43760-243">Os desenvolvedores podem fornecer qualquer objeto que desejarem acessar na função de retorno de chamada.</span><span class="sxs-lookup"><span data-stu-id="43760-243">Developers can provide any object they wish to access in the callback function.</span></span> <span data-ttu-id="43760-244">Esse objeto pode ser acessado pela propriedade asyncResult. asyncContext na função de retorno de chamada.</span><span class="sxs-lookup"><span data-stu-id="43760-244">This object can be accessed by the asyncResult.asyncContext property in the callback function.</span></span>
          type:
            - any
  - uid: outlook.Office.Item.removeHandlerAsync
    summary: |-
      <span data-ttu-id="43760-245">Remove um manipulador de eventos para um tipo de evento com suporte.</span><span class="sxs-lookup"><span data-stu-id="43760-245">Removes the event handlers for a supported event type.</span></span>

      <span data-ttu-id="43760-246">Atualmente, os tipos de eventos com suporte são`Office.EventType.AppointmentTimeChanged`</span><span class="sxs-lookup"><span data-stu-id="43760-246">Currently the supported event types are `Office.EventType.AppointmentTimeChanged`</span></span><!-- --><span data-ttu-id="43760-247">, `Office.EventType.RecipientsChanged`</span><span class="sxs-lookup"><span data-stu-id="43760-247"></span></span><!-- --><span data-ttu-id="43760-248">, e`Office.EventType.RecurrenceChanged`</span><span class="sxs-lookup"><span data-stu-id="43760-248">, and `Office.EventType.RecurrenceChanged`</span></span><!-- --><span data-ttu-id="43760-249">.</span><span class="sxs-lookup"><span data-stu-id="43760-249"></span></span> <span data-ttu-id="43760-250">Em visualização `Office.EventType.AttachmentsChanged` e `Office.EventType.EnhancedLocationsChanged` também são compatíveis.</span><span class="sxs-lookup"><span data-stu-id="43760-250">In Preview, `Office.EventType.AttachmentsChanged` and `Office.EventType.EnhancedLocationsChanged` are also supported.</span></span>

      <span data-ttu-id="43760-251">\[[Conjunto de APIs: caixa de correio 1,7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="43760-251">\[ [API set: Mailbox 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: '<table> <tr><td>[<span data-ttu-id="43760-252">Nível de permissão mínimo</span><span class="sxs-lookup"><span data-stu-id="43760-252">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="43760-253">ReadItem</span><span class="sxs-lookup"><span data-stu-id="43760-253">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="43760-254">Modo do Outlook aplicável</span><span class="sxs-lookup"><span data-stu-id="43760-254">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="43760-255">Escrever ou Ler</span><span class="sxs-lookup"><span data-stu-id="43760-255">Compose or Read</span></span></td></tr> </table>'
    name: 'removeHandlerAsync(eventType, options, callback)'
    fullName: 'removeHandlerAsync(eventType, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removeHandlerAsync(eventType: Office.EventType, options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: eventType
          description: <span data-ttu-id="43760-256">O evento que deve revogar o manipulador.</span><span class="sxs-lookup"><span data-stu-id="43760-256">The event that should revoke the handler.</span></span>
          type:
            - Office.EventType
        - id: options
          description: '<span data-ttu-id="43760-257">Opcional.</span><span class="sxs-lookup"><span data-stu-id="43760-257">Optional.</span></span> <span data-ttu-id="43760-258">Um objeto literal que contém uma ou mais das propriedades a seguir.</span><span class="sxs-lookup"><span data-stu-id="43760-258">An object literal that contains one or more of the following properties.</span></span> <span data-ttu-id="43760-259">asyncContext: os desenvolvedores podem fornecer qualquer objeto que desejarem acessar no método de retorno de chamada.</span><span class="sxs-lookup"><span data-stu-id="43760-259">asyncContext: Developers can provide any object they wish to access in the callback method.</span></span>'
          type:
            - Office.AsyncContextOptions
        - id: callback
          description: '<span data-ttu-id="43760-260">Opcional.</span><span class="sxs-lookup"><span data-stu-id="43760-260">Optional.</span></span> <span data-ttu-id="43760-261">Quando o método é concluído, a função passada no parâmetro callback é chamada com um único parâmetro, asyncResult, que é um objeto Office. AsyncResult.</span><span class="sxs-lookup"><span data-stu-id="43760-261">When the method completes, the function passed in the callback parameter is called with a single parameter, asyncResult, which is an Office.AsyncResult object.</span></span>'
          type:
            - '(asyncResult: Office.AsyncResult<void>) => void'
  - uid: outlook.Office.Item.removeHandlerAsync_1
    summary: |-
      <span data-ttu-id="43760-262">Remove um manipulador de eventos para um tipo de evento com suporte.</span><span class="sxs-lookup"><span data-stu-id="43760-262">Removes the event handlers for a supported event type.</span></span>

      <span data-ttu-id="43760-263">Atualmente, os tipos de eventos com suporte são`Office.EventType.AppointmentTimeChanged`</span><span class="sxs-lookup"><span data-stu-id="43760-263">Currently the supported event types are `Office.EventType.AppointmentTimeChanged`</span></span><!-- --><span data-ttu-id="43760-264">, `Office.EventType.RecipientsChanged`</span><span class="sxs-lookup"><span data-stu-id="43760-264"></span></span><!-- --><span data-ttu-id="43760-265">, e`Office.EventType.RecurrenceChanged`</span><span class="sxs-lookup"><span data-stu-id="43760-265">, and `Office.EventType.RecurrenceChanged`</span></span><!-- --><span data-ttu-id="43760-266">.</span><span class="sxs-lookup"><span data-stu-id="43760-266"></span></span> <span data-ttu-id="43760-267">Em visualização `Office.EventType.AttachmentsChanged` e `Office.EventType.EnhancedLocationsChanged` também são compatíveis.</span><span class="sxs-lookup"><span data-stu-id="43760-267">In Preview, `Office.EventType.AttachmentsChanged` and `Office.EventType.EnhancedLocationsChanged` are also supported.</span></span>

      <span data-ttu-id="43760-268">\[[Conjunto de APIs: caixa de correio 1,7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="43760-268">\[ [API set: Mailbox 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: '<table> <tr><td>[<span data-ttu-id="43760-269">Nível de permissão mínimo</span><span class="sxs-lookup"><span data-stu-id="43760-269">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="43760-270">ReadItem</span><span class="sxs-lookup"><span data-stu-id="43760-270">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="43760-271">Modo do Outlook aplicável</span><span class="sxs-lookup"><span data-stu-id="43760-271">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="43760-272">Escrever ou Ler</span><span class="sxs-lookup"><span data-stu-id="43760-272">Compose or Read</span></span></td></tr> </table>'
    name: 'removeHandlerAsync(eventType, callback)'
    fullName: 'removeHandlerAsync(eventType, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removeHandlerAsync(eventType: Office.EventType, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: eventType
          description: <span data-ttu-id="43760-273">O evento que deve revogar o manipulador.</span><span class="sxs-lookup"><span data-stu-id="43760-273">The event that should revoke the handler.</span></span>
          type:
            - Office.EventType
        - id: callback
          description: '<span data-ttu-id="43760-274">Opcional.</span><span class="sxs-lookup"><span data-stu-id="43760-274">Optional.</span></span> <span data-ttu-id="43760-275">Quando o método é concluído, a função passada no parâmetro callback é chamada com um único parâmetro, asyncResult, que é um objeto Office. AsyncResult.</span><span class="sxs-lookup"><span data-stu-id="43760-275">When the method completes, the function passed in the callback parameter is called with a single parameter, asyncResult, which is an Office.AsyncResult object.</span></span>'
          type:
            - '(asyncResult: Office.AsyncResult<void>) => void'
  - uid: outlook.Office.Item.body
    summary: |-
      <span data-ttu-id="43760-276">Obtém um objeto que fornece métodos para manipular o corpo de um item.</span><span class="sxs-lookup"><span data-stu-id="43760-276">Gets an object that provides methods for manipulating the body of an item.</span></span>

      <span data-ttu-id="43760-277">\[[Conjunto de APIs: caixa de correio 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="43760-277">\[ [API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <table> <tr><td>[<span data-ttu-id="43760-278">Nível de permissão mínimo</span><span class="sxs-lookup"><span data-stu-id="43760-278">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="43760-279">ReadItem</span><span class="sxs-lookup"><span data-stu-id="43760-279">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="43760-280">Modo do Outlook aplicável</span><span class="sxs-lookup"><span data-stu-id="43760-280">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="43760-281">Escrever ou Ler</span><span class="sxs-lookup"><span data-stu-id="43760-281">Compose or Read</span></span></td></tr> </table><span data-ttu-id="43760-282">
      ####Veja</span><span class="sxs-lookup"><span data-stu-id="43760-282">
      #### Examples</span></span>

      ```javascript
      // This example gets the body of the item as plain text.
      Office.context.mailbox.item.body.getAsync(
          "text",
          { asyncContext: "This is passed to the callback" },
          function callback(result) {
              // Do something with the result.
          });

      // The following is an example of the result parameter passed to the callback function.
      {
          "value": "TEXT of whole body (including threads below)",
          "status": "succeeded",
          "asyncContext": "This is passed to the callback"
      }
      ```
    name: body
    fullName: body
    langs:
      - typeScript
    type: property
    syntax:
      content: 'body: Body;'
      return:
        type:
          - Body
  - uid: outlook.Office.Item.categories
    summary: |-
      <span data-ttu-id="43760-283">Obtém um objeto que fornece métodos para gerenciar as categorias do item.</span><span class="sxs-lookup"><span data-stu-id="43760-283">Gets an object that provides methods for managing the item's categories.</span></span>

      <span data-ttu-id="43760-284">\[[Conjunto de APIs: visualização de caixa de correio](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="43760-284">\[ [API set: Mailbox Preview](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: '<table> <tr><td>[<span data-ttu-id="43760-285">Nível de permissão mínimo</span><span class="sxs-lookup"><span data-stu-id="43760-285">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="43760-286">ReadItem</span><span class="sxs-lookup"><span data-stu-id="43760-286">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="43760-287">Modo do Outlook aplicável</span><span class="sxs-lookup"><span data-stu-id="43760-287">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="43760-288">Escrever ou Ler</span><span class="sxs-lookup"><span data-stu-id="43760-288">Compose or Read</span></span></td></tr> </table>'
    isPreview: true
    name: categories
    fullName: categories
    langs:
      - typeScript
    type: property
    syntax:
      content: 'categories: Categories;'
      return:
        type:
          - outlook.Office.Categories
  - uid: outlook.Office.Item.itemType
    summary: |-
      <span data-ttu-id="43760-289">Obtém o tipo de item que representa uma instância.</span><span class="sxs-lookup"><span data-stu-id="43760-289">Gets the type of item that an instance represents.</span></span>

      <span data-ttu-id="43760-290">A propriedade itemType retorna um dos valores de enumeração ItemType, indicando se a instância do objeto item é uma mensagem ou um compromisso.</span><span class="sxs-lookup"><span data-stu-id="43760-290">The itemType property returns one of the ItemType enumeration values, indicating whether the item object instance is a message or an appointment.</span></span>

      <span data-ttu-id="43760-291">\[[Conjunto de APIs: caixa de correio 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="43760-291">\[ [API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <table> <tr><td>[<span data-ttu-id="43760-292">Nível de permissão mínimo</span><span class="sxs-lookup"><span data-stu-id="43760-292">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="43760-293">ReadItem</span><span class="sxs-lookup"><span data-stu-id="43760-293">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="43760-294">Modo do Outlook aplicável</span><span class="sxs-lookup"><span data-stu-id="43760-294">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="43760-295">Escrever ou Ler</span><span class="sxs-lookup"><span data-stu-id="43760-295">Compose or Read</span></span></td></tr> </table><span data-ttu-id="43760-296">
      ####Veja</span><span class="sxs-lookup"><span data-stu-id="43760-296">
      #### Examples</span></span>

      ```javascript
      if (Office.context.mailbox.item.itemType === Office.MailboxEnums.ItemType.Message) {
          // Do something.
      } else {
          // Do something else.
      }
      ```
    name: itemType
    fullName: itemType
    langs:
      - typeScript
    type: property
    syntax:
      content: 'itemType: MailboxEnums.ItemType;'
      return:
        type:
          - MailboxEnums.ItemType
  - uid: outlook.Office.Item.notificationMessages
    summary: |-
      <span data-ttu-id="43760-297">Obtém as mensagens de notificação de um item.</span><span class="sxs-lookup"><span data-stu-id="43760-297">Gets the notification messages for an item.</span></span>

      <span data-ttu-id="43760-298">\[[Conjunto de APIs: caixa de correio 1,3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="43760-298">\[ [API set: Mailbox 1.3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <table> <tr><td>[<span data-ttu-id="43760-299">Nível de permissão mínimo</span><span class="sxs-lookup"><span data-stu-id="43760-299">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="43760-300">ReadItem</span><span class="sxs-lookup"><span data-stu-id="43760-300">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="43760-301">Modo do Outlook aplicável</span><span class="sxs-lookup"><span data-stu-id="43760-301">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="43760-302">Escrever ou Ler</span><span class="sxs-lookup"><span data-stu-id="43760-302">Compose or Read</span></span></td></tr> </table><span data-ttu-id="43760-303">
      ####Veja</span><span class="sxs-lookup"><span data-stu-id="43760-303">
      #### Examples</span></span>

      ```javascript
      // Get all notifications.
      Office.context.mailbox.item.notificationMessages.getAllAsync(
          function (asyncResult) {
              console.log(JSON.stringify(asyncResult));
          }
      );
      ```
    name: notificationMessages
    fullName: notificationMessages
    langs:
      - typeScript
    type: property
    syntax:
      content: 'notificationMessages: NotificationMessages;'
      return:
        type:
          - NotificationMessages
  - uid: outlook.Office.Item.seriesId
    summary: |-
      <span data-ttu-id="43760-304">Obtém a ID da série à qual uma instância pertence.</span><span class="sxs-lookup"><span data-stu-id="43760-304">Gets the id of the series that an instance belongs to.</span></span>

      <span data-ttu-id="43760-305">No OWA e no Outlook, a seriesid retorna a ID dos serviços Web do Exchange (EWS) do item pai (série) ao qual este item pertence.</span><span class="sxs-lookup"><span data-stu-id="43760-305">In OWA and Outlook, the seriesId returns the Exchange Web Services (EWS) ID of the parent (series) item that this item belongs to.</span></span> <span data-ttu-id="43760-306">No enTanto, no iOS e no Android, o seriesid retorna a ID REST do item pai.</span><span class="sxs-lookup"><span data-stu-id="43760-306">However, in iOS and Android, the seriesId returns the REST ID of the parent item.</span></span>

      <span data-ttu-id="43760-307">**Observação**: o identificador retornado pela propriedade seriesid é o mesmo que o identificador de item dos serviços Web do Exchange.</span><span class="sxs-lookup"><span data-stu-id="43760-307">**Note**: The identifier returned by the seriesId property is the same as the Exchange Web Services item identifier.</span></span> <span data-ttu-id="43760-308">A propriedade seriesid não é idêntica às IDs do Outlook usadas pela API REST do Outlook.</span><span class="sxs-lookup"><span data-stu-id="43760-308">The seriesId property is not identical to the Outlook IDs used by the Outlook REST API.</span></span> <span data-ttu-id="43760-309">Antes de fazer chamadas API REST usando esse valor, ela deverá ser convertida usando Office.context.mailbox.convertToRestId.</span><span class="sxs-lookup"><span data-stu-id="43760-309">Before making REST API calls using this value, it should be converted using Office.context.mailbox.convertToRestId.</span></span> <span data-ttu-id="43760-310">Para obter mais detalhes, consulte [usar as APIs REST do Outlook a partir de um suplemento do Outlook](https://docs.microsoft.com/outlook/add-ins/use-rest-api)</span><span class="sxs-lookup"><span data-stu-id="43760-310">For more details, see [Use the Outlook REST APIs from an Outlook add-in](https://docs.microsoft.com/outlook/add-ins/use-rest-api)</span></span><!-- --><span data-ttu-id="43760-311">.</span><span class="sxs-lookup"><span data-stu-id="43760-311"></span></span>

      <span data-ttu-id="43760-312">A propriedade seriesid retorna NULL para itens que não têm itens pai, como compromissos únicos, itens de série ou solicitações de reunião e retorna undefined para quaisquer outros itens que não sejam solicitações de reunião.</span><span class="sxs-lookup"><span data-stu-id="43760-312">The seriesId property returns null for items that do not have parent items such as single appointments, series items, or meeting requests and returns undefined for any other items that are not meeting requests.</span></span>

      <span data-ttu-id="43760-313">\[[Conjunto de APIs: caixa de correio 1,7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="43760-313">\[ [API set: Mailbox 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <table> <tr><td>[<span data-ttu-id="43760-314">Nível de permissão mínimo</span><span class="sxs-lookup"><span data-stu-id="43760-314">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="43760-315">ReadItem</span><span class="sxs-lookup"><span data-stu-id="43760-315">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="43760-316">Modo do Outlook aplicável</span><span class="sxs-lookup"><span data-stu-id="43760-316">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="43760-317">Escrever ou Ler</span><span class="sxs-lookup"><span data-stu-id="43760-317">Compose or Read</span></span></td></tr> </table><span data-ttu-id="43760-318">
      ####Veja</span><span class="sxs-lookup"><span data-stu-id="43760-318">
      #### Examples</span></span>

      ```javascript
      var seriesId = Office.context.mailbox.item.seriesId;

      // The seriesId property returns null for items that do
      // not have parent items (such as single appointments,
      // series items, or meeting requests) and returns
      // undefined for messages that are not meeting requests.
      var isSeriesInstance = (seriesId != null);
      console.log("SeriesId is " + seriesId 
          + " and isSeriesInstance is " + isSeriesInstance);
      ```
    name: seriesId
    fullName: seriesId
    langs:
      - typeScript
    type: property
    syntax:
      content: 'seriesId: string;'
      return:
        type:
          - string