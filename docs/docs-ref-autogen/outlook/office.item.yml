### YamlMime:UniversalReference
ms.openlocfilehash: 04dba8c3e687e14c314ee744e4a0f4cd3c467f2c
ms.sourcegitcommit: fd03ef72d6a546b0e4dbe0cc9e75d2a7cf9341a1
ms.translationtype: MT
ms.contentlocale: pt-BR
ms.lasthandoff: 02/27/2019
ms.locfileid: "30303288"
items:
- uid: outlook.Office.Item
  summary: >-
    O namespace do item é usado para acessar a mensagem, solicitação de reunião ou compromisso atualmente selecionado. Você pode determinar o tipo do item usando a `itemType` propriedade.


    \[[Conjunto de APIs: caixa de correio 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: <table> <tr><td>[Nível de permissão mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>Restrito</td></tr> <tr><td>[Modo do Outlook aplicável](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Escrever ou Ler</td></tr> </table>
  name: Office.Item
  fullName: Office.Item
  langs:
  - typeScript
  type: interface
  package: outlook
  children:
  - outlook.Office.Item.addHandlerAsync
  - outlook.Office.Item.addHandlerAsync_1
  - outlook.Office.Item.getAttachmentContentAsync
  - outlook.Office.Item.getAttachmentContentAsync_1
  - outlook.Office.Item.getInitializationContextAsync
  - outlook.Office.Item.getInitializationContextAsync_1
  - outlook.Office.Item.getSharedPropertiesAsync
  - outlook.Office.Item.getSharedPropertiesAsync_1
  - outlook.Office.Item.loadCustomPropertiesAsync
  - outlook.Office.Item.removeHandlerAsync
  - outlook.Office.Item.removeHandlerAsync_1
  - outlook.Office.Item.body
  - outlook.Office.Item.itemType
  - outlook.Office.Item.notificationMessages
  - outlook.Office.Item.seriesId
- uid: outlook.Office.Item.addHandlerAsync
  summary: >-
    Adiciona um manipulador de eventos a um evento com suporte.


    Atualmente, os tipos de eventos `Office.EventType.AppointmentTimeChanged` <!-- -->suportados `Office.EventType.RecipientsChanged` <!-- -->são, `Office.EventType.RecurrenceChanged` <!-- -->e. Em visualização `Office.EventType.AttachmentsChanged` e `Office.EventType.EnhancedLocationsChanged` também são compatíveis.


    \[[Conjunto de APIs: caixa de correio 1,7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: <table> <tr><td>[Nível de permissão mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr> <tr><td>[Modo Aplicável do Outlook](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Escrever ou Ler</td></tr> </table>
  name: addHandlerAsync(eventType, handler, options, callback)
  fullName: addHandlerAsync(eventType, handler, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addHandlerAsync(eventType: Office.EventType, handler: any, options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: eventType
      description: O evento que deve invocar o manipulador.
      type:
      - Office.EventType
    - id: handler
      description: A função para manipular o evento. A função deve aceitar um único parâmetro, que é um literal de objeto. A propriedade Type no parâmetro corresponderá ao parâmetro eventType passado para addHandlerAsync.
      type:
      - any
    - id: options
      description: 'Opcional. Um objeto literal que contém uma ou mais das propriedades a seguir. asyncContext: os desenvolvedores podem fornecer qualquer objeto que desejarem acessar no método de retorno de chamada.'
      type:
      - Office.AsyncContextOptions
    - id: callback
      description: Opcional. Quando o método é concluído, a função passada no parâmetro callback é chamada com um único parâmetro, asyncResult, que é um objeto Office. AsyncResult.
      type:
      - '(asyncResult: Office.AsyncResult<void>) => void'
- uid: outlook.Office.Item.addHandlerAsync_1
  summary: >-
    Adiciona um manipulador de eventos a um evento com suporte.


    Atualmente, os tipos de eventos `Office.EventType.AppointmentTimeChanged` <!-- -->suportados `Office.EventType.RecipientsChanged` <!-- -->são, `Office.EventType.RecurrenceChanged` <!-- -->e. Em visualização `Office.EventType.AttachmentsChanged` e `Office.EventType.EnhancedLocationsChanged` também são compatíveis.


    \[[Conjunto de APIs: caixa de correio 1,7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table> <tr><td>[Nível de permissão mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr> <tr><td>[Modo Aplicável do Outlook](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Escrever ou Ler</td></tr> </table>

    ####Veja


    ```javascript

    function myHandlerFunction(eventarg) {
        if (eventarg.attachmentStatus === Office.MailboxEnums.AttachmentStatus.Added) {
            var attachment = eventarg.attachmentDetails;
            console.log("Event Fired and Attachment Added!");
            getAttachmentContentAsync(attachment.id, options, callback);
        }
    }


    Office.context.mailbox.item.addHandlerAsync(Office.EventType.AttachmentsChanged, myHandlerFunction, myCallback);

    ```
  name: addHandlerAsync(eventType, handler, callback)
  fullName: addHandlerAsync(eventType, handler, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addHandlerAsync(eventType: Office.EventType, handler: any, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: eventType
      description: O evento que deve invocar o manipulador.
      type:
      - Office.EventType
    - id: handler
      description: A função para manipular o evento. A função deve aceitar um único parâmetro, que é um literal de objeto. A propriedade Type no parâmetro corresponderá ao parâmetro eventType passado para addHandlerAsync.
      type:
      - any
    - id: callback
      description: Opcional. Quando o método é concluído, a função passada no parâmetro callback é chamada com um único parâmetro, asyncResult, que é um objeto Office. AsyncResult.
      type:
      - '(asyncResult: Office.AsyncResult<void>) => void'
- uid: outlook.Office.Item.getAttachmentContentAsync
  summary: >-
    Obtém um anexo de uma mensagem ou de um compromisso e o retorna como um objeto **AttachmentContent** .


    O método `getAttachmentContentAsync` remove o obtém anexo com o identificador especificado do item. Como melhor prática, você deve usar o identificador para recuperar um anexo na mesma sessão da qual attachmentIds foram recuperadas com o chamada `getAttachmentsAsync` ou `item.attachments`. No Outlook Web App e no OWA para Dispositivos, o identificador do anexo é válido apenas dentro da mesma sessão. Uma sessão é finalizada quando o usuário fecha o aplicativo, ou se o usuário começa a compor em um formulário embutido e, subsequentemente, sai do formulário para continuar em uma janela separada.


    \[[Conjunto de APIs: visualização de caixa de correio](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table> <tr><td>[Nível de permissão mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr> <tr><td>[Modo Aplicável do Outlook](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Escrever ou Ler</td></tr> <tr><td>Erros</td><td>InvalidAttachmentId-o identificador de anexo não existe.</td></tr> </table>

    ####Veja


    ```javascript

    var item = Office.context.mailbox.item;

    var listOfAttachments = [];

    item.getAttachmentsAsync(callback);


    function callback(result) {
        if (result.value.length > 0) {
            for (i = 0 ; i < result.value.length ; i++) {
                var options = {asyncContext: {type: result.value[i].attachmentType}};
                getAttachmentContentAsync(result.value[i].id, options, handleAttachmentsCallback);
            }
        }
    }


    function handleAttachmentsCallback(result) {
        // Parse string to be a url, an .eml file, a base64-encoded string, or an .icalendar file.
        if (result.format === Office.MailboxEnums.AttachmentContentFormat.Base64) {
            // Handle file attachment.
        } else if (result.format === Office.MailboxEnums.AttachmentContentFormat.Eml) {
            // Handle email item attachment.
        } else if (result.format === Office.MailboxEnums.AttachmentContentFormat.ICalendar) {
            // Handle .icalender attachment.
        } else if (result.format === Office.MailboxEnums.AttachmentContentFormat.Url) {
            // Handle cloud attachment.
        } else {
            // Handle attachment formats that are not supported.
        }
    }

    ```
  isPreview: true
  name: getAttachmentContentAsync(attachmentId, options, callback)
  fullName: getAttachmentContentAsync(attachmentId, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getAttachmentContentAsync(attachmentId: string, options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<AttachmentContent>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: attachmentId
      description: O identificador do anexo que você quer obter.
      type:
      - string
    - id: options
      description: 'Opcional. Um objeto literal que contém uma ou mais das propriedades a seguir. asyncContext: os desenvolvedores podem fornecer qualquer objeto que desejarem acessar no método de retorno de chamada.'
      type:
      - Office.AsyncContextOptions
    - id: callback
      description: Opcional. Quando o método é concluído, a função passada no parâmetro callback é chamada com um único parâmetro, asyncResult, que é um objeto Office. AsyncResult. Se a chamada falhar, a propriedade asyncResult. Error conterá e o código de erro com o motivo da falha.
      type:
      - '(asyncResult: Office.AsyncResult<AttachmentContent>) => void'
- uid: outlook.Office.Item.getAttachmentContentAsync_1
  summary: >-
    Obtém um anexo de uma mensagem ou de um compromisso e o retorna como um objeto **AttachmentContent** .


    O método `getAttachmentContentAsync` remove o obtém anexo com o identificador especificado do item. Como melhor prática, você deve usar o identificador para recuperar um anexo na mesma sessão da qual attachmentIds foram recuperadas com o chamada `getAttachmentsAsync` ou `item.attachments`. No Outlook Web App e no OWA para Dispositivos, o identificador do anexo é válido apenas dentro da mesma sessão. Uma sessão é finalizada quando o usuário fecha o aplicativo, ou se o usuário começa a compor em um formulário embutido e, subsequentemente, sai do formulário para continuar em uma janela separada.


    \[[Conjunto de APIs: visualização de caixa de correio](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: <table> <tr><td>[Nível de permissão mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr> <tr><td>[Modo Aplicável do Outlook](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Escrever ou Ler</td></tr> <tr><td>Erros</td><td>InvalidAttachmentId-o identificador de anexo não existe.</td></tr> </table>
  isPreview: true
  name: getAttachmentContentAsync(attachmentId, callback)
  fullName: getAttachmentContentAsync(attachmentId, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getAttachmentContentAsync(attachmentId: string, callback?: (asyncResult: Office.AsyncResult<AttachmentContent>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: attachmentId
      description: O identificador do anexo que você quer obter.
      type:
      - string
    - id: callback
      description: Opcional. Quando o método é concluído, a função passada no parâmetro callback é chamada com um único parâmetro, asyncResult, que é um objeto Office. AsyncResult. Se a chamada falhar, a propriedade asyncResult. Error conterá e o código de erro com o motivo da falha.
      type:
      - '(asyncResult: Office.AsyncResult<AttachmentContent>) => void'
- uid: outlook.Office.Item.getInitializationContextAsync
  summary: >-
    Obtém dados de inicialização passados quando o suplemento é [ativado por uma mensagem](https://docs.microsoft.com/outlook/actionable-messages/invoke-add-in-from-actionable-message)<!-- -->acionável.


    **Observação**: esse método só é compatível com o Outlook 2016 para Windows (versões clique para executar acima de 16.0.8413.1000) e Outlook na Web para o Office 365.


    \[[Conjunto de APIs: visualização de caixa de correio](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: <table> <tr><td>[Nível de permissão mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr> <tr><td>[Modo Aplicável do Outlook](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Escrever ou Ler</td></tr> </table>
  isPreview: true
  name: getInitializationContextAsync(options, callback)
  fullName: getInitializationContextAsync(options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getInitializationContextAsync(options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: options
      description: 'Opcional. Um objeto literal que contém uma ou mais das propriedades a seguir. asyncContext: os desenvolvedores podem fornecer qualquer objeto que desejarem acessar no método de retorno de chamada.'
      type:
      - Office.AsyncContextOptions
    - id: callback
      description: Opcional. Quando o método é concluído, a função passada no parâmetro callback é chamada com um único parâmetro, asyncResult, que é um objeto Office. AsyncResult. Em caso de êxito, os dados de inicialização são fornecidos na propriedade asyncResult. Value como uma cadeia de caracteres. Se não houver nenhum contexto de inicialização, o objeto asyncResult conterá um objeto Error com sua propriedade Code definida como 9020 e sua propriedade Name definida como GenericResponseError.
      type:
      - '(asyncResult: Office.AsyncResult<string>) => void'
- uid: outlook.Office.Item.getInitializationContextAsync_1
  summary: >-
    Obtém dados de inicialização passados quando o suplemento é [ativado por uma mensagem](https://docs.microsoft.com/outlook/actionable-messages/invoke-add-in-from-actionable-message)<!-- -->acionável.


    **Observação**: esse método só é compatível com o Outlook 2016 para Windows (versões clique para executar acima de 16.0.8413.1000) e Outlook na Web para o Office 365.


    \[[Conjunto de APIs: visualização de caixa de correio](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table> <tr><td>[Nível de permissão mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr> <tr><td>[Modo Aplicável do Outlook](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Escrever ou Ler</td></tr> </table>

    ####Veja


    ```javascript

    // Get the initialization context (if present).

    Office.context.mailbox.item.getInitializationContextAsync(
        function(asyncResult) {
            if (asyncResult.status === Office.AsyncResultStatus.Succeeded) {
                if (asyncResult.value != null && asyncResult.value.length > 0) {
                    // The value is a string, parse to an object.
                    var context = JSON.parse(asyncResult.value);
                    // Do something with context.
                } else {
                    // Empty context, treat as no context.
                }
            } else {
                if (asyncResult.error.code == 9020) {
                    // GenericResponseError returned when there is no context.
                    // Treat as no context.
                } else {
                    // Handle the error.
                }
            }
        }
    );

    ```
  isPreview: true
  name: getInitializationContextAsync(callback)
  fullName: getInitializationContextAsync(callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getInitializationContextAsync(callback?: (asyncResult: Office.AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: callback
      description: Opcional. Quando o método é concluído, a função passada no parâmetro callback é chamada com um único parâmetro, asyncResult, que é um objeto Office. AsyncResult. Em caso de êxito, os dados de inicialização são fornecidos na propriedade asyncResult. Value como uma cadeia de caracteres. Se não houver nenhum contexto de inicialização, o objeto asyncResult conterá um objeto Error com sua propriedade Code definida como 9020 e sua propriedade Name definida como GenericResponseError.
      type:
      - '(asyncResult: Office.AsyncResult<string>) => void'
- uid: outlook.Office.Item.getSharedPropertiesAsync
  summary: >-
    Obtém as propriedades de um compromisso ou uma mensagem em uma pasta compartilhada, calendário ou caixa de correio.


    \[[Conjunto de APIs: visualização de caixa de correio](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: <table> <tr><td>[Nível de permissão mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr> <tr><td>[Modo do Outlook aplicável](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Escrever ou Ler</td></tr> </table>
  isPreview: true
  name: getSharedPropertiesAsync(options, callback)
  fullName: getSharedPropertiesAsync(options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getSharedPropertiesAsync(options: Office.AsyncContextOptions, callback: (asyncResult: Office.AsyncResult<SharedProperties>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: options
      description: 'Um objeto literal que contém uma ou mais das propriedades a seguir. asyncContext: os desenvolvedores podem fornecer qualquer objeto que desejarem acessar no método de retorno de chamada.'
      type:
      - Office.AsyncContextOptions
    - id: callback
      description: Quando o método for concluído, a função passada ao parâmetro callback será chamada com um único parâmetro do tipo Office. AsyncResult. A `value` Propriedade do resultado é as propriedades do item compartilhado.
      type:
      - '(asyncResult: Office.AsyncResult<SharedProperties>) => void'
- uid: outlook.Office.Item.getSharedPropertiesAsync_1
  summary: >-
    Obtém as propriedades de um compromisso ou uma mensagem em uma pasta compartilhada, calendário ou caixa de correio.


    \[[Conjunto de APIs: visualização de caixa de correio](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table> <tr><td>[Nível de permissão mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr> <tr><td>[Modo do Outlook aplicável](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Escrever ou Ler</td></tr> </table>

    ####Veja


    ```javascript

    Office.context.mailbox.item.getSharedPropertiesAsync(callback);


    function callback (asyncResult) {
        var context = asyncResult.context;
        var sharedProperties = asyncResult.value;
    }

    ```
  isPreview: true
  name: getSharedPropertiesAsync(callback)
  fullName: getSharedPropertiesAsync(callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getSharedPropertiesAsync(callback: (asyncResult: Office.AsyncResult<SharedProperties>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: callback
      description: Quando o método for concluído, a função passada ao parâmetro callback será chamada com um único parâmetro do tipo Office. AsyncResult. A `value` Propriedade do resultado é as propriedades do item compartilhado.
      type:
      - '(asyncResult: Office.AsyncResult<SharedProperties>) => void'
- uid: outlook.Office.Item.loadCustomPropertiesAsync
  summary: >-
    Carrega de forma assíncrona as propriedades personalizadas para esse suplemento no item selecionado.


    Propriedades personalizadas são armazenadas como pares chave/valor de acordo com o aplicativo e o item. Este método retorna um objeto CustomProperties no retorno de chamada, que oferece métodos para acessar as propriedades personalizadas específicas para o item atual e o suplemento atual. Propriedades personalizadas não são criptografadas no item, portanto não devem ser usadas como armazenamento seguro.


    As propriedades personalizadas são fornecidas como um objeto CustomProperties na propriedade asyncResult.value. Esse objeto pode ser usado para obter, definir e remover as propriedades personalizadas do item e salvar as alterações na propriedade personalizada definida de volta no servidor.


    \[[Conjunto de APIs: caixa de correio 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table> <tr><td>[Nível de permissão mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr> <tr><td>[Modo do Outlook aplicável](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Escrever ou Ler</td></tr> </table>

    ####Veja


    ```javascript

    // The following example shows how to use the loadCustomPropertiesAsync method

    // to asynchronously load custom properties that are specific to the current item.

    // The example also shows how to use the saveAsync method to save these properties

    // back to the server. After loading the custom properties, the example uses the

    // get method to read the custom property myProp, the set method to write the

    // custom property otherProp, and then finally calls the saveAsync method to save

    // the custom properties.

    Office.initialize = function () {
        // Checks for the DOM to load using the jQuery ready function.
        $(document).ready(function () {
            // After the DOM is loaded, add-in-specific code can run.
            var mailbox = Office.context.mailbox;
            mailbox.item.loadCustomPropertiesAsync(customPropsCallback);
        });
    };


    function customPropsCallback(asyncResult) {
        var customProps = asyncResult.value;
        var myProp = customProps.get("myProp");

        customProps.set("otherProp", "value");
        customProps.saveAsync(saveCallback);
    }


    function saveCallback(asyncResult) {

    }

    ```
  name: loadCustomPropertiesAsync(callback, userContext)
  fullName: loadCustomPropertiesAsync(callback, userContext)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'loadCustomPropertiesAsync(callback: (asyncResult: Office.AsyncResult<CustomProperties>) => void, userContext?: any): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: callback
      description: Quando o método for concluído, a função passada ao parâmetro callback será chamada com um único parâmetro do tipo Office. AsyncResult.
      type:
      - '(asyncResult: Office.AsyncResult<CustomProperties>) => void'
    - id: userContext
      description: Opcional. Os desenvolvedores podem fornecer qualquer objeto que desejarem acessar na função de retorno de chamada. Esse objeto pode ser acessado pela propriedade asyncResult. asyncContext na função de retorno de chamada.
      type:
      - any
- uid: outlook.Office.Item.removeHandlerAsync
  summary: >-
    Remove um manipulador de eventos para um tipo de evento com suporte.


    Atualmente, os tipos de eventos `Office.EventType.AppointmentTimeChanged` <!-- -->suportados `Office.EventType.RecipientsChanged` <!-- -->são, `Office.EventType.RecurrenceChanged` <!-- -->e. Em visualização `Office.EventType.AttachmentsChanged` e `Office.EventType.EnhancedLocationsChanged` também são compatíveis.


    \[[Conjunto de APIs: caixa de correio 1,7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: <table> <tr><td>[Nível de permissão mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr> <tr><td>[Modo do Outlook aplicável](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Escrever ou Ler</td></tr> </table>
  name: removeHandlerAsync(eventType, options, callback)
  fullName: removeHandlerAsync(eventType, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'removeHandlerAsync(eventType: Office.EventType, options?: any, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: eventType
      description: O evento que deve revogar o manipulador.
      type:
      - Office.EventType
    - id: options
      description: 'Opcional. Um objeto literal que contém uma ou mais das propriedades a seguir. asyncContext: os desenvolvedores podem fornecer qualquer objeto que desejarem acessar no método de retorno de chamada.'
      type:
      - any
    - id: callback
      description: Opcional. Quando o método é concluído, a função passada no parâmetro callback é chamada com um único parâmetro, asyncResult, que é um objeto Office. AsyncResult.
      type:
      - '(asyncResult: Office.AsyncResult<void>) => void'
- uid: outlook.Office.Item.removeHandlerAsync_1
  summary: >-
    Remove um manipulador de eventos para um tipo de evento com suporte.


    Atualmente, os tipos de eventos `Office.EventType.AppointmentTimeChanged` <!-- -->suportados `Office.EventType.RecipientsChanged` <!-- -->são, `Office.EventType.RecurrenceChanged` <!-- -->e. Em visualização `Office.EventType.AttachmentsChanged` e `Office.EventType.EnhancedLocationsChanged` também são compatíveis.


    \[[Conjunto de APIs: caixa de correio 1,7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: <table> <tr><td>[Nível de permissão mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr> <tr><td>[Modo do Outlook aplicável](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Escrever ou Ler</td></tr> </table>
  name: removeHandlerAsync(eventType, callback)
  fullName: removeHandlerAsync(eventType, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'removeHandlerAsync(eventType: Office.EventType, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: eventType
      description: O evento que deve revogar o manipulador.
      type:
      - Office.EventType
    - id: callback
      description: Opcional. Quando o método é concluído, a função passada no parâmetro callback é chamada com um único parâmetro, asyncResult, que é um objeto Office. AsyncResult.
      type:
      - '(asyncResult: Office.AsyncResult<void>) => void'
- uid: outlook.Office.Item.body
  summary: >-
    Obtém um objeto que fornece métodos para manipular o corpo de um item.


    \[[Conjunto de APIs: caixa de correio 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table> <tr><td>[Nível de permissão mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr> <tr><td>[Modo do Outlook aplicável](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Escrever ou Ler</td></tr> </table>

    ####Veja


    ```javascript

    // This example gets the body of the message in plain text.

    Office.context.mailbox.item.body.getAsync(
        "text",
        { asyncContext: "This is passed to the callback" },
        function callback(result) {
            // Do something with the result.
        });

    // The following is an example of the result parameter passed to the callback function.

    {
        "value": "TEXT of whole body (including threads below)",
        "status": "succeeded",
        "asyncContext": "This is passed to the callback"
    }

    ```
  name: body
  fullName: body
  langs:
  - typeScript
  type: property
  syntax:
    content: 'body: Body;'
    return:
      type:
      - Body
- uid: outlook.Office.Item.itemType
  summary: >-
    Obtém o tipo de item que representa uma instância.


    A propriedade itemType retorna um dos valores de enumeração ItemType, indicando se a instância do objeto item é uma mensagem ou um compromisso.


    \[[Conjunto de APIs: caixa de correio 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table> <tr><td>[Nível de permissão mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr> <tr><td>[Modo do Outlook aplicável](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Escrever ou Ler</td></tr> </table>

    ####Veja


    ```javascript

    if (Office.context.mailbox.item.itemType === Office.MailboxEnums.ItemType.Message) {
        // Do something.
    } else {
        // Do something else.
    }

    ```
  name: itemType
  fullName: itemType
  langs:
  - typeScript
  type: property
  syntax:
    content: 'itemType: MailboxEnums.ItemType;'
    return:
      type:
      - MailboxEnums.ItemType
- uid: outlook.Office.Item.notificationMessages
  summary: >-
    Obtém as mensagens de notificação de um item.


    \[[Conjunto de APIs: caixa de correio 1,3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table> <tr><td>[Nível de permissão mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr> <tr><td>[Modo do Outlook aplicável](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Escrever ou Ler</td></tr> </table>

    ####Veja


    ```javascript

    // Get all notifications.

    Office.context.mailbox.item.notificationMessages.getAllAsync(
        function (asyncResult) {
            console.log(JSON.stringify(asyncResult));
        }
    );

    ```
  name: notificationMessages
  fullName: notificationMessages
  langs:
  - typeScript
  type: property
  syntax:
    content: 'notificationMessages: NotificationMessages;'
    return:
      type:
      - NotificationMessages
- uid: outlook.Office.Item.seriesId
  summary: >-
    Obtém a id da série a qual uma instância pertence.


    No OWA e no Outlook, a seriesid retorna a ID dos serviços Web do Exchange (EWS) do item pai (série) ao qual este item pertence. No enTanto, no iOS e no Android, o seriesid retorna a ID REST do item pai.


    **Observação**: o identificador retornado pela propriedade seriesid é o mesmo que o identificador de item dos serviços Web do Exchange. A propriedade seriesid não é idêntica às IDs do Outlook usadas pela API REST do Outlook. Antes de fazer chamadas API REST usando esse valor, ela deverá ser convertida usando Office.context.mailbox.convertToRestId. Para obter mais detalhes, consulte [usar as APIs REST do Outlook a partir de um suplemento do Outlook](https://docs.microsoft.com/outlook/add-ins/use-rest-api)<!-- -->.


    A propriedade seriesid retorna NULL para itens que não têm itens pai, como compromissos únicos, itens de série ou solicitações de reunião e retorna undefined para quaisquer outros itens que não sejam solicitações de reunião.


    \[[Conjunto de APIs: caixa de correio 1,7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: "<table> <tr><td>[Nível de permissão mínimo](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr> <tr><td>[Modo do Outlook aplicável](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Escrever ou Ler</td></tr> </table>\n####Veja\n\n```javascript\nvar seriesId = Office.context.mailbox.item.seriesId;\n\n// The seriesId property returns null for items that do\n// not have parent items (such as single appointments,\n// series items, or meeting requests) and returns\n// undefined for messages that are not meeting requests.\nvar isSeriesInstance = (seriesId != null);\nconsole.log(\"SeriesId is \" + seriesId \n    + \" and isSeriesInstance is \" + isSeriesInstance);\n```"
  name: seriesId
  fullName: seriesId
  langs:
  - typeScript
  type: property
  syntax:
    content: 'seriesId: string;'
    return:
      type:
      - string
