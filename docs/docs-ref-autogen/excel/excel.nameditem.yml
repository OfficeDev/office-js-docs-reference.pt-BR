### YamlMime:UniversalReference
ms.openlocfilehash: 13600556218527e51c89500fa365f0b32e93c771
ms.sourcegitcommit: 06eebee5e68d349f78e6bc3bb0ef099fe063cf04
ms.translationtype: MT
ms.contentlocale: pt-BR
ms.lasthandoff: 01/17/2019
ms.locfileid: "28725050"
items:
- uid: excel.Excel.NamedItem
  summary: >-
    <span data-ttu-id="763f7-101">Representa um nome definido para um intervalo de células ou valor.</span><span class="sxs-lookup"><span data-stu-id="763f7-101">Represents a defined name for a range of cells or value.</span></span> <span data-ttu-id="763f7-102">Nomes pode ser primitivo objetos nomeados (como visto no tipo abaixo), o intervalo de objeto, ou uma referência a um intervalo.</span><span class="sxs-lookup"><span data-stu-id="763f7-102">Names can be primitive named objects (as seen in the type below), range object, or a reference to a range.</span></span> <span data-ttu-id="763f7-103">Este objeto pode ser usado para obter associado aos nomes de objeto de intervalo.</span><span class="sxs-lookup"><span data-stu-id="763f7-103">This object can be used to obtain range object associated with names.</span></span>


    <span data-ttu-id="763f7-104">\[[Conjunto de APIs: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="763f7-104">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.NamedItem
  fullName: Excel.NamedItem
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.NamedItem.arrayValues
  - excel.Excel.NamedItem.comment
  - excel.Excel.NamedItem.context
  - excel.Excel.NamedItem.delete
  - excel.Excel.NamedItem.formula
  - excel.Excel.NamedItem.getRange
  - excel.Excel.NamedItem.getRangeOrNullObject
  - excel.Excel.NamedItem.load
  - excel.Excel.NamedItem.name
  - excel.Excel.NamedItem.scope
  - excel.Excel.NamedItem.toJSON
  - excel.Excel.NamedItem.type
  - excel.Excel.NamedItem.value
  - excel.Excel.NamedItem.visible
  - excel.Excel.NamedItem.worksheet
  - excel.Excel.NamedItem.worksheetOrNullObject
- uid: excel.Excel.NamedItem.arrayValues
  summary: >-
    <span data-ttu-id="763f7-105">Retorna um objeto que contém valores e tipos do item nomeado.</span><span class="sxs-lookup"><span data-stu-id="763f7-105">Returns an object containing values and types of the named item.</span></span> <span data-ttu-id="763f7-106">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="763f7-106">Read-only.</span></span>


    <span data-ttu-id="763f7-107">\[[Conjunto de APIs: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="763f7-107">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: arrayValues
  fullName: arrayValues
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly arrayValues: Excel.NamedItemArrayValues;'
    return:
      type:
      - excel.Excel.NamedItemArrayValues
- uid: excel.Excel.NamedItem.comment
  summary: >-
    <span data-ttu-id="763f7-108">Representa o comentário associado a esse nome.</span><span class="sxs-lookup"><span data-stu-id="763f7-108">Represents the comment associated with this name.</span></span>


    <span data-ttu-id="763f7-109">\[[Conjunto de APIs: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="763f7-109">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: comment
  fullName: comment
  langs:
  - typeScript
  type: property
  syntax:
    content: 'comment: string;'
    return:
      type:
      - string
- uid: excel.Excel.NamedItem.context
  summary: <span data-ttu-id="763f7-110">O contexto de solicitação associado ao objeto.</span><span class="sxs-lookup"><span data-stu-id="763f7-110">The request context associated with the object.</span></span> <span data-ttu-id="763f7-111">Esse procedimento fará processo do suplemento de processo do aplicativo host do Office.</span><span class="sxs-lookup"><span data-stu-id="763f7-111">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.NamedItem.delete
  summary: >-
    <span data-ttu-id="763f7-112">Exclui o nome fornecido.</span><span class="sxs-lookup"><span data-stu-id="763f7-112">Deletes the given name.</span></span>


    <span data-ttu-id="763f7-113">\[[Conjunto de APIs: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="763f7-113">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: delete()
  fullName: delete
  langs:
  - typeScript
  type: method
  syntax:
    content: 'delete(): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"763f7-114\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"763f7-114\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const totalName = sheet.names.getItemOrNullObject(\"TotalAmount\");\n    totalName.load();\n    await context.sync();\n\n    if (totalName.value) {\n        totalName.delete();\n\n        // Replace the named item (TotalAmount) with the actual formula for TotalAmount to avoid displaying #NAME in the cell.\n        sheet.getRange(\"D11\").values = [[\"=SUM(ExpensesTable[AMOUNT])\"]];\n    } else {\n        console.log(\"No named item created for the formula.\");\n    }\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.NamedItem.formula
  summary: >-
    <span data-ttu-id="763f7-115">Obtém ou define a fórmula do item nomeado.</span><span class="sxs-lookup"><span data-stu-id="763f7-115">Gets or sets the formula of the named item.</span></span> <span data-ttu-id="763f7-116">A fórmula sempre começa com um sinal de "=".</span><span class="sxs-lookup"><span data-stu-id="763f7-116">Formula always starts with a '=' sign.</span></span>


    <span data-ttu-id="763f7-117">\[[Conjunto de APIs: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="763f7-117">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: formula
  fullName: formula
  langs:
  - typeScript
  type: property
  syntax:
    content: 'formula: any;'
    return:
      type:
      - any
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"763f7-118\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"763f7-118\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n\n    // Get the named item\n    const myNamedItem = sheet.names.getItemOrNullObject(\"MyRange\");\n    myNamedItem.load(\"name, formula\");\n    await context.sync();\n\n    if (myNamedItem.isNullObject) {\n        OfficeHelpers.UI.notify(`There is no named item. Create it with \"Add named item for a range\" first.`);\n    } else {                    \n        // Update named item to point to the second range\n        myNamedItem.formula = \"=Sample!$B$10:$D$14\";\n        sheet.getRange(\"B10:D14\").select();\n        await context.sync();\n\n        console.log(`Just updated the named item \"${myNamedItem.name}\" -- it's now located here: ${myNamedItem.formula}`);\n    }\n});\n```"
- uid: excel.Excel.NamedItem.getRange
  summary: >-
    <span data-ttu-id="763f7-p105">Retorna o objeto Range associado ao nome. Gerará um erro se o tipo do item nomeado não for um intervalo.</span><span class="sxs-lookup"><span data-stu-id="763f7-p105">Returns the range object that is associated with the name. Throws an error if the named item's type is not a range.</span></span>


    <span data-ttu-id="763f7-121">\[[Conjunto de APIs: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="763f7-121">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getRange()
  fullName: getRange
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getRange(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"763f7-122\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"763f7-122\">Examples</span></span>\n\n```javascript\n// Returns the Range object that is associated with the name. \n// null if the name is not of the type Range.\n// Note: This API currently supports only the Workbook scoped items.\nExcel.run(function (ctx) { \n    var names = ctx.workbook.names;\n    var range = names.getItem('MyRange').getRange();\n    range.load('address');\n    return ctx.sync().then(function() {\n        console.log(range.address);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel.Excel.NamedItem.getRangeOrNullObject
  summary: >-
    <span data-ttu-id="763f7-p106">Retorna o objeto Range associado ao nome. Retornará um objeto null se o tipo do item nomeado não for um intervalo.</span><span class="sxs-lookup"><span data-stu-id="763f7-p106">Returns the range object that is associated with the name. Returns a null object if the named item's type is not a range.</span></span>


    <span data-ttu-id="763f7-125">\[[Conjunto de APIs: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="763f7-125">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getRangeOrNullObject()
  fullName: getRangeOrNullObject
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getRangeOrNullObject(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: ''
- uid: excel.Excel.NamedItem.load
  summary: <span data-ttu-id="763f7-126">Filas de backup de um comando para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="763f7-126">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="763f7-127">Você deve chamar "context.sync()" antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="763f7-127">You must call "context.sync()" before reading the properties.</span></span>
  remarks: "<span data-ttu-id=\"763f7-128\">Além dessa assinatura, esse método tem as seguintes assinaturas:</span><span class=\"sxs-lookup\"><span data-stu-id=\"763f7-128\">In addition to this signature, this method has the following signatures:</span></span>\n\n<span data-ttu-id=\"763f7-129\">`load(option?: { select?: string; expand?: string; }): Excel.NamedItem`-Onde option.select é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades para carregar e options.expand é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades de navegação para carregar.</span><span class=\"sxs-lookup\"><span data-stu-id=\"763f7-129\">`load(option?: { select?: string; expand?: string; }): Excel.NamedItem` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>\n\n<span data-ttu-id=\"763f7-130\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.NamedItem`-Só está disponível em tipos de coleção.</span><span class=\"sxs-lookup\"><span data-stu-id=\"763f7-130\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.NamedItem` - Only available on collection types.</span></span> <span data-ttu-id=\"763f7-131\">Ele é semelhante à assinatura anterior.</span><span class=\"sxs-lookup\"><span data-stu-id=\"763f7-131\">It is similar to the preceding signature.</span></span> <span data-ttu-id=\"763f7-132\">Option.Top Especifica o número máximo de itens que podem ser incluídos no resultado da coleção.</span><span class=\"sxs-lookup\"><span data-stu-id=\"763f7-132\">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id=\"763f7-133\">Option.Skip Especifica o número de itens que devem ser ignorados e não são incluídos no resultado.</span><span class=\"sxs-lookup\"><span data-stu-id=\"763f7-133\">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id=\"763f7-134\">Se option.top for especificado, o conjunto de resultados será iniciado depois de ignorar o número de itens especificado.</span><span class=\"sxs-lookup\"><span data-stu-id=\"763f7-134\">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>\n#### <a name=\"examples\"></a><span data-ttu-id=\"763f7-135\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"763f7-135\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var names = ctx.workbook.names;\n    var namedItem = names.getItem('MyRange');\n    namedItem.load('type');\n    return ctx.sync().then(function() {\n            console.log(namedItem.type);\n    });\n}).catch(function(error) {\n        console.log(\"Error: \" + error);\n        if (error instanceof OfficeExtension.Error) {\n            console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n        }\n});\n```"
  name: load(option)
  fullName: load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Excel.NamedItem;'
    return:
      type:
      - excel.Excel.NamedItem
      description: ''
    parameters:
    - id: option
      description: <span data-ttu-id="763f7-136">Uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades de carga.</span><span class="sxs-lookup"><span data-stu-id="763f7-136">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.NamedItem.name
  summary: >-
    <span data-ttu-id="763f7-p109">O nome do objeto. Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="763f7-p109">The name of the object. Read-only.</span></span>


    <span data-ttu-id="763f7-139">\[[Conjunto de APIs: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="763f7-139">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: name
  fullName: name
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly name: string;'
    return:
      type:
      - string
- uid: excel.Excel.NamedItem.scope
  summary: >-
    <span data-ttu-id="763f7-140">Indica se o nome tem escopo para a pasta de trabalho ou para uma planilha específica.</span><span class="sxs-lookup"><span data-stu-id="763f7-140">Indicates whether the name is scoped to the workbook or to a specific worksheet.</span></span> <span data-ttu-id="763f7-141">Os valores possíveis são: planilha, a pasta de trabalho.</span><span class="sxs-lookup"><span data-stu-id="763f7-141">Possible values are: Worksheet, Workbook.</span></span> <span data-ttu-id="763f7-142">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="763f7-142">Read-only.</span></span>


    <span data-ttu-id="763f7-143">\[[Conjunto de APIs: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="763f7-143">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: scope
  fullName: scope
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly scope: Excel.NamedItemScope | "Worksheet" | "Workbook";'
    return:
      type:
      - Excel.NamedItemScope | "Worksheet" | "Workbook"
- uid: excel.Excel.NamedItem.toJSON
  summary: <span data-ttu-id="763f7-144">Substitui o JavaScript `toJSON()` método para fornecer a saída mais úteis quando um objeto API é passado para `JSON.stringify()` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="763f7-144">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="763f7-145">(`JSON.stringify`<!-- -->, em seguida, chama o `toJSON` método do objeto que é passado para ele.) Enquanto o objeto Excel.NamedItem original é um objeto de API, o `toJSON` método retorna um objeto de JavaScript simples (digitado como `Excel.Interfaces.NamedItemData` <!-- -->) que contém superficiais cópias de todas as propriedades do objeto original filho carregado.</span><span class="sxs-lookup"><span data-stu-id="763f7-145">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.NamedItem object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.NamedItemData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.NamedItemData;'
    return:
      type:
      - excel.Excel.Interfaces.NamedItemData
      description: ''
- uid: excel.Excel.NamedItem.type
  summary: >-
    <span data-ttu-id="763f7-146">Indica o tipo do valor retornado pela fórmula do nome.</span><span class="sxs-lookup"><span data-stu-id="763f7-146">Indicates the type of the value returned by the name's formula.</span></span> <span data-ttu-id="763f7-147">Consulte Excel.NamedItemType para obter detalhes.</span><span class="sxs-lookup"><span data-stu-id="763f7-147">See Excel.NamedItemType for details.</span></span> <span data-ttu-id="763f7-148">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="763f7-148">Read-only.</span></span>


    <span data-ttu-id="763f7-149">\[[Conjunto de APIs: ExcelApi 1.1 para a cadeia de caracteres, número inteiro, Double, Boolean, intervalo, erro; 1.7 para matriz](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="763f7-149">\[ [API set: ExcelApi 1.1 for String,Integer,Double,Boolean,Range,Error; 1.7 for Array](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: type
  fullName: type
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly type: Excel.NamedItemType | "String" | "Integer" | "Double" | "Boolean" | "Range" | "Error" | "Array";'
    return:
      type:
      - Excel.NamedItemType | "String" | "Integer" | "Double" | "Boolean" | "Range" | "Error" | "Array"
- uid: excel.Excel.NamedItem.value
  summary: >-
    <span data-ttu-id="763f7-p113">Representa o valor calculado pela fórmula do nome. Para um intervalo nomeado, retornará o endereço do intervalo. Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="763f7-p113">Represents the value computed by the name's formula. For a named range, will return the range address. Read-only.</span></span>


    <span data-ttu-id="763f7-153">\[[Conjunto de APIs: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="763f7-153">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: value
  fullName: value
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly value: any;'
    return:
      type:
      - any
- uid: excel.Excel.NamedItem.visible
  summary: >-
    <span data-ttu-id="763f7-154">Determina se o objeto fica visível ou não.</span><span class="sxs-lookup"><span data-stu-id="763f7-154">Specifies whether the object is visible or not.</span></span>


    <span data-ttu-id="763f7-155">\[[Conjunto de APIs: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="763f7-155">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: visible
  fullName: visible
  langs:
  - typeScript
  type: property
  syntax:
    content: 'visible: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.NamedItem.worksheet
  summary: >-
    <span data-ttu-id="763f7-156">Retorna a planilha em que o item nomeado destinado a.</span><span class="sxs-lookup"><span data-stu-id="763f7-156">Returns the worksheet on which the named item is scoped to.</span></span> <span data-ttu-id="763f7-157">Gera um erro se o item tem escopo para a pasta de trabalho em vez disso.</span><span class="sxs-lookup"><span data-stu-id="763f7-157">Throws an error if the item is scoped to the workbook instead.</span></span>


    <span data-ttu-id="763f7-158">\[[Conjunto de APIs: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="763f7-158">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: worksheet
  fullName: worksheet
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly worksheet: Excel.Worksheet;'
    return:
      type:
      - excel.Excel.Worksheet
- uid: excel.Excel.NamedItem.worksheetOrNullObject
  summary: >-
    <span data-ttu-id="763f7-159">Retorna a planilha em que o item nomeado destinado a.</span><span class="sxs-lookup"><span data-stu-id="763f7-159">Returns the worksheet on which the named item is scoped to.</span></span> <span data-ttu-id="763f7-160">Retorna um objeto nulo se o item tem escopo para a pasta de trabalho em vez disso.</span><span class="sxs-lookup"><span data-stu-id="763f7-160">Returns a null object if the item is scoped to the workbook instead.</span></span>


    <span data-ttu-id="763f7-161">\[[Conjunto de APIs: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="763f7-161">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: worksheetOrNullObject
  fullName: worksheetOrNullObject
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly worksheetOrNullObject: Excel.Worksheet;'
    return:
      type:
      - excel.Excel.Worksheet
