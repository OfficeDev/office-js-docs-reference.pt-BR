### YamlMime:UniversalReference
ms.openlocfilehash: f63f92cd58160ca50732c29eb871ac63ac9c28f5
ms.sourcegitcommit: 06eebee5e68d349f78e6bc3bb0ef099fe063cf04
ms.translationtype: MT
ms.contentlocale: pt-BR
ms.lasthandoff: 01/17/2019
ms.locfileid: "28724581"
items:
- uid: excel.Excel.RangeBorderCollection
  summary: >-
    <span data-ttu-id="0b7aa-101">Representa os objetos border que compõem a borda do intervalo.</span><span class="sxs-lookup"><span data-stu-id="0b7aa-101">Represents the border objects that make up the range border.</span></span>


    <span data-ttu-id="0b7aa-102">\[[Conjunto de APIs: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0b7aa-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.RangeBorderCollection
  fullName: Excel.RangeBorderCollection
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.RangeBorderCollection.context
  - excel.Excel.RangeBorderCollection.count
  - excel.Excel.RangeBorderCollection.getItem
  - excel.Excel.RangeBorderCollection.getItemAt
  - excel.Excel.RangeBorderCollection.items
  - excel.Excel.RangeBorderCollection.load
  - excel.Excel.RangeBorderCollection.toJSON
- uid: excel.Excel.RangeBorderCollection.context
  summary: <span data-ttu-id="0b7aa-103">O contexto de solicitação associado ao objeto.</span><span class="sxs-lookup"><span data-stu-id="0b7aa-103">The request context associated with the object.</span></span> <span data-ttu-id="0b7aa-104">Esse procedimento fará processo do suplemento de processo do aplicativo host do Office.</span><span class="sxs-lookup"><span data-stu-id="0b7aa-104">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.RangeBorderCollection.count
  summary: >-
    <span data-ttu-id="0b7aa-p102">Número de objetos de borda da coleção. Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="0b7aa-p102">Number of border objects in the collection. Read-only.</span></span>


    <span data-ttu-id="0b7aa-107">\[[Conjunto de APIs: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0b7aa-107">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: count
  fullName: count
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly count: number;'
    return:
      type:
      - number
- uid: excel.Excel.RangeBorderCollection.getItem
  summary: >-
    <span data-ttu-id="0b7aa-108">Obtém um objeto Border usando o respectivo nome.</span><span class="sxs-lookup"><span data-stu-id="0b7aa-108">Gets a border object using its name.</span></span>


    <span data-ttu-id="0b7aa-109">\[[Conjunto de APIs: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0b7aa-109">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getItem(index)
  fullName: getItem
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItem(index: Excel.BorderIndex): Excel.RangeBorder;'
    return:
      type:
      - excel.Excel.RangeBorder
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"0b7aa-110\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"0b7aa-110\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var sheetName = \"Sheet1\";\n    var rangeAddress = \"A1:F8\";\n    var worksheet = ctx.workbook.worksheets.getItem(sheetName);\n    var range = worksheet.getRange(rangeAddress);\n    var borderName = 'EdgeTop';\n    var border = range.format.borders.getItem(borderName);\n    border.load('style');\n    return ctx.sync().then(function() {\n            console.log(border.style);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\nExcel.run(function (ctx) { \n    var sheetName = \"Sheet1\";\n    var rangeAddress = \"A1:F8\";\n    var worksheet = ctx.workbook.worksheets.getItem(sheetName);\n    var range = worksheet.getRange(rangeAddress);\n    var border = range.format.borders.getItemAt(0);\n    border.load('sideIndex');\n    return ctx.sync().then(function() {\n            console.log(border.sideIndex);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: index
      description: <span data-ttu-id="0b7aa-111">Valor de índice do objeto border a ser recuperado.</span><span class="sxs-lookup"><span data-stu-id="0b7aa-111">Index value of the border object to be retrieved.</span></span> <span data-ttu-id="0b7aa-112">Consulte Excel.BorderIndex para obter detalhes.</span><span class="sxs-lookup"><span data-stu-id="0b7aa-112">See Excel.BorderIndex for details.</span></span>
      type:
      - excel.Excel.BorderIndex
- uid: excel.Excel.RangeBorderCollection.getItemAt
  summary: >-
    <span data-ttu-id="0b7aa-113">Obtém um objeto Border usando o respectivo índice.</span><span class="sxs-lookup"><span data-stu-id="0b7aa-113">Gets a border object using its index.</span></span>


    <span data-ttu-id="0b7aa-114">\[[Conjunto de APIs: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0b7aa-114">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getItemAt(index)
  fullName: getItemAt
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItemAt(index: number): Excel.RangeBorder;'
    return:
      type:
      - excel.Excel.RangeBorder
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"0b7aa-115\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"0b7aa-115\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var sheetName = \"Sheet1\";\n    var rangeAddress = \"A1:F8\";\n    var worksheet = ctx.workbook.worksheets.getItem(sheetName);\n    var range = worksheet.getRange(rangeAddress);\n    var border = range.format.borders.getItemAt(0);\n    border.load('sideIndex');\n    return ctx.sync().then(function() {\n        console.log(border.sideIndex);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: index
      description: <span data-ttu-id="0b7aa-p104">Valor de índice do objeto a ser recuperado. Indexados com zero.</span><span class="sxs-lookup"><span data-stu-id="0b7aa-p104">Index value of the object to be retrieved. Zero-indexed.</span></span>
      type:
      - number
- uid: excel.Excel.RangeBorderCollection.items
  summary: <span data-ttu-id="0b7aa-118">Obtém o filho carregado itens nesta coleção.</span><span class="sxs-lookup"><span data-stu-id="0b7aa-118">Gets the loaded child items in this collection.</span></span>
  name: items
  fullName: items
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly items: Excel.RangeBorder[];'
    return:
      type:
      - Excel.RangeBorder[]
- uid: excel.Excel.RangeBorderCollection.load
  summary: <span data-ttu-id="0b7aa-119">Filas de backup de um comando para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="0b7aa-119">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="0b7aa-120">Você deve chamar "context.sync()" antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="0b7aa-120">You must call "context.sync()" before reading the properties.</span></span>
  remarks: "<span data-ttu-id=\"0b7aa-121\">Além dessa assinatura, esse método tem as seguintes assinaturas:</span><span class=\"sxs-lookup\"><span data-stu-id=\"0b7aa-121\">In addition to this signature, this method has the following signatures:</span></span>\n\n<span data-ttu-id=\"0b7aa-122\">`load(option?: { select?: string; expand?: string; }): Excel.RangeBorderCollection`-Onde option.select é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades para carregar e options.expand é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades de navegação para carregar.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0b7aa-122\">`load(option?: { select?: string; expand?: string; }): Excel.RangeBorderCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>\n\n<span data-ttu-id=\"0b7aa-123\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.RangeBorderCollection`-Só está disponível em tipos de coleção.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0b7aa-123\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.RangeBorderCollection` - Only available on collection types.</span></span> <span data-ttu-id=\"0b7aa-124\">Ele é semelhante à assinatura anterior.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0b7aa-124\">It is similar to the preceding signature.</span></span> <span data-ttu-id=\"0b7aa-125\">Option.Top Especifica o número máximo de itens que podem ser incluídos no resultado da coleção.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0b7aa-125\">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id=\"0b7aa-126\">Option.Skip Especifica o número de itens que devem ser ignorados e não são incluídos no resultado.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0b7aa-126\">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id=\"0b7aa-127\">Se option.top for especificado, o conjunto de resultados será iniciado depois de ignorar o número de itens especificado.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0b7aa-127\">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>\n#### <a name=\"examples\"></a><span data-ttu-id=\"0b7aa-128\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"0b7aa-128\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var sheetName = \"Sheet1\";\n    var rangeAddress = \"A1:F8\";\n    var worksheet = ctx.workbook.worksheets.getItem(sheetName);\n    var range = worksheet.getRange(rangeAddress);\n    var borders = range.format.borders;\n    border.load('items');\n    return ctx.sync().then(function() {\n        console.log(borders.count);\n        for (var i = 0; i < borders.items.length; i++)\n        {\n            console.log(borders.items[i].sideIndex);\n        }\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\n// The example below adds grid border around the range.\nExcel.run(function (ctx) { \n    var sheetName = \"Sheet1\";\n    var rangeAddress = \"A1:F8\";\n    var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeAddress);\n    range.format.borders.getItem('InsideHorizontal').style = 'Continuous';\n    range.format.borders.getItem('InsideVertical').style = 'Continuous';\n    range.format.borders.getItem('EdgeBottom').style = 'Continuous';\n    range.format.borders.getItem('EdgeLeft').style = 'Continuous';\n    range.format.borders.getItem('EdgeRight').style = 'Continuous';\n    range.format.borders.getItem('EdgeTop').style = 'Continuous';\n    return ctx.sync(); \n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
  name: load(option)
  fullName: load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Excel.RangeBorderCollection;'
    return:
      type:
      - excel.Excel.RangeBorderCollection
      description: ''
    parameters:
    - id: option
      description: <span data-ttu-id="0b7aa-129">Uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades de carga.</span><span class="sxs-lookup"><span data-stu-id="0b7aa-129">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.RangeBorderCollection.toJSON
  summary: <span data-ttu-id="0b7aa-130">Substitui o JavaScript `toJSON()` método para fornecer a saída mais úteis quando um objeto API é passado para `JSON.stringify()` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="0b7aa-130">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="0b7aa-131">(`JSON.stringify`<!-- -->, em seguida, chama o `toJSON` método do objeto que é passado para ele.) Enquanto o original `Excel.RangeBorderCollection` é um objeto de API, o `toJSON` método retorna um objeto de JavaScript sem formatação (digitado como `Excel.Interfaces.RangeBorderCollectionData` <!-- -->) que contém uma matriz de "itens" com superficiais cópias de todas as propriedades de itens da coleção carregadas.</span><span class="sxs-lookup"><span data-stu-id="0b7aa-131">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.RangeBorderCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.RangeBorderCollectionData`<!-- -->) that contains an "items" array with shallow copies of any loaded properties from the collection's items.</span></span>
  name: toJSON()
  fullName: toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.RangeBorderCollectionData;'
    return:
      type:
      - excel.Excel.Interfaces.RangeBorderCollectionData
      description: ''
