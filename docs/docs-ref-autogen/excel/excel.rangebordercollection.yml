### YamlMime:UniversalReference
ms.openlocfilehash: 44b729b27e04e3692cc69002e9ea0877c8023a20
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: pt-BR
ms.lasthandoff: 02/20/2019
ms.locfileid: "30097701"
items:
- uid: excel.Excel.RangeBorderCollection
  summary: >-
    <span data-ttu-id="efce7-101">Representa os objetos border que compõem a borda do intervalo.</span><span class="sxs-lookup"><span data-stu-id="efce7-101">Represents the border objects that make up the range border.</span></span>


    <span data-ttu-id="efce7-102">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="efce7-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.RangeBorderCollection
  fullName: Excel.RangeBorderCollection
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.RangeBorderCollection.context
  - excel.Excel.RangeBorderCollection.count
  - excel.Excel.RangeBorderCollection.getItem
  - excel.Excel.RangeBorderCollection.getItem_1
  - excel.Excel.RangeBorderCollection.getItemAt
  - excel.Excel.RangeBorderCollection.items
  - excel.Excel.RangeBorderCollection.load
  - excel.Excel.RangeBorderCollection.load_1
  - excel.Excel.RangeBorderCollection.load_2
  - excel.Excel.RangeBorderCollection.tintAndShade
  - excel.Excel.RangeBorderCollection.toJSON
- uid: excel.Excel.RangeBorderCollection.context
  summary: <span data-ttu-id="efce7-103">O contexto de solicitação associado ao objeto.</span><span class="sxs-lookup"><span data-stu-id="efce7-103">The request context associated with the object.</span></span> <span data-ttu-id="efce7-104">Isso conecta o processo do suplemento ao processo do aplicativo host do Office.</span><span class="sxs-lookup"><span data-stu-id="efce7-104">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.RangeBorderCollection.count
  summary: >-
    <span data-ttu-id="efce7-p102">Número de objetos de borda da coleção. Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="efce7-p102">Number of border objects in the collection. Read-only.</span></span>


    <span data-ttu-id="efce7-107">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="efce7-107">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: count
  fullName: count
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly count: number;'
    return:
      type:
      - number
- uid: excel.Excel.RangeBorderCollection.getItem
  summary: >-
    <span data-ttu-id="efce7-108">Obtém um objeto Border usando o respectivo nome.</span><span class="sxs-lookup"><span data-stu-id="efce7-108">Gets a border object using its name.</span></span>


    <span data-ttu-id="efce7-109">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="efce7-109">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getItem(index)
  fullName: getItem(index)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItem(index: Excel.BorderIndex): Excel.RangeBorder;'
    return:
      type:
      - excel.Excel.RangeBorder
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"efce7-110\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"efce7-110\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var sheetName = \"Sheet1\";\n    var rangeAddress = \"A1:F8\";\n    var worksheet = ctx.workbook.worksheets.getItem(sheetName);\n    var range = worksheet.getRange(rangeAddress);\n    var borderName = 'EdgeTop';\n    var border = range.format.borders.getItem(borderName);\n    border.load('style');\n    return ctx.sync().then(function() {\n            console.log(border.style);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: index
      description: <span data-ttu-id="efce7-111">O valor de índice do objeto Border a ser recuperado.</span><span class="sxs-lookup"><span data-stu-id="efce7-111">Index value of the border object to be retrieved.</span></span> <span data-ttu-id="efce7-112">Consulte Excel. BorderIndex para obter detalhes.</span><span class="sxs-lookup"><span data-stu-id="efce7-112">See Excel.BorderIndex for details.</span></span>
      type:
      - excel.Excel.BorderIndex
- uid: excel.Excel.RangeBorderCollection.getItem_1
  summary: >-
    <span data-ttu-id="efce7-113">Obtém um objeto Border usando o respectivo nome.</span><span class="sxs-lookup"><span data-stu-id="efce7-113">Gets a border object using its name.</span></span>


    <span data-ttu-id="efce7-114">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="efce7-114">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getItem(indexString)
  fullName: getItem(indexString)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItem(indexString: "EdgeTop" | "EdgeBottom" | "EdgeLeft" | "EdgeRight" | "InsideVertical" | "InsideHorizontal" | "DiagonalDown" | "DiagonalUp"): Excel.RangeBorder;'
    return:
      type:
      - excel.Excel.RangeBorder
      description: ''
    parameters:
    - id: indexString
      description: <span data-ttu-id="efce7-115">O valor de índice do objeto Border a ser recuperado.</span><span class="sxs-lookup"><span data-stu-id="efce7-115">Index value of the border object to be retrieved.</span></span> <span data-ttu-id="efce7-116">Consulte Excel. BorderIndex para obter detalhes.</span><span class="sxs-lookup"><span data-stu-id="efce7-116">See Excel.BorderIndex for details.</span></span>
      type:
      - "\"EdgeTop\" | \"EdgeBottom\" | \"EdgeLeft\" | \"EdgeRight\" | \"InsideVertical\" | \"InsideHorizontal\" | \"DiagonalDown\" | \"DiagonalUp\""
- uid: excel.Excel.RangeBorderCollection.getItemAt
  summary: >-
    <span data-ttu-id="efce7-117">Obtém um objeto Border usando o respectivo índice.</span><span class="sxs-lookup"><span data-stu-id="efce7-117">Gets a border object using its index.</span></span>


    <span data-ttu-id="efce7-118">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="efce7-118">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getItemAt(index)
  fullName: getItemAt(index)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItemAt(index: number): Excel.RangeBorder;'
    return:
      type:
      - excel.Excel.RangeBorder
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"efce7-119\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"efce7-119\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var sheetName = \"Sheet1\";\n    var rangeAddress = \"A1:F8\";\n    var worksheet = ctx.workbook.worksheets.getItem(sheetName);\n    var range = worksheet.getRange(rangeAddress);\n    var border = range.format.borders.getItemAt(0);\n    border.load('sideIndex');\n    return ctx.sync().then(function() {\n        console.log(border.sideIndex);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: index
      description: <span data-ttu-id="efce7-p105">Valor de índice do objeto a ser recuperado. Indexados com zero.</span><span class="sxs-lookup"><span data-stu-id="efce7-p105">Index value of the object to be retrieved. Zero-indexed.</span></span>
      type:
      - number
- uid: excel.Excel.RangeBorderCollection.items
  summary: <span data-ttu-id="efce7-122">Obtém os itens filhos carregados nesta coleção.</span><span class="sxs-lookup"><span data-stu-id="efce7-122">Gets the loaded child items in this collection.</span></span>
  name: items
  fullName: items
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly items: Excel.RangeBorder[];'
    return:
      type:
      - Excel.RangeBorder[]
- uid: excel.Excel.RangeBorderCollection.load
  summary: <span data-ttu-id="efce7-123">Enfileira um comando para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="efce7-123">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="efce7-124">Você deve chamar "context. Sync ()" antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="efce7-124">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="efce7-125">Além dessa assinatura, este método tem as seguintes assinaturas:</span><span class="sxs-lookup"><span data-stu-id="efce7-125">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="efce7-126">`load(option?: string | string[]): Excel.RangeBorderCollection`-Where Option é uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="efce7-126">`load(option?: string | string[]): Excel.RangeBorderCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="efce7-127">`load(option?: { select?: string; expand?: string; }): Excel.RangeBorderCollection`-Onde Option. Select é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades a serem carregadas, e Options. Expand é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades de navegação a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="efce7-127">`load(option?: { select?: string; expand?: string; }): Excel.RangeBorderCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="efce7-128">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.RangeBorderCollection`– Disponível somente nos tipos de coleção.</span><span class="sxs-lookup"><span data-stu-id="efce7-128">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.RangeBorderCollection` - Only available on collection types.</span></span> <span data-ttu-id="efce7-129">É semelhante à assinatura anterior.</span><span class="sxs-lookup"><span data-stu-id="efce7-129">It is similar to the preceding signature.</span></span> <span data-ttu-id="efce7-130">Option. Top especifica o número máximo de itens de coleta que podem ser incluídos no resultado.</span><span class="sxs-lookup"><span data-stu-id="efce7-130">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="efce7-131">Option. Skip especifica o número de itens que devem ser ignorados e não incluídos no resultado.</span><span class="sxs-lookup"><span data-stu-id="efce7-131">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="efce7-132">Se Option. Top for especificado, o conjunto de resultados será iniciado depois de ignorar o número de itens especificado.</span><span class="sxs-lookup"><span data-stu-id="efce7-132">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.RangeBorderCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.RangeBorderCollection;'
    return:
      type:
      - excel.Excel.RangeBorderCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - Excel.Interfaces.RangeBorderCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
- uid: excel.Excel.RangeBorderCollection.load_1
  summary: <span data-ttu-id="efce7-133">Enfileira um comando para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="efce7-133">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="efce7-134">Você deve chamar `context.sync()` antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="efce7-134">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.RangeBorderCollection;'
    return:
      type:
      - excel.Excel.RangeBorderCollection
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"efce7-135\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"efce7-135\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var sheetName = \"Sheet1\";\n    var rangeAddress = \"A1:F8\";\n    var worksheet = ctx.workbook.worksheets.getItem(sheetName);\n    var range = worksheet.getRange(rangeAddress);\n    var borders = range.format.borders;\n    border.load('items');\n    return ctx.sync().then(function() {\n        console.log(borders.count);\n        for (var i = 0; i < borders.items.length; i++)\n        {\n            console.log(borders.items[i].sideIndex);\n        }\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\n// The example below adds grid border around the range.\nExcel.run(function (ctx) { \n    var sheetName = \"Sheet1\";\n    var rangeAddress = \"A1:F8\";\n    var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeAddress);\n    range.format.borders.getItem('InsideHorizontal').style = 'Continuous';\n    range.format.borders.getItem('InsideVertical').style = 'Continuous';\n    range.format.borders.getItem('EdgeBottom').style = 'Continuous';\n    range.format.borders.getItem('EdgeLeft').style = 'Continuous';\n    range.format.borders.getItem('EdgeRight').style = 'Continuous';\n    range.format.borders.getItem('EdgeTop').style = 'Continuous';\n    return ctx.sync(); \n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="efce7-136">Uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="efce7-136">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.RangeBorderCollection.load_2
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: OfficeExtension.LoadOption): Excel.RangeBorderCollection;'
    return:
      type:
      - excel.Excel.RangeBorderCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - office.OfficeExtension.LoadOption
- uid: excel.Excel.RangeBorderCollection.tintAndShade
  summary: >-
    <span data-ttu-id="efce7-137">Retorna ou define um duplo que clareia ou escurece uma cor para bordas de intervalo, o valor é entre-1 (mais escuro) e 1 (mais brilhante), com 0 para a cor original.</span><span class="sxs-lookup"><span data-stu-id="efce7-137">Returns or sets a double that lightens or darkens a color for Range Borders, the value is between -1 (darkest) and 1 (brightest), with 0 for the original color.</span></span> <span data-ttu-id="efce7-138">Um valor nulo indica que as coleções de bordas inteiras não têm configuração tintAndShade uniformes.</span><span class="sxs-lookup"><span data-stu-id="efce7-138">A null value indicates that the entire border collections don't have uniform tintAndShade setting.</span></span>


    <span data-ttu-id="efce7-139">\[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="efce7-139">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: tintAndShade
  fullName: tintAndShade
  langs:
  - typeScript
  type: property
  syntax:
    content: 'tintAndShade: number;'
    return:
      type:
      - number
- uid: excel.Excel.RangeBorderCollection.toJSON
  summary: <span data-ttu-id="efce7-140">Substitui o método `toJSON()` JavaScript para fornecer uma saída mais útil quando um objeto API é passado para `JSON.stringify()` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="efce7-140">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="efce7-141">(`JSON.stringify`<!-- -->, por sua vez, chama `toJSON` o método do objeto que é passado para ele). Enquanto o objeto `Excel.RangeBorderCollection` original é um objeto API, o `toJSON` método retorna um objeto JavaScript simples (digitado `Excel.Interfaces.RangeBorderCollectionData` <!-- -->como) que contém uma matriz "Items" com cópias superficiais de qualquer propriedade carregada dos itens da coleção.</span><span class="sxs-lookup"><span data-stu-id="efce7-141">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.RangeBorderCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.RangeBorderCollectionData`<!-- -->) that contains an "items" array with shallow copies of any loaded properties from the collection's items.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.RangeBorderCollectionData;'
    return:
      type:
      - excel.Excel.Interfaces.RangeBorderCollectionData
      description: ''
