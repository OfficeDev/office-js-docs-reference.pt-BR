### YamlMime:UniversalReference
ms.openlocfilehash: 9a859746d43c824cca45dbd18e1fbcd0909eaa50
ms.sourcegitcommit: 5e31602ed9cbddfcff2768b7ed69dd4821440b90
ms.translationtype: MT
ms.contentlocale: pt-BR
ms.lasthandoff: 03/14/2019
ms.locfileid: "30575960"
items:
- uid: excel.Excel.Range
  summary: >-
    <span data-ttu-id="56f47-101">Range representa um conjunto de uma ou mais células contíguas, como uma célula, uma linha, uma coluna, um bloco de células, etc.</span><span class="sxs-lookup"><span data-stu-id="56f47-101">Range represents a set of one or more contiguous cells such as a cell, a row, a column, block of cells, etc.</span></span>


    <span data-ttu-id="56f47-102">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="56f47-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.Range
  fullName: Excel.Range
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.Range.address
  - excel.Excel.Range.addressLocal
  - excel.Excel.Range.autoFill
  - excel.Excel.Range.autoFill_1
  - excel.Excel.Range.calculate
  - excel.Excel.Range.cellCount
  - excel.Excel.Range.clear
  - excel.Excel.Range.clear_1
  - excel.Excel.Range.columnCount
  - excel.Excel.Range.columnHidden
  - excel.Excel.Range.columnIndex
  - excel.Excel.Range.conditionalFormats
  - excel.Excel.Range.context
  - excel.Excel.Range.convertDataTypeToText
  - excel.Excel.Range.convertToLinkedDataType
  - excel.Excel.Range.copyFrom
  - excel.Excel.Range.copyFrom_1
  - excel.Excel.Range.dataValidation
  - excel.Excel.Range.delete
  - excel.Excel.Range.delete_1
  - excel.Excel.Range.find
  - excel.Excel.Range.findOrNullObject
  - excel.Excel.Range.flashFill
  - excel.Excel.Range.format
  - excel.Excel.Range.formulas
  - excel.Excel.Range.formulasLocal
  - excel.Excel.Range.formulasR1C1
  - excel.Excel.Range.getAbsoluteResizedRange
  - excel.Excel.Range.getBoundingRect
  - excel.Excel.Range.getCell
  - excel.Excel.Range.getCellProperties
  - excel.Excel.Range.getColumn
  - excel.Excel.Range.getColumnProperties
  - excel.Excel.Range.getColumnsAfter
  - excel.Excel.Range.getColumnsBefore
  - excel.Excel.Range.getEntireColumn
  - excel.Excel.Range.getEntireRow
  - excel.Excel.Range.getImage
  - excel.Excel.Range.getIntersection
  - excel.Excel.Range.getIntersectionOrNullObject
  - excel.Excel.Range.getLastCell
  - excel.Excel.Range.getLastColumn
  - excel.Excel.Range.getLastRow
  - excel.Excel.Range.getOffsetRange
  - excel.Excel.Range.getResizedRange
  - excel.Excel.Range.getRow
  - excel.Excel.Range.getRowProperties
  - excel.Excel.Range.getRowsAbove
  - excel.Excel.Range.getRowsBelow
  - excel.Excel.Range.getSpecialCells
  - excel.Excel.Range.getSpecialCells_1
  - excel.Excel.Range.getSpecialCellsOrNullObject
  - excel.Excel.Range.getSpecialCellsOrNullObject_1
  - excel.Excel.Range.getSpillingToRange
  - excel.Excel.Range.getSpillingToRangeOrNullObject
  - excel.Excel.Range.getSpillParent
  - excel.Excel.Range.getSpillParentOrNullObject
  - excel.Excel.Range.getSurroundingRegion
  - excel.Excel.Range.getTables
  - excel.Excel.Range.getUsedRange
  - excel.Excel.Range.getUsedRangeOrNullObject
  - excel.Excel.Range.getVisibleView
  - excel.Excel.Range.hasSpill
  - excel.Excel.Range.hidden
  - excel.Excel.Range.hyperlink
  - excel.Excel.Range.insert
  - excel.Excel.Range.insert_1
  - excel.Excel.Range.isEntireColumn
  - excel.Excel.Range.isEntireRow
  - excel.Excel.Range.linkedDataTypeState
  - excel.Excel.Range.load
  - excel.Excel.Range.load_1
  - excel.Excel.Range.load_2
  - excel.Excel.Range.merge
  - excel.Excel.Range.numberFormat
  - excel.Excel.Range.numberFormatLocal
  - excel.Excel.Range.removeDuplicates
  - excel.Excel.Range.replaceAll
  - excel.Excel.Range.rowCount
  - excel.Excel.Range.rowHidden
  - excel.Excel.Range.rowIndex
  - excel.Excel.Range.select
  - excel.Excel.Range.set
  - excel.Excel.Range.set_1
  - excel.Excel.Range.setCellProperties
  - excel.Excel.Range.setColumnProperties
  - excel.Excel.Range.setDirty
  - excel.Excel.Range.setRowProperties
  - excel.Excel.Range.showCard
  - excel.Excel.Range.sort
  - excel.Excel.Range.style
  - excel.Excel.Range.text
  - excel.Excel.Range.toJSON
  - excel.Excel.Range.track
  - excel.Excel.Range.unmerge
  - excel.Excel.Range.untrack
  - excel.Excel.Range.values
  - excel.Excel.Range.valueTypes
  - excel.Excel.Range.worksheet
- uid: excel.Excel.Range.address
  summary: >-
    <span data-ttu-id="56f47-103">Representa a referência do intervalo no estilo A1.</span><span class="sxs-lookup"><span data-stu-id="56f47-103">Represents the range reference in A1-style.</span></span> <span data-ttu-id="56f47-104">O valor de endereço conterá a referência de planilha (por exemplo, "Planilha1! A1: B4 ").</span><span class="sxs-lookup"><span data-stu-id="56f47-104">Address value will contain the Sheet reference (e.g. "Sheet1!A1:B4").</span></span> <span data-ttu-id="56f47-105">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="56f47-105">Read-only.</span></span>


    <span data-ttu-id="56f47-106">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="56f47-106">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: address
  fullName: address
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly address: string;'
    return:
      type:
      - string
- uid: excel.Excel.Range.addressLocal
  summary: >-
    <span data-ttu-id="56f47-107">Representa a referência de intervalo para o intervalo especificado no idioma do usuário.</span><span class="sxs-lookup"><span data-stu-id="56f47-107">Represents range reference for the specified range in the language of the user.</span></span> <span data-ttu-id="56f47-108">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="56f47-108">Read-only.</span></span>


    <span data-ttu-id="56f47-109">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="56f47-109">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: addressLocal
  fullName: addressLocal
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly addressLocal: string;'
    return:
      type:
      - string
- uid: excel.Excel.Range.autoFill
  summary: >-
    <span data-ttu-id="56f47-110">Preenche o intervalo do intervalo atual com o intervalo de destino.</span><span class="sxs-lookup"><span data-stu-id="56f47-110">Fills range from the current range to the destination range.</span></span> <span data-ttu-id="56f47-111">O intervalo de destino deve estender a origem tanto horizontal como verticalmente.</span><span class="sxs-lookup"><span data-stu-id="56f47-111">The destination range must extend the source either horizontally or vertically.</span></span> <span data-ttu-id="56f47-112">Não há suporte para intervalos não contíguos.</span><span class="sxs-lookup"><span data-stu-id="56f47-112">Discontiguous ranges are not supported.</span></span>


    <span data-ttu-id="56f47-113">\[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="56f47-113">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: autoFill(destinationRange, autoFillType)
  fullName: autoFill(destinationRange, autoFillType)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'autoFill(destinationRange: Range | string, autoFillType?: Excel.AutoFillType): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: destinationRange
      description: <span data-ttu-id="56f47-114">O intervalo de destino para preenchimento automático.</span><span class="sxs-lookup"><span data-stu-id="56f47-114">The destination range to autofill.</span></span>
      type:
      - Range | string
    - id: autoFillType
      description: <span data-ttu-id="56f47-115">O tipo de preenchimento automático.</span><span class="sxs-lookup"><span data-stu-id="56f47-115">The type of autofill.</span></span> <span data-ttu-id="56f47-116">Especifica como o intervalo de destino deve ser preenchido, com base no conteúdo do intervalo atual.</span><span class="sxs-lookup"><span data-stu-id="56f47-116">Specifies how the destination range is to be filled, based on the contents of the current range.</span></span> <span data-ttu-id="56f47-117">O padrão é "FillDefault".</span><span class="sxs-lookup"><span data-stu-id="56f47-117">Default is "FillDefault".</span></span>
      type:
      - excel.Excel.AutoFillType
- uid: excel.Excel.Range.autoFill_1
  summary: >-
    <span data-ttu-id="56f47-118">Preenche o intervalo do intervalo atual com o intervalo de destino.</span><span class="sxs-lookup"><span data-stu-id="56f47-118">Fills range from the current range to the destination range.</span></span> <span data-ttu-id="56f47-119">O intervalo de destino deve estender a origem tanto horizontal como verticalmente.</span><span class="sxs-lookup"><span data-stu-id="56f47-119">The destination range must extend the source either horizontally or vertically.</span></span> <span data-ttu-id="56f47-120">Não há suporte para intervalos não contíguos.</span><span class="sxs-lookup"><span data-stu-id="56f47-120">Discontiguous ranges are not supported.</span></span>


    <span data-ttu-id="56f47-121">\[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="56f47-121">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: autoFill(destinationRange, autoFillTypeString)
  fullName: autoFill(destinationRange, autoFillTypeString)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'autoFill(destinationRange: Range | string, autoFillTypeString?: "FillDefault" | "FillCopy" | "FillSeries" | "FillFormats" | "FillValues" | "FillDays" | "FillWeekdays" | "FillMonths" | "FillYears" | "LinearTrend" | "GrowthTrend" | "FlashFill"): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: destinationRange
      description: <span data-ttu-id="56f47-122">O intervalo de destino para preenchimento automático.</span><span class="sxs-lookup"><span data-stu-id="56f47-122">The destination range to autofill.</span></span>
      type:
      - Range | string
    - id: autoFillTypeString
      description: <span data-ttu-id="56f47-123">O tipo de preenchimento automático.</span><span class="sxs-lookup"><span data-stu-id="56f47-123">The type of autofill.</span></span> <span data-ttu-id="56f47-124">Especifica como o intervalo de destino deve ser preenchido, com base no conteúdo do intervalo atual.</span><span class="sxs-lookup"><span data-stu-id="56f47-124">Specifies how the destination range is to be filled, based on the contents of the current range.</span></span> <span data-ttu-id="56f47-125">O padrão é "FillDefault".</span><span class="sxs-lookup"><span data-stu-id="56f47-125">Default is "FillDefault".</span></span>
      type:
      - "\"FillDefault\" | \"FillCopy\" | \"FillSeries\" | \"FillFormats\" | \"FillValues\" | \"FillDays\" | \"FillWeekdays\" | \"FillMonths\" | \"FillYears\" | \"LinearTrend\" | \"GrowthTrend\" | \"FlashFill\""
- uid: excel.Excel.Range.calculate
  summary: >-
    <span data-ttu-id="56f47-126">Calcula um intervalo de células em uma planilha.</span><span class="sxs-lookup"><span data-stu-id="56f47-126">Calculates a range of cells on a worksheet.</span></span>


    <span data-ttu-id="56f47-127">\[[Conjunto de APIs: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="56f47-127">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: calculate()
  fullName: calculate()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'calculate(): void;'
    return:
      type:
      - void
      description: ''
- uid: excel.Excel.Range.cellCount
  summary: >-
    <span data-ttu-id="56f47-128">Número de células no intervalo.</span><span class="sxs-lookup"><span data-stu-id="56f47-128">Number of cells in the range.</span></span> <span data-ttu-id="56f47-129">Essa API retornará -1 se a contagem de células exceder 2^31-1 (2.147.483.647).</span><span class="sxs-lookup"><span data-stu-id="56f47-129">This API will return -1 if the cell count exceeds 2^31-1 (2,147,483,647).</span></span> <span data-ttu-id="56f47-130">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="56f47-130">Read-only.</span></span>


    <span data-ttu-id="56f47-131">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="56f47-131">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: cellCount
  fullName: cellCount
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly cellCount: number;'
    return:
      type:
      - number
- uid: excel.Excel.Range.clear
  summary: >-
    <span data-ttu-id="56f47-132">Limpa valores de intervalo, formatação, preenchimento, borda, etc.</span><span class="sxs-lookup"><span data-stu-id="56f47-132">Clear range values, format, fill, border, etc.</span></span>


    <span data-ttu-id="56f47-133">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="56f47-133">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: clear(applyTo)
  fullName: clear(applyTo)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'clear(applyTo?: Excel.ClearApplyTo): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"56f47-134\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"56f47-134\">Examples</span></span>\n\n```javascript\n// Below example clears format and contents of the range. \nExcel.run(function (ctx) { \n    var sheetName = \"Sheet1\";\n    var rangeAddress = \"D:F\";\n    var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeAddress);\n    range.clear();\n    return ctx.sync(); \n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: applyTo
      description: <span data-ttu-id="56f47-135">Opcional.</span><span class="sxs-lookup"><span data-stu-id="56f47-135">Optional.</span></span> <span data-ttu-id="56f47-136">Determina o tipo de ação clara.</span><span class="sxs-lookup"><span data-stu-id="56f47-136">Determines the type of clear action.</span></span> <span data-ttu-id="56f47-137">Consulte Excel. ClearApplyTo para obter detalhes.</span><span class="sxs-lookup"><span data-stu-id="56f47-137">See Excel.ClearApplyTo for details.</span></span>
      type:
      - excel.Excel.ClearApplyTo
- uid: excel.Excel.Range.clear_1
  summary: >-
    <span data-ttu-id="56f47-138">Limpa valores de intervalo, formatação, preenchimento, borda, etc.</span><span class="sxs-lookup"><span data-stu-id="56f47-138">Clear range values, format, fill, border, etc.</span></span>


    <span data-ttu-id="56f47-139">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="56f47-139">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: clear(applyToString)
  fullName: clear(applyToString)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'clear(applyToString?: "All" | "Formats" | "Contents" | "Hyperlinks" | "RemoveHyperlinks"): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: applyToString
      description: <span data-ttu-id="56f47-140">Opcional.</span><span class="sxs-lookup"><span data-stu-id="56f47-140">Optional.</span></span> <span data-ttu-id="56f47-141">Determina o tipo de ação clara.</span><span class="sxs-lookup"><span data-stu-id="56f47-141">Determines the type of clear action.</span></span> <span data-ttu-id="56f47-142">Consulte Excel. ClearApplyTo para obter detalhes.</span><span class="sxs-lookup"><span data-stu-id="56f47-142">See Excel.ClearApplyTo for details.</span></span>
      type:
      - "\"All\" | \"Formats\" | \"Contents\" | \"Hyperlinks\" | \"RemoveHyperlinks\""
- uid: excel.Excel.Range.columnCount
  summary: >-
    <span data-ttu-id="56f47-143">Representa o número total de colunas no intervalo.</span><span class="sxs-lookup"><span data-stu-id="56f47-143">Represents the total number of columns in the range.</span></span> <span data-ttu-id="56f47-144">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="56f47-144">Read-only.</span></span>


    <span data-ttu-id="56f47-145">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="56f47-145">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: columnCount
  fullName: columnCount
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly columnCount: number;'
    return:
      type:
      - number
- uid: excel.Excel.Range.columnHidden
  summary: >-
    <span data-ttu-id="56f47-146">Representa se todas as colunas do intervalo atual estão ocultas.</span><span class="sxs-lookup"><span data-stu-id="56f47-146">Represents if all columns of the current range are hidden.</span></span>


    <span data-ttu-id="56f47-147">\[[Conjunto de APIs: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="56f47-147">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: columnHidden
  fullName: columnHidden
  langs:
  - typeScript
  type: property
  syntax:
    content: 'columnHidden: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.Range.columnIndex
  summary: >-
    <span data-ttu-id="56f47-148">Representa o número de colunas da primeira célula no intervalo.</span><span class="sxs-lookup"><span data-stu-id="56f47-148">Represents the column number of the first cell in the range.</span></span> <span data-ttu-id="56f47-149">Indexados com zero.</span><span class="sxs-lookup"><span data-stu-id="56f47-149">Zero-indexed.</span></span> <span data-ttu-id="56f47-150">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="56f47-150">Read-only.</span></span>


    <span data-ttu-id="56f47-151">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="56f47-151">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: columnIndex
  fullName: columnIndex
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly columnIndex: number;'
    return:
      type:
      - number
- uid: excel.Excel.Range.conditionalFormats
  summary: >-
    <span data-ttu-id="56f47-152">Conjunto de ConditionalFormats que interseccionam o intervalo.</span><span class="sxs-lookup"><span data-stu-id="56f47-152">Collection of ConditionalFormats that intersect the range.</span></span> <span data-ttu-id="56f47-153">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="56f47-153">Read-only.</span></span>


    <span data-ttu-id="56f47-154">\[[Conjunto de APIs: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="56f47-154">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: conditionalFormats
  fullName: conditionalFormats
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly conditionalFormats: Excel.ConditionalFormatCollection;'
    return:
      type:
      - excel.Excel.ConditionalFormatCollection
- uid: excel.Excel.Range.context
  summary: <span data-ttu-id="56f47-155">O contexto de solicitação associado ao objeto.</span><span class="sxs-lookup"><span data-stu-id="56f47-155">The request context associated with the object.</span></span> <span data-ttu-id="56f47-156">Isso conecta o processo do suplemento ao processo do aplicativo host do Office.</span><span class="sxs-lookup"><span data-stu-id="56f47-156">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.Range.convertDataTypeToText
  summary: >-
    <span data-ttu-id="56f47-157">Converte o intervalo de células com tipos de dados em texto.</span><span class="sxs-lookup"><span data-stu-id="56f47-157">Converts the range cells with datatypes into text.</span></span>


    <span data-ttu-id="56f47-158">\[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="56f47-158">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: convertDataTypeToText()
  fullName: convertDataTypeToText()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'convertDataTypeToText(): void;'
    return:
      type:
      - void
      description: ''
- uid: excel.Excel.Range.convertToLinkedDataType
  summary: >-
    <span data-ttu-id="56f47-159">Converte as células de intervalo em um tipo de dados vinculado na planilha.</span><span class="sxs-lookup"><span data-stu-id="56f47-159">Converts the range cells into linked datatype in the worksheet.</span></span>


    <span data-ttu-id="56f47-160">\[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="56f47-160">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: convertToLinkedDataType(serviceID, languageCulture)
  fullName: convertToLinkedDataType(serviceID, languageCulture)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'convertToLinkedDataType(serviceID: number, languageCulture: string): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: serviceID
      description: <span data-ttu-id="56f47-161">A ID de serviço que será usada para consultar os dados.</span><span class="sxs-lookup"><span data-stu-id="56f47-161">The Service ID which will be used to query the data.</span></span>
      type:
      - number
    - id: languageCulture
      description: <span data-ttu-id="56f47-162">Cultura de idioma para consultar o serviço.</span><span class="sxs-lookup"><span data-stu-id="56f47-162">Language Culture to query the service for.</span></span>
      type:
      - string
- uid: excel.Excel.Range.copyFrom
  summary: >-
    <span data-ttu-id="56f47-163">Copia a formatação ou dados da célula do intervalo de origem ou de RangeAreas para o intervalo atual.</span><span class="sxs-lookup"><span data-stu-id="56f47-163">Copies cell data or formatting from the source range or RangeAreas to the current range.</span></span> <span data-ttu-id="56f47-164">O intervalo de destino pode ser de tamanho diferente do intervalo de origem ou RangeAreas.</span><span class="sxs-lookup"><span data-stu-id="56f47-164">The destination range can be of different size than the source range or RangeAreas.</span></span> <span data-ttu-id="56f47-165">O destino será expandido automaticamente se for menor do que a origem.</span><span class="sxs-lookup"><span data-stu-id="56f47-165">The destination will be expanded automatically if it is smaller than the source.</span></span>


    <span data-ttu-id="56f47-166">\[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="56f47-166">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: copyFrom(sourceRange, copyType, skipBlanks, transpose)
  fullName: copyFrom(sourceRange, copyType, skipBlanks, transpose)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'copyFrom(sourceRange: Range | RangeAreas | string, copyType?: Excel.RangeCopyType, skipBlanks?: boolean, transpose?: boolean): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"56f47-167\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"56f47-167\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    sheet.getRange(\"F2\").values = [[\"Copied Formula\"]];\n    sheet.getRange(\"F2\").format.autofitColumns();\n\n    // copy a range preserving the formulas\n    // note: non-formula values are copied over as is\n    sheet.getRange(\"G2\").copyFrom(\"A1:E1\", Excel.RangeCopyType.formulas);\n    await context.sync();\n});\n```"
    parameters:
    - id: sourceRange
      description: <span data-ttu-id="56f47-168">O intervalo de origem ou RangeAreas a ser copiado.</span><span class="sxs-lookup"><span data-stu-id="56f47-168">The source range or RangeAreas to copy from.</span></span> <span data-ttu-id="56f47-169">Quando o RangeAreas de origem tem vários intervalos, ele deve no formulário de estrutura de tópicos que pode ser criado removendo linhas ou colunas completas de um intervalo retangular.</span><span class="sxs-lookup"><span data-stu-id="56f47-169">When the source RangeAreas has multiple ranges, it must in the outline form which can be created by removing full rows or columns from a rectangular range.</span></span>
      type:
      - Range | RangeAreas | string
    - id: copyType
      description: <span data-ttu-id="56f47-170">O tipo de dados da célula ou formatação a ser copiada.</span><span class="sxs-lookup"><span data-stu-id="56f47-170">The type of cell data or formatting to copy over.</span></span> <span data-ttu-id="56f47-171">O padrão é "All".</span><span class="sxs-lookup"><span data-stu-id="56f47-171">Default is "All".</span></span>
      type:
      - excel.Excel.RangeCopyType
    - id: skipBlanks
      description: <span data-ttu-id="56f47-172">True se para ignorar células em branco no intervalo de origem.</span><span class="sxs-lookup"><span data-stu-id="56f47-172">True if to skip blank cells in the source range.</span></span> <span data-ttu-id="56f47-173">O padrão é false.</span><span class="sxs-lookup"><span data-stu-id="56f47-173">Default is false.</span></span>
      type:
      - boolean
    - id: transpose
      description: <span data-ttu-id="56f47-174">True se para transpor as células no intervalo de destino.</span><span class="sxs-lookup"><span data-stu-id="56f47-174">True if to transpose the cells in the destination range.</span></span> <span data-ttu-id="56f47-175">O padrão é false.</span><span class="sxs-lookup"><span data-stu-id="56f47-175">Default is false.</span></span>
      type:
      - boolean
- uid: excel.Excel.Range.copyFrom_1
  summary: >-
    <span data-ttu-id="56f47-176">Copia a formatação ou dados da célula do intervalo de origem ou de RangeAreas para o intervalo atual.</span><span class="sxs-lookup"><span data-stu-id="56f47-176">Copies cell data or formatting from the source range or RangeAreas to the current range.</span></span> <span data-ttu-id="56f47-177">O intervalo de destino pode ser de tamanho diferente do intervalo de origem ou RangeAreas.</span><span class="sxs-lookup"><span data-stu-id="56f47-177">The destination range can be of different size than the source range or RangeAreas.</span></span> <span data-ttu-id="56f47-178">O destino será expandido automaticamente se for menor do que a origem.</span><span class="sxs-lookup"><span data-stu-id="56f47-178">The destination will be expanded automatically if it is smaller than the source.</span></span>


    <span data-ttu-id="56f47-179">\[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="56f47-179">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: copyFrom(sourceRange, copyTypeString, skipBlanks, transpose)
  fullName: copyFrom(sourceRange, copyTypeString, skipBlanks, transpose)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'copyFrom(sourceRange: Range | RangeAreas | string, copyTypeString?: "All" | "Formulas" | "Values" | "Formats", skipBlanks?: boolean, transpose?: boolean): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: sourceRange
      description: <span data-ttu-id="56f47-180">O intervalo de origem ou RangeAreas a ser copiado.</span><span class="sxs-lookup"><span data-stu-id="56f47-180">The source range or RangeAreas to copy from.</span></span> <span data-ttu-id="56f47-181">Quando o RangeAreas de origem tem vários intervalos, ele deve no formulário de estrutura de tópicos que pode ser criado removendo linhas ou colunas completas de um intervalo retangular.</span><span class="sxs-lookup"><span data-stu-id="56f47-181">When the source RangeAreas has multiple ranges, it must in the outline form which can be created by removing full rows or columns from a rectangular range.</span></span>
      type:
      - Range | RangeAreas | string
    - id: copyTypeString
      description: <span data-ttu-id="56f47-182">O tipo de dados da célula ou formatação a ser copiada.</span><span class="sxs-lookup"><span data-stu-id="56f47-182">The type of cell data or formatting to copy over.</span></span> <span data-ttu-id="56f47-183">O padrão é "All".</span><span class="sxs-lookup"><span data-stu-id="56f47-183">Default is "All".</span></span>
      type:
      - "\"All\" | \"Formulas\" | \"Values\" | \"Formats\""
    - id: skipBlanks
      description: <span data-ttu-id="56f47-184">True se para ignorar células em branco no intervalo de origem.</span><span class="sxs-lookup"><span data-stu-id="56f47-184">True if to skip blank cells in the source range.</span></span> <span data-ttu-id="56f47-185">O padrão é false.</span><span class="sxs-lookup"><span data-stu-id="56f47-185">Default is false.</span></span>
      type:
      - boolean
    - id: transpose
      description: <span data-ttu-id="56f47-186">True se para transpor as células no intervalo de destino.</span><span class="sxs-lookup"><span data-stu-id="56f47-186">True if to transpose the cells in the destination range.</span></span> <span data-ttu-id="56f47-187">O padrão é false.</span><span class="sxs-lookup"><span data-stu-id="56f47-187">Default is false.</span></span>
      type:
      - boolean
- uid: excel.Excel.Range.dataValidation
  summary: >-
    <span data-ttu-id="56f47-188">Retorna um objeto de validação de dados.</span><span class="sxs-lookup"><span data-stu-id="56f47-188">Returns a data validation object.</span></span>


    <span data-ttu-id="56f47-189">\[[Conjunto de APIs: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="56f47-189">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: dataValidation
  fullName: dataValidation
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly dataValidation: Excel.DataValidation;'
    return:
      type:
      - excel.Excel.DataValidation
- uid: excel.Excel.Range.delete
  summary: >-
    <span data-ttu-id="56f47-190">Exclui as células associadas ao intervalo.</span><span class="sxs-lookup"><span data-stu-id="56f47-190">Deletes the cells associated with the range.</span></span>


    <span data-ttu-id="56f47-191">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="56f47-191">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: delete(shift)
  fullName: delete(shift)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'delete(shift: Excel.DeleteShiftDirection): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: shift
      description: <span data-ttu-id="56f47-192">Especifica como deslocar as células.</span><span class="sxs-lookup"><span data-stu-id="56f47-192">Specifies which way to shift the cells.</span></span> <span data-ttu-id="56f47-193">Consulte Excel. DeleteShiftDirection para obter detalhes.</span><span class="sxs-lookup"><span data-stu-id="56f47-193">See Excel.DeleteShiftDirection for details.</span></span>
      type:
      - excel.Excel.DeleteShiftDirection
- uid: excel.Excel.Range.delete_1
  summary: >-
    <span data-ttu-id="56f47-194">Exclui as células associadas ao intervalo.</span><span class="sxs-lookup"><span data-stu-id="56f47-194">Deletes the cells associated with the range.</span></span>


    <span data-ttu-id="56f47-195">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="56f47-195">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: delete(shiftString)
  fullName: delete(shiftString)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'delete(shiftString: "Up" | "Left"): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"56f47-196\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"56f47-196\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var sheetName = \"Sheet1\";\n    var rangeAddress = \"D:F\";\n    var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeAddress);\n    range.delete(\"Left\");\n    return ctx.sync(); \n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: shiftString
      description: <span data-ttu-id="56f47-197">Especifica como deslocar as células.</span><span class="sxs-lookup"><span data-stu-id="56f47-197">Specifies which way to shift the cells.</span></span> <span data-ttu-id="56f47-198">Consulte Excel. DeleteShiftDirection para obter detalhes.</span><span class="sxs-lookup"><span data-stu-id="56f47-198">See Excel.DeleteShiftDirection for details.</span></span>
      type:
      - "\"Up\" | \"Left\""
- uid: excel.Excel.Range.find
  summary: >-
    <span data-ttu-id="56f47-199">Localiza certa cadeia de caracteres com base em critérios especificados.</span><span class="sxs-lookup"><span data-stu-id="56f47-199">Finds the given string based on the criteria specified.</span></span> <span data-ttu-id="56f47-200">Se o intervalo atual for maior que uma única célula, a pesquisa será limitada a esse intervalo, caso contrário, a pesquisa cobrirá toda a planilha que começa após essa célula.</span><span class="sxs-lookup"><span data-stu-id="56f47-200">If the current range is larger than a single cell, then the search will be limited to that range, else the search will cover the entire sheet starting after that cell.</span></span>


    <span data-ttu-id="56f47-201">\[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="56f47-201">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: find(text, criteria)
  fullName: find(text, criteria)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'find(text: string, criteria: Excel.SearchCriteria): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "<span data-ttu-id=\"56f47-202\">O intervalo que corresponde aos critérios de pesquisa.</span><span class=\"sxs-lookup\"><span data-stu-id=\"56f47-202\">The Range which matched the search criteria.</span></span>\n#### <a name=\"examples\"></a><span data-ttu-id=\"56f47-203\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"56f47-203\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const table = sheet.tables.getItem(\"ExpensesTable\");\n    const searchRange = table.getRange();\n\n    // NOTE: If no match is found, an ItemNotFound error\n    // is thrown when Range.find is evaluated.\n    const foundRange = searchRange.find($(\"#searchText\").text(), {\n        completeMatch: completeMatch,\n        matchCase: matchCase,\n        searchDirection: searchDirection\n    });\n    \n    foundRange.load(\"address\");\n    await context.sync();\n\n\n    console.log(foundRange.address);\n});\n```"
    parameters:
    - id: text
      description: <span data-ttu-id="56f47-204">Cadeia de caracteres a ser localizada.</span><span class="sxs-lookup"><span data-stu-id="56f47-204">String to find.</span></span>
      type:
      - string
    - id: criteria
      description: <span data-ttu-id="56f47-205">Critérios adicionais.</span><span class="sxs-lookup"><span data-stu-id="56f47-205">Additional Criteria.</span></span>
      type:
      - excel.Excel.SearchCriteria
- uid: excel.Excel.Range.findOrNullObject
  summary: >-
    <span data-ttu-id="56f47-206">Localiza certa cadeia de caracteres com base em critérios especificados.</span><span class="sxs-lookup"><span data-stu-id="56f47-206">Finds the given string based on the criteria specified.</span></span> <span data-ttu-id="56f47-207">Se o intervalo atual for maior que uma única célula, a pesquisa será limitada a esse intervalo, caso contrário, a pesquisa cobrirá toda a planilha que começa após essa célula.</span><span class="sxs-lookup"><span data-stu-id="56f47-207">If the current range is larger than a single cell, then the search will be limited to that range, else the search will cover the entire sheet starting after that cell.</span></span> <span data-ttu-id="56f47-208">Se não houver nenhuma correspondência, esta função retornará um objeto NULL.</span><span class="sxs-lookup"><span data-stu-id="56f47-208">If there are no matches, this function will return a null object.</span></span>


    <span data-ttu-id="56f47-209">\[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="56f47-209">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: findOrNullObject(text, criteria)
  fullName: findOrNullObject(text, criteria)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'findOrNullObject(text: string, criteria: Excel.SearchCriteria): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "<span data-ttu-id=\"56f47-210\">O intervalo que corresponde aos critérios de pesquisa.</span><span class=\"sxs-lookup\"><span data-stu-id=\"56f47-210\">The Range which matched the search criteria.</span></span>\n#### <a name=\"examples\"></a><span data-ttu-id=\"56f47-211\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"56f47-211\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const table = sheet.tables.getItem(\"ExpensesTable\");\n    const searchRange = table.getRange();\n    const foundRange = searchRange.findOrNullObject($(\"#searchText\").text(), {\n        completeMatch: completeMatch,\n        matchCase: matchCase,\n        searchDirection: searchDirection\n    });\n    \n    foundRange.load(\"address\");\n    await context.sync();\n\n    if (foundRange.isNullObject) {\n        console.log(\"Text not found\");\n    } else {\n        console.log(foundRange.address);\n    }\n});\n```"
    parameters:
    - id: text
      description: <span data-ttu-id="56f47-212">Cadeia de caracteres a ser localizada.</span><span class="sxs-lookup"><span data-stu-id="56f47-212">String to find.</span></span>
      type:
      - string
    - id: criteria
      description: <span data-ttu-id="56f47-213">Critérios adicionais.</span><span class="sxs-lookup"><span data-stu-id="56f47-213">Additional Criteria.</span></span>
      type:
      - excel.Excel.SearchCriteria
- uid: excel.Excel.Range.flashFill
  summary: >-
    <span data-ttu-id="56f47-214">FlashFill o intervalo atual. O preenchimento relâmpago preencherá automaticamente os dados quando detectar um padrão, portanto, o intervalo deve ser intervalo de coluna única e ter dados para localizar o padrão.</span><span class="sxs-lookup"><span data-stu-id="56f47-214">Does FlashFill to current range.Flash Fill will automatically fills data when it senses a pattern, so the range must be single column range and have data around in order to find pattern.</span></span>


    <span data-ttu-id="56f47-215">\[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="56f47-215">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: flashFill()
  fullName: flashFill()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'flashFill(): void;'
    return:
      type:
      - void
      description: ''
- uid: excel.Excel.Range.format
  summary: >-
    <span data-ttu-id="56f47-216">Retorna um objeto de formato que encapsula a fonte, o preenchimento, as bordas, o alinhamento e outras propriedades do intervalo.</span><span class="sxs-lookup"><span data-stu-id="56f47-216">Returns a format object, encapsulating the range's font, fill, borders, alignment, and other properties.</span></span> <span data-ttu-id="56f47-217">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="56f47-217">Read-only.</span></span>


    <span data-ttu-id="56f47-218">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="56f47-218">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: format
  fullName: format
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly format: Excel.RangeFormat;'
    return:
      type:
      - excel.Excel.RangeFormat
- uid: excel.Excel.Range.formulas
  summary: >-
    <span data-ttu-id="56f47-219">Representa a fórmula em notação A1.</span><span class="sxs-lookup"><span data-stu-id="56f47-219">Represents the formula in A1-style notation.</span></span> <span data-ttu-id="56f47-220">Ao definir fórmulas para um intervalo, o argumento value pode ser um valor único (uma cadeia de caracteres) ou uma matriz bidimensional.</span><span class="sxs-lookup"><span data-stu-id="56f47-220">When setting formulas to a range, the value argument can be either a single value (a string) or a two-dimensional array.</span></span> <span data-ttu-id="56f47-221">Se o argumento for um valor único, ele será aplicado a todas as células no intervalo.</span><span class="sxs-lookup"><span data-stu-id="56f47-221">If the argument is a single value, it will be applied to all cells in the range.</span></span>


    <span data-ttu-id="56f47-222">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="56f47-222">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: formulas
  fullName: formulas
  langs:
  - typeScript
  type: property
  syntax:
    content: 'formulas: any[][];'
    return:
      type:
      - any[][]
- uid: excel.Excel.Range.formulasLocal
  summary: >-
    <span data-ttu-id="56f47-223">Representa a fórmula em notação A1, na formatação de número da localidade e no idioma do usuário.</span><span class="sxs-lookup"><span data-stu-id="56f47-223">Represents the formula in A1-style notation, in the user's language and number-formatting locale.</span></span> <span data-ttu-id="56f47-224">Por exemplo, a fórmula "=SUM(A1, 1.5)" em inglês seria "=SOMA(A1; 1,5)" em português.</span><span class="sxs-lookup"><span data-stu-id="56f47-224">For example, the English "=SUM(A1, 1.5)" formula would become "=SUMME(A1; 1,5)" in German.</span></span> <span data-ttu-id="56f47-225">Ao definir fórmulas para um intervalo, o argumento value pode ser um valor único (uma cadeia de caracteres) ou uma matriz bidimensional.</span><span class="sxs-lookup"><span data-stu-id="56f47-225">When setting formulas to a range, the value argument can be either a single value (a string) or a two-dimensional array.</span></span> <span data-ttu-id="56f47-226">Se o argumento for um valor único, ele será aplicado a todas as células no intervalo.</span><span class="sxs-lookup"><span data-stu-id="56f47-226">If the argument is a single value, it will be applied to all cells in the range.</span></span>


    <span data-ttu-id="56f47-227">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="56f47-227">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: formulasLocal
  fullName: formulasLocal
  langs:
  - typeScript
  type: property
  syntax:
    content: 'formulasLocal: any[][];'
    return:
      type:
      - any[][]
- uid: excel.Excel.Range.formulasR1C1
  summary: >-
    <span data-ttu-id="56f47-228">Representa a fórmula em notação no estilo L1C1.</span><span class="sxs-lookup"><span data-stu-id="56f47-228">Represents the formula in R1C1-style notation.</span></span> <span data-ttu-id="56f47-229">Ao definir fórmulas para um intervalo, o argumento value pode ser um valor único (uma cadeia de caracteres) ou uma matriz bidimensional.</span><span class="sxs-lookup"><span data-stu-id="56f47-229">When setting formulas to a range, the value argument can be either a single value (a string) or a two-dimensional array.</span></span> <span data-ttu-id="56f47-230">Se o argumento for um valor único, ele será aplicado a todas as células no intervalo.</span><span class="sxs-lookup"><span data-stu-id="56f47-230">If the argument is a single value, it will be applied to all cells in the range.</span></span>


    <span data-ttu-id="56f47-231">\[[Conjunto de APIs: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="56f47-231">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: formulasR1C1
  fullName: formulasR1C1
  langs:
  - typeScript
  type: property
  syntax:
    content: 'formulasR1C1: any[][];'
    return:
      type:
      - any[][]
- uid: excel.Excel.Range.getAbsoluteResizedRange
  summary: >-
    <span data-ttu-id="56f47-232">Obtém um objeto Range com a mesma célula superior esquerda do objeto Range atual, mas com os números especificados de linhas e colunas.</span><span class="sxs-lookup"><span data-stu-id="56f47-232">Gets a Range object with the same top-left cell as the current Range object, but with the specified numbers of rows and columns.</span></span>


    <span data-ttu-id="56f47-233">\[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="56f47-233">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getAbsoluteResizedRange(numRows, numColumns)
  fullName: getAbsoluteResizedRange(numRows, numColumns)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getAbsoluteResizedRange(numRows: number, numColumns: number): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: ''
    parameters:
    - id: numRows
      description: <span data-ttu-id="56f47-234">O número de linhas do novo tamanho de intervalo.</span><span class="sxs-lookup"><span data-stu-id="56f47-234">The number of rows of the new range size.</span></span>
      type:
      - number
    - id: numColumns
      description: <span data-ttu-id="56f47-235">O número de colunas do novo tamanho de intervalo.</span><span class="sxs-lookup"><span data-stu-id="56f47-235">The number of columns of the new range size.</span></span>
      type:
      - number
- uid: excel.Excel.Range.getBoundingRect
  summary: >-
    <span data-ttu-id="56f47-236">Obtém o menor objeto Range que engloba os intervalos determinados.</span><span class="sxs-lookup"><span data-stu-id="56f47-236">Gets the smallest range object that encompasses the given ranges.</span></span> <span data-ttu-id="56f47-237">Por exemplo, o GetBoundingRect de "B2:C5" e "D10:E15" é "B2:E15".</span><span class="sxs-lookup"><span data-stu-id="56f47-237">For example, the GetBoundingRect of "B2:C5" and "D10:E15" is "B2:E15".</span></span>


    <span data-ttu-id="56f47-238">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="56f47-238">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getBoundingRect(anotherRange)
  fullName: getBoundingRect(anotherRange)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getBoundingRect(anotherRange: Range | string): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"56f47-239\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"56f47-239\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var sheetName = \"Sheet1\";\n    var rangeAddress = \"D4:G6\";\n    var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeAddress);\n    var range = range.getBoundingRect(\"G4:H8\");\n    range.load('address');\n    return ctx.sync().then(function() {\n        console.log(range.address); // Prints Sheet1!D4:H8\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: anotherRange
      description: <span data-ttu-id="56f47-240">O nome ou endereço do intervalo ou o objeto Range.</span><span class="sxs-lookup"><span data-stu-id="56f47-240">The range object or address or range name.</span></span>
      type:
      - Range | string
- uid: excel.Excel.Range.getCell
  summary: >-
    <span data-ttu-id="56f47-241">Obtém o objeto de intervalo que contém a célula única com base nos números de linha e de coluna.</span><span class="sxs-lookup"><span data-stu-id="56f47-241">Gets the range object containing the single cell based on row and column numbers.</span></span> <span data-ttu-id="56f47-242">A célula pode estar fora dos limites de seu intervalo pai, desde que ela permaneça dentro da grade da planilha.</span><span class="sxs-lookup"><span data-stu-id="56f47-242">The cell can be outside the bounds of its parent range, so long as it stays within the worksheet grid.</span></span> <span data-ttu-id="56f47-243">A localização da célula retornada está relacionada à célula superior esquerda do intervalo.</span><span class="sxs-lookup"><span data-stu-id="56f47-243">The returned cell is located relative to the top left cell of the range.</span></span>


    <span data-ttu-id="56f47-244">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="56f47-244">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getCell(row, column)
  fullName: getCell(row, column)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getCell(row: number, column: number): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"56f47-245\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"56f47-245\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var sheetName = \"Sheet1\";\n    var rangeAddress = \"A1:F8\";\n    var worksheet = ctx.workbook.worksheets.getItem(sheetName);\n    var range = worksheet.getRange(rangeAddress);\n    var cell = range.cell(0,0);\n    cell.load('address');\n    return ctx.sync().then(function() {\n        console.log(cell.address);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: row
      description: <span data-ttu-id="56f47-246">O número da linha da célula a ser recuperada.</span><span class="sxs-lookup"><span data-stu-id="56f47-246">Row number of the cell to be retrieved.</span></span> <span data-ttu-id="56f47-247">Indexados com zero.</span><span class="sxs-lookup"><span data-stu-id="56f47-247">Zero-indexed.</span></span>
      type:
      - number
    - id: column
      description: <span data-ttu-id="56f47-248">O número da coluna da célula a ser recuperada.</span><span class="sxs-lookup"><span data-stu-id="56f47-248">Column number of the cell to be retrieved.</span></span> <span data-ttu-id="56f47-249">Indexados com zero.</span><span class="sxs-lookup"><span data-stu-id="56f47-249">Zero-indexed.</span></span>
      type:
      - number
- uid: excel.Excel.Range.getCellProperties
  summary: >-
    <span data-ttu-id="56f47-250">Retorna uma matriz 2D encapsulando os dados de fonte, preenchimento, bordas, alinhamento e outras propriedades de cada célula.</span><span class="sxs-lookup"><span data-stu-id="56f47-250">Returns a 2D array, encapsulating the data for each cell's font, fill, borders, alignment, and other properties.</span></span>


    <span data-ttu-id="56f47-251">\[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="56f47-251">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: getCellProperties(cellPropertiesLoadOptions)
  fullName: getCellProperties(cellPropertiesLoadOptions)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getCellProperties(cellPropertiesLoadOptions: CellPropertiesLoadOptions): OfficeExtension.ClientResult<CellProperties[][]>;'
    return:
      type:
      - OfficeExtension.ClientResult<CellProperties[][]>
      description: ''
    parameters:
    - id: cellPropertiesLoadOptions
      description: ''
      type:
      - CellPropertiesLoadOptions
- uid: excel.Excel.Range.getColumn
  summary: >-
    <span data-ttu-id="56f47-252">Obtém uma coluna incluída no intervalo.</span><span class="sxs-lookup"><span data-stu-id="56f47-252">Gets a column contained in the range.</span></span>


    <span data-ttu-id="56f47-253">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="56f47-253">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getColumn(column)
  fullName: getColumn(column)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getColumn(column: number): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"56f47-254\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"56f47-254\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var sheetName = \"Sheet19\";\n    var rangeAddress = \"A1:F8\";\n    var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeAddress).getColumn(1);\n    range.load('address');\n    return ctx.sync().then(function() {\n        console.log(range.address); // prints Sheet1!B1:B8\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: column
      description: <span data-ttu-id="56f47-255">O número da coluna do intervalo a ser recuperado.</span><span class="sxs-lookup"><span data-stu-id="56f47-255">Column number of the range to be retrieved.</span></span> <span data-ttu-id="56f47-256">Indexados com zero.</span><span class="sxs-lookup"><span data-stu-id="56f47-256">Zero-indexed.</span></span>
      type:
      - number
- uid: excel.Excel.Range.getColumnProperties
  summary: >-
    <span data-ttu-id="56f47-257">Retorna uma única matriz dimensional encapsulando os dados de fonte, preenchimento, bordas, alinhamento e outras propriedades de cada coluna.</span><span class="sxs-lookup"><span data-stu-id="56f47-257">Returns a single-dimensional array, encapsulating the data for each column's font, fill, borders, alignment, and other properties.</span></span> <span data-ttu-id="56f47-258">Para propriedades que não são consistentes nas células de uma determinada coluna, será retornado null.</span><span class="sxs-lookup"><span data-stu-id="56f47-258">For properties that are not consistent across each cell within a given column, null will be returned.</span></span>


    <span data-ttu-id="56f47-259">\[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="56f47-259">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: getColumnProperties(columnPropertiesLoadOptions)
  fullName: getColumnProperties(columnPropertiesLoadOptions)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getColumnProperties(columnPropertiesLoadOptions: ColumnPropertiesLoadOptions): OfficeExtension.ClientResult<ColumnProperties[]>;'
    return:
      type:
      - OfficeExtension.ClientResult<ColumnProperties[]>
      description: ''
    parameters:
    - id: columnPropertiesLoadOptions
      description: ''
      type:
      - ColumnPropertiesLoadOptions
- uid: excel.Excel.Range.getColumnsAfter
  summary: >-
    <span data-ttu-id="56f47-260">Obtém um determinado número de colunas à direita do objeto Range atual.</span><span class="sxs-lookup"><span data-stu-id="56f47-260">Gets a certain number of columns to the right of the current Range object.</span></span>


    <span data-ttu-id="56f47-261">\[[Conjunto de APIs: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="56f47-261">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getColumnsAfter(count)
  fullName: getColumnsAfter(count)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getColumnsAfter(count?: number): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: ''
    parameters:
    - id: count
      description: <span data-ttu-id="56f47-p138">Opcional. O número de colunas a serem incluídas no intervalo resultante. Em geral, use um número positivo para criar um intervalo fora do intervalo atual. Você também pode usar um número negativo para criar um intervalo dentro do intervalo atual. O valor padrão é 1.</span><span class="sxs-lookup"><span data-stu-id="56f47-p138">Optional. The number of columns to include in the resulting range. In general, use a positive number to create a range outside the current range. You can also use a negative number to create a range within the current range. The default value is 1.</span></span>
      type:
      - number
- uid: excel.Excel.Range.getColumnsBefore
  summary: >-
    <span data-ttu-id="56f47-267">Obtém um determinado número de colunas à esquerda do objeto Range atual.</span><span class="sxs-lookup"><span data-stu-id="56f47-267">Gets a certain number of columns to the left of the current Range object.</span></span>


    <span data-ttu-id="56f47-268">\[[Conjunto de APIs: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="56f47-268">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getColumnsBefore(count)
  fullName: getColumnsBefore(count)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getColumnsBefore(count?: number): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: ''
    parameters:
    - id: count
      description: <span data-ttu-id="56f47-p139">Opcional. O número de colunas a serem incluídas no intervalo resultante. Em geral, use um número positivo para criar um intervalo fora do intervalo atual. Você também pode usar um número negativo para criar um intervalo dentro do intervalo atual. O valor padrão é 1.</span><span class="sxs-lookup"><span data-stu-id="56f47-p139">Optional. The number of columns to include in the resulting range. In general, use a positive number to create a range outside the current range. You can also use a negative number to create a range within the current range. The default value is 1.</span></span>
      type:
      - number
- uid: excel.Excel.Range.getEntireColumn
  summary: >-
    <span data-ttu-id="56f47-274">Obtém um objeto que representa a coluna inteira do intervalo (por exemplo, se o intervalo atual representa as células "B4: E11", seu `getEntireColumn` é um intervalo que representa as colunas "B:E").</span><span class="sxs-lookup"><span data-stu-id="56f47-274">Gets an object that represents the entire column of the range (for example, if the current range represents cells "B4:E11", its `getEntireColumn` is a range that represents columns "B:E").</span></span>


    <span data-ttu-id="56f47-275">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="56f47-275">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getEntireColumn()
  fullName: getEntireColumn()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getEntireColumn(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"56f47-276\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"56f47-276\">Examples</span></span>\n\n```javascript\n// Note: the grid properties of the Range (values, numberFormat, formulas) \n// contains null since the Range in question is unbounded.\nExcel.run(function (ctx) { \n    var sheetName = \"Sheet1\";\n    var rangeAddress = \"D:F\";\n    var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeAddress);\n    var rangeEC = range.getEntireColumn();\n    rangeEC.load('address');\n    return ctx.sync().then(function() {\n        console.log(rangeEC.address);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel.Excel.Range.getEntireRow
  summary: >-
    <span data-ttu-id="56f47-277">Obtém um objeto que representa a linha inteira do intervalo (por exemplo, se o intervalo atual representa as células "B4: E11", seu `GetEntireRow` é um intervalo que representa as linhas "4:11").</span><span class="sxs-lookup"><span data-stu-id="56f47-277">Gets an object that represents the entire row of the range (for example, if the current range represents cells "B4:E11", its `GetEntireRow` is a range that represents rows "4:11").</span></span>


    <span data-ttu-id="56f47-278">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="56f47-278">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getEntireRow()
  fullName: getEntireRow()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getEntireRow(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"56f47-279\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"56f47-279\">Examples</span></span>\n\n```javascript\n// Gets an object that represents the entire row of the range \n// (for example, if the current range represents cells \"B4:E11\", \n// its GetEntireRow is a range that represents rows \"4:11\").\nExcel.run(function (ctx) {\n    var sheetName = \"Sheet1\";\n    var rangeAddress = \"D:F\"; \n    var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeAddress);\n    var rangeER = range.getEntireRow();\n    rangeER.load('address');\n    return ctx.sync().then(function() {\n        console.log(rangeER.address);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel.Excel.Range.getImage
  summary: >-
    <span data-ttu-id="56f47-280">Renderiza o intervalo como uma imagem png codificada em base64.</span><span class="sxs-lookup"><span data-stu-id="56f47-280">Renders the range as a base64-encoded png image.</span></span>


    <span data-ttu-id="56f47-281">\[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="56f47-281">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getImage()
  fullName: getImage()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getImage(): OfficeExtension.ClientResult<string>;'
    return:
      type:
      - OfficeExtension.ClientResult<string>
      description: ''
- uid: excel.Excel.Range.getIntersection
  summary: >-
    <span data-ttu-id="56f47-282">Obtém o objeto de intervalo que representa a interseção retangular dos intervalos determinados.</span><span class="sxs-lookup"><span data-stu-id="56f47-282">Gets the range object that represents the rectangular intersection of the given ranges.</span></span>


    <span data-ttu-id="56f47-283">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="56f47-283">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getIntersection(anotherRange)
  fullName: getIntersection(anotherRange)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getIntersection(anotherRange: Range | string): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"56f47-284\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"56f47-284\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var sheetName = \"Sheet1\";\n    var rangeAddress = \"A1:F8\";\n    var range = \n        ctx.workbook.worksheets.getItem(sheetName).getRange(rangeAddress).getIntersection(\"D4:G6\");\n    range.load('address');\n    return ctx.sync().then(function() {\n        console.log(range.address); // prints Sheet1!D4:F6\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: anotherRange
      description: <span data-ttu-id="56f47-285">O objeto Range ou o endereço do intervalo que será usado para determinar a interseção de intervalos.</span><span class="sxs-lookup"><span data-stu-id="56f47-285">The range object or range address that will be used to determine the intersection of ranges.</span></span>
      type:
      - Range | string
- uid: excel.Excel.Range.getIntersectionOrNullObject
  summary: >-
    <span data-ttu-id="56f47-286">Obtém o objeto de intervalo que representa a interseção retangular dos intervalos determinados.</span><span class="sxs-lookup"><span data-stu-id="56f47-286">Gets the range object that represents the rectangular intersection of the given ranges.</span></span> <span data-ttu-id="56f47-287">Se nenhuma interseção for encontrada, retornará um objeto null.</span><span class="sxs-lookup"><span data-stu-id="56f47-287">If no intersection is found, will return a null object.</span></span>


    <span data-ttu-id="56f47-288">\[[Conjunto de APIs: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="56f47-288">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getIntersectionOrNullObject(anotherRange)
  fullName: getIntersectionOrNullObject(anotherRange)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getIntersectionOrNullObject(anotherRange: Range | string): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"56f47-289\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"56f47-289\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const salesTable = sheet.tables.getItem(\"SalesTable\");\n    const dataRange = salesTable.getDataBodyRange();\n\n    // We want the most recent quarter that has data, so\n    // exclude quarters without data and get the last of\n    // the remaining columns.\n    const usedDataRange = dataRange.getUsedRange(true /* valuesOnly */);\n    const currentQuarterRange = usedDataRange.getLastColumn();\n\n    // Asian and European teams have separate contests.\n    const asianSalesRange = sheet.getRange(\"A2:E4\");\n    const europeanSalesRange = sheet.getRange(\"A5:E7\");\n\n    // The data for each chart is the intersection of the\n    // current quarter column and the rows for the continent.\n    const asianContestRange = asianSalesRange.getIntersectionOrNullObject(currentQuarterRange);\n    const europeanContestRange = europeanSalesRange.getIntersectionOrNullObject(currentQuarterRange);\n\n    // Must sync before you can test the output of *OrNullObject\n    // method/property.\n    await context.sync();\n\n    if (asianContestRange.isNullObject) {\n        // See the declaration of this method for how to\n        // test this code path.\n        reportMissingData(\"Asian\");\n    } else {\n        createContinentChart(\n            sheet,\n            \"Asian\",\n            asianContestRange,\n            \"A9\",\n            \"F24\"\n        );\n    }\n\n    if (europeanContestRange.isNullObject) {\n        // See the declaration of this method for how to\n        // test this code path.\n        reportMissingData(\"European\");\n    } else {\n        createContinentChart(\n            sheet,\n            \"European\",\n            europeanContestRange,\n            \"A25\",\n            \"F40\"\n        );\n    }\n\n    await context.sync();\n});\n```"
    parameters:
    - id: anotherRange
      description: <span data-ttu-id="56f47-290">O objeto Range ou o endereço do intervalo que será usado para determinar a interseção de intervalos.</span><span class="sxs-lookup"><span data-stu-id="56f47-290">The range object or range address that will be used to determine the intersection of ranges.</span></span>
      type:
      - Range | string
- uid: excel.Excel.Range.getLastCell
  summary: >-
    <span data-ttu-id="56f47-291">Obtém a última célula do intervalo.</span><span class="sxs-lookup"><span data-stu-id="56f47-291">Gets the last cell within the range.</span></span> <span data-ttu-id="56f47-292">Por exemplo, a última célula de "B2:D5" é "D5".</span><span class="sxs-lookup"><span data-stu-id="56f47-292">For example, the last cell of "B2:D5" is "D5".</span></span>


    <span data-ttu-id="56f47-293">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="56f47-293">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getLastCell()
  fullName: getLastCell()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getLastCell(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"56f47-294\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"56f47-294\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var sheetName = \"Sheet1\";\n    var rangeAddress = \"A1:F8\";\n    var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeAddress).getLastCell();\n    range.load('address');\n    return ctx.sync().then(function() {\n        console.log(range.address); // prints Sheet1!F8\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel.Excel.Range.getLastColumn
  summary: >-
    <span data-ttu-id="56f47-295">Obtém a última coluna do intervalo.</span><span class="sxs-lookup"><span data-stu-id="56f47-295">Gets the last column within the range.</span></span> <span data-ttu-id="56f47-296">Por exemplo, a última coluna de "B2:D5" é "D2:D5".</span><span class="sxs-lookup"><span data-stu-id="56f47-296">For example, the last column of "B2:D5" is "D2:D5".</span></span>


    <span data-ttu-id="56f47-297">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="56f47-297">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getLastColumn()
  fullName: getLastColumn()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getLastColumn(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"56f47-298\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"56f47-298\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var sheetName = \"Sheet1\";\n    var rangeAddress = \"A1:F8\";\n    var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeAddress).getLastColumn();\n    range.load('address');\n    return ctx.sync().then(function() {\n        console.log(range.address); // prints Sheet1!F1:F8\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel.Excel.Range.getLastRow
  summary: >-
    <span data-ttu-id="56f47-299">Obtém a última linha do intervalo.</span><span class="sxs-lookup"><span data-stu-id="56f47-299">Gets the last row within the range.</span></span> <span data-ttu-id="56f47-300">Por exemplo, a última linha de "B2:D5" é "B5:D5".</span><span class="sxs-lookup"><span data-stu-id="56f47-300">For example, the last row of "B2:D5" is "B5:D5".</span></span>


    <span data-ttu-id="56f47-301">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="56f47-301">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getLastRow()
  fullName: getLastRow()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getLastRow(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"56f47-302\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"56f47-302\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var sheetName = \"Sheet1\";\n    var rangeAddress = \"A1:F8\";\n    var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeAddress).getLastRow();\n    range.load('address');\n    return ctx.sync().then(function() {\n        console.log(range.address); // prints Sheet1!A8:F8\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel.Excel.Range.getOffsetRange
  summary: >-
    <span data-ttu-id="56f47-p144">Obtém um objeto que representa um intervalo deslocado do intervalo especificado. A dimensão do intervalo retornado corresponde a esse intervalo. Se o intervalo resultante for imposto para fora dos limites da grade da planilha, o sistema gerará um erro.</span><span class="sxs-lookup"><span data-stu-id="56f47-p144">Gets an object which represents a range that's offset from the specified range. The dimension of the returned range will match this range. If the resulting range is forced outside the bounds of the worksheet grid, an error will be thrown.</span></span>


    <span data-ttu-id="56f47-306">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="56f47-306">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getOffsetRange(rowOffset, columnOffset)
  fullName: getOffsetRange(rowOffset, columnOffset)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getOffsetRange(rowOffset: number, columnOffset: number): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"56f47-307\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"56f47-307\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var sheetName = \"Sheet1\";\n    var rangeAddress = \"D4:F6\";\n    var range = \n        ctx.workbook.worksheets.getItem(sheetName).getRange(rangeAddress).getOffsetRange(-1,4);\n    range.load('address');\n    return ctx.sync().then(function() {\n        console.log(range.address); // prints Sheet1!H3:K5\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: rowOffset
      description: <span data-ttu-id="56f47-p145">O número de linhas (positivo, negativo ou 0) com base no qual o intervalo deve ser deslocado. Os valores positivos são deslocados para baixo e os negativos, para cima.</span><span class="sxs-lookup"><span data-stu-id="56f47-p145">The number of rows (positive, negative, or 0) by which the range is to be offset. Positive values are offset downward, and negative values are offset upward.</span></span>
      type:
      - number
    - id: columnOffset
      description: <span data-ttu-id="56f47-p146">O número de colunas (positivo, negativo ou 0) com base no qual o intervalo deve ser deslocado. Os valores positivos são deslocados para a direita e os negativos, para a esquerda.</span><span class="sxs-lookup"><span data-stu-id="56f47-p146">The number of columns (positive, negative, or 0) by which the range is to be offset. Positive values are offset to the right, and negative values are offset to the left.</span></span>
      type:
      - number
- uid: excel.Excel.Range.getResizedRange
  summary: >-
    <span data-ttu-id="56f47-312">Obtém um objeto Range semelhante ao objeto Range atual, mas com seu canto inferior direito expandido (ou recolhido) por um determinado número de linhas e colunas.</span><span class="sxs-lookup"><span data-stu-id="56f47-312">Gets a Range object similar to the current Range object, but with its bottom-right corner expanded (or contracted) by some number of rows and columns.</span></span>


    <span data-ttu-id="56f47-313">\[[Conjunto de APIs: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="56f47-313">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getResizedRange(deltaRows, deltaColumns)
  fullName: getResizedRange(deltaRows, deltaColumns)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getResizedRange(deltaRows: number, deltaColumns: number): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: ''
    parameters:
    - id: deltaRows
      description: <span data-ttu-id="56f47-p147">O número de linhas pelo qual expandir o canto inferior direito, referente ao intervalo atual. Use um número positivo para expandir o intervalo ou um número negativo para diminuí-lo.</span><span class="sxs-lookup"><span data-stu-id="56f47-p147">The number of rows by which to expand the bottom-right corner, relative to the current range. Use a positive number to expand the range, or a negative number to decrease it.</span></span>
      type:
      - number
    - id: deltaColumns
      description: <span data-ttu-id="56f47-316">O número de colunas pelas quais expandir o canto inferior direito, em relação ao intervalo atual.</span><span class="sxs-lookup"><span data-stu-id="56f47-316">The number of columns by which to expand the bottom-right corner, relative to the current range.</span></span> <span data-ttu-id="56f47-317">Use um número positivo para expandir o intervalo ou um número negativo para diminuí-lo.</span><span class="sxs-lookup"><span data-stu-id="56f47-317">Use a positive number to expand the range, or a negative number to decrease it.</span></span>
      type:
      - number
- uid: excel.Excel.Range.getRow
  summary: >-
    <span data-ttu-id="56f47-318">Obtém uma linha contida no intervalo.</span><span class="sxs-lookup"><span data-stu-id="56f47-318">Gets a row contained in the range.</span></span>


    <span data-ttu-id="56f47-319">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="56f47-319">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getRow(row)
  fullName: getRow(row)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getRow(row: number): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"56f47-320\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"56f47-320\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var sheetName = \"Sheet1\";\n    var rangeAddress = \"A1:F8\";\n    var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeAddress).getRow(1);\n    range.load('address');\n    return ctx.sync().then(function() {\n        console.log(range.address); // prints Sheet1!A2:F2\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: row
      description: <span data-ttu-id="56f47-321">O número da linha do intervalo a ser recuperado.</span><span class="sxs-lookup"><span data-stu-id="56f47-321">Row number of the range to be retrieved.</span></span> <span data-ttu-id="56f47-322">Indexados com zero.</span><span class="sxs-lookup"><span data-stu-id="56f47-322">Zero-indexed.</span></span>
      type:
      - number
- uid: excel.Excel.Range.getRowProperties
  summary: >-
    <span data-ttu-id="56f47-323">Retorna uma única matriz dimensional encapsulando os dados de fonte, preenchimento, bordas, alinhamento e outras propriedades de cada célula.</span><span class="sxs-lookup"><span data-stu-id="56f47-323">Returns a single-dimensional array, encapsulating the data for each row's font, fill, borders, alignment, and other properties.</span></span> <span data-ttu-id="56f47-324">Para propriedades que não são consistentes nas células de uma determinada linha, será retornado null.</span><span class="sxs-lookup"><span data-stu-id="56f47-324">For properties that are not consistent across each cell within a given row, null will be returned.</span></span>


    <span data-ttu-id="56f47-325">\[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="56f47-325">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: getRowProperties(rowPropertiesLoadOptions)
  fullName: getRowProperties(rowPropertiesLoadOptions)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getRowProperties(rowPropertiesLoadOptions: RowPropertiesLoadOptions): OfficeExtension.ClientResult<RowProperties[]>;'
    return:
      type:
      - OfficeExtension.ClientResult<RowProperties[]>
      description: ''
    parameters:
    - id: rowPropertiesLoadOptions
      description: ''
      type:
      - RowPropertiesLoadOptions
- uid: excel.Excel.Range.getRowsAbove
  summary: >-
    <span data-ttu-id="56f47-326">Obtém um determinado número de linhas acima do objeto Range atual.</span><span class="sxs-lookup"><span data-stu-id="56f47-326">Gets a certain number of rows above the current Range object.</span></span>


    <span data-ttu-id="56f47-327">\[[Conjunto de APIs: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="56f47-327">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getRowsAbove(count)
  fullName: getRowsAbove(count)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getRowsAbove(count?: number): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: ''
    parameters:
    - id: count
      description: <span data-ttu-id="56f47-p151">Opcional. O número de linhas a serem incluídas no intervalo resultante. Em geral, use um número positivo para criar um intervalo fora do intervalo atual. Você também pode usar um número negativo para criar um intervalo dentro do intervalo atual. O valor padrão é 1.</span><span class="sxs-lookup"><span data-stu-id="56f47-p151">Optional. The number of rows to include in the resulting range. In general, use a positive number to create a range outside the current range. You can also use a negative number to create a range within the current range. The default value is 1.</span></span>
      type:
      - number
- uid: excel.Excel.Range.getRowsBelow
  summary: >-
    <span data-ttu-id="56f47-333">Obtém um determinado número de linhas abaixo do objeto Range atual.</span><span class="sxs-lookup"><span data-stu-id="56f47-333">Gets a certain number of rows below the current Range object.</span></span>


    <span data-ttu-id="56f47-334">\[[Conjunto de APIs: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="56f47-334">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getRowsBelow(count)
  fullName: getRowsBelow(count)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getRowsBelow(count?: number): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: ''
    parameters:
    - id: count
      description: <span data-ttu-id="56f47-p152">Opcional. O número de linhas a serem incluídas no intervalo resultante. Em geral, use um número positivo para criar um intervalo fora do intervalo atual. Você também pode usar um número negativo para criar um intervalo dentro do intervalo atual. O valor padrão é 1.</span><span class="sxs-lookup"><span data-stu-id="56f47-p152">Optional. The number of rows to include in the resulting range. In general, use a positive number to create a range outside the current range. You can also use a negative number to create a range within the current range. The default value is 1.</span></span>
      type:
      - number
- uid: excel.Excel.Range.getSpecialCells
  summary: >-
    <span data-ttu-id="56f47-340">Obtém o objeto RangeAreas, compreendendo um ou mais intervalos retangulares, que representa todas as células que correspondem ao tipo e valor especificado.</span><span class="sxs-lookup"><span data-stu-id="56f47-340">Gets the RangeAreas object, comprising one or more rectangular ranges, that represents all the cells that match the specified type and value.</span></span> <span data-ttu-id="56f47-341">Se nenhuma célula especial for encontrada, um erro ItemNotFound será lançado.</span><span class="sxs-lookup"><span data-stu-id="56f47-341">If no special cells are found, an ItemNotFound error will be thrown.</span></span>


    <span data-ttu-id="56f47-342">\[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="56f47-342">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: getSpecialCells(cellType, cellValueType)
  fullName: getSpecialCells(cellType, cellValueType)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getSpecialCells(cellType: Excel.SpecialCellType, cellValueType?: Excel.SpecialCellValueType): Excel.RangeAreas;'
    return:
      type:
      - excel.Excel.RangeAreas
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"56f47-343\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"56f47-343\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n\n    const sheet = context.workbook.worksheets.getActiveWorksheet();\n    const usedRange = sheet.getUsedRange();\n\n    // Find the ranges with either text or logical (boolean)\n    // values\n    const formulaRanges = usedRange.getSpecialCells(\"Constants\", \"LogicalText\");\n    formulaRanges.format.fill.color = \"orange\";\n\n    return context.sync();\n});\n```"
    parameters:
    - id: cellType
      description: <span data-ttu-id="56f47-344">O tipo de células a serem incluídas.</span><span class="sxs-lookup"><span data-stu-id="56f47-344">The type of cells to include.</span></span>
      type:
      - excel.Excel.SpecialCellType
    - id: cellValueType
      description: <span data-ttu-id="56f47-345">Se CellType for Constants ou formulas, esse argumento será usado para determinar quais tipos de células incluir no resultado.</span><span class="sxs-lookup"><span data-stu-id="56f47-345">If cellType is either Constants or Formulas, this argument is used to determine which types of cells to include in the result.</span></span> <span data-ttu-id="56f47-346">Esses valores podem ser combinados em conjunto para retornar mais de um tipo.</span><span class="sxs-lookup"><span data-stu-id="56f47-346">These values can be combined together to return more than one type.</span></span> <span data-ttu-id="56f47-347">O padrão é selecionar todas as constantes ou as fórmulas, independente do tipo.</span><span class="sxs-lookup"><span data-stu-id="56f47-347">The default is to select all constants or formulas, no matter what the type.</span></span>
      type:
      - excel.Excel.SpecialCellValueType
- uid: excel.Excel.Range.getSpecialCells_1
  summary: >-
    <span data-ttu-id="56f47-348">Obtém o objeto RangeAreas, compreendendo um ou mais intervalos retangulares, que representa todas as células que correspondem ao tipo e valor especificado.</span><span class="sxs-lookup"><span data-stu-id="56f47-348">Gets the RangeAreas object, comprising one or more rectangular ranges, that represents all the cells that match the specified type and value.</span></span> <span data-ttu-id="56f47-349">Se nenhuma célula especial for encontrada, um erro ItemNotFound será lançado.</span><span class="sxs-lookup"><span data-stu-id="56f47-349">If no special cells are found, an ItemNotFound error will be thrown.</span></span>


    <span data-ttu-id="56f47-350">\[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="56f47-350">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: getSpecialCells(cellTypeString, cellValueType)
  fullName: getSpecialCells(cellTypeString, cellValueType)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getSpecialCells(cellTypeString: "ConditionalFormats" | "DataValidations" | "Blanks" | "Constants" | "Formulas" | "SameConditionalFormat" | "SameDataValidation" | "Visible", cellValueType?: "All" | "Errors" | "ErrorsLogical" | "ErrorsNumbers" | "ErrorsText" | "ErrorsLogicalNumber" | "ErrorsLogicalText" | "ErrorsNumberText" | "Logical" | "LogicalNumbers" | "LogicalText" | "LogicalNumbersText" | "Numbers" | "NumbersText" | "Text"): Excel.RangeAreas;'
    return:
      type:
      - excel.Excel.RangeAreas
      description: ''
    parameters:
    - id: cellTypeString
      description: <span data-ttu-id="56f47-351">O tipo de células a serem incluídas.</span><span class="sxs-lookup"><span data-stu-id="56f47-351">The type of cells to include.</span></span>
      type:
      - "\"ConditionalFormats\" | \"DataValidations\" | \"Blanks\" | \"Constants\" | \"Formulas\" | \"SameConditionalFormat\" | \"SameDataValidation\" | \"Visible\""
    - id: cellValueType
      description: <span data-ttu-id="56f47-352">Se CellType for Constants ou formulas, esse argumento será usado para determinar quais tipos de células incluir no resultado.</span><span class="sxs-lookup"><span data-stu-id="56f47-352">If cellType is either Constants or Formulas, this argument is used to determine which types of cells to include in the result.</span></span> <span data-ttu-id="56f47-353">Esses valores podem ser combinados em conjunto para retornar mais de um tipo.</span><span class="sxs-lookup"><span data-stu-id="56f47-353">These values can be combined together to return more than one type.</span></span> <span data-ttu-id="56f47-354">O padrão é selecionar todas as constantes ou as fórmulas, independente do tipo.</span><span class="sxs-lookup"><span data-stu-id="56f47-354">The default is to select all constants or formulas, no matter what the type.</span></span>
      type:
      - "\"All\" | \"Errors\" | \"ErrorsLogical\" | \"ErrorsNumbers\" | \"ErrorsText\" | \"ErrorsLogicalNumber\" | \"ErrorsLogicalText\" | \"ErrorsNumberText\" | \"Logical\" | \"LogicalNumbers\" | \"LogicalText\" | \"LogicalNumbersText\" | \"Numbers\" | \"NumbersText\" | \"Text\""
- uid: excel.Excel.Range.getSpecialCellsOrNullObject
  summary: >-
    <span data-ttu-id="56f47-355">Obtém o objeto RangeAreas, compreendendo um ou mais intervalos, que representa todas as células que correspondem ao tipo e valor especificado.</span><span class="sxs-lookup"><span data-stu-id="56f47-355">Gets the RangeAreas object, comprising one or more ranges, that represents all the cells that match the specified type and value.</span></span> <span data-ttu-id="56f47-356">Se nenhuma célula especial for encontrada, um objeto NULL será retornado.</span><span class="sxs-lookup"><span data-stu-id="56f47-356">If no special cells are found, a null object will be returned.</span></span>


    <span data-ttu-id="56f47-357">\[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="56f47-357">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: getSpecialCellsOrNullObject(cellType, cellValueType)
  fullName: getSpecialCellsOrNullObject(cellType, cellValueType)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getSpecialCellsOrNullObject(cellType: Excel.SpecialCellType, cellValueType?: Excel.SpecialCellValueType): Excel.RangeAreas;'
    return:
      type:
      - excel.Excel.RangeAreas
      description: ''
    parameters:
    - id: cellType
      description: <span data-ttu-id="56f47-358">O tipo de células a serem incluídas.</span><span class="sxs-lookup"><span data-stu-id="56f47-358">The type of cells to include.</span></span>
      type:
      - excel.Excel.SpecialCellType
    - id: cellValueType
      description: <span data-ttu-id="56f47-359">Se CellType for Constants ou formulas, esse argumento será usado para determinar quais tipos de células incluir no resultado.</span><span class="sxs-lookup"><span data-stu-id="56f47-359">If cellType is either Constants or Formulas, this argument is used to determine which types of cells to include in the result.</span></span> <span data-ttu-id="56f47-360">Esses valores podem ser combinados em conjunto para retornar mais de um tipo.</span><span class="sxs-lookup"><span data-stu-id="56f47-360">These values can be combined together to return more than one type.</span></span> <span data-ttu-id="56f47-361">O padrão é selecionar todas as constantes ou as fórmulas, independente do tipo.</span><span class="sxs-lookup"><span data-stu-id="56f47-361">The default is to select all constants or formulas, no matter what the type.</span></span>
      type:
      - excel.Excel.SpecialCellValueType
- uid: excel.Excel.Range.getSpecialCellsOrNullObject_1
  summary: >-
    <span data-ttu-id="56f47-362">Obtém o objeto RangeAreas, compreendendo um ou mais intervalos, que representa todas as células que correspondem ao tipo e valor especificado.</span><span class="sxs-lookup"><span data-stu-id="56f47-362">Gets the RangeAreas object, comprising one or more ranges, that represents all the cells that match the specified type and value.</span></span> <span data-ttu-id="56f47-363">Se nenhuma célula especial for encontrada, um objeto NULL será retornado.</span><span class="sxs-lookup"><span data-stu-id="56f47-363">If no special cells are found, a null object will be returned.</span></span>


    <span data-ttu-id="56f47-364">\[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="56f47-364">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: getSpecialCellsOrNullObject(cellTypeString, cellValueType)
  fullName: getSpecialCellsOrNullObject(cellTypeString, cellValueType)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getSpecialCellsOrNullObject(cellTypeString: "ConditionalFormats" | "DataValidations" | "Blanks" | "Constants" | "Formulas" | "SameConditionalFormat" | "SameDataValidation" | "Visible", cellValueType?: "All" | "Errors" | "ErrorsLogical" | "ErrorsNumbers" | "ErrorsText" | "ErrorsLogicalNumber" | "ErrorsLogicalText" | "ErrorsNumberText" | "Logical" | "LogicalNumbers" | "LogicalText" | "LogicalNumbersText" | "Numbers" | "NumbersText" | "Text"): Excel.RangeAreas;'
    return:
      type:
      - excel.Excel.RangeAreas
      description: ''
    parameters:
    - id: cellTypeString
      description: <span data-ttu-id="56f47-365">O tipo de células a serem incluídas.</span><span class="sxs-lookup"><span data-stu-id="56f47-365">The type of cells to include.</span></span>
      type:
      - "\"ConditionalFormats\" | \"DataValidations\" | \"Blanks\" | \"Constants\" | \"Formulas\" | \"SameConditionalFormat\" | \"SameDataValidation\" | \"Visible\""
    - id: cellValueType
      description: <span data-ttu-id="56f47-366">Se CellType for Constants ou formulas, esse argumento será usado para determinar quais tipos de células incluir no resultado.</span><span class="sxs-lookup"><span data-stu-id="56f47-366">If cellType is either Constants or Formulas, this argument is used to determine which types of cells to include in the result.</span></span> <span data-ttu-id="56f47-367">Esses valores podem ser combinados em conjunto para retornar mais de um tipo.</span><span class="sxs-lookup"><span data-stu-id="56f47-367">These values can be combined together to return more than one type.</span></span> <span data-ttu-id="56f47-368">O padrão é selecionar todas as constantes ou as fórmulas, independente do tipo.</span><span class="sxs-lookup"><span data-stu-id="56f47-368">The default is to select all constants or formulas, no matter what the type.</span></span>
      type:
      - "\"All\" | \"Errors\" | \"ErrorsLogical\" | \"ErrorsNumbers\" | \"ErrorsText\" | \"ErrorsLogicalNumber\" | \"ErrorsLogicalText\" | \"ErrorsNumberText\" | \"Logical\" | \"LogicalNumbers\" | \"LogicalText\" | \"LogicalNumbersText\" | \"Numbers\" | \"NumbersText\" | \"Text\""
- uid: excel.Excel.Range.getSpillingToRange
  summary: >-
    <span data-ttu-id="56f47-369">Obtém objeto range que contém o intervalo de despejo quando chamado em uma célula âncora.</span><span class="sxs-lookup"><span data-stu-id="56f47-369">Gets the range object containing the spill range when called on an anchor cell.</span></span> <span data-ttu-id="56f47-370">Falha se aplicado a um intervalo com mais de uma célula.</span><span class="sxs-lookup"><span data-stu-id="56f47-370">Fails if applied to a range with more than one cell.</span></span> <span data-ttu-id="56f47-371">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="56f47-371">Read-only.</span></span>


    <span data-ttu-id="56f47-372">\[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="56f47-372">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: getSpillingToRange()
  fullName: getSpillingToRange()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getSpillingToRange(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: ''
- uid: excel.Excel.Range.getSpillingToRangeOrNullObject
  summary: >-
    <span data-ttu-id="56f47-373">Obtém objeto range que contém o intervalo de despejo quando chamado em uma célula âncora.</span><span class="sxs-lookup"><span data-stu-id="56f47-373">Gets the range object containing the spill range when called on an anchor cell.</span></span> <span data-ttu-id="56f47-374">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="56f47-374">Read-only.</span></span> <span data-ttu-id="56f47-375">Se o intervalo não for uma célula de âncora ou um intervalo de despejo não puder ser encontrado, um objeto NULL será retornado.</span><span class="sxs-lookup"><span data-stu-id="56f47-375">If the range is not an anchor cell or spill range can't be found, a null object will be returned.</span></span>


    <span data-ttu-id="56f47-376">\[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="56f47-376">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: getSpillingToRangeOrNullObject()
  fullName: getSpillingToRangeOrNullObject()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getSpillingToRangeOrNullObject(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: ''
- uid: excel.Excel.Range.getSpillParent
  summary: >-
    <span data-ttu-id="56f47-377">Obtém o objeto range que contém a célula âncora para uma célula que recebe o despejo.</span><span class="sxs-lookup"><span data-stu-id="56f47-377">Gets the range object containing the anchor cell for a cell getting spilled into.</span></span> <span data-ttu-id="56f47-378">Falha se aplicado a um intervalo com mais de uma célula.</span><span class="sxs-lookup"><span data-stu-id="56f47-378">Fails if applied to a range with more than one cell.</span></span> <span data-ttu-id="56f47-379">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="56f47-379">Read-only.</span></span>


    <span data-ttu-id="56f47-380">\[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="56f47-380">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: getSpillParent()
  fullName: getSpillParent()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getSpillParent(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: ''
- uid: excel.Excel.Range.getSpillParentOrNullObject
  summary: >-
    <span data-ttu-id="56f47-381">Obtém o objeto range que contém a célula âncora para uma célula que recebe o despejo.</span><span class="sxs-lookup"><span data-stu-id="56f47-381">Gets the range object containing the anchor cell for a cell getting spilled into.</span></span> <span data-ttu-id="56f47-382">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="56f47-382">Read-only.</span></span> <span data-ttu-id="56f47-383">Se não for uma célula de despejo ou mais de uma vez, as células serão retornadas.</span><span class="sxs-lookup"><span data-stu-id="56f47-383">If it is not a spill cell or more than once cells are give, a null object will be returned.</span></span>


    <span data-ttu-id="56f47-384">\[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="56f47-384">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: getSpillParentOrNullObject()
  fullName: getSpillParentOrNullObject()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getSpillParentOrNullObject(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: ''
- uid: excel.Excel.Range.getSurroundingRegion
  summary: >-
    <span data-ttu-id="56f47-385">Retorna um objeto Range que representa a região circundante da célula superior esquerda nesse intervalo.</span><span class="sxs-lookup"><span data-stu-id="56f47-385">Returns a Range object that represents the surrounding region for the top-left cell in this range.</span></span> <span data-ttu-id="56f47-386">Uma região ao redor é um intervalo limitado por qualquer combinação de linhas e colunas em branco em relação a esse intervalo.</span><span class="sxs-lookup"><span data-stu-id="56f47-386">A surrounding region is a range bounded by any combination of blank rows and blank columns relative to this range.</span></span>


    <span data-ttu-id="56f47-387">\[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="56f47-387">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getSurroundingRegion()
  fullName: getSurroundingRegion()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getSurroundingRegion(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: ''
- uid: excel.Excel.Range.getTables
  summary: >-
    <span data-ttu-id="56f47-388">Obtém uma coleção de tabelas com escopo que se sobrepõe ao intervalo.</span><span class="sxs-lookup"><span data-stu-id="56f47-388">Gets a scoped collection of tables that overlap with the range.</span></span>


    <span data-ttu-id="56f47-389">\[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="56f47-389">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: getTables(fullyContained)
  fullName: getTables(fullyContained)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getTables(fullyContained?: boolean): Excel.TableScopedCollection;'
    return:
      type:
      - excel.Excel.TableScopedCollection
      description: ''
    parameters:
    - id: fullyContained
      description: <span data-ttu-id="56f47-390">Se true, retornará somente as tabelas que estão totalmente contidas dentro dos limites do intervalo.</span><span class="sxs-lookup"><span data-stu-id="56f47-390">If true, returns only tables that are fully contained within the range bounds.</span></span> <span data-ttu-id="56f47-391">O valor padrão é falso.</span><span class="sxs-lookup"><span data-stu-id="56f47-391">The default value is false.</span></span>
      type:
      - boolean
- uid: excel.Excel.Range.getUsedRange
  summary: >-
    <span data-ttu-id="56f47-p167">Retorna o intervalo usado do objeto range determinado. Se não houver nenhuma célula usada dentro do intervalo, essa função gerará um erro ItemNotFound.</span><span class="sxs-lookup"><span data-stu-id="56f47-p167">Returns the used range of the given range object. If there are no used cells within the range, this function will throw an ItemNotFound error.</span></span>


    <span data-ttu-id="56f47-394">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="56f47-394">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getUsedRange(valuesOnly)
  fullName: getUsedRange(valuesOnly)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getUsedRange(valuesOnly?: boolean): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"56f47-395\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"56f47-395\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var sheetName = \"Sheet1\";\n    var rangeAddress = \"D:F\";\n    var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeAddress);\n    var rangeUR = range.getUsedRange();\n    rangeUR.load('address');\n    return ctx.sync().then(function() {\n        console.log(rangeUR.address);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const salesTable = sheet.tables.getItem(\"SalesTable\");\n    const dataRange = salesTable.getDataBodyRange();\n\n    // We want the most recent quarter that has data, so\n    // exclude quarters without data and get the last of\n    // the remaining columns.\n    const usedDataRange = dataRange.getUsedRange(true /* valuesOnly */);\n    const currentQuarterRange = usedDataRange.getLastColumn();\n\n    // Asian and European teams have separate contests.\n    const asianSalesRange = sheet.getRange(\"A2:E4\");\n    const europeanSalesRange = sheet.getRange(\"A5:E7\");\n\n    // The data for each chart is the intersection of the\n    // current quarter column and the rows for the continent.\n    const asianContestRange = asianSalesRange.getIntersectionOrNullObject(currentQuarterRange);\n    const europeanContestRange = europeanSalesRange.getIntersectionOrNullObject(currentQuarterRange);\n\n    // Must sync before you can test the output of *OrNullObject\n    // method/property.\n    await context.sync();\n\n    if (asianContestRange.isNullObject) {\n        // See the declaration of this method for how to\n        // test this code path.\n        reportMissingData(\"Asian\");\n    } else {\n        createContinentChart(\n            sheet,\n            \"Asian\",\n            asianContestRange,\n            \"A9\",\n            \"F24\"\n        );\n    }\n\n    if (europeanContestRange.isNullObject) {\n        // See the declaration of this method for how to\n        // test this code path.\n        reportMissingData(\"European\");\n    } else {\n        createContinentChart(\n            sheet,\n            \"European\",\n            europeanContestRange,\n            \"A25\",\n            \"F40\"\n        );\n    }\n\n    await context.sync();\n});\n```"
    parameters:
    - id: valuesOnly
      description: '<span data-ttu-id="56f47-396">Considera apenas as células com valores como células usadas.</span><span class="sxs-lookup"><span data-stu-id="56f47-396">Considers only cells with values as used cells.</span></span> <span data-ttu-id="56f47-397">\[Conjunto de APIs: ExcelApi 1,2\]</span><span class="sxs-lookup"><span data-stu-id="56f47-397">\[Api set: ExcelApi 1.2\]</span></span>'
      type:
      - boolean
- uid: excel.Excel.Range.getUsedRangeOrNullObject
  summary: >-
    <span data-ttu-id="56f47-p169">Retorna o intervalo usado do objeto range determinado. Se não houver nenhuma célula usada no intervalo, esta função retornará um objeto null.</span><span class="sxs-lookup"><span data-stu-id="56f47-p169">Returns the used range of the given range object. If there are no used cells within the range, this function will return a null object.</span></span>


    <span data-ttu-id="56f47-400">\[[Conjunto de APIs: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="56f47-400">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getUsedRangeOrNullObject(valuesOnly)
  fullName: getUsedRangeOrNullObject(valuesOnly)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getUsedRangeOrNullObject(valuesOnly?: boolean): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"56f47-401\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"56f47-401\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const salesTable = sheet.tables.getItem(\"SalesTable\");\n    const dataRange = salesTable.getDataBodyRange();\n\n    // Pass true so only cells with values count as used\n    const usedDataRange = dataRange.getUsedRangeOrNullObject(\n        true /* valuesOnly */\n    );\n\n    //Must sync before reading value returned from *OrNullObject method/property.\n    await context.sync();\n\n    if (usedDataRange.isNullObject) {\n        console.log(\"Need Data to Make Chart\");\n        console.log(\"To create a meaningful chart, press 'Fill the table' (or add names to the Product column and numbers to some of the other cells). Then press 'Try to create chart' again.\");\n    } else {\n        const chart = sheet.charts.add(\n            Excel.ChartType.columnClustered,\n            dataRange,\n            \"Columns\"\n        );\n        chart.setPosition(\"A15\", \"F30\");\n        chart.title.text = \"Quarterly sales chart\";\n        chart.legend.position = \"Right\";\n        chart.legend.format.fill.setSolidColor(\"white\");\n        chart.dataLabels.format.font.size = 15;\n        chart.dataLabels.format.font.color = \"black\";\n    }\n\n    await context.sync();\n});\n```"
    parameters:
    - id: valuesOnly
      description: <span data-ttu-id="56f47-402">Considera apenas as células com valores como células usadas.</span><span class="sxs-lookup"><span data-stu-id="56f47-402">Considers only cells with values as used cells.</span></span>
      type:
      - boolean
- uid: excel.Excel.Range.getVisibleView
  summary: >-
    <span data-ttu-id="56f47-403">Representa as linhas visíveis do intervalo atual.</span><span class="sxs-lookup"><span data-stu-id="56f47-403">Represents the visible rows of the current range.</span></span>


    <span data-ttu-id="56f47-404">\[[Conjunto de APIs: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="56f47-404">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getVisibleView()
  fullName: getVisibleView()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getVisibleView(): Excel.RangeView;'
    return:
      type:
      - excel.Excel.RangeView
      description: ''
- uid: excel.Excel.Range.hasSpill
  summary: >-
    <span data-ttu-id="56f47-405">Representa se todas as células têm uma borda de despejo.</span><span class="sxs-lookup"><span data-stu-id="56f47-405">Represents if all cells have a spill border.</span></span> <span data-ttu-id="56f47-406">Retorna true se todas as células têm uma borda de despejo ou false se todas as células não têm uma borda de despejo.</span><span class="sxs-lookup"><span data-stu-id="56f47-406">Returns true if all cells have a spill border, or false if all cells do not have a spill border.</span></span> <span data-ttu-id="56f47-407">Retorna NULL se houver células com e sem bordas de despejo dentro do intervalo.</span><span class="sxs-lookup"><span data-stu-id="56f47-407">Returns null if there are cells both with and without spill borders within the range.</span></span>


    <span data-ttu-id="56f47-408">\[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="56f47-408">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: hasSpill
  fullName: hasSpill
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly hasSpill: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.Range.hidden
  summary: >-
    <span data-ttu-id="56f47-409">Representa se todas as células do intervalo atual estão ocultas.</span><span class="sxs-lookup"><span data-stu-id="56f47-409">Represents if all cells of the current range are hidden.</span></span> <span data-ttu-id="56f47-410">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="56f47-410">Read-only.</span></span>


    <span data-ttu-id="56f47-411">\[[Conjunto de APIs: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="56f47-411">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: hidden
  fullName: hidden
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly hidden: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.Range.hyperlink
  summary: >-
    <span data-ttu-id="56f47-412">Representa o hiperlink do intervalo atual.</span><span class="sxs-lookup"><span data-stu-id="56f47-412">Represents the hyperlink for the current range.</span></span>


    <span data-ttu-id="56f47-413">\[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="56f47-413">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: hyperlink
  fullName: hyperlink
  langs:
  - typeScript
  type: property
  syntax:
    content: 'hyperlink: Excel.RangeHyperlink;'
    return:
      type:
      - excel.Excel.RangeHyperlink
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"56f47-414\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"56f47-414\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Orders\");\n\n    let productsRange = sheet.getRange(\"A3:A5\");\n    productsRange.load(\"values\");\n\n    await context.sync();\n\n    // Create a hyperlink to a URL \n    // for each product name in the first table.\n    for (let i = 0; i < productsRange.values.length; i++) {\n        let cellRange = productsRange.getCell(i, 0);\n        let cellText = productsRange.values[i][0];\n\n        let hyperlink = {\n            textToDisplay: cellText,\n            screenTip: \"Search Bing for '\" + cellText + \"'\",\n            address: \"https://www.bing.com?q=\" + cellText\n        }\n        cellRange.hyperlink = hyperlink;\n    }\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.Range.insert
  summary: >-
    <span data-ttu-id="56f47-p172">Insere uma célula ou um intervalo de células na planilha, no lugar desse intervalo, e desloca as outras células para liberar espaço. Retorna um novo objeto Range no espaço em branco atual.</span><span class="sxs-lookup"><span data-stu-id="56f47-p172">Inserts a cell or a range of cells into the worksheet in place of this range, and shifts the other cells to make space. Returns a new Range object at the now blank space.</span></span>


    <span data-ttu-id="56f47-417">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="56f47-417">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: insert(shift)
  fullName: insert(shift)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insert(shift: Excel.InsertShiftDirection): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"56f47-418\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"56f47-418\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var sheetName = \"Sheet1\";\n    var rangeAddress = \"F5:F10\";\n    var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeAddress);\n    range.insert();\n    return ctx.sync(); \n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: shift
      description: <span data-ttu-id="56f47-419">Especifica como deslocar as células.</span><span class="sxs-lookup"><span data-stu-id="56f47-419">Specifies which way to shift the cells.</span></span> <span data-ttu-id="56f47-420">Consulte Excel. InsertShiftDirection para obter detalhes.</span><span class="sxs-lookup"><span data-stu-id="56f47-420">See Excel.InsertShiftDirection for details.</span></span>
      type:
      - excel.Excel.InsertShiftDirection
- uid: excel.Excel.Range.insert_1
  summary: >-
    <span data-ttu-id="56f47-p174">Insere uma célula ou um intervalo de células na planilha, no lugar desse intervalo, e desloca as outras células para liberar espaço. Retorna um novo objeto Range no espaço em branco atual.</span><span class="sxs-lookup"><span data-stu-id="56f47-p174">Inserts a cell or a range of cells into the worksheet in place of this range, and shifts the other cells to make space. Returns a new Range object at the now blank space.</span></span>


    <span data-ttu-id="56f47-423">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="56f47-423">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: insert(shiftString)
  fullName: insert(shiftString)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insert(shiftString: "Down" | "Right"): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: ''
    parameters:
    - id: shiftString
      description: <span data-ttu-id="56f47-424">Especifica como deslocar as células.</span><span class="sxs-lookup"><span data-stu-id="56f47-424">Specifies which way to shift the cells.</span></span> <span data-ttu-id="56f47-425">Consulte Excel. InsertShiftDirection para obter detalhes.</span><span class="sxs-lookup"><span data-stu-id="56f47-425">See Excel.InsertShiftDirection for details.</span></span>
      type:
      - "\"Down\" | \"Right\""
- uid: excel.Excel.Range.isEntireColumn
  summary: >-
    <span data-ttu-id="56f47-426">Representa se o intervalo atual está em uma coluna inteira.</span><span class="sxs-lookup"><span data-stu-id="56f47-426">Represents if the current range is an entire column.</span></span> <span data-ttu-id="56f47-427">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="56f47-427">Read-only.</span></span>


    <span data-ttu-id="56f47-428">\[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="56f47-428">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: isEntireColumn
  fullName: isEntireColumn
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly isEntireColumn: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.Range.isEntireRow
  summary: >-
    <span data-ttu-id="56f47-429">Representa se o intervalo atual está em uma linha inteira.</span><span class="sxs-lookup"><span data-stu-id="56f47-429">Represents if the current range is an entire row.</span></span> <span data-ttu-id="56f47-430">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="56f47-430">Read-only.</span></span>


    <span data-ttu-id="56f47-431">\[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="56f47-431">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: isEntireRow
  fullName: isEntireRow
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly isEntireRow: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.Range.linkedDataTypeState
  summary: >-
    <span data-ttu-id="56f47-432">Representa o estado do tipo de dados de cada célula.</span><span class="sxs-lookup"><span data-stu-id="56f47-432">Represents the data type state of each cell.</span></span> <span data-ttu-id="56f47-433">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="56f47-433">Read-only.</span></span>


    <span data-ttu-id="56f47-434">\[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="56f47-434">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: linkedDataTypeState
  fullName: linkedDataTypeState
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly linkedDataTypeState: Excel.LinkedDataTypeState[][];'
    return:
      type:
      - Excel.LinkedDataTypeState[][]
- uid: excel.Excel.Range.load
  summary: <span data-ttu-id="56f47-435">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="56f47-435">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="56f47-436">Você deve chamar "context.sync()" antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="56f47-436">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="56f47-437">Além dessa assinatura, este método tem as seguintes assinaturas:</span><span class="sxs-lookup"><span data-stu-id="56f47-437">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="56f47-438">`load(option?: string | string[]): Excel.Range`-Where Option é uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="56f47-438">`load(option?: string | string[]): Excel.Range` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="56f47-439">`load(option?: { select?: string; expand?: string; }): Excel.Range`-Onde Option. Select é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades a serem carregadas, e Options. Expand é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades de navegação a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="56f47-439">`load(option?: { select?: string; expand?: string; }): Excel.Range` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="56f47-440">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Range`– Disponível somente nos tipos de coleção.</span><span class="sxs-lookup"><span data-stu-id="56f47-440">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Range` - Only available on collection types.</span></span> <span data-ttu-id="56f47-441">É semelhante à assinatura anterior.</span><span class="sxs-lookup"><span data-stu-id="56f47-441">It is similar to the preceding signature.</span></span> <span data-ttu-id="56f47-442">Option. Top especifica o número máximo de itens de coleta que podem ser incluídos no resultado.</span><span class="sxs-lookup"><span data-stu-id="56f47-442">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="56f47-443">Option. Skip especifica o número de itens que devem ser ignorados e não incluídos no resultado.</span><span class="sxs-lookup"><span data-stu-id="56f47-443">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="56f47-444">Se Option. Top for especificado, o conjunto de resultados será iniciado depois de ignorar o número de itens especificado.</span><span class="sxs-lookup"><span data-stu-id="56f47-444">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.RangeLoadOptions): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - excel.Excel.Interfaces.RangeLoadOptions
- uid: excel.Excel.Range.load_1
  summary: <span data-ttu-id="56f47-445">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="56f47-445">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="56f47-446">Você deve chamar `context.sync()` antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="56f47-446">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"56f47-447\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"56f47-447\">Examples</span></span>\n\n```javascript\n// Below example uses range address to get the range object.\nExcel.run(function (ctx) {\n    var sheetName = \"Sheet1\";\n    var rangeAddress = \"A1:F8\"; \n    var worksheet = ctx.workbook.worksheets.getItem(sheetName);\n    var range = worksheet.getRange(rangeAddress);\n    range.load('cellCount');\n    return ctx.sync().then(function() {\n        console.log(range.cellCount);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\n// Below example uses a named-range to get the range object.\nExcel.run(function (ctx) { \n    var rangeName = 'MyRange';\n    var range = ctx.workbook.names.getItem(rangeName).range;\n    range.load('cellCount');\n    return ctx.sync().then(function() {\n        console.log(range.cellCount);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\n// The example below sets number-format, values and formulas on a grid that contains 2x3 grid.\nExcel.run(function (ctx) { \n    var sheetName = \"Sheet1\";\n    var rangeAddress = \"F5:G7\";\n    var numberFormat = [[null, \"d-mmm\"], [null, \"d-mmm\"], [null, null]]\n    var values = [[\"Today\", 42147], [\"Tomorrow\", \"5/24\"], [\"Difference in days\", null]];\n    var formulas = [[null,null], [null,null], [null,\"=G6-G5\"]];\n    var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeAddress);\n    range.numberFormat = numberFormat;\n    range.values = values;\n    range.formulas= formulas;\n    range.load('text');\n    return ctx.sync().then(function() {\n        console.log(range.text);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="56f47-448">Uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="56f47-448">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.Range.load_2
  summary: <span data-ttu-id="56f47-449">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="56f47-449">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="56f47-450">Você deve chamar `context.sync()` antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="56f47-450">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: <span data-ttu-id="56f47-451">Onde propertyNamesAndPaths. Select é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades a serem carregadas e propertyNamesAndPaths. Expand é uma sequência de caracteres delimitada por vírgula que especifica as propriedades de navegação a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="56f47-451">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>
      type:
      - '{ select?: string; expand?: string; }'
- uid: excel.Excel.Range.merge
  summary: >-
    <span data-ttu-id="56f47-452">Mescla as células do intervalo em uma região da planilha.</span><span class="sxs-lookup"><span data-stu-id="56f47-452">Merge the range cells into one region in the worksheet.</span></span>


    <span data-ttu-id="56f47-453">\[[Conjunto de APIs: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="56f47-453">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: merge(across)
  fullName: merge(across)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'merge(across?: boolean): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"56f47-454\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"56f47-454\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var sheetName = \"Sheet1\";\n    var rangeAddress = \"A1:C3\";\n    var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeAddress);\n    range.merge(true);\n    return ctx.sync(); \n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\nExcel.run(function (ctx) { \n    var sheetName = \"Sheet1\";\n    var rangeAddress = \"A1:C3\";\n    var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeAddress);\n    range.unmerge();\n    return ctx.sync(); \n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: across
      description: <span data-ttu-id="56f47-455">Opcional.</span><span class="sxs-lookup"><span data-stu-id="56f47-455">Optional.</span></span> <span data-ttu-id="56f47-456">Defina true para mesclar células em todas as linhas do intervalo especificado como células mescladas separadamente.</span><span class="sxs-lookup"><span data-stu-id="56f47-456">Set true to merge cells in each row of the specified range as separate merged cells.</span></span> <span data-ttu-id="56f47-457">O valor padrão é false.</span><span class="sxs-lookup"><span data-stu-id="56f47-457">The default value is false.</span></span>
      type:
      - boolean
- uid: excel.Excel.Range.numberFormat
  summary: >-
    <span data-ttu-id="56f47-458">Representa o código de formato de número do Excel para o intervalo especificado.</span><span class="sxs-lookup"><span data-stu-id="56f47-458">Represents Excel's number format code for the given range.</span></span> <span data-ttu-id="56f47-459">Ao definir o formato de número para um intervalo, o argumento value pode ser um valor único (String) ou uma matriz bidimensional.</span><span class="sxs-lookup"><span data-stu-id="56f47-459">When setting number format to a range, the value argument can be either a single value (string) or a two-dimensional array.</span></span> <span data-ttu-id="56f47-460">Se o argumento for um valor único, ele será aplicado a todas as células no intervalo.</span><span class="sxs-lookup"><span data-stu-id="56f47-460">If the argument is a single value, it will be applied to all cells in the range.</span></span>


    <span data-ttu-id="56f47-461">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="56f47-461">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: numberFormat
  fullName: numberFormat
  langs:
  - typeScript
  type: property
  syntax:
    content: 'numberFormat: any[][];'
    return:
      type:
      - any[][]
- uid: excel.Excel.Range.numberFormatLocal
  summary: >-
    <span data-ttu-id="56f47-462">Representa o código de formato numérico do Excel para o intervalo fornecido como uma cadeia de caracteres no idioma do usuário.</span><span class="sxs-lookup"><span data-stu-id="56f47-462">Represents Excel's number format code for the given range as a string in the language of the user.</span></span> <span data-ttu-id="56f47-463">Ao definir o formato de número local para um intervalo, o argumento value pode ser um valor único (String) ou uma matriz bidimensional.</span><span class="sxs-lookup"><span data-stu-id="56f47-463">When setting number format local to a range, the value argument can be either a single value (string) or a two-dimensional array.</span></span> <span data-ttu-id="56f47-464">Se o argumento for um valor único, ele será aplicado a todas as células no intervalo.</span><span class="sxs-lookup"><span data-stu-id="56f47-464">If the argument is a single value, it will be applied to all cells in the range.</span></span>


    <span data-ttu-id="56f47-465">\[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="56f47-465">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: numberFormatLocal
  fullName: numberFormatLocal
  langs:
  - typeScript
  type: property
  syntax:
    content: 'numberFormatLocal: any[][];'
    return:
      type:
      - any[][]
- uid: excel.Excel.Range.removeDuplicates
  summary: >-
    <span data-ttu-id="56f47-466">Remove valores duplicados do intervalo especificado pelas colunas.</span><span class="sxs-lookup"><span data-stu-id="56f47-466">Removes duplicate values from the range specified by the columns.</span></span>


    <span data-ttu-id="56f47-467">\[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="56f47-467">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: removeDuplicates(columns, includesHeader)
  fullName: removeDuplicates(columns, includesHeader)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'removeDuplicates(columns: number[], includesHeader: boolean): Excel.RemoveDuplicatesResult;'
    return:
      type:
      - excel.Excel.RemoveDuplicatesResult
      description: "<span data-ttu-id=\"56f47-468\">O objeto resultante que contém o número de linhas removidas e o número de linhas exclusivas restantes.</span><span class=\"sxs-lookup\"><span data-stu-id=\"56f47-468\">The resulting object that contains the number of rows removed and the number of remaining unique rows.</span></span>\n#### <a name=\"examples\"></a><span data-ttu-id=\"56f47-469\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"56f47-469\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const range = sheet.getRange(\"B2:D11\");\n\n    const deleteResult = range.removeDuplicates([0],true);    \n    deleteResult.load();    \n    await context.sync();\n\n    console.log(deleteResult.removed + \" entries with duplicate names removed.\");\n    console.log(deleteResult.uniqueRemaining + \" entries with unique names remain in the range.\");\n});\n```"
    parameters:
    - id: columns
      description: <span data-ttu-id="56f47-470">As colunas dentro do intervalo que podem conter duplicatas.</span><span class="sxs-lookup"><span data-stu-id="56f47-470">The columns inside the range that may contain duplicates.</span></span> <span data-ttu-id="56f47-471">É necessário especificar pelo menos uma coluna.</span><span class="sxs-lookup"><span data-stu-id="56f47-471">At least one column needs to be specified.</span></span> <span data-ttu-id="56f47-472">Indexados com zero.</span><span class="sxs-lookup"><span data-stu-id="56f47-472">Zero-indexed.</span></span>
      type:
      - number[]
    - id: includesHeader
      description: <span data-ttu-id="56f47-473">True se os dados de entrada contêm cabeçalho.</span><span class="sxs-lookup"><span data-stu-id="56f47-473">True if the input data contains header.</span></span> <span data-ttu-id="56f47-474">O padrão é false.</span><span class="sxs-lookup"><span data-stu-id="56f47-474">Default is false.</span></span>
      type:
      - boolean
- uid: excel.Excel.Range.replaceAll
  summary: >-
    <span data-ttu-id="56f47-475">Localiza e substitui a cadeia de caracteres fornecida com base nos critérios especificados no intervalo atual.</span><span class="sxs-lookup"><span data-stu-id="56f47-475">Finds and replaces the given string based on the criteria specified within the current range.</span></span>


    <span data-ttu-id="56f47-476">\[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="56f47-476">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: replaceAll(text, replacement, criteria)
  fullName: replaceAll(text, replacement, criteria)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'replaceAll(text: string, replacement: string, criteria: Excel.ReplaceCriteria): OfficeExtension.ClientResult<number>;'
    return:
      type:
      - OfficeExtension.ClientResult<number>
      description: <span data-ttu-id="56f47-477">O número de substituições realizadas.</span><span class="sxs-lookup"><span data-stu-id="56f47-477">The number of replacements performed.</span></span>
    parameters:
    - id: text
      description: <span data-ttu-id="56f47-478">Cadeia de caracteres a ser localizada.</span><span class="sxs-lookup"><span data-stu-id="56f47-478">String to find.</span></span>
      type:
      - string
    - id: replacement
      description: <span data-ttu-id="56f47-479">Cadeia de caracteres para substituir o original por.</span><span class="sxs-lookup"><span data-stu-id="56f47-479">String to replace the original with.</span></span>
      type:
      - string
    - id: criteria
      description: <span data-ttu-id="56f47-480">Critérios adicionais de substituição.</span><span class="sxs-lookup"><span data-stu-id="56f47-480">Additional Replace Criteria.</span></span>
      type:
      - excel.Excel.ReplaceCriteria
- uid: excel.Excel.Range.rowCount
  summary: >-
    <span data-ttu-id="56f47-481">Retorna o número total de linhas no intervalo.</span><span class="sxs-lookup"><span data-stu-id="56f47-481">Returns the total number of rows in the range.</span></span> <span data-ttu-id="56f47-482">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="56f47-482">Read-only.</span></span>


    <span data-ttu-id="56f47-483">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="56f47-483">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: rowCount
  fullName: rowCount
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly rowCount: number;'
    return:
      type:
      - number
- uid: excel.Excel.Range.rowHidden
  summary: >-
    <span data-ttu-id="56f47-484">Representa se todas as linhas do intervalo atual estão ocultas.</span><span class="sxs-lookup"><span data-stu-id="56f47-484">Represents if all rows of the current range are hidden.</span></span>


    <span data-ttu-id="56f47-485">\[[Conjunto de APIs: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="56f47-485">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: rowHidden
  fullName: rowHidden
  langs:
  - typeScript
  type: property
  syntax:
    content: 'rowHidden: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.Range.rowIndex
  summary: >-
    <span data-ttu-id="56f47-486">Representa o número de linhas da primeira célula no intervalo.</span><span class="sxs-lookup"><span data-stu-id="56f47-486">Returns the row number of the first cell in the range.</span></span> <span data-ttu-id="56f47-487">Indexados com zero.</span><span class="sxs-lookup"><span data-stu-id="56f47-487">Zero-indexed.</span></span> <span data-ttu-id="56f47-488">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="56f47-488">Read-only.</span></span>


    <span data-ttu-id="56f47-489">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="56f47-489">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: rowIndex
  fullName: rowIndex
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly rowIndex: number;'
    return:
      type:
      - number
- uid: excel.Excel.Range.select
  summary: >-
    <span data-ttu-id="56f47-490">Seleciona o intervalo especificado na interface do usuário do Excel.</span><span class="sxs-lookup"><span data-stu-id="56f47-490">Selects the specified range in the Excel UI.</span></span>


    <span data-ttu-id="56f47-491">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="56f47-491">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: select()
  fullName: select()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'select(): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"56f47-492\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"56f47-492\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) {\n    var sheetName = \"Sheet1\";\n    var rangeAddress = \"F5:F10\"; \n    var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeAddress);\n    range.select();\n    return ctx.sync(); \n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel.Excel.Range.set
  summary: <span data-ttu-id="56f47-493">Define várias propriedades de um objeto ao mesmo tempo.</span><span class="sxs-lookup"><span data-stu-id="56f47-493">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="56f47-494">Você pode passar um objeto simples com as propriedades apropriadas ou outro objeto API do mesmo tipo.</span><span class="sxs-lookup"><span data-stu-id="56f47-494">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>
  remarks: "<span data-ttu-id=\"56f47-495\">Este método tem a seguinte assinatura adicional:</span><span class=\"sxs-lookup\"><span data-stu-id=\"56f47-495\">This method has the following additional signature:</span></span>\n\n`set(properties: Excel.Range): void`\n#### <a name=\"examples\"></a><span data-ttu-id=\"56f47-496\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"56f47-496\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n\n    const range = sheet.getRange(\"B2:E2\");\n    range.set({\n        format: {\n            fill: {\n                color: \"#4472C4\"\n            },\n            font: {\n                name: \"Verdana\",\n                color: \"white\"\n            }\n        }\n    })\n    range.format.autofitColumns();\n    await context.sync();\n});\n```\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n\n    const sourceRange = sheet.getRange(\"B2:E2\");\n    sourceRange.load(\"format/fill/color, format/font/name, format/font/color\");\n    await context.sync();\n\n    // Set properties based on the loaded and synced \n    // source range.\n    const targetRange = sheet.getRange(\"B7:E7\");\n    targetRange.set(sourceRange); \n    targetRange.format.autofitColumns();\n    await context.sync();\n});\n```"
  name: set(properties, options)
  fullName: set(properties, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Interfaces.RangeUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: <span data-ttu-id="56f47-497">Um objeto JavaScript com propriedades que são estruturadas isomorphically para as propriedades do objeto no qual o método é chamado.</span><span class="sxs-lookup"><span data-stu-id="56f47-497">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
      type:
      - Interfaces.RangeUpdateData
    - id: options
      description: <span data-ttu-id="56f47-498">Fornece uma opção para suprimir erros se o objeto Properties tentar definir qualquer propriedade somente leitura.</span><span class="sxs-lookup"><span data-stu-id="56f47-498">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
      type:
      - office.OfficeExtension.UpdateOptions
- uid: excel.Excel.Range.set_1
  summary: <span data-ttu-id="56f47-499">Define várias propriedades no objeto ao mesmo tempo, com base em um objeto carregado existente.</span><span class="sxs-lookup"><span data-stu-id="56f47-499">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>
  name: set(properties)
  fullName: set(properties)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Excel.Range): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: ''
      type:
      - excel.Excel.Range
- uid: excel.Excel.Range.setCellProperties
  summary: >-
    <span data-ttu-id="56f47-500">Atualiza o intervalo com base em uma matriz 2D de propriedades da célula, encapsulando itens como fonte, preenchimento, bordas, alinhamento e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="56f47-500">Updates the range based on a 2D array of cell properties , encapsulating things like font, fill, borders, alignment, and so forth.</span></span>


    <span data-ttu-id="56f47-501">\[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="56f47-501">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: setCellProperties(cellPropertiesData)
  fullName: setCellProperties(cellPropertiesData)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setCellProperties(cellPropertiesData: SettableCellProperties[][] | OfficeExtension.ClientResult<SettableCellProperties[][]>): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: cellPropertiesData
      description: ''
      type:
      - SettableCellProperties[][] | OfficeExtension.ClientResult<SettableCellProperties[][]>
- uid: excel.Excel.Range.setColumnProperties
  summary: >-
    <span data-ttu-id="56f47-502">Atualiza o intervalo com base em uma única matriz dimensional de propriedades da coluna, encapsulando itens como fonte, preenchimento, bordas, alinhamento e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="56f47-502">Updates the range based on a single-dimensional array of column properties, encapsulating things like font, fill, borders, alignment, and so forth.</span></span>


    <span data-ttu-id="56f47-503">\[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="56f47-503">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: setColumnProperties(columnPropertiesData)
  fullName: setColumnProperties(columnPropertiesData)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setColumnProperties(columnPropertiesData: SettableColumnProperties[] | OfficeExtension.ClientResult<SettableColumnProperties[]>): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: columnPropertiesData
      description: ''
      type:
      - SettableColumnProperties[] | OfficeExtension.ClientResult<SettableColumnProperties[]>
- uid: excel.Excel.Range.setDirty
  summary: >-
    <span data-ttu-id="56f47-504">Define um intervalo a ser recalculado quando o próximo recálculo ocorrer.</span><span class="sxs-lookup"><span data-stu-id="56f47-504">Set a range to be recalculated when the next recalculation occurs.</span></span>


    <span data-ttu-id="56f47-505">\[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="56f47-505">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: setDirty()
  fullName: setDirty()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setDirty(): void;'
    return:
      type:
      - void
      description: ''
- uid: excel.Excel.Range.setRowProperties
  summary: >-
    <span data-ttu-id="56f47-506">Atualiza o intervalo com base em uma única matriz dimensional de propriedades da linha, encapsulando itens como fonte, preenchimento, bordas, alinhamento e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="56f47-506">Updates the range based on a single-dimensional array of row properties, encapsulating things like font, fill, borders, alignment, and so forth.</span></span>


    <span data-ttu-id="56f47-507">\[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="56f47-507">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: setRowProperties(rowPropertiesData)
  fullName: setRowProperties(rowPropertiesData)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setRowProperties(rowPropertiesData: SettableRowProperties[] | OfficeExtension.ClientResult<SettableRowProperties[]>): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: rowPropertiesData
      description: ''
      type:
      - SettableRowProperties[] | OfficeExtension.ClientResult<SettableRowProperties[]>
- uid: excel.Excel.Range.showCard
  summary: >-
    <span data-ttu-id="56f47-508">Exibe o cartão para uma célula ativa se ele tiver um conteúdo valioso.</span><span class="sxs-lookup"><span data-stu-id="56f47-508">Displays the card for an active cell if it has rich value content.</span></span>


    <span data-ttu-id="56f47-509">\[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="56f47-509">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: showCard()
  fullName: showCard()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'showCard(): void;'
    return:
      type:
      - void
      description: ''
- uid: excel.Excel.Range.sort
  summary: >-
    <span data-ttu-id="56f47-510">Representa a classificação de intervalo do intervalo atual.</span><span class="sxs-lookup"><span data-stu-id="56f47-510">Represents the range sort of the current range.</span></span> <span data-ttu-id="56f47-511">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="56f47-511">Read-only.</span></span>


    <span data-ttu-id="56f47-512">\[[Conjunto de APIs: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="56f47-512">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: sort
  fullName: sort
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly sort: Excel.RangeSort;'
    return:
      type:
      - excel.Excel.RangeSort
- uid: excel.Excel.Range.style
  summary: >-
    <span data-ttu-id="56f47-513">Representa o estilo de intervalo atual.</span><span class="sxs-lookup"><span data-stu-id="56f47-513">Represents the style of the current range.</span></span> <span data-ttu-id="56f47-514">Se os estilos das células forem inconsistentes, NULL será retornado.</span><span class="sxs-lookup"><span data-stu-id="56f47-514">If the styles of the cells are inconsistent, null will be returned.</span></span> <span data-ttu-id="56f47-515">Para estilos personalizados, o nome do estilo será retornado.</span><span class="sxs-lookup"><span data-stu-id="56f47-515">For custom styles, the style name will be returned.</span></span> <span data-ttu-id="56f47-516">Para os estilos internos, uma cadeia de caracteres que representa um valor na enumeração BuiltInstyle será retornada.</span><span class="sxs-lookup"><span data-stu-id="56f47-516">For built-in styles, a string representing a value in the BuiltInStyle enum will be returned.</span></span>


    <span data-ttu-id="56f47-517">\[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="56f47-517">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: style
  fullName: style
  langs:
  - typeScript
  type: property
  syntax:
    content: 'style: string;'
    return:
      type:
      - string
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"56f47-518\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"56f47-518\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    let worksheet = context.workbook.worksheets.getItem(\"Sample\");\n    let range = worksheet.getRange(\"A1:E1\");\n\n    // Apply built-in style. \n    // Styles are in the Home tab ribbon.\n    range.style = Excel.BuiltInStyle.neutral;\n    range.format.horizontalAlignment = \"Right\";\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.Range.text
  summary: >-
    <span data-ttu-id="56f47-519">Valores de texto do intervalo especificado.</span><span class="sxs-lookup"><span data-stu-id="56f47-519">Text values of the specified range.</span></span> <span data-ttu-id="56f47-520">O valor de texto não depende da largura da célula.</span><span class="sxs-lookup"><span data-stu-id="56f47-520">The Text value will not depend on the cell width.</span></span> <span data-ttu-id="56f47-521">A \# substituição de sinal que acontece na IU do Excel não afetará o valor de texto RETORNADO pela API.</span><span class="sxs-lookup"><span data-stu-id="56f47-521">The \# sign substitution that happens in Excel UI will not affect the text value returned by the API.</span></span> <span data-ttu-id="56f47-522">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="56f47-522">Read-only.</span></span>


    <span data-ttu-id="56f47-523">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="56f47-523">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: text
  fullName: text
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly text: string[][];'
    return:
      type:
      - string[][]
- uid: excel.Excel.Range.toJSON
  summary: <span data-ttu-id="56f47-524">Substitui o método `toJSON()` JavaScript para fornecer uma saída mais útil quando um objeto API é passado para`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="56f47-524">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="56f47-525">.</span><span class="sxs-lookup"><span data-stu-id="56f47-525"></span></span> <span data-ttu-id="56f47-526">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="56f47-526"></span></span><!-- --><span data-ttu-id="56f47-527">, por sua vez, chama `toJSON` o método do objeto que é passado para ele.) Enquanto o objeto Excel. Range original é um objeto API, o `toJSON` método retorna um objeto JavaScript simples (digitado como`Excel.Interfaces.RangeData`</span><span class="sxs-lookup"><span data-stu-id="56f47-527">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.Range object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.RangeData`</span></span><!-- --><span data-ttu-id="56f47-528">) que contém cópias superficiais de qualquer propriedade filho carregada do objeto original.</span><span class="sxs-lookup"><span data-stu-id="56f47-528">) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.RangeData;'
    return:
      type:
      - excel.Excel.Interfaces.RangeData
      description: ''
- uid: excel.Excel.Range.track
  summary: <span data-ttu-id="56f47-529">Acompanha o objeto para ajuste automático com base nas alterações adjacentes no documento.</span><span class="sxs-lookup"><span data-stu-id="56f47-529">Track the object for automatic adjustment based on surrounding changes in the document.</span></span> <span data-ttu-id="56f47-530">Essa chamada é uma abreviação de context.trackedObjects.add(thisObject).</span><span class="sxs-lookup"><span data-stu-id="56f47-530">This call is a shorthand for context.trackedObjects.add(thisObject).</span></span> <span data-ttu-id="56f47-531">Se você estiver usando esse objeto em chamadas ".sync" e fora da execução sequencial de um lote ".run" e receber um erro "InvalidObjectPath" ao definir uma propriedade ou invocar um método no objeto, era necessário ter adicionado o objeto à coleção de objetos rastreados quando o objeto foi criado pela primeira vez.</span><span class="sxs-lookup"><span data-stu-id="56f47-531">If you are using this object across ".sync" calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you needed to have added the object to the tracked object collection when the object was first created.</span></span>
  name: track()
  fullName: track()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'track(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: ''
- uid: excel.Excel.Range.unmerge
  summary: >-
    <span data-ttu-id="56f47-532">Desfaz a mesclagem das células do intervalo em células separadas.</span><span class="sxs-lookup"><span data-stu-id="56f47-532">Unmerge the range cells into separate cells.</span></span>


    <span data-ttu-id="56f47-533">\[[Conjunto de APIs: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="56f47-533">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: unmerge()
  fullName: unmerge()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'unmerge(): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"56f47-534\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"56f47-534\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var sheetName = \"Sheet1\";\n    var rangeAddress = \"A1:C3\";\n    var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeAddress);\n    range.unmerge();\n    return ctx.sync(); \n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel.Excel.Range.untrack
  summary: <span data-ttu-id="56f47-535">Libere a memória associada a este objeto, se ele já tiver sido rastreado anteriormente.</span><span class="sxs-lookup"><span data-stu-id="56f47-535">Release the memory associated with this object, if it has previously been tracked.</span></span> <span data-ttu-id="56f47-536">Essa chamada é uma abreviação de context.trackedObjects.remove(thisObject).</span><span class="sxs-lookup"><span data-stu-id="56f47-536">This call is shorthand for context.trackedObjects.remove(thisObject).</span></span> <span data-ttu-id="56f47-537">Ter muitos objetos rastreados desacelera o aplicativo host, por isso, lembre-se de liberar todos os objetos adicionados após usá-los.</span><span class="sxs-lookup"><span data-stu-id="56f47-537">Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them.</span></span> <span data-ttu-id="56f47-538">Você precisa chamar "context.sync()" antes da liberação da memória entrar em vigor.</span><span class="sxs-lookup"><span data-stu-id="56f47-538">You will need to call "context.sync()" before the memory release takes effect.</span></span>
  name: untrack()
  fullName: untrack()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'untrack(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"56f47-539\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"56f47-539\">Examples</span></span>\n\n```typescript\nExcel.run(async (context) => {\n    const largeRange = context.workbook.getSelectedRange();\n    largeRange.load([\"rowCount\", \"columnCount\"]);\n    await context.sync();\n\n    for (let i = 0; i < largeRange.rowCount; i++) {\n        for (let j = 0; j < largeRange.columnCount; j++) {\n            let cell = largeRange.getCell(i, j);\n            cell.values = [[i *j]];\n\n            // call untrack() to release the range from memory\n            cell.untrack();\n        }\n    }\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.Range.values
  summary: >-
    <span data-ttu-id="56f47-540">Representa os valores brutos do intervalo especificado.</span><span class="sxs-lookup"><span data-stu-id="56f47-540">Represents the raw values of the specified range.</span></span> <span data-ttu-id="56f47-541">Os dados retornados podem ser dos tipos: cadeia de caracteres, número ou booliano.</span><span class="sxs-lookup"><span data-stu-id="56f47-541">The data returned could be of type string, number, or a boolean.</span></span> <span data-ttu-id="56f47-542">As células que contêm um erro retornarão a cadeia de caracteres de erro.</span><span class="sxs-lookup"><span data-stu-id="56f47-542">Cells that contain an error will return the error string.</span></span> <span data-ttu-id="56f47-543">Ao definir valores para um intervalo, o argumento value pode ser um valor único (String, Number ou Boolean) ou uma matriz bidimensional.</span><span class="sxs-lookup"><span data-stu-id="56f47-543">When setting values to a range, the value argument can be either a single value (string, number or boolean) or a two-dimensional array.</span></span> <span data-ttu-id="56f47-544">Se o argumento for um valor único, ele será aplicado a todas as células no intervalo.</span><span class="sxs-lookup"><span data-stu-id="56f47-544">If the argument is a single value, it will be applied to all cells in the range.</span></span>


    <span data-ttu-id="56f47-545">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="56f47-545">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: values
  fullName: values
  langs:
  - typeScript
  type: property
  syntax:
    content: 'values: any[][];'
    return:
      type:
      - any[][]
- uid: excel.Excel.Range.valueTypes
  summary: >-
    <span data-ttu-id="56f47-546">Representa o tipo de dados de cada célula.</span><span class="sxs-lookup"><span data-stu-id="56f47-546">Represents the type of data of each cell.</span></span> <span data-ttu-id="56f47-547">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="56f47-547">Read-only.</span></span>


    <span data-ttu-id="56f47-548">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="56f47-548">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: valueTypes
  fullName: valueTypes
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly valueTypes: Excel.RangeValueType[][];'
    return:
      type:
      - Excel.RangeValueType[][]
- uid: excel.Excel.Range.worksheet
  summary: >-
    <span data-ttu-id="56f47-549">A planilha que contém o intervalo atual.</span><span class="sxs-lookup"><span data-stu-id="56f47-549">The worksheet containing the current range.</span></span> <span data-ttu-id="56f47-550">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="56f47-550">Read-only.</span></span>


    <span data-ttu-id="56f47-551">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="56f47-551">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: worksheet
  fullName: worksheet
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly worksheet: Excel.Worksheet;'
    return:
      type:
      - excel.Excel.Worksheet
