### YamlMime:UniversalReference
items:
  - uid: excel.Excel.ChartPointsCollection
    summary: |-
      <span data-ttu-id="f82d4-101">Uma coleção de todos os pontos do gráfico em uma série dentro do gráfico.</span><span class="sxs-lookup"><span data-stu-id="f82d4-101">A collection of all the chart points within a series inside a chart.</span></span>

      <span data-ttu-id="f82d4-102">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="f82d4-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.ChartPointsCollection
    fullName: Excel.ChartPointsCollection
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: excel
    children:
      - excel.Excel.ChartPointsCollection.context
      - excel.Excel.ChartPointsCollection.count
      - excel.Excel.ChartPointsCollection.getCount
      - excel.Excel.ChartPointsCollection.getItemAt
      - excel.Excel.ChartPointsCollection.items
      - excel.Excel.ChartPointsCollection.load
      - excel.Excel.ChartPointsCollection.load_1
      - excel.Excel.ChartPointsCollection.load_2
      - excel.Excel.ChartPointsCollection.toJSON
  - uid: excel.Excel.ChartPointsCollection.context
    summary: <span data-ttu-id="f82d4-103">O contexto de solicitação associado ao objeto.</span><span class="sxs-lookup"><span data-stu-id="f82d4-103">The request context associated with the object.</span></span> <span data-ttu-id="f82d4-104">Isso conecta o processo do suplemento ao processo do aplicativo host do Office.</span><span class="sxs-lookup"><span data-stu-id="f82d4-104">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: excel.Excel.ChartPointsCollection.count
    summary: |-
      <span data-ttu-id="f82d4-105">Retorna o número de pontos do gráfico da série.</span><span class="sxs-lookup"><span data-stu-id="f82d4-105">Returns the number of chart points in the series.</span></span> <span data-ttu-id="f82d4-106">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="f82d4-106">Read-only.</span></span>

      <span data-ttu-id="f82d4-107">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="f82d4-107">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: count
    fullName: count
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly count: number;'
      return:
        type:
          - number
  - uid: excel.Excel.ChartPointsCollection.getCount
    summary: |-
      <span data-ttu-id="f82d4-108">Retorna o número de pontos do gráfico da série.</span><span class="sxs-lookup"><span data-stu-id="f82d4-108">Returns the number of chart points in the series.</span></span>

      <span data-ttu-id="f82d4-109">\[[Conjunto de APIs: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="f82d4-109">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - OfficeExtension.ClientResult<number>
        description: ''
  - uid: excel.Excel.ChartPointsCollection.getItemAt
    summary: |-
      <span data-ttu-id="f82d4-110">Recupera um ponto com base na respectiva posição dentro da série.</span><span class="sxs-lookup"><span data-stu-id="f82d4-110">Retrieve a point based on its position within the series.</span></span>

      <span data-ttu-id="f82d4-111">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="f82d4-111">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItemAt(index)
    fullName: getItemAt(index)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemAt(index: number): Excel.ChartPoint;'
      return:
        type:
          - excel.Excel.ChartPoint
        description: |-


          #### <a name="examples"></a><span data-ttu-id="f82d4-112">Exemplos</span><span class="sxs-lookup"><span data-stu-id="f82d4-112">Examples</span></span>

          ```javascript
          // Set the border color for the first points in the points collection
          Excel.run(function (ctx) { 
              var points = ctx.workbook.worksheets.getItem("Sheet1").charts.getItem("Chart1").series.getItemAt(0).points;
              points.getItemAt(0).format.fill.setSolidColor("8FBC8F");
              return ctx.sync().then(function() {
                  console.log("Point Border Color Changed");
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: index
          description: <span data-ttu-id="f82d4-113">Valor de índice do objeto a ser recuperado.</span><span class="sxs-lookup"><span data-stu-id="f82d4-113">Index value of the object to be retrieved.</span></span> <span data-ttu-id="f82d4-114">Indexados com zero.</span><span class="sxs-lookup"><span data-stu-id="f82d4-114">Zero-indexed.</span></span>
          type:
            - number
  - uid: excel.Excel.ChartPointsCollection.items
    summary: <span data-ttu-id="f82d4-115">Obtém os itens filhos carregados nesta coleção.</span><span class="sxs-lookup"><span data-stu-id="f82d4-115">Gets the loaded child items in this collection.</span></span>
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.ChartPoint[];'
      return:
        type:
          - 'Excel.ChartPoint[]'
  - uid: excel.Excel.ChartPointsCollection.load
    summary: <span data-ttu-id="f82d4-116">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="f82d4-116">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="f82d4-117">Você deve chamar "context.sync()" antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="f82d4-117">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="f82d4-118">Além dessa assinatura, este método tem as seguintes assinaturas:</span><span class="sxs-lookup"><span data-stu-id="f82d4-118">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="f82d4-119">`load(option?: string | string[]): Excel.ChartPointsCollection`-Where Option é uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="f82d4-119">`load(option?: string | string[]): Excel.ChartPointsCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="f82d4-120">`load(option?: { select?: string; expand?: string; }): Excel.ChartPointsCollection`-Onde Option. Select é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades a serem carregadas, e Options. Expand é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades de navegação a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="f82d4-120">`load(option?: { select?: string; expand?: string; }): Excel.ChartPointsCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="f82d4-121">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ChartPointsCollection`– Disponível somente nos tipos de coleção.</span><span class="sxs-lookup"><span data-stu-id="f82d4-121">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ChartPointsCollection` - Only available on collection types.</span></span> <span data-ttu-id="f82d4-122">É semelhante à assinatura anterior.</span><span class="sxs-lookup"><span data-stu-id="f82d4-122">It is similar to the preceding signature.</span></span> <span data-ttu-id="f82d4-123">Option. Top especifica o número máximo de itens de coleta que podem ser incluídos no resultado.</span><span class="sxs-lookup"><span data-stu-id="f82d4-123">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="f82d4-124">Option. Skip especifica o número de itens que devem ser ignorados e não incluídos no resultado.</span><span class="sxs-lookup"><span data-stu-id="f82d4-124">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="f82d4-125">Se Option. Top for especificado, o conjunto de resultados será iniciado depois de ignorar o número de itens especificado.</span><span class="sxs-lookup"><span data-stu-id="f82d4-125">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.ChartPointsCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.ChartPointsCollection;'
      return:
        type:
          - excel.Excel.ChartPointsCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - Excel.Interfaces.ChartPointsCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
  - uid: excel.Excel.ChartPointsCollection.load_1
    summary: <span data-ttu-id="f82d4-126">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="f82d4-126">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="f82d4-127">Você deve chamar `context.sync()` antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="f82d4-127">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.ChartPointsCollection;'
      return:
        type:
          - excel.Excel.ChartPointsCollection
        description: |-


          #### <a name="examples"></a><span data-ttu-id="f82d4-128">Exemplos</span><span class="sxs-lookup"><span data-stu-id="f82d4-128">Examples</span></span>

          ```javascript
          // Get the names of points in the points collection
          Excel.run(function (ctx) { 
              var pointsCollection = 
                  ctx.workbook.worksheets.getItem("Sheet1").charts.getItem("Chart1").series.getItemAt(0).points;
              pointsCollection.load('items');
              return ctx.sync().then(function() {
                  console.log("Points Collection loaded");
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          // Get the number of points
          Excel.run(function (ctx) { 
              var pointsCollection = 
                  ctx.workbook.worksheets.getItem("Sheet1").charts.getItem("Chart1").series.getItemAt(0).points;
              pointsCollection.load('count');
              return ctx.sync().then(function() {
                  console.log("points: Count= " + pointsCollection.count);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="f82d4-129">Uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="f82d4-129">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: excel.Excel.ChartPointsCollection.load_2
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): Excel.ChartPointsCollection;'
      return:
        type:
          - excel.Excel.ChartPointsCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - office.OfficeExtension.LoadOption
  - uid: excel.Excel.ChartPointsCollection.toJSON
    summary: '<span data-ttu-id="f82d4-130">Substitui o método `toJSON()` JavaScript para fornecer uma saída mais útil quando um objeto API é passado para`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="f82d4-130">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="f82d4-131">.</span><span class="sxs-lookup"><span data-stu-id="f82d4-131"></span></span> <span data-ttu-id="f82d4-132">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="f82d4-132"></span></span><!-- --><span data-ttu-id="f82d4-133">, por sua vez, chama `toJSON` o método do objeto que é passado para ele.) Enquanto o objeto `Excel.ChartPointsCollection` original é um objeto API, o `toJSON` método retorna um objeto JavaScript simples (digitado como`Excel.Interfaces.ChartPointsCollectionData`</span><span class="sxs-lookup"><span data-stu-id="f82d4-133">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.ChartPointsCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ChartPointsCollectionData`</span></span><!-- --><span data-ttu-id="f82d4-134">) que contém uma matriz de "itens" com cópias superficiais de qualquer propriedade carregada dos itens da coleção.</span><span class="sxs-lookup"><span data-stu-id="f82d4-134">) that contains an "items" array with shallow copies of any loaded properties from the collection''s items.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.ChartPointsCollectionData;'
      return:
        type:
          - excel.Excel.Interfaces.ChartPointsCollectionData
        description: ''