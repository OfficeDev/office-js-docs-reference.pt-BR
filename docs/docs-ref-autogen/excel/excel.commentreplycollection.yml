### YamlMime:UniversalReference
items:
  - uid: excel.Excel.CommentReplyCollection
    summary: |-
      Representa uma coleção de objetos de resposta de comentário que fazem parte do comentário.

      \[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    isPreview: true
    name: Excel.CommentReplyCollection
    fullName: Excel.CommentReplyCollection
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: excel
    children:
      - excel.Excel.CommentReplyCollection.add
      - excel.Excel.CommentReplyCollection.add_1
      - excel.Excel.CommentReplyCollection.context
      - excel.Excel.CommentReplyCollection.getCount
      - excel.Excel.CommentReplyCollection.getItem
      - excel.Excel.CommentReplyCollection.getItemAt
      - excel.Excel.CommentReplyCollection.items
      - excel.Excel.CommentReplyCollection.load
      - excel.Excel.CommentReplyCollection.load_1
      - excel.Excel.CommentReplyCollection.load_2
      - excel.Excel.CommentReplyCollection.toJSON
  - uid: excel.Excel.CommentReplyCollection.add
    summary: |-
      Cria uma resposta de comentário para o comentário.

      \[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    isPreview: true
    name: 'add(content, contentType)'
    fullName: 'add(content, contentType)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(content: string, contentType?: Excel.ContentType): Excel.CommentReply;'
      return:
        type:
          - excel.Excel.CommentReply
        description: |-


          #### <a name="examples"></a>Exemplos

          ```typescript
          await Excel.run(async (context) => {
              const comment = context.workbook.comments.getItemAt(0);
              comment.replies.add("Do I have to?");
              await context.sync();
          });
          ```
      parameters:
        - id: content
          description: O conteúdo do comentário.
          type:
            - string
        - id: contentType
          description: Opcional. Tipo de conteúdo de comentário
          type:
            - excel.Excel.ContentType
  - uid: excel.Excel.CommentReplyCollection.add_1
    summary: |-
      Cria uma resposta de comentário para o comentário.

      \[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    isPreview: true
    name: 'add(content, contentTypeString)'
    fullName: 'add(content, contentTypeString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(content: string, contentTypeString?: "Plain"): Excel.CommentReply;'
      return:
        type:
          - excel.Excel.CommentReply
        description: ''
      parameters:
        - id: content
          description: O conteúdo do comentário.
          type:
            - string
        - id: contentTypeString
          description: Opcional. Tipo de conteúdo de comentário
          type:
            - '"Plain"'
  - uid: excel.Excel.CommentReplyCollection.context
    summary: O contexto de solicitação associado ao objeto. Isso conecta o processo do suplemento ao processo do aplicativo host do Office.
    isPreview: true
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: excel.Excel.CommentReplyCollection.getCount
    summary: |-
      Obtém o número de respostas de comentários na coleção.

      \[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    isPreview: true
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - OfficeExtension.ClientResult<number>
        description: ''
  - uid: excel.Excel.CommentReplyCollection.getItem
    summary: |-
      Retorna uma resposta de comentário identificada pela respectiva ID. Somente leitura.

      \[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    isPreview: true
    name: getItem(commentReplyId)
    fullName: getItem(commentReplyId)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(commentReplyId: string): Excel.CommentReply;'
      return:
        type:
          - excel.Excel.CommentReply
        description: ''
      parameters:
        - id: commentReplyId
          description: O identificador para a resposta de comentário.
          type:
            - string
  - uid: excel.Excel.CommentReplyCollection.getItemAt
    summary: |-
      Obtém uma resposta de comentário com base em sua posição na coleção.

      \[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    isPreview: true
    name: getItemAt(index)
    fullName: getItemAt(index)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemAt(index: number): Excel.CommentReply;'
      return:
        type:
          - excel.Excel.CommentReply
        description: ''
      parameters:
        - id: index
          description: Valor de índice do objeto a ser recuperado. Indexados com zero.
          type:
            - number
  - uid: excel.Excel.CommentReplyCollection.items
    summary: Obtém os itens filhos carregados nesta coleção.
    isPreview: true
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.CommentReply[];'
      return:
        type:
          - 'Excel.CommentReply[]'
  - uid: excel.Excel.CommentReplyCollection.load
    summary: Coloca um comando na fila para carregar as propriedades especificadas do objeto. Você deve chamar "context.sync()" antes de ler as propriedades.
    remarks: |-
      Além dessa assinatura, este método tem as seguintes assinaturas:

      `load(option?: string | string[]): Excel.CommentReplyCollection`-Where Option é uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.

      `load(option?: { select?: string; expand?: string; }): Excel.CommentReplyCollection`-Onde Option. Select é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades a serem carregadas, e Options. Expand é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades de navegação a serem carregadas.

      `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.CommentReplyCollection`– Disponível somente nos tipos de coleção. É semelhante à assinatura anterior. Option. Top especifica o número máximo de itens de coleta que podem ser incluídos no resultado. Option. Skip especifica o número de itens que devem ser ignorados e não incluídos no resultado. Se Option. Top for especificado, o conjunto de resultados será iniciado depois de ignorar o número de itens especificado.
    isPreview: true
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.CommentReplyCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.CommentReplyCollection;'
      return:
        type:
          - excel.Excel.CommentReplyCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - Excel.Interfaces.CommentReplyCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
  - uid: excel.Excel.CommentReplyCollection.load_1
    summary: Coloca um comando na fila para carregar as propriedades especificadas do objeto. Você deve chamar `context.sync()` antes de ler as propriedades.
    isPreview: true
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.CommentReplyCollection;'
      return:
        type:
          - excel.Excel.CommentReplyCollection
        description: ''
      parameters:
        - id: propertyNames
          description: Uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.
          type:
            - 'string | string[]'
  - uid: excel.Excel.CommentReplyCollection.load_2
    isPreview: true
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): Excel.CommentReplyCollection;'
      return:
        type:
          - excel.Excel.CommentReplyCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - office.OfficeExtension.LoadOption
  - uid: excel.Excel.CommentReplyCollection.toJSON
    summary: 'Substitui o método `toJSON()` JavaScript para fornecer uma saída mais útil quando um objeto API é passado para`JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, por sua vez, chama `toJSON` o método do objeto que é passado para ele.) Enquanto o objeto `Excel.CommentReplyCollection` original é um objeto API, o `toJSON` método retorna um objeto JavaScript simples (digitado como`Excel.Interfaces.CommentReplyCollectionData`<!-- -->) que contém uma matriz de "itens" com cópias superficiais de qualquer propriedade carregada dos itens da coleção.'
    isPreview: true
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.CommentReplyCollectionData;'
      return:
        type:
          - excel.Excel.Interfaces.CommentReplyCollectionData
        description: ''