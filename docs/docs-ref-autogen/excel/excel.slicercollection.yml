### YamlMime:UniversalReference
items:
  - uid: excel.Excel.SlicerCollection
    summary: |-
      <span data-ttu-id="308f2-101">Representa uma coleção de todos os objetos slicery na pasta de trabalho ou em uma planilha.</span><span class="sxs-lookup"><span data-stu-id="308f2-101">Represents a collection of all the slicer objects on the workbook or a worksheet.</span></span>

      <span data-ttu-id="308f2-102">\[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="308f2-102">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: Excel.SlicerCollection
    fullName: Excel.SlicerCollection
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: excel
    children:
      - excel.Excel.SlicerCollection.add
      - excel.Excel.SlicerCollection.context
      - excel.Excel.SlicerCollection.getCount
      - excel.Excel.SlicerCollection.getItem
      - excel.Excel.SlicerCollection.getItemAt
      - excel.Excel.SlicerCollection.getItemOrNullObject
      - excel.Excel.SlicerCollection.items
      - excel.Excel.SlicerCollection.load
      - excel.Excel.SlicerCollection.load_1
      - excel.Excel.SlicerCollection.load_2
      - excel.Excel.SlicerCollection.toJSON
  - uid: excel.Excel.SlicerCollection.add
    summary: |-
      <span data-ttu-id="308f2-103">Adiciona uma nova segmentação de dados à pasta de trabalho.</span><span class="sxs-lookup"><span data-stu-id="308f2-103">Adds a new slicer to the workbook.</span></span>

      <span data-ttu-id="308f2-104">\[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="308f2-104">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: 'add(slicerSource, sourceField, slicerDestination)'
    fullName: 'add(slicerSource, sourceField, slicerDestination)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(slicerSource: string | PivotTable | Table, sourceField: string | PivotField | number | TableColumn, slicerDestination?: string | Worksheet): Excel.Slicer;'
      return:
        type:
          - excel.Excel.Slicer
        description: |-
          <span data-ttu-id="308f2-105">A nova segmentação de,.</span><span class="sxs-lookup"><span data-stu-id="308f2-105">The new slicer.</span></span>

          #### <a name="examples"></a><span data-ttu-id="308f2-106">Exemplos</span><span class="sxs-lookup"><span data-stu-id="308f2-106">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Pivot");
              const slicer = sheet.slicers.add(
                  "Farm Sales", /* The slicer data source. For PivotTables, this can be the PivotTable object reference or name. */
                  "Type" /* The field in the data source to filter by. For PivotTables, this can be a PivotField object reference or ID. */
              );
              slicer.name = "Fruit Slicer";
              await context.sync();
          });
          ```
      parameters:
        - id: slicerSource
          description: '<span data-ttu-id="308f2-107">A fonte de dados na qual o novo slicer será baseado.</span><span class="sxs-lookup"><span data-stu-id="308f2-107">The data source that the new slicer will be based on.</span></span> <span data-ttu-id="308f2-108">Pode ser um objeto PivotTable, um objeto Table ou uma cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="308f2-108">It can be a PivotTable object, a Table object or a string.</span></span> <span data-ttu-id="308f2-109">Quando um objeto PivotTable é passado, a fonte de dados é a fonte do objeto PivotTable.</span><span class="sxs-lookup"><span data-stu-id="308f2-109">When a PivotTable object is passed, the data source is the source of the PivotTable object.</span></span> <span data-ttu-id="308f2-110">Quando um objeto Table é passado, a fonte de dados é o objeto Table.</span><span class="sxs-lookup"><span data-stu-id="308f2-110">When a Table object is passed, the data source is the Table object.</span></span> <span data-ttu-id="308f2-111">Quando uma cadeia de caracteres é passada, ela é interpretada como o nome/ID de uma tabela dinâmica.</span><span class="sxs-lookup"><span data-stu-id="308f2-111">When a string is passed, it is interpreted as the name/id of a PivotTable/Table.</span></span>'
          type:
            - string | PivotTable | Table
        - id: sourceField
          description: '<span data-ttu-id="308f2-112">O campo na fonte de dados a ser filtrado.</span><span class="sxs-lookup"><span data-stu-id="308f2-112">The field in the data source to filter by.</span></span> <span data-ttu-id="308f2-113">Pode ser um objeto PivotField, um objeto TableColumn, a ID de um PivotField ou a ID/nome de TableColumn.</span><span class="sxs-lookup"><span data-stu-id="308f2-113">It can be a PivotField object, a TableColumn object, the id of a PivotField or the id/name of TableColumn.</span></span>'
          type:
            - string | PivotField | number | TableColumn
        - id: slicerDestination
          description: <span data-ttu-id="308f2-114">Opcional.</span><span class="sxs-lookup"><span data-stu-id="308f2-114">Optional.</span></span> <span data-ttu-id="308f2-115">A planilha na qual a nova segmentação de trabalho será criada.</span><span class="sxs-lookup"><span data-stu-id="308f2-115">The worksheet where the new slicer will be created in.</span></span> <span data-ttu-id="308f2-116">Pode ser um objeto Worksheet ou o nome/ID de uma planilha.</span><span class="sxs-lookup"><span data-stu-id="308f2-116">It can be a Worksheet object or the name/id of a worksheet.</span></span> <span data-ttu-id="308f2-117">Esse parâmetro pode ser omitido se a coleção slicer for recuperada da planilha.</span><span class="sxs-lookup"><span data-stu-id="308f2-117">This parameter can be omitted if the slicer collection is retrieved from worksheet.</span></span>
          type:
            - string | Worksheet
  - uid: excel.Excel.SlicerCollection.context
    summary: <span data-ttu-id="308f2-118">O contexto de solicitação associado ao objeto.</span><span class="sxs-lookup"><span data-stu-id="308f2-118">The request context associated with the object.</span></span> <span data-ttu-id="308f2-119">Isso conecta o processo do suplemento ao processo do aplicativo host do Office.</span><span class="sxs-lookup"><span data-stu-id="308f2-119">This connects the add-in's process to the Office host application's process.</span></span>
    isPreview: true
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: excel.Excel.SlicerCollection.getCount
    summary: |-
      <span data-ttu-id="308f2-120">Retorna o número de segmentações de dados na coleção.</span><span class="sxs-lookup"><span data-stu-id="308f2-120">Returns the number of slicers in the collection.</span></span>

      <span data-ttu-id="308f2-121">\[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="308f2-121">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - OfficeExtension.ClientResult<number>
        description: ''
  - uid: excel.Excel.SlicerCollection.getItem
    summary: |-
      <span data-ttu-id="308f2-122">Obtém um objeto de segmentação de dados usando seu respectivo nome ou ID.</span><span class="sxs-lookup"><span data-stu-id="308f2-122">Gets a slicer object using its name or id.</span></span>

      <span data-ttu-id="308f2-123">\[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="308f2-123">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: getItem(key)
    fullName: getItem(key)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(key: string): Excel.Slicer;'
      return:
        type:
          - excel.Excel.Slicer
        description: |-


          #### <a name="examples"></a><span data-ttu-id="308f2-124">Exemplos</span><span class="sxs-lookup"><span data-stu-id="308f2-124">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const slicer = context.workbook.slicers.getItem("Fruit Slicer");
              slicer.caption = "Fruit Types";
              slicer.left = 395;
              slicer.top = 15;
              slicer.height = 135;
              slicer.width = 150;
              await context.sync();
          });
          ```
      parameters:
        - id: key
          description: '<span data-ttu-id="308f2-125">O nome ou a ID da segmentação de,.</span><span class="sxs-lookup"><span data-stu-id="308f2-125">The name or id of the slicer.</span></span>'
          type:
            - string
  - uid: excel.Excel.SlicerCollection.getItemAt
    summary: |-
      <span data-ttu-id="308f2-126">Obtém uma segmentação de dados com base em sua posição na coleção.</span><span class="sxs-lookup"><span data-stu-id="308f2-126">Gets a slicer based on its position in the collection.</span></span>

      <span data-ttu-id="308f2-127">\[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="308f2-127">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: getItemAt(index)
    fullName: getItemAt(index)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemAt(index: number): Excel.Slicer;'
      return:
        type:
          - excel.Excel.Slicer
        description: ''
      parameters:
        - id: index
          description: <span data-ttu-id="308f2-128">Valor de índice do objeto a ser recuperado.</span><span class="sxs-lookup"><span data-stu-id="308f2-128">Index value of the object to be retrieved.</span></span> <span data-ttu-id="308f2-129">Indexados com zero.</span><span class="sxs-lookup"><span data-stu-id="308f2-129">Zero-indexed.</span></span>
          type:
            - number
  - uid: excel.Excel.SlicerCollection.getItemOrNullObject
    summary: |-
      <span data-ttu-id="308f2-130">Obtém uma segmentação de dados usando seu nome ou id. Se a ela não existir, retornará um objeto null.</span><span class="sxs-lookup"><span data-stu-id="308f2-130">Gets a slicer using its name or id. If the slicer does not exist, will return a null object.</span></span>

      <span data-ttu-id="308f2-131">\[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="308f2-131">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: getItemOrNullObject(key)
    fullName: getItemOrNullObject(key)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemOrNullObject(key: string): Excel.Slicer;'
      return:
        type:
          - excel.Excel.Slicer
        description: ''
      parameters:
        - id: key
          description: '<span data-ttu-id="308f2-132">Nome ou ID da segmentação de, a ser recuperada.</span><span class="sxs-lookup"><span data-stu-id="308f2-132">Name or Id of the slicer to be retrieved.</span></span>'
          type:
            - string
  - uid: excel.Excel.SlicerCollection.items
    summary: <span data-ttu-id="308f2-133">Obtém os itens filhos carregados nesta coleção.</span><span class="sxs-lookup"><span data-stu-id="308f2-133">Gets the loaded child items in this collection.</span></span>
    isPreview: true
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.Slicer[];'
      return:
        type:
          - 'Excel.Slicer[]'
  - uid: excel.Excel.SlicerCollection.load
    summary: <span data-ttu-id="308f2-134">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="308f2-134">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="308f2-135">Você deve chamar "context.sync()" antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="308f2-135">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="308f2-136">Além dessa assinatura, este método tem as seguintes assinaturas:</span><span class="sxs-lookup"><span data-stu-id="308f2-136">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="308f2-137">`load(option?: string | string[]): Excel.SlicerCollection`-Where Option é uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="308f2-137">`load(option?: string | string[]): Excel.SlicerCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="308f2-138">`load(option?: { select?: string; expand?: string; }): Excel.SlicerCollection`-Onde Option. Select é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades a serem carregadas, e Options. Expand é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades de navegação a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="308f2-138">`load(option?: { select?: string; expand?: string; }): Excel.SlicerCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="308f2-139">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.SlicerCollection`– Disponível somente nos tipos de coleção.</span><span class="sxs-lookup"><span data-stu-id="308f2-139">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.SlicerCollection` - Only available on collection types.</span></span> <span data-ttu-id="308f2-140">É semelhante à assinatura anterior.</span><span class="sxs-lookup"><span data-stu-id="308f2-140">It is similar to the preceding signature.</span></span> <span data-ttu-id="308f2-141">Option. Top especifica o número máximo de itens de coleta que podem ser incluídos no resultado.</span><span class="sxs-lookup"><span data-stu-id="308f2-141">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="308f2-142">Option. Skip especifica o número de itens que devem ser ignorados e não incluídos no resultado.</span><span class="sxs-lookup"><span data-stu-id="308f2-142">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="308f2-143">Se Option. Top for especificado, o conjunto de resultados será iniciado depois de ignorar o número de itens especificado.</span><span class="sxs-lookup"><span data-stu-id="308f2-143">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    isPreview: true
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.SlicerCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.SlicerCollection;'
      return:
        type:
          - excel.Excel.SlicerCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - Excel.Interfaces.SlicerCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
  - uid: excel.Excel.SlicerCollection.load_1
    summary: <span data-ttu-id="308f2-144">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="308f2-144">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="308f2-145">Você deve chamar `context.sync()` antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="308f2-145">You must call `context.sync()` before reading the properties.</span></span>
    isPreview: true
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.SlicerCollection;'
      return:
        type:
          - excel.Excel.SlicerCollection
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="308f2-146">Uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="308f2-146">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: excel.Excel.SlicerCollection.load_2
    isPreview: true
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): Excel.SlicerCollection;'
      return:
        type:
          - excel.Excel.SlicerCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - office.OfficeExtension.LoadOption
  - uid: excel.Excel.SlicerCollection.toJSON
    summary: '<span data-ttu-id="308f2-147">Substitui o método `toJSON()` JavaScript para fornecer uma saída mais útil quando um objeto API é passado para`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="308f2-147">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="308f2-148">.</span><span class="sxs-lookup"><span data-stu-id="308f2-148"></span></span> <span data-ttu-id="308f2-149">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="308f2-149"></span></span><!-- --><span data-ttu-id="308f2-150">, por sua vez, chama `toJSON` o método do objeto que é passado para ele.) Enquanto o objeto `Excel.SlicerCollection` original é um objeto API, o `toJSON` método retorna um objeto JavaScript simples (digitado como`Excel.Interfaces.SlicerCollectionData`</span><span class="sxs-lookup"><span data-stu-id="308f2-150">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.SlicerCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.SlicerCollectionData`</span></span><!-- --><span data-ttu-id="308f2-151">) que contém uma matriz de "itens" com cópias superficiais de qualquer propriedade carregada dos itens da coleção.</span><span class="sxs-lookup"><span data-stu-id="308f2-151">) that contains an "items" array with shallow copies of any loaded properties from the collection''s items.</span></span>'
    isPreview: true
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.SlicerCollectionData;'
      return:
        type:
          - excel.Excel.Interfaces.SlicerCollectionData
        description: ''