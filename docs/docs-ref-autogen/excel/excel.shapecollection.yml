### YamlMime:UniversalReference
items:
  - uid: excel.Excel.ShapeCollection
    summary: |-
      <span data-ttu-id="c6e96-101">Representa uma coleção de todas as formas na planilha.</span><span class="sxs-lookup"><span data-stu-id="c6e96-101">Represents a collection of all the shapes in the worksheet.</span></span>

      <span data-ttu-id="c6e96-102">\[[Conjunto de APIs: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c6e96-102">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.ShapeCollection
    fullName: Excel.ShapeCollection
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: excel
    children:
      - excel.Excel.ShapeCollection.addGeometricShape
      - excel.Excel.ShapeCollection.addGeometricShape_1
      - excel.Excel.ShapeCollection.addGroup
      - excel.Excel.ShapeCollection.addImage
      - excel.Excel.ShapeCollection.addLine
      - excel.Excel.ShapeCollection.addLine_1
      - excel.Excel.ShapeCollection.addSvg
      - excel.Excel.ShapeCollection.addTextBox
      - excel.Excel.ShapeCollection.context
      - excel.Excel.ShapeCollection.getCount
      - excel.Excel.ShapeCollection.getItem
      - excel.Excel.ShapeCollection.getItemAt
      - excel.Excel.ShapeCollection.items
      - excel.Excel.ShapeCollection.load
      - excel.Excel.ShapeCollection.load_1
      - excel.Excel.ShapeCollection.load_2
      - excel.Excel.ShapeCollection.toJSON
  - uid: excel.Excel.ShapeCollection.addGeometricShape
    summary: |-
      <span data-ttu-id="c6e96-103">Adiciona uma forma geométrica à planilha.</span><span class="sxs-lookup"><span data-stu-id="c6e96-103">Adds a geometric shape to the worksheet.</span></span> <span data-ttu-id="c6e96-104">Retorna um objeto Shape que representa a nova forma.</span><span class="sxs-lookup"><span data-stu-id="c6e96-104">Returns a Shape object that represents the new shape.</span></span>

      <span data-ttu-id="c6e96-105">\[[Conjunto de APIs: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c6e96-105">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: addGeometricShape(geometricShapeType)
    fullName: addGeometricShape(geometricShapeType)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addGeometricShape(geometricShapeType: Excel.GeometricShapeType): Excel.Shape;'
      return:
        type:
          - excel.Excel.Shape
        description: |-


          #### <a name="examples"></a><span data-ttu-id="c6e96-106">Exemplos</span><span class="sxs-lookup"><span data-stu-id="c6e96-106">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Shapes");
              const shape = sheet.shapes.addGeometricShape(Excel.GeometricShapeType.hexagon);
              shape.left = 5;
              shape.top = 5;
              shape.height = 175;
              shape.width = 200;
              await context.sync();
          });
          ```
      parameters:
        - id: geometricShapeType
          description: '<span data-ttu-id="c6e96-107">Representa o tipo da forma geométrica.</span><span class="sxs-lookup"><span data-stu-id="c6e96-107">Represents the type of the geometric shape.</span></span> <span data-ttu-id="c6e96-108">Para saber detalhes, confira Excel.GeometricShapeType.</span><span class="sxs-lookup"><span data-stu-id="c6e96-108">See Excel.GeometricShapeType for details.</span></span>'
          type:
            - excel.Excel.GeometricShapeType
  - uid: excel.Excel.ShapeCollection.addGeometricShape_1
    summary: |-
      <span data-ttu-id="c6e96-109">Adiciona uma forma geométrica à planilha.</span><span class="sxs-lookup"><span data-stu-id="c6e96-109">Adds a geometric shape to the worksheet.</span></span> <span data-ttu-id="c6e96-110">Retorna um objeto Shape que representa a nova forma.</span><span class="sxs-lookup"><span data-stu-id="c6e96-110">Returns a Shape object that represents the new shape.</span></span>

      <span data-ttu-id="c6e96-111">\[[Conjunto de APIs: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c6e96-111">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: addGeometricShape(geometricShapeTypeString)
    fullName: addGeometricShape(geometricShapeTypeString)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addGeometricShape(geometricShapeTypeString: "LineInverse" | "Triangle" | "RightTriangle" | "Rectangle" | "Diamond" | "Parallelogram" | "Trapezoid" | "NonIsoscelesTrapezoid" | "Pentagon" | "Hexagon" | "Heptagon" | "Octagon" | "Decagon" | "Dodecagon" | "Star4" | "Star5" | "Star6" | "Star7" | "Star8" | "Star10" | "Star12" | "Star16" | "Star24" | "Star32" | "RoundRectangle" | "Round1Rectangle" | "Round2SameRectangle" | "Round2DiagonalRectangle" | "SnipRoundRectangle" | "Snip1Rectangle" | "Snip2SameRectangle" | "Snip2DiagonalRectangle" | "Plaque" | "Ellipse" | "Teardrop" | "HomePlate" | "Chevron" | "PieWedge" | "Pie" | "BlockArc" | "Donut" | "NoSmoking" | "RightArrow" | "LeftArrow" | "UpArrow" | "DownArrow" | "StripedRightArrow" | "NotchedRightArrow" | "BentUpArrow" | "LeftRightArrow" | "UpDownArrow" | "LeftUpArrow" | "LeftRightUpArrow" | "QuadArrow" | "LeftArrowCallout" | "RightArrowCallout" | "UpArrowCallout" | "DownArrowCallout" | "LeftRightArrowCallout" | "UpDownArrowCallout" | "QuadArrowCallout" | "BentArrow" | "UturnArrow" | "CircularArrow" | "LeftCircularArrow" | "LeftRightCircularArrow" | "CurvedRightArrow" | "CurvedLeftArrow" | "CurvedUpArrow" | "CurvedDownArrow" | "SwooshArrow" | "Cube" | "Can" | "LightningBolt" | "Heart" | "Sun" | "Moon" | "SmileyFace" | "IrregularSeal1" | "IrregularSeal2" | "FoldedCorner" | "Bevel" | "Frame" | "HalfFrame" | "Corner" | "DiagonalStripe" | "Chord" | "Arc" | "LeftBracket" | "RightBracket" | "LeftBrace" | "RightBrace" | "BracketPair" | "BracePair" | "Callout1" | "Callout2" | "Callout3" | "AccentCallout1" | "AccentCallout2" | "AccentCallout3" | "BorderCallout1" | "BorderCallout2" | "BorderCallout3" | "AccentBorderCallout1" | "AccentBorderCallout2" | "AccentBorderCallout3" | "WedgeRectCallout" | "WedgeRRectCallout" | "WedgeEllipseCallout" | "CloudCallout" | "Cloud" | "Ribbon" | "Ribbon2" | "EllipseRibbon" | "EllipseRibbon2" | "LeftRightRibbon" | "VerticalScroll" | "HorizontalScroll" | "Wave" | "DoubleWave" | "Plus" | "FlowChartProcess" | "FlowChartDecision" | "FlowChartInputOutput" | "FlowChartPredefinedProcess" | "FlowChartInternalStorage" | "FlowChartDocument" | "FlowChartMultidocument" | "FlowChartTerminator" | "FlowChartPreparation" | "FlowChartManualInput" | "FlowChartManualOperation" | "FlowChartConnector" | "FlowChartPunchedCard" | "FlowChartPunchedTape" | "FlowChartSummingJunction" | "FlowChartOr" | "FlowChartCollate" | "FlowChartSort" | "FlowChartExtract" | "FlowChartMerge" | "FlowChartOfflineStorage" | "FlowChartOnlineStorage" | "FlowChartMagneticTape" | "FlowChartMagneticDisk" | "FlowChartMagneticDrum" | "FlowChartDisplay" | "FlowChartDelay" | "FlowChartAlternateProcess" | "FlowChartOffpageConnector" | "ActionButtonBlank" | "ActionButtonHome" | "ActionButtonHelp" | "ActionButtonInformation" | "ActionButtonForwardNext" | "ActionButtonBackPrevious" | "ActionButtonEnd" | "ActionButtonBeginning" | "ActionButtonReturn" | "ActionButtonDocument" | "ActionButtonSound" | "ActionButtonMovie" | "Gear6" | "Gear9" | "Funnel" | "MathPlus" | "MathMinus" | "MathMultiply" | "MathDivide" | "MathEqual" | "MathNotEqual" | "CornerTabs" | "SquareTabs" | "PlaqueTabs" | "ChartX" | "ChartStar" | "ChartPlus"): Excel.Shape;'
      return:
        type:
          - excel.Excel.Shape
        description: ''
      parameters:
        - id: geometricShapeTypeString
          description: '<span data-ttu-id="c6e96-112">Representa o tipo da forma geométrica.</span><span class="sxs-lookup"><span data-stu-id="c6e96-112">Represents the type of the geometric shape.</span></span> <span data-ttu-id="c6e96-113">Para saber detalhes, confira Excel.GeometricShapeType.</span><span class="sxs-lookup"><span data-stu-id="c6e96-113">See Excel.GeometricShapeType for details.</span></span>'
          type:
            - '"LineInverse" | "Triangle" | "RightTriangle" | "Rectangle" | "Diamond" | "Parallelogram" | "Trapezoid" | "NonIsoscelesTrapezoid" | "Pentagon" | "Hexagon" | "Heptagon" | "Octagon" | "Decagon" | "Dodecagon" | "Star4" | "Star5" | "Star6" | "Star7" | "Star8" | "Star10" | "Star12" | "Star16" | "Star24" | "Star32" | "RoundRectangle" | "Round1Rectangle" | "Round2SameRectangle" | "Round2DiagonalRectangle" | "SnipRoundRectangle" | "Snip1Rectangle" | "Snip2SameRectangle" | "Snip2DiagonalRectangle" | "Plaque" | "Ellipse" | "Teardrop" | "HomePlate" | "Chevron" | "PieWedge" | "Pie" | "BlockArc" | "Donut" | "NoSmoking" | "RightArrow" | "LeftArrow" | "UpArrow" | "DownArrow" | "StripedRightArrow" | "NotchedRightArrow" | "BentUpArrow" | "LeftRightArrow" | "UpDownArrow" | "LeftUpArrow" | "LeftRightUpArrow" | "QuadArrow" | "LeftArrowCallout" | "RightArrowCallout" | "UpArrowCallout" | "DownArrowCallout" | "LeftRightArrowCallout" | "UpDownArrowCallout" | "QuadArrowCallout" | "BentArrow" | "UturnArrow" | "CircularArrow" | "LeftCircularArrow" | "LeftRightCircularArrow" | "CurvedRightArrow" | "CurvedLeftArrow" | "CurvedUpArrow" | "CurvedDownArrow" | "SwooshArrow" | "Cube" | "Can" | "LightningBolt" | "Heart" | "Sun" | "Moon" | "SmileyFace" | "IrregularSeal1" | "IrregularSeal2" | "FoldedCorner" | "Bevel" | "Frame" | "HalfFrame" | "Corner" | "DiagonalStripe" | "Chord" | "Arc" | "LeftBracket" | "RightBracket" | "LeftBrace" | "RightBrace" | "BracketPair" | "BracePair" | "Callout1" | "Callout2" | "Callout3" | "AccentCallout1" | "AccentCallout2" | "AccentCallout3" | "BorderCallout1" | "BorderCallout2" | "BorderCallout3" | "AccentBorderCallout1" | "AccentBorderCallout2" | "AccentBorderCallout3" | "WedgeRectCallout" | "WedgeRRectCallout" | "WedgeEllipseCallout" | "CloudCallout" | "Cloud" | "Ribbon" | "Ribbon2" | "EllipseRibbon" | "EllipseRibbon2" | "LeftRightRibbon" | "VerticalScroll" | "HorizontalScroll" | "Wave" | "DoubleWave" | "Plus" | "FlowChartProcess" | "FlowChartDecision" | "FlowChartInputOutput" | "FlowChartPredefinedProcess" | "FlowChartInternalStorage" | "FlowChartDocument" | "FlowChartMultidocument" | "FlowChartTerminator" | "FlowChartPreparation" | "FlowChartManualInput" | "FlowChartManualOperation" | "FlowChartConnector" | "FlowChartPunchedCard" | "FlowChartPunchedTape" | "FlowChartSummingJunction" | "FlowChartOr" | "FlowChartCollate" | "FlowChartSort" | "FlowChartExtract" | "FlowChartMerge" | "FlowChartOfflineStorage" | "FlowChartOnlineStorage" | "FlowChartMagneticTape" | "FlowChartMagneticDisk" | "FlowChartMagneticDrum" | "FlowChartDisplay" | "FlowChartDelay" | "FlowChartAlternateProcess" | "FlowChartOffpageConnector" | "ActionButtonBlank" | "ActionButtonHome" | "ActionButtonHelp" | "ActionButtonInformation" | "ActionButtonForwardNext" | "ActionButtonBackPrevious" | "ActionButtonEnd" | "ActionButtonBeginning" | "ActionButtonReturn" | "ActionButtonDocument" | "ActionButtonSound" | "ActionButtonMovie" | "Gear6" | "Gear9" | "Funnel" | "MathPlus" | "MathMinus" | "MathMultiply" | "MathDivide" | "MathEqual" | "MathNotEqual" | "CornerTabs" | "SquareTabs" | "PlaqueTabs" | "ChartX" | "ChartStar" | "ChartPlus"'
  - uid: excel.Excel.ShapeCollection.addGroup
    summary: |-
      <span data-ttu-id="c6e96-114">Um subconjunto de formas na planilha do conjunto de grupos.</span><span class="sxs-lookup"><span data-stu-id="c6e96-114">Groups a subset of shapes in this collection's worksheet.</span></span> <span data-ttu-id="c6e96-115">Retorna um objeto Shape que representa o novo grupo de formas.</span><span class="sxs-lookup"><span data-stu-id="c6e96-115">Returns a Shape object that represents the new group of shapes.</span></span>

      <span data-ttu-id="c6e96-116">\[[Conjunto de APIs: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c6e96-116">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: addGroup(values)
    fullName: addGroup(values)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addGroup(values: Array<string | Shape>): Excel.Shape;'
      return:
        type:
          - excel.Excel.Shape
        description: |-


          #### <a name="examples"></a><span data-ttu-id="c6e96-117">Exemplos</span><span class="sxs-lookup"><span data-stu-id="c6e96-117">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Shapes");
              const square = sheet.shapes.getItem("Square");
              const pentagon = sheet.shapes.getItem("Pentagon");
              const octagon = sheet.shapes.getItem("Octagon");

              const shapeGroup = sheet.shapes.addGroup([square, pentagon, octagon]);
              shapeGroup.name = "Group";
              console.log("Shapes grouped");

              await context.sync();
          });
          ```
      parameters:
        - id: values
          description: <span data-ttu-id="c6e96-118">Uma matriz de ID da forma ou objetos Shape.</span><span class="sxs-lookup"><span data-stu-id="c6e96-118">An array of shape ID or shape objects.</span></span>
          type:
            - Array<string | Shape>
  - uid: excel.Excel.ShapeCollection.addImage
    summary: |-
      <span data-ttu-id="c6e96-119">Cria uma imagem de uma cadeia de caracteres na base 64 e a adiciona à planilha.</span><span class="sxs-lookup"><span data-stu-id="c6e96-119">Creates an image from a base64-encoded string and adds it to the worksheet.</span></span> <span data-ttu-id="c6e96-120">Retorna o objeto Shape que representa a nova imagem.</span><span class="sxs-lookup"><span data-stu-id="c6e96-120">Returns the Shape object that represents the new image.</span></span>

      <span data-ttu-id="c6e96-121">\[[Conjunto de APIs: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c6e96-121">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: addImage(base64ImageString)
    fullName: addImage(base64ImageString)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addImage(base64ImageString: string): Excel.Shape;'
      return:
        type:
          - excel.Excel.Shape
        description: |-


          #### <a name="examples"></a><span data-ttu-id="c6e96-122">Exemplos</span><span class="sxs-lookup"><span data-stu-id="c6e96-122">Examples</span></span>

          ```javascript
          const myFile = <HTMLInputElement>document.getElementById("selectedFile");
          const reader = new FileReader();

          reader.onload = (event) => {
              Excel.run((context) => {
                  const startIndex = (<string>(<FileReader>event.target).result).indexOf("base64,");
                  const mybase64 = (<string>(<FileReader>event.target).result).substr(startIndex + 7);
                  const sheet = context.workbook.worksheets.getItem("Shapes");
                  const image = sheet.shapes.addImage(mybase64);
                  image.name = "Image";
                  return context.sync();
              });
          };

          // Read in the image file as a data URL.
          reader.readAsDataURL(myFile.files[0]);
          ```
      parameters:
        - id: base64ImageString
          description: <span data-ttu-id="c6e96-123">Uma cadeia de caracteres codificada em base64 que representa uma imagem no formato JPEG ou PNG.</span><span class="sxs-lookup"><span data-stu-id="c6e96-123">A base64-encoded string representing an image in either JPEG or PNG format.</span></span>
          type:
            - string
  - uid: excel.Excel.ShapeCollection.addLine
    summary: |-
      <span data-ttu-id="c6e96-124">Adiciona uma linha à planilha.</span><span class="sxs-lookup"><span data-stu-id="c6e96-124">Adds a line to worksheet.</span></span> <span data-ttu-id="c6e96-125">Retorna um objeto Shape que representa a nova linha.</span><span class="sxs-lookup"><span data-stu-id="c6e96-125">Returns a Shape object that represents the new line.</span></span>

      <span data-ttu-id="c6e96-126">\[[Conjunto de APIs: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c6e96-126">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'addLine(startLeft, startTop, endLeft, endTop, connectorType)'
    fullName: 'addLine(startLeft, startTop, endLeft, endTop, connectorType)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addLine(startLeft: number, startTop: number, endLeft: number, endTop: number, connectorType?: Excel.ConnectorType): Excel.Shape;'
      return:
        type:
          - excel.Excel.Shape
        description: |-


          #### <a name="examples"></a><span data-ttu-id="c6e96-127">Exemplos</span><span class="sxs-lookup"><span data-stu-id="c6e96-127">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const shapes = context.workbook.worksheets.getItem("Shapes").shapes;
              const line = shapes.addLine(200, 50, 300, 150, Excel.ConnectorType.straight);
              line.name = "StraightLine";
              await context.sync();
          });
          ```
      parameters:
        - id: startLeft
          description: '<span data-ttu-id="c6e96-128">A distância, em pontos, desde o início da linha até o lado esquerdo da planilha.</span><span class="sxs-lookup"><span data-stu-id="c6e96-128">The distance, in points, from the start of the line to the left side of the worksheet.</span></span>'
          type:
            - number
        - id: startTop
          description: '<span data-ttu-id="c6e96-129">A distância, em pontos, desde o início da linha até a parte superior da planilha.</span><span class="sxs-lookup"><span data-stu-id="c6e96-129">The distance, in points, from the start of the line to the top of the worksheet.</span></span>'
          type:
            - number
        - id: endLeft
          description: '<span data-ttu-id="c6e96-130">A distância, em pontos, do final da linha à esquerda da planilha.</span><span class="sxs-lookup"><span data-stu-id="c6e96-130">The distance, in points, from the end of the line to the left of the worksheet.</span></span>'
          type:
            - number
        - id: endTop
          description: '<span data-ttu-id="c6e96-131">A distância, em pontos, do final da linha até a parte superior da planilha.</span><span class="sxs-lookup"><span data-stu-id="c6e96-131">The distance, in points, from the end of the line to the top of the worksheet.</span></span>'
          type:
            - number
        - id: connectorType
          description: <span data-ttu-id="c6e96-132">Representa o tipo de conector.</span><span class="sxs-lookup"><span data-stu-id="c6e96-132">Represents the connector type.</span></span> <span data-ttu-id="c6e96-133">Confira Excel. ConnectorType para obter detalhes.</span><span class="sxs-lookup"><span data-stu-id="c6e96-133">See Excel.ConnectorType for details.</span></span>
          type:
            - excel.Excel.ConnectorType
  - uid: excel.Excel.ShapeCollection.addLine_1
    summary: |-
      <span data-ttu-id="c6e96-134">Adiciona uma linha à planilha.</span><span class="sxs-lookup"><span data-stu-id="c6e96-134">Adds a line to worksheet.</span></span> <span data-ttu-id="c6e96-135">Retorna um objeto Shape que representa a nova linha.</span><span class="sxs-lookup"><span data-stu-id="c6e96-135">Returns a Shape object that represents the new line.</span></span>

      <span data-ttu-id="c6e96-136">\[[Conjunto de APIs: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c6e96-136">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'addLine(startLeft, startTop, endLeft, endTop, connectorTypeString)'
    fullName: 'addLine(startLeft, startTop, endLeft, endTop, connectorTypeString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addLine(startLeft: number, startTop: number, endLeft: number, endTop: number, connectorTypeString?: "Straight" | "Elbow" | "Curve"): Excel.Shape;'
      return:
        type:
          - excel.Excel.Shape
        description: ''
      parameters:
        - id: startLeft
          description: '<span data-ttu-id="c6e96-137">A distância, em pontos, desde o início da linha até o lado esquerdo da planilha.</span><span class="sxs-lookup"><span data-stu-id="c6e96-137">The distance, in points, from the start of the line to the left side of the worksheet.</span></span>'
          type:
            - number
        - id: startTop
          description: '<span data-ttu-id="c6e96-138">A distância, em pontos, desde o início da linha até a parte superior da planilha.</span><span class="sxs-lookup"><span data-stu-id="c6e96-138">The distance, in points, from the start of the line to the top of the worksheet.</span></span>'
          type:
            - number
        - id: endLeft
          description: '<span data-ttu-id="c6e96-139">A distância, em pontos, do final da linha à esquerda da planilha.</span><span class="sxs-lookup"><span data-stu-id="c6e96-139">The distance, in points, from the end of the line to the left of the worksheet.</span></span>'
          type:
            - number
        - id: endTop
          description: '<span data-ttu-id="c6e96-140">A distância, em pontos, do final da linha até a parte superior da planilha.</span><span class="sxs-lookup"><span data-stu-id="c6e96-140">The distance, in points, from the end of the line to the top of the worksheet.</span></span>'
          type:
            - number
        - id: connectorTypeString
          description: <span data-ttu-id="c6e96-141">Representa o tipo de conector.</span><span class="sxs-lookup"><span data-stu-id="c6e96-141">Represents the connector type.</span></span> <span data-ttu-id="c6e96-142">Confira Excel. ConnectorType para obter detalhes.</span><span class="sxs-lookup"><span data-stu-id="c6e96-142">See Excel.ConnectorType for details.</span></span>
          type:
            - '"Straight" | "Elbow" | "Curve"'
  - uid: excel.Excel.ShapeCollection.addSvg
    summary: |-
      <span data-ttu-id="c6e96-143">Cria um gráfico vetorial escalável (SVG) de uma cadeia de caracteres XML e a adiciona à planilha.</span><span class="sxs-lookup"><span data-stu-id="c6e96-143">Creates a scalable vector graphic (SVG) from an XML string and adds it to the worksheet.</span></span> <span data-ttu-id="c6e96-144">Retorna um objeto Shape que representa a nova imagem.</span><span class="sxs-lookup"><span data-stu-id="c6e96-144">Returns a Shape object that represents the new image.</span></span>

      <span data-ttu-id="c6e96-145">\[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c6e96-145">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: addSvg(xml)
    fullName: addSvg(xml)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addSvg(xml: string): Excel.Shape;'
      return:
        type:
          - excel.Excel.Shape
        description: ''
      parameters:
        - id: xml
          description: <span data-ttu-id="c6e96-146">Uma sequência de caracteres XML que representa o SVG.</span><span class="sxs-lookup"><span data-stu-id="c6e96-146">An XML string that represents the SVG.</span></span>
          type:
            - string
  - uid: excel.Excel.ShapeCollection.addTextBox
    summary: |-
      <span data-ttu-id="c6e96-147">Adiciona uma caixa de texto na planilha com o texto fornecido como conteúdo.</span><span class="sxs-lookup"><span data-stu-id="c6e96-147">Adds a text box to the worksheet with the provided text as the content.</span></span> <span data-ttu-id="c6e96-148">Retorna um objeto Shape que representa a nova caixa de texto.</span><span class="sxs-lookup"><span data-stu-id="c6e96-148">Returns a Shape object that represents the new text box.</span></span>

      <span data-ttu-id="c6e96-149">\[[Conjunto de APIs: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c6e96-149">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: addTextBox(text)
    fullName: addTextBox(text)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addTextBox(text?: string): Excel.Shape;'
      return:
        type:
          - excel.Excel.Shape
        description: |-


          #### <a name="examples"></a><span data-ttu-id="c6e96-150">Exemplos</span><span class="sxs-lookup"><span data-stu-id="c6e96-150">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const shapes = context.workbook.worksheets.getItem("Shapes").shapes;
              const textbox = shapes.addTextBox("A box with text");
              textbox.left = 100;
              textbox.top = 100;
              textbox.height = 20;
              textbox.width = 175;
              textbox.name = "Textbox";
              await context.sync();
          });
          ```
      parameters:
        - id: text
          description: <span data-ttu-id="c6e96-151">Representa o texto que será mostrado na caixa de texto criado.</span><span class="sxs-lookup"><span data-stu-id="c6e96-151">Represents the text that will be shown in the created text box.</span></span>
          type:
            - string
  - uid: excel.Excel.ShapeCollection.context
    summary: <span data-ttu-id="c6e96-152">O contexto de solicitação associado ao objeto.</span><span class="sxs-lookup"><span data-stu-id="c6e96-152">The request context associated with the object.</span></span> <span data-ttu-id="c6e96-153">Isso conecta o processo do suplemento ao processo do aplicativo host do Office.</span><span class="sxs-lookup"><span data-stu-id="c6e96-153">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: excel.Excel.ShapeCollection.getCount
    summary: |-
      <span data-ttu-id="c6e96-154">Retorna o número de formas da planilha.</span><span class="sxs-lookup"><span data-stu-id="c6e96-154">Returns the number of shapes in the worksheet.</span></span> <span data-ttu-id="c6e96-155">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="c6e96-155">Read-only.</span></span>

      <span data-ttu-id="c6e96-156">\[[Conjunto de APIs: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c6e96-156">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - OfficeExtension.ClientResult<number>
        description: ''
  - uid: excel.Excel.ShapeCollection.getItem
    summary: |-
      <span data-ttu-id="c6e96-157">Obtém uma forma usando seu nome ou ID.</span><span class="sxs-lookup"><span data-stu-id="c6e96-157">Gets a shape using its Name or ID.</span></span>

      <span data-ttu-id="c6e96-158">\[[Conjunto de APIs: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c6e96-158">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItem(key)
    fullName: getItem(key)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(key: string): Excel.Shape;'
      return:
        type:
          - excel.Excel.Shape
        description: ''
      parameters:
        - id: key
          description: <span data-ttu-id="c6e96-159">Nome ou ID da forma a ser recuperada.</span><span class="sxs-lookup"><span data-stu-id="c6e96-159">Name or ID of the shape to be retrieved.</span></span>
          type:
            - string
  - uid: excel.Excel.ShapeCollection.getItemAt
    summary: |-
      <span data-ttu-id="c6e96-160">Obtém uma forma usando sua posição na coleção.</span><span class="sxs-lookup"><span data-stu-id="c6e96-160">Gets a shape using its position in the collection.</span></span>

      <span data-ttu-id="c6e96-161">\[[Conjunto de APIs: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c6e96-161">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItemAt(index)
    fullName: getItemAt(index)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemAt(index: number): Excel.Shape;'
      return:
        type:
          - excel.Excel.Shape
        description: ''
      parameters:
        - id: index
          description: <span data-ttu-id="c6e96-162">O índice com base em zero da forma a ser recuperada.</span><span class="sxs-lookup"><span data-stu-id="c6e96-162">The zero-based index of the shape to be retrieved.</span></span>
          type:
            - number
  - uid: excel.Excel.ShapeCollection.items
    summary: <span data-ttu-id="c6e96-163">Obtém os itens filhos carregados nesta coleção.</span><span class="sxs-lookup"><span data-stu-id="c6e96-163">Gets the loaded child items in this collection.</span></span>
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.Shape[];'
      return:
        type:
          - 'Excel.Shape[]'
  - uid: excel.Excel.ShapeCollection.load
    summary: <span data-ttu-id="c6e96-164">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="c6e96-164">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="c6e96-165">Você deve chamar "context.sync()" antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="c6e96-165">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="c6e96-166">Além dessa assinatura, este método tem as seguintes assinaturas:</span><span class="sxs-lookup"><span data-stu-id="c6e96-166">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="c6e96-167">`load(option?: string | string[]): Excel.ShapeCollection`-Where Option é uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="c6e96-167">`load(option?: string | string[]): Excel.ShapeCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="c6e96-168">`load(option?: { select?: string; expand?: string; }): Excel.ShapeCollection`-Onde Option. Select é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades a serem carregadas, e Options. Expand é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades de navegação a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="c6e96-168">`load(option?: { select?: string; expand?: string; }): Excel.ShapeCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="c6e96-169">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ShapeCollection`– Disponível somente nos tipos de coleção.</span><span class="sxs-lookup"><span data-stu-id="c6e96-169">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ShapeCollection` - Only available on collection types.</span></span> <span data-ttu-id="c6e96-170">É semelhante à assinatura anterior.</span><span class="sxs-lookup"><span data-stu-id="c6e96-170">It is similar to the preceding signature.</span></span> <span data-ttu-id="c6e96-171">Option. Top especifica o número máximo de itens de coleta que podem ser incluídos no resultado.</span><span class="sxs-lookup"><span data-stu-id="c6e96-171">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="c6e96-172">Option. Skip especifica o número de itens que devem ser ignorados e não incluídos no resultado.</span><span class="sxs-lookup"><span data-stu-id="c6e96-172">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="c6e96-173">Se Option. Top for especificado, o conjunto de resultados será iniciado depois de ignorar o número de itens especificado.</span><span class="sxs-lookup"><span data-stu-id="c6e96-173">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.ShapeCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.ShapeCollection;'
      return:
        type:
          - excel.Excel.ShapeCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - Excel.Interfaces.ShapeCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
  - uid: excel.Excel.ShapeCollection.load_1
    summary: <span data-ttu-id="c6e96-174">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="c6e96-174">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="c6e96-175">Você deve chamar `context.sync()` antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="c6e96-175">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.ShapeCollection;'
      return:
        type:
          - excel.Excel.ShapeCollection
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="c6e96-176">Uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="c6e96-176">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: excel.Excel.ShapeCollection.load_2
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): Excel.ShapeCollection;'
      return:
        type:
          - excel.Excel.ShapeCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - office.OfficeExtension.LoadOption
  - uid: excel.Excel.ShapeCollection.toJSON
    summary: '<span data-ttu-id="c6e96-177">Substitui o método `toJSON()` JavaScript para fornecer uma saída mais útil quando um objeto API é passado para`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="c6e96-177">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="c6e96-178">.</span><span class="sxs-lookup"><span data-stu-id="c6e96-178"></span></span> <span data-ttu-id="c6e96-179">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="c6e96-179"></span></span><!-- --><span data-ttu-id="c6e96-180">, por sua vez, chama `toJSON` o método do objeto que é passado para ele.) Enquanto o objeto `Excel.ShapeCollection` original é um objeto API, o `toJSON` método retorna um objeto JavaScript simples (digitado como`Excel.Interfaces.ShapeCollectionData`</span><span class="sxs-lookup"><span data-stu-id="c6e96-180">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.ShapeCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ShapeCollectionData`</span></span><!-- --><span data-ttu-id="c6e96-181">) que contém uma matriz de "itens" com cópias superficiais de qualquer propriedade carregada dos itens da coleção.</span><span class="sxs-lookup"><span data-stu-id="c6e96-181">) that contains an "items" array with shallow copies of any loaded properties from the collection''s items.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.ShapeCollectionData;'
      return:
        type:
          - excel.Excel.Interfaces.ShapeCollectionData
        description: ''