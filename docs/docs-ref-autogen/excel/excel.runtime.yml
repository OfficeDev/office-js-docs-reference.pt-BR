### YamlMime:UniversalReference
ms.openlocfilehash: b071627023bc3785cba01289ff25992fc916df39
ms.sourcegitcommit: 9034a7d2fb2934046178915d4305b0f0cf8f7934
ms.translationtype: MT
ms.contentlocale: pt-BR
ms.lasthandoff: 10/26/2018
ms.locfileid: "25798212"
items:
- uid: excel.Excel.Runtime
  summary: >-
    Representa a classe de tempo de execução do Excel.


    \[[Conjunto de APIs: ExcelApi 1,5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: Excel.Runtime
  fullName: excel.Excel.Runtime
  langs:
  - typeScript
  type: class
  extends:
  - OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.Runtime.enableEvents
  - excel.Excel.Runtime.load
  - excel.Excel.Runtime.toJSON
- uid: excel.Excel.Runtime.enableEvents
  summary: >-
    Ativar/desativar eventos JavaScript em taskpane atual ou conteúdo suplemento.


    \[[Conjunto de APIs: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: enableEvents
  fullName: excel.Excel.Runtime.enableEvents
  langs:
  - typeScript
  type: property
  syntax:
    content: 'enableEvents: boolean;'
    return:
      type:
      - boolean
      description: "\n#### <a name=\"examples\"></a>Exemplos\n\n```typescript\nawait Excel.run(async (context) => {\n    context.runtime.load(\"enableEvents\");\n    await context.sync();\n\n    // check if events are enabled and toggle accordingly\n    const eventBoolean = !context.runtime.enableEvents\n    context.runtime.enableEvents = eventBoolean;\n    if (eventBoolean) {\n        console.log(\"Events are currently on.\");\n    } else {\n        console.log(\"Events are currently off.\");\n    }\n    await context.sync();\n});\n```"
- uid: excel.Excel.Runtime.load
  summary: Filas de backup de um comando para carregar as propriedades especificadas do objeto. Você deve chamar "context.sync()" antes de ler as propriedades.
  remarks: >-
    Além dessa assinatura, esse método tem as seguintes assinaturas:


    `load(option?: { select?: string; expand?: string; }): Excel.Runtime`-Onde option.select é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades para carregar e options.expand é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades de navegação para carregar.


    `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Runtime`-Só está disponível em tipos de coleção. Ele é semelhante à assinatura anterior. Option.Top Especifica o número máximo de itens que podem ser incluídos no resultado da coleção. Option.Skip Especifica o número de itens que devem ser ignorados e não são incluídos no resultado. Se option.top for especificado, o conjunto de resultados será iniciado depois de ignorar o número de itens especificado.
  name: load(option)
  fullName: excel.Excel.Runtime.load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Excel.Runtime;'
    return:
      type:
      - excel.Excel.Runtime
      description: ''
    parameters:
    - id: option
      description: Uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades de carga.
      type:
      - string | string[]
- uid: excel.Excel.Runtime.toJSON
  name: toJSON()
  fullName: excel.Excel.Runtime.toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.RuntimeData;'
    return:
      type:
      - excel.Excel.Interfaces.RuntimeData
      description: ''
