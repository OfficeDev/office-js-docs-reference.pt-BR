### YamlMime:UniversalReference
ms.openlocfilehash: a125d56d35ff65d0de1b12f91361965bc2f045f5
ms.sourcegitcommit: 2dcedf6deec4167dca476a42dad411e28cc92a97
ms.translationtype: MT
ms.contentlocale: pt-BR
ms.lasthandoff: 01/23/2019
ms.locfileid: "29385690"
items:
- uid: excel.Excel.ChartCollection
  summary: >-
    <span data-ttu-id="5756d-101">Uma coleção de todos os objetos Chart de uma planilha.</span><span class="sxs-lookup"><span data-stu-id="5756d-101">A collection of all the chart objects on a worksheet.</span></span>


    <span data-ttu-id="5756d-102">\[[Conjunto de APIs: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="5756d-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.ChartCollection
  fullName: Excel.ChartCollection
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.ChartCollection.add
  - excel.Excel.ChartCollection.context
  - excel.Excel.ChartCollection.count
  - excel.Excel.ChartCollection.getCount
  - excel.Excel.ChartCollection.getItem
  - excel.Excel.ChartCollection.getItemAt
  - excel.Excel.ChartCollection.getItemOrNullObject
  - excel.Excel.ChartCollection.items
  - excel.Excel.ChartCollection.load
  - excel.Excel.ChartCollection.onActivated
  - excel.Excel.ChartCollection.onAdded
  - excel.Excel.ChartCollection.onDeactivated
  - excel.Excel.ChartCollection.onDeleted
  - excel.Excel.ChartCollection.toJSON
- uid: excel.Excel.ChartCollection.add
  summary: >-
    <span data-ttu-id="5756d-103">Cria um novo gráfico.</span><span class="sxs-lookup"><span data-stu-id="5756d-103">Creates a new chart.</span></span>


    <span data-ttu-id="5756d-104">\[[Conjunto de APIs: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="5756d-104">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: add(type, sourceData, seriesBy)
  fullName: add
  langs:
  - typeScript
  type: method
  syntax:
    content: 'add(type: Excel.ChartType, sourceData: Range, seriesBy?: Excel.ChartSeriesBy): Excel.Chart;'
    return:
      type:
      - excel.Excel.Chart
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"5756d-105\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"5756d-105\">Examples</span></span>\n\n```javascript\n// Add a chart of chartType \"ColumnClustered\" on worksheet \"Charts\" \n// with sourceData from Range \"A1:B4\" and seriresBy is set to be \"auto\".\nExcel.run(function (ctx) { \n    var rangeSelection = \"A1:B4\";\n    var range = ctx.workbook.worksheets.getItem(sheetName)\n        .getRange(rangeSelection);\n    var chart = ctx.workbook.worksheets.getItem(sheetName)\n        .charts.add(\"ColumnClustered\", range, \"auto\");    return ctx.sync().then(function() {\n            console.log(\"New Chart Added\");\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: type
      description: <span data-ttu-id="5756d-106">Representa o tipo de um gráfico.</span><span class="sxs-lookup"><span data-stu-id="5756d-106">Represents the type of a chart.</span></span> <span data-ttu-id="5756d-107">Consulte Excel.ChartType para obter detalhes.</span><span class="sxs-lookup"><span data-stu-id="5756d-107">See Excel.ChartType for details.</span></span>
      type:
      - excel.Excel.ChartType
    - id: sourceData
      description: <span data-ttu-id="5756d-108">O objeto Range que corresponde aos dados de origem.</span><span class="sxs-lookup"><span data-stu-id="5756d-108">The Range object corresponding to the source data.</span></span>
      type:
      - Range
    - id: seriesBy
      description: <span data-ttu-id="5756d-109">Opcional.</span><span class="sxs-lookup"><span data-stu-id="5756d-109">Optional.</span></span> <span data-ttu-id="5756d-110">Especifica a maneira como colunas ou linhas são usadas como série de dados no gráfico.</span><span class="sxs-lookup"><span data-stu-id="5756d-110">Specifies the way columns or rows are used as data series on the chart.</span></span> <span data-ttu-id="5756d-111">Consulte Excel.ChartSeriesBy para obter detalhes.</span><span class="sxs-lookup"><span data-stu-id="5756d-111">See Excel.ChartSeriesBy for details.</span></span>
      type:
      - excel.Excel.ChartSeriesBy
- uid: excel.Excel.ChartCollection.context
  summary: <span data-ttu-id="5756d-112">O contexto de solicitação associado ao objeto.</span><span class="sxs-lookup"><span data-stu-id="5756d-112">The request context associated with the object.</span></span> <span data-ttu-id="5756d-113">Esse procedimento fará processo do suplemento de processo do aplicativo host do Office.</span><span class="sxs-lookup"><span data-stu-id="5756d-113">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.ChartCollection.count
  summary: >-
    <span data-ttu-id="5756d-p104">Retorna o número de gráficos da planilha. Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="5756d-p104">Returns the number of charts in the worksheet. Read-only.</span></span>


    <span data-ttu-id="5756d-116">\[[Conjunto de APIs: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="5756d-116">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: count
  fullName: count
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly count: number;'
    return:
      type:
      - number
- uid: excel.Excel.ChartCollection.getCount
  summary: >-
    <span data-ttu-id="5756d-117">Retorna o número de gráficos da planilha.</span><span class="sxs-lookup"><span data-stu-id="5756d-117">Returns the number of charts in the worksheet.</span></span>


    <span data-ttu-id="5756d-118">\[[Conjunto de APIs: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="5756d-118">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getCount()
  fullName: getCount
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getCount(): OfficeExtension.ClientResult<number>;'
    return:
      type:
      - OfficeExtension.ClientResult<number>
      description: ''
- uid: excel.Excel.ChartCollection.getItem
  summary: >-
    <span data-ttu-id="5756d-p105">Obtém um gráfico usando o respectivo nome. Quando houver vários gráficos com o mesmo nome, o sistema retornará o primeiro deles.</span><span class="sxs-lookup"><span data-stu-id="5756d-p105">Gets a chart using its name. If there are multiple charts with the same name, the first one will be returned.</span></span>


    <span data-ttu-id="5756d-121">\[[Conjunto de APIs: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="5756d-121">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getItem(name)
  fullName: getItem
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItem(name: string): Excel.Chart;'
    return:
      type:
      - excel.Excel.Chart
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"5756d-122\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"5756d-122\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var chartname = 'Chart1';\n    var chart = ctx.workbook.worksheets.getItem(\"Sheet1\").charts.getItem(chartname);\n    return ctx.sync().then(function() {\n            console.log(chart.height);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\nExcel.run(function (ctx) { \n    var chartId = 'SamplChartId';\n    var chart = ctx.workbook.worksheets.getItem(\"Sheet1\").charts.getItem(chartId);\n    return ctx.sync().then(function() {\n            console.log(chart.height);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\nExcel.run(function (ctx) { \n    var lastPosition = ctx.workbook.worksheets.getItem(\"Sheet1\").charts.count - 1;\n    var chart = ctx.workbook.worksheets.getItem(\"Sheet1\").charts.getItemAt(lastPosition);\n    return ctx.sync().then(function() {\n            console.log(chart.name);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: name
      description: <span data-ttu-id="5756d-123">Nome do gráfico a recuperar.</span><span class="sxs-lookup"><span data-stu-id="5756d-123">Name of the chart to be retrieved.</span></span>
      type:
      - string
- uid: excel.Excel.ChartCollection.getItemAt
  summary: >-
    <span data-ttu-id="5756d-124">Obtém um gráfico com base em sua posição na coleção.</span><span class="sxs-lookup"><span data-stu-id="5756d-124">Gets a chart based on its position in the collection.</span></span>


    <span data-ttu-id="5756d-125">\[[Conjunto de APIs: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="5756d-125">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getItemAt(index)
  fullName: getItemAt
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItemAt(index: number): Excel.Chart;'
    return:
      type:
      - excel.Excel.Chart
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"5756d-126\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"5756d-126\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var lastPosition = ctx.workbook.worksheets.getItem(\"Sheet1\").charts.count - 1;\n    var chart = ctx.workbook.worksheets.getItem(\"Sheet1\").charts.getItemAt(lastPosition);\n    return ctx.sync().then(function() {\n            console.log(chart.name);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: index
      description: <span data-ttu-id="5756d-p106">Valor de índice do objeto a ser recuperado. Indexados com zero.</span><span class="sxs-lookup"><span data-stu-id="5756d-p106">Index value of the object to be retrieved. Zero-indexed.</span></span>
      type:
      - number
- uid: excel.Excel.ChartCollection.getItemOrNullObject
  summary: >-
    <span data-ttu-id="5756d-129">Obtém um gráfico usando o seu nome.</span><span class="sxs-lookup"><span data-stu-id="5756d-129">Gets a chart using its name.</span></span> <span data-ttu-id="5756d-130">Se houver vários gráficos com o mesmo nome, primeiro será retornado.</span><span class="sxs-lookup"><span data-stu-id="5756d-130">If there are multiple charts with the same name, the first one will be returned.</span></span> <span data-ttu-id="5756d-131">Se o gráfico não existir, retornará um objeto nulo.</span><span class="sxs-lookup"><span data-stu-id="5756d-131">If the chart does not exist, will return a null object.</span></span>


    <span data-ttu-id="5756d-132">\[[Conjunto de APIs: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="5756d-132">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getItemOrNullObject(name)
  fullName: getItemOrNullObject
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItemOrNullObject(name: string): Excel.Chart;'
    return:
      type:
      - excel.Excel.Chart
      description: ''
    parameters:
    - id: name
      description: <span data-ttu-id="5756d-133">Nome do gráfico a recuperar.</span><span class="sxs-lookup"><span data-stu-id="5756d-133">Name of the chart to be retrieved.</span></span>
      type:
      - string
- uid: excel.Excel.ChartCollection.items
  summary: <span data-ttu-id="5756d-134">Obtém o filho carregado itens nesta coleção.</span><span class="sxs-lookup"><span data-stu-id="5756d-134">Gets the loaded child items in this collection.</span></span>
  name: items
  fullName: items
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly items: Excel.Chart[];'
    return:
      type:
      - Excel.Chart[]
- uid: excel.Excel.ChartCollection.load
  summary: <span data-ttu-id="5756d-135">Filas de backup de um comando para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="5756d-135">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="5756d-136">Você deve chamar "context.sync()" antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="5756d-136">You must call "context.sync()" before reading the properties.</span></span>
  remarks: "<span data-ttu-id=\"5756d-137\">Além dessa assinatura, esse método tem as seguintes assinaturas:</span><span class=\"sxs-lookup\"><span data-stu-id=\"5756d-137\">In addition to this signature, this method has the following signatures:</span></span>\n\n<span data-ttu-id=\"5756d-138\">`load(option?: { select?: string; expand?: string; }): Excel.ChartCollection`-Onde option.select é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades para carregar e options.expand é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades de navegação para carregar.</span><span class=\"sxs-lookup\"><span data-stu-id=\"5756d-138\">`load(option?: { select?: string; expand?: string; }): Excel.ChartCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>\n\n<span data-ttu-id=\"5756d-139\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ChartCollection`-Só está disponível em tipos de coleção.</span><span class=\"sxs-lookup\"><span data-stu-id=\"5756d-139\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ChartCollection` - Only available on collection types.</span></span> <span data-ttu-id=\"5756d-140\">Ele é semelhante à assinatura anterior.</span><span class=\"sxs-lookup\"><span data-stu-id=\"5756d-140\">It is similar to the preceding signature.</span></span> <span data-ttu-id=\"5756d-141\">Option.Top Especifica o número máximo de itens que podem ser incluídos no resultado da coleção.</span><span class=\"sxs-lookup\"><span data-stu-id=\"5756d-141\">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id=\"5756d-142\">Option.Skip Especifica o número de itens que devem ser ignorados e não são incluídos no resultado.</span><span class=\"sxs-lookup\"><span data-stu-id=\"5756d-142\">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id=\"5756d-143\">Se option.top for especificado, o conjunto de resultados será iniciado depois de ignorar o número de itens especificado.</span><span class=\"sxs-lookup\"><span data-stu-id=\"5756d-143\">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>\n#### <a name=\"examples\"></a><span data-ttu-id=\"5756d-144\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"5756d-144\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var charts = ctx.workbook.worksheets.getItem(\"Sheet1\").charts;\n    charts.load('items');\n    return ctx.sync().then(function() {\n        for (var i = 0; i < charts.items.length; i++)\n        {\n            console.log(charts.items[i].name);\n        }\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\n// Get the number of charts\nExcel.run(function (ctx) { \n    var charts = ctx.workbook.worksheets.getItem(\"Sheet1\").charts;\n    charts.load('count');\n    return ctx.sync().then(function() {\n        console.log(\"charts: Count= \" + charts.count);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
  name: load(option)
  fullName: load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Excel.ChartCollection;'
    return:
      type:
      - excel.Excel.ChartCollection
      description: ''
    parameters:
    - id: option
      description: <span data-ttu-id="5756d-145">Uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades de carga.</span><span class="sxs-lookup"><span data-stu-id="5756d-145">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.ChartCollection.onActivated
  summary: >-
    <span data-ttu-id="5756d-146">Ocorre quando um gráfico é ativado.</span><span class="sxs-lookup"><span data-stu-id="5756d-146">Occurs when a chart is activated.</span></span>


    <span data-ttu-id="5756d-147">\[[Conjunto de APIs: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="5756d-147">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: onActivated
  fullName: onActivated
  langs:
  - typeScript
  type: event
  syntax:
    content: 'readonly onActivated: OfficeExtension.EventHandlers<Excel.ChartActivatedEventArgs>;'
    return:
      type:
      - OfficeExtension.EventHandlers<Excel.ChartActivatedEventArgs>
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"5756d-148\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"5756d-148\">Examples</span></span>\n\n```javascript\nExcel.run(function (context){\n    context.workbook.worksheets.getActiveWorksheet()\n        .charts.onActivated.add(function (event) {\n        return Excel.run((context) => {\n            console.log(\"The ID of the active chart is: \" + event.chartId)\n            return context.sync();\n        });\n    });\n    return context.sync();\n});\n```"
- uid: excel.Excel.ChartCollection.onAdded
  summary: >-
    <span data-ttu-id="5756d-149">Ocorre quando um novo gráfico é adicionado à planilha.</span><span class="sxs-lookup"><span data-stu-id="5756d-149">Occurs when a new chart is added to the worksheet.</span></span>


    <span data-ttu-id="5756d-150">\[[Conjunto de APIs: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="5756d-150">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: onAdded
  fullName: onAdded
  langs:
  - typeScript
  type: event
  syntax:
    content: 'readonly onAdded: OfficeExtension.EventHandlers<Excel.ChartAddedEventArgs>;'
    return:
      type:
      - OfficeExtension.EventHandlers<Excel.ChartAddedEventArgs>
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"5756d-151\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"5756d-151\">Examples</span></span>\n\n```javascript\nExcel.run(function (context){\n    context.workbook.worksheets.getActiveWorksheet()\n        .charts.onAdded.add(function (event) {\n        return Excel.run((context) => {\n            console.log(\"A chart has been added with ID: \" + event.chartId);\n            return context.sync();\n        });\n    });\n    return context.sync();\n});\n```"
- uid: excel.Excel.ChartCollection.onDeactivated
  summary: >-
    <span data-ttu-id="5756d-152">Ocorre quando um gráfico é desativado.</span><span class="sxs-lookup"><span data-stu-id="5756d-152">Occurs when a chart is deactivated.</span></span>


    <span data-ttu-id="5756d-153">\[[Conjunto de APIs: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="5756d-153">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: onDeactivated
  fullName: onDeactivated
  langs:
  - typeScript
  type: event
  syntax:
    content: 'readonly onDeactivated: OfficeExtension.EventHandlers<Excel.ChartDeactivatedEventArgs>;'
    return:
      type:
      - OfficeExtension.EventHandlers<Excel.ChartDeactivatedEventArgs>
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"5756d-154\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"5756d-154\">Examples</span></span>\n\n```javascript\nExcel.run(function (context){\n    context.workbook.worksheets.getActiveWorksheet()\n        .charts.onDeactivated.add(function (event) {\n        return Excel.run((context) => {\n            console.log(\"The chart with this ID was deactivated: \" + event.chartId);\n            return context.sync();\n        });\n    });\n    return context.sync();\n});\n```"
- uid: excel.Excel.ChartCollection.onDeleted
  summary: >-
    <span data-ttu-id="5756d-155">Ocorre quando um gráfico é excluído.</span><span class="sxs-lookup"><span data-stu-id="5756d-155">Occurs when a chart is deleted.</span></span>


    <span data-ttu-id="5756d-156">\[[Conjunto de APIs: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="5756d-156">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: onDeleted
  fullName: onDeleted
  langs:
  - typeScript
  type: event
  syntax:
    content: 'readonly onDeleted: OfficeExtension.EventHandlers<Excel.ChartDeletedEventArgs>;'
    return:
      type:
      - OfficeExtension.EventHandlers<Excel.ChartDeletedEventArgs>
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"5756d-157\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"5756d-157\">Examples</span></span>\n\n```javascript\nExcel.run(function (context){\n    context.workbook.worksheets.getActiveWorksheet()\n        .charts.onDeleted.add(function (event) {\n        return Excel.run((context) => {\n            console.log(\"The chart with this ID was deleted: \" + event.chartId);\n            return context.sync();\n        });\n    });\n    return context.sync();\n});\n```"
- uid: excel.Excel.ChartCollection.toJSON
  summary: <span data-ttu-id="5756d-158">Substitui o JavaScript `toJSON()` método para fornecer a saída mais úteis quando um objeto API é passado para `JSON.stringify()` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="5756d-158">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="5756d-159">(`JSON.stringify`<!-- -->, em seguida, chama o `toJSON` método do objeto que é passado para ele.) Enquanto o original `Excel.ChartCollection` é um objeto de API, o `toJSON` método retorna um objeto de JavaScript sem formatação (digitado como `Excel.Interfaces.ChartCollectionData` <!-- -->) que contém uma matriz de "itens" com superficiais cópias de todas as propriedades de itens da coleção carregadas.</span><span class="sxs-lookup"><span data-stu-id="5756d-159">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.ChartCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ChartCollectionData`<!-- -->) that contains an "items" array with shallow copies of any loaded properties from the collection's items.</span></span>
  name: toJSON()
  fullName: toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.ChartCollectionData;'
    return:
      type:
      - excel.Excel.Interfaces.ChartCollectionData
      description: ''
