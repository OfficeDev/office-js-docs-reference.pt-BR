### YamlMime:UniversalReference
items:
  - uid: excel.Excel.TableSort
    summary: |-
      Gerencia operações de classificação em objetos Table.

      \[[Conjunto de APIs: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: Excel.TableSort
    fullName: Excel.TableSort
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: excel
    children:
      - excel.Excel.TableSort.apply
      - excel.Excel.TableSort.apply_1
      - excel.Excel.TableSort.clear
      - excel.Excel.TableSort.context
      - excel.Excel.TableSort.fields
      - excel.Excel.TableSort.load
      - excel.Excel.TableSort.load_1
      - excel.Excel.TableSort.load_2
      - excel.Excel.TableSort.matchCase
      - excel.Excel.TableSort.method
      - excel.Excel.TableSort.reapply
      - excel.Excel.TableSort.toJSON
  - uid: excel.Excel.TableSort.apply
    summary: |-
      Executa uma operação de classificação.

      \[[Conjunto de APIs: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: 'apply(fields, matchCase, method)'
    fullName: 'apply(fields, matchCase, method)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'apply(fields: Excel.SortField[], matchCase?: boolean, method?: Excel.SortMethod): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a>Exemplos

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var table = ctx.workbook.tables.getItem(tableName);
              table.sort.apply([ 
                      {
                          key: 2,
                          ascending: true
                      },
                  ], true);
              return ctx.sync(); 
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: fields
          description: A lista de condições para a classificação.
          type:
            - 'Excel.SortField[]'
        - id: matchCase
          description: Opcional. Define se o uso de maiúsculas ou minúsculas afeta a ordenação da cadeia de caracteres.
          type:
            - boolean
        - id: method
          description: Opcional. O método de ordenação usado pelos caracteres chineses.
          type:
            - excel.Excel.SortMethod
  - uid: excel.Excel.TableSort.apply_1
    summary: |-
      Executa uma operação de classificação.

      \[[Conjunto de APIs: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: 'apply(fields, matchCase, methodString)'
    fullName: 'apply(fields, matchCase, methodString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'apply(fields: Excel.SortField[], matchCase?: boolean, methodString?: "PinYin" | "StrokeCount"): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: fields
          description: A lista de condições para a classificação.
          type:
            - 'Excel.SortField[]'
        - id: matchCase
          description: Opcional. Define se o uso de maiúsculas ou minúsculas afeta a ordenação da cadeia de caracteres.
          type:
            - boolean
        - id: methodString
          description: Opcional. O método de ordenação usado pelos caracteres chineses.
          type:
            - '"PinYin" | "StrokeCount"'
  - uid: excel.Excel.TableSort.clear
    summary: |-
      Limpa a classificação que está na tabela. Essa ação não modifica a ordenação da tabela, mas limpa o estado dos botões do cabeçalho.

      \[[Conjunto de APIs: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: clear()
    fullName: clear()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clear(): void;'
      return:
        type:
          - void
        description: ''
  - uid: excel.Excel.TableSort.context
    summary: O contexto de solicitação associado ao objeto. Isso conecta o processo do suplemento ao processo do aplicativo host do Office.
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: excel.Excel.TableSort.fields
    summary: |-
      Representa as condições atuais usadas para a última classificação da tabela. Somente leitura.

      \[[Conjunto de APIs: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: fields
    fullName: fields
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly fields: Excel.SortField[];'
      return:
        type:
          - 'Excel.SortField[]'
  - uid: excel.Excel.TableSort.load
    summary: Coloca um comando na fila para carregar as propriedades especificadas do objeto. Você deve chamar "context.sync()" antes de ler as propriedades.
    remarks: |-
      Além dessa assinatura, este método tem as seguintes assinaturas:

      `load(option?: string | string[]): Excel.TableSort`-Where Option é uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.

      `load(option?: { select?: string; expand?: string; }): Excel.TableSort`-Onde Option. Select é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades a serem carregadas, e Options. Expand é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades de navegação a serem carregadas.

      `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TableSort`– Disponível somente nos tipos de coleção. É semelhante à assinatura anterior. Option. Top especifica o número máximo de itens de coleta que podem ser incluídos no resultado. Option. Skip especifica o número de itens que devem ser ignorados e não incluídos no resultado. Se Option. Top for especificado, o conjunto de resultados será iniciado depois de ignorar o número de itens especificado.
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.TableSortLoadOptions): Excel.TableSort;'
      return:
        type:
          - excel.Excel.TableSort
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.TableSortLoadOptions
  - uid: excel.Excel.TableSort.load_1
    summary: Coloca um comando na fila para carregar as propriedades especificadas do objeto. Você deve chamar `context.sync()` antes de ler as propriedades.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.TableSort;'
      return:
        type:
          - excel.Excel.TableSort
        description: ''
      parameters:
        - id: propertyNames
          description: Uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.
          type:
            - 'string | string[]'
  - uid: excel.Excel.TableSort.load_2
    summary: Coloca um comando na fila para carregar as propriedades especificadas do objeto. Você deve chamar `context.sync()` antes de ler as propriedades.
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.TableSort;'
      return:
        type:
          - excel.Excel.TableSort
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: Onde propertyNamesAndPaths. Select é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades a serem carregadas e propertyNamesAndPaths. Expand é uma sequência de caracteres delimitada por vírgula que especifica as propriedades de navegação a serem carregadas.
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel.Excel.TableSort.matchCase
    summary: |-
      Indica se o uso de maiúsculas ou minúsculas afetou a última classificação da tabela. Somente leitura.

      \[[Conjunto de APIs: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: matchCase
    fullName: matchCase
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly matchCase: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.TableSort.method
    summary: |-
      Indica o último método de ordenação de caracteres chineses usado para classificar a tabela. Somente leitura.

      \[[Conjunto de APIs: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: method
    fullName: method
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly method: Excel.SortMethod | "PinYin" | "StrokeCount";'
      return:
        type:
          - Excel.SortMethod | "PinYin" | "StrokeCount"
  - uid: excel.Excel.TableSort.reapply
    summary: |-
      Reaplica os parâmetros de classificação atuais à tabela.

      \[[Conjunto de APIs: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: reapply()
    fullName: reapply()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'reapply(): void;'
      return:
        type:
          - void
        description: ''
  - uid: excel.Excel.TableSort.toJSON
    summary: 'Substitui o método `toJSON()` JavaScript para fornecer uma saída mais útil quando um objeto API é passado para`JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, por sua vez, chama `toJSON` o método do objeto que é passado para ele.) Enquanto o objeto Excel. TableSort original é um objeto API, o `toJSON` método retorna um objeto JavaScript simples (digitado como`Excel.Interfaces.TableSortData`<!-- -->) que contém cópias superficiais de qualquer propriedade filho carregada do objeto original.'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.TableSortData;'
      return:
        type:
          - excel.Excel.Interfaces.TableSortData
        description: ''