### YamlMime:UniversalReference
ms.openlocfilehash: 64491690095523f7db11cc327215b588cf34fb7c
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: pt-BR
ms.lasthandoff: 02/20/2019
ms.locfileid: "30111345"
items:
- uid: excel.Excel.RangeAreas
  summary: >-
    RangeAreas representa uma coleção de um ou mais intervalos retangulares na mesma planilha.


    \[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: Excel.RangeAreas
  fullName: Excel.RangeAreas
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.RangeAreas.address
  - excel.Excel.RangeAreas.addressLocal
  - excel.Excel.RangeAreas.areaCount
  - excel.Excel.RangeAreas.areas
  - excel.Excel.RangeAreas.calculate
  - excel.Excel.RangeAreas.cellCount
  - excel.Excel.RangeAreas.clear
  - excel.Excel.RangeAreas.clear_1
  - excel.Excel.RangeAreas.conditionalFormats
  - excel.Excel.RangeAreas.context
  - excel.Excel.RangeAreas.convertDataTypeToText
  - excel.Excel.RangeAreas.convertToLinkedDataType
  - excel.Excel.RangeAreas.copyFrom
  - excel.Excel.RangeAreas.copyFrom_1
  - excel.Excel.RangeAreas.dataValidation
  - excel.Excel.RangeAreas.format
  - excel.Excel.RangeAreas.getEntireColumn
  - excel.Excel.RangeAreas.getEntireRow
  - excel.Excel.RangeAreas.getIntersection
  - excel.Excel.RangeAreas.getIntersectionOrNullObject
  - excel.Excel.RangeAreas.getOffsetRangeAreas
  - excel.Excel.RangeAreas.getSpecialCells
  - excel.Excel.RangeAreas.getSpecialCells_1
  - excel.Excel.RangeAreas.getSpecialCellsOrNullObject
  - excel.Excel.RangeAreas.getSpecialCellsOrNullObject_1
  - excel.Excel.RangeAreas.getTables
  - excel.Excel.RangeAreas.getUsedRangeAreas
  - excel.Excel.RangeAreas.getUsedRangeAreasOrNullObject
  - excel.Excel.RangeAreas.isEntireColumn
  - excel.Excel.RangeAreas.isEntireRow
  - excel.Excel.RangeAreas.load
  - excel.Excel.RangeAreas.load_1
  - excel.Excel.RangeAreas.load_2
  - excel.Excel.RangeAreas.set
  - excel.Excel.RangeAreas.set_1
  - excel.Excel.RangeAreas.setDirty
  - excel.Excel.RangeAreas.style
  - excel.Excel.RangeAreas.toJSON
  - excel.Excel.RangeAreas.track
  - excel.Excel.RangeAreas.untrack
  - excel.Excel.RangeAreas.worksheet
- uid: excel.Excel.RangeAreas.address
  summary: >-
    Retorna a referência RageAreas em estilo a1. O valor de endereço conterá o nome da planilha para cada bloco retangular de células (por exemplo, "Planilha1! A1: B4, Planilha1! D1: D4 "). Somente leitura.


    \[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: address
  fullName: address
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly address: string;'
    return:
      type:
      - string
- uid: excel.Excel.RangeAreas.addressLocal
  summary: >-
    Retorna a referência RageAreas na localidade do usuário. Somente leitura.


    \[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: addressLocal
  fullName: addressLocal
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly addressLocal: string;'
    return:
      type:
      - string
- uid: excel.Excel.RangeAreas.areaCount
  summary: >-
    Retorna o número de intervalos retangulares que compõem este objeto RangeAreas.


    \[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: areaCount
  fullName: areaCount
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly areaCount: number;'
    return:
      type:
      - number
- uid: excel.Excel.RangeAreas.areas
  summary: >-
    Retorna uma coleção de intervalos retangulares que compõem este objeto RangeAreas.


    \[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: areas
  fullName: areas
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly areas: Excel.RangeCollection;'
    return:
      type:
      - excel.Excel.RangeCollection
- uid: excel.Excel.RangeAreas.calculate
  summary: >-
    Calcula todas as células no RangeAreas.


    \[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: calculate()
  fullName: calculate()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'calculate(): void;'
    return:
      type:
      - void
      description: ''
- uid: excel.Excel.RangeAreas.cellCount
  summary: >-
    Retorna o número de células no objeto RangeAreas, somando as contagens de células de todos os intervalos retangulares individuais. Retorna-1 se a contagem de células excede 2 ^ 31-1 (2.147.483.647). Somente leitura.


    \[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: cellCount
  fullName: cellCount
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly cellCount: number;'
    return:
      type:
      - number
- uid: excel.Excel.RangeAreas.clear
  summary: >-
    Limpa valores, formato, preenchimento, borda, etc em cada uma das áreas que compõem este objeto RangeAreas.


    \[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: clear(applyTo)
  fullName: clear(applyTo)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'clear(applyTo?: Excel.ClearApplyTo): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: applyTo
      description: Opcional. Determina o tipo de ação de limpeza. Consulte Excel. ClearApplyTo para obter detalhes. O padrão é "All".
      type:
      - excel.Excel.ClearApplyTo
- uid: excel.Excel.RangeAreas.clear_1
  summary: >-
    Limpa valores, formato, preenchimento, borda, etc em cada uma das áreas que compõem este objeto RangeAreas.


    \[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: clear(applyToString)
  fullName: clear(applyToString)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'clear(applyToString?: "All" | "Formats" | "Contents" | "Hyperlinks" | "RemoveHyperlinks"): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: applyToString
      description: Opcional. Determina o tipo de ação de limpeza. Consulte Excel. ClearApplyTo para obter detalhes. O padrão é "All".
      type:
      - "\"All\" | \"Formats\" | \"Contents\" | \"Hyperlinks\" | \"RemoveHyperlinks\""
- uid: excel.Excel.RangeAreas.conditionalFormats
  summary: >-
    Retorna uma coleção de ConditionalFormats que fazem interseção com qualquer célula neste objeto RangeAreas. Somente leitura.


    \[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: conditionalFormats
  fullName: conditionalFormats
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly conditionalFormats: Excel.ConditionalFormatCollection;'
    return:
      type:
      - excel.Excel.ConditionalFormatCollection
- uid: excel.Excel.RangeAreas.context
  summary: O contexto de solicitação associado ao objeto. Isso conecta o processo do suplemento ao processo do aplicativo host do Office.
  isPreview: true
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.RangeAreas.convertDataTypeToText
  summary: >-
    Converte todas as células no RangeAreas com tipos de texto em texto.


    \[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: convertDataTypeToText()
  fullName: convertDataTypeToText()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'convertDataTypeToText(): void;'
    return:
      type:
      - void
      description: ''
- uid: excel.Excel.RangeAreas.convertToLinkedDataType
  summary: >-
    Converte todas as células no RangeAreas em um tipo de dados vinculado.


    \[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: convertToLinkedDataType(serviceID, languageCulture)
  fullName: convertToLinkedDataType(serviceID, languageCulture)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'convertToLinkedDataType(serviceID: number, languageCulture: string): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: serviceID
      description: A ID de serviço que será usada para consultar os dados.
      type:
      - number
    - id: languageCulture
      description: Cultura de idioma para consultar o serviço.
      type:
      - string
- uid: excel.Excel.RangeAreas.copyFrom
  summary: >-
    Copia dados da célula ou formatação do intervalo de origem ou RangeAreas para o RangeAreas atual. O rangeAreas de destino pode ser de tamanho diferente do intervalo de origem ou RangeAreas. O destino será expandido automaticamente se for menor do que a origem.


    \[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: copyFrom(sourceRange, copyType, skipBlanks, transpose)
  fullName: copyFrom(sourceRange, copyType, skipBlanks, transpose)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'copyFrom(sourceRange: Range | RangeAreas | string, copyType?: Excel.RangeCopyType, skipBlanks?: boolean, transpose?: boolean): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: sourceRange
      description: O intervalo de origem ou RangeAreas a ser copiado. Quando o RangeAreas de origem tem vários intervalos, ele deve estar no formulário de estrutura de tópicos que pode ser criado removendo linhas ou colunas completas de um intervalo retangular.
      type:
      - Range | RangeAreas | string
    - id: copyType
      description: O tipo de dados da célula ou formatação a ser copiada. O padrão é "All".
      type:
      - excel.Excel.RangeCopyType
    - id: skipBlanks
      description: True se para ignorar células em branco no intervalo de origem ou RangeAreas. O padrão é false.
      type:
      - boolean
    - id: transpose
      description: True se para transpor as células no RangeAreas de destino. O padrão é false.
      type:
      - boolean
- uid: excel.Excel.RangeAreas.copyFrom_1
  summary: >-
    Copia dados da célula ou formatação do intervalo de origem ou RangeAreas para o RangeAreas atual. O rangeAreas de destino pode ser de tamanho diferente do intervalo de origem ou RangeAreas. O destino será expandido automaticamente se for menor do que a origem.


    \[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: copyFrom(sourceRange, copyTypeString, skipBlanks, transpose)
  fullName: copyFrom(sourceRange, copyTypeString, skipBlanks, transpose)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'copyFrom(sourceRange: Range | RangeAreas | string, copyTypeString?: "All" | "Formulas" | "Values" | "Formats", skipBlanks?: boolean, transpose?: boolean): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: sourceRange
      description: O intervalo de origem ou RangeAreas a ser copiado. Quando o RangeAreas de origem tem vários intervalos, ele deve estar no formulário de estrutura de tópicos que pode ser criado removendo linhas ou colunas completas de um intervalo retangular.
      type:
      - Range | RangeAreas | string
    - id: copyTypeString
      description: O tipo de dados da célula ou formatação a ser copiada. O padrão é "All".
      type:
      - "\"All\" | \"Formulas\" | \"Values\" | \"Formats\""
    - id: skipBlanks
      description: True se para ignorar células em branco no intervalo de origem ou RangeAreas. O padrão é false.
      type:
      - boolean
    - id: transpose
      description: True se para transpor as células no RangeAreas de destino. O padrão é false.
      type:
      - boolean
- uid: excel.Excel.RangeAreas.dataValidation
  summary: >-
    Retorna um objeto dataValidation para todos os intervalos no RangeAreas.


    \[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: dataValidation
  fullName: dataValidation
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly dataValidation: Excel.DataValidation;'
    return:
      type:
      - excel.Excel.DataValidation
- uid: excel.Excel.RangeAreas.format
  summary: >-
    Retorna um objeto rangeFormat, encapsulando a fonte, o preenchimento, as bordas, o alinhamento e outras propriedades para todos os intervalos no objeto RangeAreas. Somente leitura.


    \[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: format
  fullName: format
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly format: Excel.RangeFormat;'
    return:
      type:
      - excel.Excel.RangeFormat
- uid: excel.Excel.RangeAreas.getEntireColumn
  summary: >-
    Retorna um objeto RangeAreas que representa as colunas inteiras do RangeAreas (por exemplo, se o RangeAreas atual representa as células "B4: E11, S2", ele retorna um RangeAreas que representa as colunas "B:E, H:H").


    \[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: getEntireColumn()
  fullName: getEntireColumn()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getEntireColumn(): Excel.RangeAreas;'
    return:
      type:
      - excel.Excel.RangeAreas
      description: ''
- uid: excel.Excel.RangeAreas.getEntireRow
  summary: >-
    Retorna um objeto RangeAreas que representa as linhas inteiras do RangeAreas (por exemplo, se o RangeAreas atual representa as células "B4: E11", ele retorna um RangeAreas que representa as linhas "4:11").


    \[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: getEntireRow()
  fullName: getEntireRow()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getEntireRow(): Excel.RangeAreas;'
    return:
      type:
      - excel.Excel.RangeAreas
      description: ''
- uid: excel.Excel.RangeAreas.getIntersection
  summary: >-
    Retorna o objeto RangeAreas que representa a interseção de determinados intervalos ou RangeAreas. Se nenhuma interseção for encontrada, um erro ItemNotFound será lançado.


    \[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: getIntersection(anotherRange)
  fullName: getIntersection(anotherRange)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getIntersection(anotherRange: Range | RangeAreas | string): Excel.RangeAreas;'
    return:
      type:
      - excel.Excel.RangeAreas
      description: ''
    parameters:
    - id: anotherRange
      description: O intervalo, o objeto RangeAreas ou o endereço do intervalo que será usado para determinar a interseção.
      type:
      - Range | RangeAreas | string
- uid: excel.Excel.RangeAreas.getIntersectionOrNullObject
  summary: >-
    Retorna o objeto RangeAreas que representa a interseção de determinados intervalos ou RangeAreas. Se nenhuma interseção for encontrada, um objeto NULL será retornado.


    \[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: getIntersectionOrNullObject(anotherRange)
  fullName: getIntersectionOrNullObject(anotherRange)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getIntersectionOrNullObject(anotherRange: Range | RangeAreas | string): Excel.RangeAreas;'
    return:
      type:
      - excel.Excel.RangeAreas
      description: ''
    parameters:
    - id: anotherRange
      description: O intervalo, RangeAreas ou endereço que será usado para determinar a interseção.
      type:
      - Range | RangeAreas | string
- uid: excel.Excel.RangeAreas.getOffsetRangeAreas
  summary: >-
    Retorna um objeto RangeAreas que é deslocado pelo deslocamento de linha e coluna específico. A dimensão do RangeAreas retornado corresponderá ao objeto original. Se o RangeAreas resultante for forçado fora dos limites da grade da planilha, um erro será gerado.


    \[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: getOffsetRangeAreas(rowOffset, columnOffset)
  fullName: getOffsetRangeAreas(rowOffset, columnOffset)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getOffsetRangeAreas(rowOffset: number, columnOffset: number): Excel.RangeAreas;'
    return:
      type:
      - excel.Excel.RangeAreas
      description: ''
    parameters:
    - id: rowOffset
      description: O número de linhas (positivo, negativo ou 0) pelo qual o RangeAreas deve ser deslocado. Valores positivos estão deslocados para baixo, e os valores negativos para cima.
      type:
      - number
    - id: columnOffset
      description: O número de colunas (positivo, negativo ou 0) pelo qual o RangeAreas deve ser deslocado. Valores positivos estão deslocados para a direita, e os valores negativos para a esquerda.
      type:
      - number
- uid: excel.Excel.RangeAreas.getSpecialCells
  summary: >-
    Retorna um objeto RangeAreas que representa todas as células que correspondem ao tipo e ao valor especificado. Gera um erro se não for encontrada nenhuma célula especial que corresponda aos critérios.


    \[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: getSpecialCells(cellType, cellValueType)
  fullName: getSpecialCells(cellType, cellValueType)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getSpecialCells(cellType: Excel.SpecialCellType, cellValueType?: Excel.SpecialCellValueType): Excel.RangeAreas;'
    return:
      type:
      - excel.Excel.RangeAreas
      description: ''
    parameters:
    - id: cellType
      description: O tipo de células a serem incluídas.
      type:
      - excel.Excel.SpecialCellType
    - id: cellValueType
      description: Se CellType for Constants ou formulas, esse argumento será usado para determinar quais tipos de células incluir no resultado. Esses valores podem ser combinados em conjunto para retornar mais de um tipo. O padrão é selecionar todas a constantes ou fórmulas, não importando o tipo.
      type:
      - excel.Excel.SpecialCellValueType
- uid: excel.Excel.RangeAreas.getSpecialCells_1
  summary: >-
    Retorna um objeto RangeAreas que representa todas as células que correspondem ao tipo e ao valor especificado. Gera um erro se não for encontrada nenhuma célula especial que corresponda aos critérios.


    \[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: getSpecialCells(cellTypeString, cellValueType)
  fullName: getSpecialCells(cellTypeString, cellValueType)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getSpecialCells(cellTypeString: "ConditionalFormats" | "DataValidations" | "Blanks" | "Comments" | "Constants" | "Formulas" | "SameConditionalFormat" | "SameDataValidation" | "Visible", cellValueType?: "All" | "Errors" | "ErrorsLogical" | "ErrorsNumbers" | "ErrorsText" | "ErrorsLogicalNumber" | "ErrorsLogicalText" | "ErrorsNumberText" | "Logical" | "LogicalNumbers" | "LogicalText" | "LogicalNumbersText" | "Numbers" | "NumbersText" | "Text"): Excel.RangeAreas;'
    return:
      type:
      - excel.Excel.RangeAreas
      description: ''
    parameters:
    - id: cellTypeString
      description: O tipo de células a serem incluídas.
      type:
      - "\"ConditionalFormats\" | \"DataValidations\" | \"Blanks\" | \"Comments\" | \"Constants\" | \"Formulas\" | \"SameConditionalFormat\" | \"SameDataValidation\" | \"Visible\""
    - id: cellValueType
      description: Se CellType for Constants ou formulas, esse argumento será usado para determinar quais tipos de células incluir no resultado. Esses valores podem ser combinados em conjunto para retornar mais de um tipo. O padrão é selecionar todas a constantes ou fórmulas, não importando o tipo.
      type:
      - "\"All\" | \"Errors\" | \"ErrorsLogical\" | \"ErrorsNumbers\" | \"ErrorsText\" | \"ErrorsLogicalNumber\" | \"ErrorsLogicalText\" | \"ErrorsNumberText\" | \"Logical\" | \"LogicalNumbers\" | \"LogicalText\" | \"LogicalNumbersText\" | \"Numbers\" | \"NumbersText\" | \"Text\""
- uid: excel.Excel.RangeAreas.getSpecialCellsOrNullObject
  summary: >-
    Retorna um objeto RangeAreas que representa todas as células que correspondem ao tipo e ao valor especificado. Retorna um objeto NULL se não for encontrada nenhuma célula especial que corresponda aos critérios.


    \[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: getSpecialCellsOrNullObject(cellType, cellValueType)
  fullName: getSpecialCellsOrNullObject(cellType, cellValueType)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getSpecialCellsOrNullObject(cellType: Excel.SpecialCellType, cellValueType?: Excel.SpecialCellValueType): Excel.RangeAreas;'
    return:
      type:
      - excel.Excel.RangeAreas
      description: ''
    parameters:
    - id: cellType
      description: O tipo de células a serem incluídas.
      type:
      - excel.Excel.SpecialCellType
    - id: cellValueType
      description: Se CellType for Constants ou formulas, esse argumento será usado para determinar quais tipos de células incluir no resultado. Esses valores podem ser combinados em conjunto para retornar mais de um tipo. O padrão é selecionar todas a constantes ou fórmulas, não importando o tipo.
      type:
      - excel.Excel.SpecialCellValueType
- uid: excel.Excel.RangeAreas.getSpecialCellsOrNullObject_1
  summary: >-
    Retorna um objeto RangeAreas que representa todas as células que correspondem ao tipo e ao valor especificado. Retorna um objeto NULL se não for encontrada nenhuma célula especial que corresponda aos critérios.


    \[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: getSpecialCellsOrNullObject(cellTypeString, cellValueType)
  fullName: getSpecialCellsOrNullObject(cellTypeString, cellValueType)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getSpecialCellsOrNullObject(cellTypeString: "ConditionalFormats" | "DataValidations" | "Blanks" | "Comments" | "Constants" | "Formulas" | "SameConditionalFormat" | "SameDataValidation" | "Visible", cellValueType?: "All" | "Errors" | "ErrorsLogical" | "ErrorsNumbers" | "ErrorsText" | "ErrorsLogicalNumber" | "ErrorsLogicalText" | "ErrorsNumberText" | "Logical" | "LogicalNumbers" | "LogicalText" | "LogicalNumbersText" | "Numbers" | "NumbersText" | "Text"): Excel.RangeAreas;'
    return:
      type:
      - excel.Excel.RangeAreas
      description: ''
    parameters:
    - id: cellTypeString
      description: O tipo de células a serem incluídas.
      type:
      - "\"ConditionalFormats\" | \"DataValidations\" | \"Blanks\" | \"Comments\" | \"Constants\" | \"Formulas\" | \"SameConditionalFormat\" | \"SameDataValidation\" | \"Visible\""
    - id: cellValueType
      description: Se CellType for Constants ou formulas, esse argumento será usado para determinar quais tipos de células incluir no resultado. Esses valores podem ser combinados em conjunto para retornar mais de um tipo. O padrão é selecionar todas a constantes ou fórmulas, não importando o tipo.
      type:
      - "\"All\" | \"Errors\" | \"ErrorsLogical\" | \"ErrorsNumbers\" | \"ErrorsText\" | \"ErrorsLogicalNumber\" | \"ErrorsLogicalText\" | \"ErrorsNumberText\" | \"Logical\" | \"LogicalNumbers\" | \"LogicalText\" | \"LogicalNumbersText\" | \"Numbers\" | \"NumbersText\" | \"Text\""
- uid: excel.Excel.RangeAreas.getTables
  summary: >-
    Retorna uma coleção com escopo de tabelas que se sobrepõem a qualquer intervalo neste objeto RangeAreas.


    \[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: getTables(fullyContained)
  fullName: getTables(fullyContained)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getTables(fullyContained?: boolean): Excel.TableScopedCollection;'
    return:
      type:
      - excel.Excel.TableScopedCollection
      description: ''
    parameters:
    - id: fullyContained
      description: Se true, retornará somente as tabelas que estão totalmente contidas dentro dos limites do intervalo. O padrão é false.
      type:
      - boolean
- uid: excel.Excel.RangeAreas.getUsedRangeAreas
  summary: >-
    Retorna o RangeAreas usado que abrange todas as áreas usadas de intervalos retangulares individuais no objeto RangeAreas. Se não houver células usadas no RangeAreas, o erro ItemNotFound será lançado.


    \[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: getUsedRangeAreas(valuesOnly)
  fullName: getUsedRangeAreas(valuesOnly)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getUsedRangeAreas(valuesOnly?: boolean): Excel.RangeAreas;'
    return:
      type:
      - excel.Excel.RangeAreas
      description: ''
    parameters:
    - id: valuesOnly
      description: Se deve apenas considerar as células com valores como células usadas. O padrão é false.
      type:
      - boolean
- uid: excel.Excel.RangeAreas.getUsedRangeAreasOrNullObject
  summary: >-
    Retorna o RangeAreas usado que abrange todas as áreas usadas de intervalos retangulares individuais no objeto RangeAreas. Se não houver células usadas no RangeAreas, um objeto NULL será retornado.


    \[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: getUsedRangeAreasOrNullObject(valuesOnly)
  fullName: getUsedRangeAreasOrNullObject(valuesOnly)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getUsedRangeAreasOrNullObject(valuesOnly?: boolean): Excel.RangeAreas;'
    return:
      type:
      - excel.Excel.RangeAreas
      description: ''
    parameters:
    - id: valuesOnly
      description: Se deve apenas considerar as células com valores como células usadas.
      type:
      - boolean
- uid: excel.Excel.RangeAreas.isEntireColumn
  summary: >-
    Indica se todos os intervalos deste objeto RangeAreas representam colunas inteiras (por exemplo, "A:C, Q:Z"). Somente leitura.


    \[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: isEntireColumn
  fullName: isEntireColumn
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly isEntireColumn: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.RangeAreas.isEntireRow
  summary: >-
    Indica se todos os intervalos deste objeto RangeAreas representam linhas inteiras (por exemplo, "1:3, 5:7"). Somente leitura.


    \[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: isEntireRow
  fullName: isEntireRow
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly isEntireRow: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.RangeAreas.load
  summary: Enfileira um comando para carregar as propriedades especificadas do objeto. Você deve chamar "context. Sync ()" antes de ler as propriedades.
  remarks: >-
    Além dessa assinatura, este método tem as seguintes assinaturas:


    `load(option?: string | string[]): Excel.RangeAreas`-Where Option é uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.


    `load(option?: { select?: string; expand?: string; }): Excel.RangeAreas`-Onde Option. Select é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades a serem carregadas, e Options. Expand é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades de navegação a serem carregadas.


    `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.RangeAreas`– Disponível somente nos tipos de coleção. É semelhante à assinatura anterior. Option. Top especifica o número máximo de itens de coleta que podem ser incluídos no resultado. Option. Skip especifica o número de itens que devem ser ignorados e não incluídos no resultado. Se Option. Top for especificado, o conjunto de resultados será iniciado depois de ignorar o número de itens especificado.
  isPreview: true
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.RangeAreasLoadOptions): Excel.RangeAreas;'
    return:
      type:
      - excel.Excel.RangeAreas
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - excel.Excel.Interfaces.RangeAreasLoadOptions
- uid: excel.Excel.RangeAreas.load_1
  summary: Enfileira um comando para carregar as propriedades especificadas do objeto. Você deve chamar `context.sync()` antes de ler as propriedades.
  isPreview: true
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.RangeAreas;'
    return:
      type:
      - excel.Excel.RangeAreas
      description: ''
    parameters:
    - id: propertyNames
      description: Uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.
      type:
      - string | string[]
- uid: excel.Excel.RangeAreas.load_2
  summary: Enfileira um comando para carregar as propriedades especificadas do objeto. Você deve chamar `context.sync()` antes de ler as propriedades.
  isPreview: true
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.RangeAreas;'
    return:
      type:
      - excel.Excel.RangeAreas
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: Onde propertyNamesAndPaths. Select é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades a serem carregadas e propertyNamesAndPaths. Expand é uma sequência de caracteres delimitada por vírgula que especifica as propriedades de navegação a serem carregadas.
      type:
      - '{ select?: string; expand?: string; }'
- uid: excel.Excel.RangeAreas.set
  summary: Define várias propriedades de um objeto ao mesmo tempo. Você pode passar um objeto simples com as propriedades apropriadas ou outro objeto API do mesmo tipo.
  remarks: >-
    Este método tem a seguinte assinatura adicional:


    `set(properties: Excel.RangeAreas): void`
  isPreview: true
  name: set(properties, options)
  fullName: set(properties, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Interfaces.RangeAreasUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: Um objeto JavaScript com propriedades que são estruturadas isomorphically para as propriedades do objeto no qual o método é chamado.
      type:
      - Interfaces.RangeAreasUpdateData
    - id: options
      description: Fornece uma opção para suprimir erros se o objeto Properties tentar definir qualquer propriedade somente leitura.
      type:
      - office.OfficeExtension.UpdateOptions
- uid: excel.Excel.RangeAreas.set_1
  summary: Define várias propriedades no objeto ao mesmo tempo, com base em um objeto carregado existente.
  isPreview: true
  name: set(properties)
  fullName: set(properties)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Excel.RangeAreas): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: ''
      type:
      - excel.Excel.RangeAreas
- uid: excel.Excel.RangeAreas.setDirty
  summary: >-
    Define o RangeAreas a ser recalculado quando o próximo recálculo ocorrer.


    \[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: setDirty()
  fullName: setDirty()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setDirty(): void;'
    return:
      type:
      - void
      description: ''
- uid: excel.Excel.RangeAreas.style
  summary: >-
    Representa o estilo de todos os intervalos deste objeto RangeAreas. Se os estilos das células forem inconsistentes, NULL será retornado. Para estilos personalizados, o nome do estilo será retornado. Para os estilos internos, uma cadeia de caracteres que representa um valor na enumeração BuiltInstyle será retornada.


    \[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: style
  fullName: style
  langs:
  - typeScript
  type: property
  syntax:
    content: 'style: string;'
    return:
      type:
      - string
- uid: excel.Excel.RangeAreas.toJSON
  summary: Substitui o método `toJSON()` JavaScript para fornecer uma saída mais útil quando um objeto API é passado para `JSON.stringify()` <!-- -->. (`JSON.stringify`<!-- -->, por sua vez, chama `toJSON` o método do objeto que é passado para ele). Enquanto o objeto Excel. RangeAreas original é um objeto API, o `toJSON` método retorna um objeto JavaScript simples (digitado `Excel.Interfaces.RangeAreasData` <!-- -->como) que contém cópias superficiais de qualquer propriedade filho carregada do objeto original.
  isPreview: true
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.RangeAreasData;'
    return:
      type:
      - excel.Excel.Interfaces.RangeAreasData
      description: ''
- uid: excel.Excel.RangeAreas.track
  summary: Rastrear o objeto para o ajuste automático com base nas alterações ao redor do documento. Essa chamada é uma abreviação de Context. trackedObjects. Add (ThisObject). Se você estiver usando esse objeto nas chamadas ". Sync" e fora da execução seqüencial de um lote ". Run" e obter um erro "InvalidObjectPath" ao definir uma propriedade ou invocar um método no objeto, você precisa ter adicionado o objeto ao objeto rastreado coleção quando o objeto foi criado pela primeira vez.
  isPreview: true
  name: track()
  fullName: track()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'track(): Excel.RangeAreas;'
    return:
      type:
      - excel.Excel.RangeAreas
      description: ''
- uid: excel.Excel.RangeAreas.untrack
  summary: Libere a memória associada a esse objeto, se tiver sido rastreada anteriormente. Essa chamada é abreviada para Context. trackedObjects. Remove (ThisObject). Ter vários objetos controlados torna lento o aplicativo host, portanto, lembre-se de liberar todos os objetos que você adicionar, quando terminar de usá-los. Você precisará chamar "context. Sync ()" antes da liberação da memória entrar em vigor.
  isPreview: true
  name: untrack()
  fullName: untrack()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'untrack(): Excel.RangeAreas;'
    return:
      type:
      - excel.Excel.RangeAreas
      description: ''
- uid: excel.Excel.RangeAreas.worksheet
  summary: >-
    Retorna a planilha para o RangeAreas atual. Somente leitura.


    \[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: worksheet
  fullName: worksheet
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly worksheet: Excel.Worksheet;'
    return:
      type:
      - excel.Excel.Worksheet
