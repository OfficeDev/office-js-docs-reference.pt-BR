### YamlMime:UniversalReference
ms.openlocfilehash: d031d8f537c00fe152912c3d4c856d185de1ab0b
ms.sourcegitcommit: d356f1545c328d4b59ce814fcab8191e4231f1dc
ms.translationtype: MT
ms.contentlocale: pt-BR
ms.lasthandoff: 02/13/2019
ms.locfileid: "29973069"
items:
- uid: excel.Excel.WorksheetProtection
  summary: >-
    <span data-ttu-id="4b3df-101">Representa a proteção de um objeto sheet.</span><span class="sxs-lookup"><span data-stu-id="4b3df-101">Represents the protection of a sheet object.</span></span>


    <span data-ttu-id="4b3df-102">\[[Conjunto de APIs: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4b3df-102">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.WorksheetProtection
  fullName: Excel.WorksheetProtection
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.WorksheetProtection.context
  - excel.Excel.WorksheetProtection.load
  - excel.Excel.WorksheetProtection.load_1
  - excel.Excel.WorksheetProtection.load_2
  - excel.Excel.WorksheetProtection.options
  - excel.Excel.WorksheetProtection.protect
  - excel.Excel.WorksheetProtection.protected
  - excel.Excel.WorksheetProtection.toJSON
  - excel.Excel.WorksheetProtection.unprotect
- uid: excel.Excel.WorksheetProtection.context
  summary: <span data-ttu-id="4b3df-103">O contexto de solicitação associado ao objeto.</span><span class="sxs-lookup"><span data-stu-id="4b3df-103">The request context associated with the object.</span></span> <span data-ttu-id="4b3df-104">Esse procedimento fará processo do suplemento de processo do aplicativo host do Office.</span><span class="sxs-lookup"><span data-stu-id="4b3df-104">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.WorksheetProtection.load
  summary: <span data-ttu-id="4b3df-105">Filas de backup de um comando para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="4b3df-105">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="4b3df-106">Você deve chamar "context.sync()" antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="4b3df-106">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="4b3df-107">Além dessa assinatura, esse método tem as seguintes assinaturas:</span><span class="sxs-lookup"><span data-stu-id="4b3df-107">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="4b3df-108">`load(option?: string | string[]): Excel.WorksheetProtection`-Onde opção é uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades de carga.</span><span class="sxs-lookup"><span data-stu-id="4b3df-108">`load(option?: string | string[]): Excel.WorksheetProtection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="4b3df-109">`load(option?: { select?: string; expand?: string; }): Excel.WorksheetProtection`-Onde option.select é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades para carregar e options.expand é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades de navegação para carregar.</span><span class="sxs-lookup"><span data-stu-id="4b3df-109">`load(option?: { select?: string; expand?: string; }): Excel.WorksheetProtection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="4b3df-110">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.WorksheetProtection`-Só está disponível em tipos de coleção.</span><span class="sxs-lookup"><span data-stu-id="4b3df-110">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.WorksheetProtection` - Only available on collection types.</span></span> <span data-ttu-id="4b3df-111">Ele é semelhante à assinatura anterior.</span><span class="sxs-lookup"><span data-stu-id="4b3df-111">It is similar to the preceding signature.</span></span> <span data-ttu-id="4b3df-112">Option.Top Especifica o número máximo de itens que podem ser incluídos no resultado da coleção.</span><span class="sxs-lookup"><span data-stu-id="4b3df-112">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="4b3df-113">Option.Skip Especifica o número de itens que devem ser ignorados e não são incluídos no resultado.</span><span class="sxs-lookup"><span data-stu-id="4b3df-113">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="4b3df-114">Se option.top for especificado, o conjunto de resultados será iniciado depois de ignorar o número de itens especificado.</span><span class="sxs-lookup"><span data-stu-id="4b3df-114">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.WorksheetProtectionLoadOptions): Excel.WorksheetProtection;'
    return:
      type:
      - excel.Excel.WorksheetProtection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - excel.Excel.Interfaces.WorksheetProtectionLoadOptions
- uid: excel.Excel.WorksheetProtection.load_1
  summary: <span data-ttu-id="4b3df-115">Filas de backup de um comando para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="4b3df-115">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="4b3df-116">Você deve chamar `context.sync()` antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="4b3df-116">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.WorksheetProtection;'
    return:
      type:
      - excel.Excel.WorksheetProtection
      description: ''
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="4b3df-117">Uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades de carga.</span><span class="sxs-lookup"><span data-stu-id="4b3df-117">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.WorksheetProtection.load_2
  summary: <span data-ttu-id="4b3df-118">Filas de backup de um comando para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="4b3df-118">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="4b3df-119">Você deve chamar `context.sync()` antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="4b3df-119">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.WorksheetProtection;'
    return:
      type:
      - excel.Excel.WorksheetProtection
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: <span data-ttu-id="4b3df-120">Onde propertyNamesAndPaths.select é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades para carregar e propertyNamesAndPaths.expand é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades de navegação para carregar.</span><span class="sxs-lookup"><span data-stu-id="4b3df-120">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>
      type:
      - '{ select?: string; expand?: string; }'
- uid: excel.Excel.WorksheetProtection.options
  summary: >-
    <span data-ttu-id="4b3df-p106">Opções de proteção da planilha. Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="4b3df-p106">Sheet protection options. Read-only.</span></span>


    <span data-ttu-id="4b3df-123">\[[Conjunto de APIs: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4b3df-123">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: options
  fullName: options
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly options: Excel.WorksheetProtectionOptions;'
    return:
      type:
      - excel.Excel.WorksheetProtectionOptions
- uid: excel.Excel.WorksheetProtection.protect
  summary: >-
    <span data-ttu-id="4b3df-124">Protege uma planilha.</span><span class="sxs-lookup"><span data-stu-id="4b3df-124">Protects a worksheet.</span></span> <span data-ttu-id="4b3df-125">Falha se a planilha já foi protegida.</span><span class="sxs-lookup"><span data-stu-id="4b3df-125">Fails if the worksheet has already been protected.</span></span>


    <span data-ttu-id="4b3df-126">\[[Conjunto de APIs: ExcelApi 1.2 para opções; 1.7 por senha](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4b3df-126">\[ [API set: ExcelApi 1.2 for options; 1.7 for password](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: protect(options, password)
  fullName: protect(options, password)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'protect(options?: Excel.WorksheetProtectionOptions, password?: string): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"4b3df-127\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"4b3df-127\">Examples</span></span>\n\n```javascript\nExcel.run(function(ctx) {\n  // get a reference to Sheet1\n  var sheet = ctx.workbook.worksheets.getItem(\"Sheet1\");\n\n  // Protect inserting or deleting rows in Sheet1\n  sheet.protection.protect({\n    allowInsertRows: false,\n    allowDeleteRows: false\n  });\n\n  return ctx.sync();\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```typescript\nawait Excel.run(async (context) => {\n    let activeSheet = context.workbook.worksheets.getActiveWorksheet();\n    activeSheet.load(\"protection/protected\");\n\n    await context.sync();\n\n    if (!activeSheet.protection.protected) {\n        activeSheet.protection.protect();\n    }\n});\n```\n```typescript\nlet password = await passwordHandler();\npasswordHelper(password);\nawait Excel.run(async (context) => {\n    let activeSheet = context.workbook.worksheets.getActiveWorksheet();\n    activeSheet.load(\"protection/protected\");\n\n    await context.sync();\n\n    if (!activeSheet.protection.protected) {\n        activeSheet.protection.protect(null, password);\n    }\n});\n```"
    parameters:
    - id: options
      description: <span data-ttu-id="4b3df-128">Opcional.</span><span class="sxs-lookup"><span data-stu-id="4b3df-128">Optional.</span></span> <span data-ttu-id="4b3df-129">Opções de proteção da planilha.</span><span class="sxs-lookup"><span data-stu-id="4b3df-129">Sheet protection options.</span></span>
      type:
      - excel.Excel.WorksheetProtectionOptions
    - id: password
      description: <span data-ttu-id="4b3df-130">Opcional.</span><span class="sxs-lookup"><span data-stu-id="4b3df-130">Optional.</span></span> <span data-ttu-id="4b3df-131">Senha de proteção da planilha.</span><span class="sxs-lookup"><span data-stu-id="4b3df-131">Sheet protection password.</span></span>
      type:
      - string
- uid: excel.Excel.WorksheetProtection.protected
  summary: >-
    <span data-ttu-id="4b3df-132">Indica se a planilha for protegida.</span><span class="sxs-lookup"><span data-stu-id="4b3df-132">Indicates if the worksheet is protected.</span></span> <span data-ttu-id="4b3df-133">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="4b3df-133">Read-only.</span></span>


    <span data-ttu-id="4b3df-134">\[[Conjunto de APIs: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4b3df-134">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: protected
  fullName: protected
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly protected: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.WorksheetProtection.toJSON
  summary: <span data-ttu-id="4b3df-135">Substitui o JavaScript `toJSON()` método para fornecer a saída mais úteis quando um objeto API é passado para `JSON.stringify()` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="4b3df-135">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="4b3df-136">(`JSON.stringify`<!-- -->, em seguida, chama o `toJSON` método do objeto que é passado para ele.) Enquanto o objeto Excel.WorksheetProtection original é um objeto de API, o `toJSON` método retorna um objeto de JavaScript simples (digitado como `Excel.Interfaces.WorksheetProtectionData` <!-- -->) que contém superficiais cópias de todas as propriedades do objeto original filho carregado.</span><span class="sxs-lookup"><span data-stu-id="4b3df-136">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.WorksheetProtection object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.WorksheetProtectionData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.WorksheetProtectionData;'
    return:
      type:
      - excel.Excel.Interfaces.WorksheetProtectionData
      description: ''
- uid: excel.Excel.WorksheetProtection.unprotect
  summary: >-
    <span data-ttu-id="4b3df-137">Desprotege uma planilha.</span><span class="sxs-lookup"><span data-stu-id="4b3df-137">Unprotects a worksheet.</span></span>


    <span data-ttu-id="4b3df-138">\[[Conjunto de APIs: ExcelApi 1.7 por senha](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4b3df-138">\[ [API set: ExcelApi 1.7 for password](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: unprotect(password)
  fullName: unprotect(password)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'unprotect(password?: string): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"4b3df-139\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"4b3df-139\">Examples</span></span>\n\n```javascript\nExcel.run(function(ctx) {\n  // get a reference to Sheet1\n  var sheet = ctx.workbook.worksheets.getItem(\"Sheet1\");\n\n  // Remove all protects applied to Sheet1\n  sheet.protection.unprotect();\n\n  return ctx.sync();\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\n// Unprotecting a worksheet with unprotect() will remove all \n// WorksheetProtectionOptions options applied to a worksheet.\n// To remove only a subset of WorksheetProtectionOptions use the \n// protect() method and set the options you wish to remove to true.\nExcel.run(function(ctx) {\n  var sheet = ctx.workbook.worksheets.getItem(\"Sheet1\");\n  sheet.protection.protect({\n    allowInsertRows: false, // Protect row insertion\n    allowDeleteRows: true // Unprotect row deletion\n  });\n});\n```\n```typescript\nawait Excel.run(async (context) => {\n    let activeSheet = context.workbook.worksheets.getActiveWorksheet();\n    activeSheet.protection.unprotect();\n});\n```\n```typescript\nlet password = await passwordHandler();\npasswordHelper(password);\nawait Excel.run(async (context) => {\n    let activeSheet = context.workbook.worksheets.getActiveWorksheet();\n    activeSheet.protection.unprotect(password);\n});\n```"
    parameters:
    - id: password
      description: <span data-ttu-id="4b3df-140">senha de proteção da planilha.</span><span class="sxs-lookup"><span data-stu-id="4b3df-140">sheet protection password.</span></span>
      type:
      - string
