### YamlMime:UniversalReference
ms.openlocfilehash: 18ecfe56c9e0724f06a12ea1ad9de1671608d1fe
ms.sourcegitcommit: d356f1545c328d4b59ce814fcab8191e4231f1dc
ms.translationtype: MT
ms.contentlocale: pt-BR
ms.lasthandoff: 02/13/2019
ms.locfileid: "29981616"
items:
- uid: excel.Excel.Binding
  summary: >-
    <span data-ttu-id="ac218-101">Representa uma associação do Office.js definida na pasta de trabalho.</span><span class="sxs-lookup"><span data-stu-id="ac218-101">Represents an Office.js binding that is defined in the workbook.</span></span>


    <span data-ttu-id="ac218-102">\[[Conjunto de APIs: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ac218-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.Binding
  fullName: Excel.Binding
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.Binding.context
  - excel.Excel.Binding.delete
  - excel.Excel.Binding.getRange
  - excel.Excel.Binding.getTable
  - excel.Excel.Binding.getText
  - excel.Excel.Binding.id
  - excel.Excel.Binding.load
  - excel.Excel.Binding.load_1
  - excel.Excel.Binding.load_2
  - excel.Excel.Binding.onDataChanged
  - excel.Excel.Binding.onSelectionChanged
  - excel.Excel.Binding.toJSON
  - excel.Excel.Binding.type
- uid: excel.Excel.Binding.context
  summary: <span data-ttu-id="ac218-103">O contexto de solicitação associado ao objeto.</span><span class="sxs-lookup"><span data-stu-id="ac218-103">The request context associated with the object.</span></span> <span data-ttu-id="ac218-104">Esse procedimento fará processo do suplemento de processo do aplicativo host do Office.</span><span class="sxs-lookup"><span data-stu-id="ac218-104">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.Binding.delete
  summary: >-
    <span data-ttu-id="ac218-105">Especifica a associação.</span><span class="sxs-lookup"><span data-stu-id="ac218-105">Deletes the binding.</span></span>


    <span data-ttu-id="ac218-106">\[[Conjunto de APIs: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ac218-106">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: delete()
  fullName: delete()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'delete(): void;'
    return:
      type:
      - void
      description: ''
- uid: excel.Excel.Binding.getRange
  summary: >-
    <span data-ttu-id="ac218-p102">Retorna o intervalo representado pela associação. Gera um erro quando a associação não é do tipo correto.</span><span class="sxs-lookup"><span data-stu-id="ac218-p102">Returns the range represented by the binding. Will throw an error if binding is not of the correct type.</span></span>


    <span data-ttu-id="ac218-109">\[[Conjunto de APIs: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ac218-109">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getRange()
  fullName: getRange()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getRange(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"ac218-110\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"ac218-110\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var binding = ctx.workbook.bindings.getItemAt(0);\n    var range = binding.getRange();\n    range.load('cellCount');\n    return ctx.sync().then(function() {\n        console.log(range.cellCount);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel.Excel.Binding.getTable
  summary: >-
    <span data-ttu-id="ac218-p103">Retorna a tabela representada pela associação. Gera um erro quando a associação não é do tipo correto.</span><span class="sxs-lookup"><span data-stu-id="ac218-p103">Returns the table represented by the binding. Will throw an error if binding is not of the correct type.</span></span>


    <span data-ttu-id="ac218-113">\[[Conjunto de APIs: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ac218-113">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getTable()
  fullName: getTable()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getTable(): Excel.Table;'
    return:
      type:
      - excel.Excel.Table
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"ac218-114\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"ac218-114\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var binding = ctx.workbook.bindings.getItemAt(0);\n    var table = binding.getTable();\n    table.load('name');\n    return ctx.sync().then(function() {\n            console.log(table.name);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel.Excel.Binding.getText
  summary: >-
    <span data-ttu-id="ac218-p104">Retorna o texto representado pela associação. Gera um erro quando a associação não é do tipo correto.</span><span class="sxs-lookup"><span data-stu-id="ac218-p104">Returns the text represented by the binding. Will throw an error if binding is not of the correct type.</span></span>


    <span data-ttu-id="ac218-117">\[[Conjunto de APIs: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ac218-117">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getText()
  fullName: getText()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getText(): OfficeExtension.ClientResult<string>;'
    return:
      type:
      - OfficeExtension.ClientResult<string>
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"ac218-118\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"ac218-118\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var binding = ctx.workbook.bindings.getItemAt(0);\n    var text = binding.getText();\n    binding.load('text');\n    return ctx.sync().then(function() {\n        console.log(text);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel.Excel.Binding.id
  summary: >-
    <span data-ttu-id="ac218-p105">Representa um identificador de associação. Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="ac218-p105">Represents binding identifier. Read-only.</span></span>


    <span data-ttu-id="ac218-121">\[[Conjunto de APIs: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ac218-121">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: id
  fullName: id
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly id: string;'
    return:
      type:
      - string
- uid: excel.Excel.Binding.load
  summary: <span data-ttu-id="ac218-122">Filas de backup de um comando para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="ac218-122">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="ac218-123">Você deve chamar "context.sync()" antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="ac218-123">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="ac218-124">Além dessa assinatura, esse método tem as seguintes assinaturas:</span><span class="sxs-lookup"><span data-stu-id="ac218-124">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="ac218-125">`load(option?: string | string[]): Excel.Binding`-Onde opção é uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades de carga.</span><span class="sxs-lookup"><span data-stu-id="ac218-125">`load(option?: string | string[]): Excel.Binding` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="ac218-126">`load(option?: { select?: string; expand?: string; }): Excel.Binding`-Onde option.select é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades para carregar e options.expand é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades de navegação para carregar.</span><span class="sxs-lookup"><span data-stu-id="ac218-126">`load(option?: { select?: string; expand?: string; }): Excel.Binding` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="ac218-127">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Binding`-Só está disponível em tipos de coleção.</span><span class="sxs-lookup"><span data-stu-id="ac218-127">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Binding` - Only available on collection types.</span></span> <span data-ttu-id="ac218-128">Ele é semelhante à assinatura anterior.</span><span class="sxs-lookup"><span data-stu-id="ac218-128">It is similar to the preceding signature.</span></span> <span data-ttu-id="ac218-129">Option.Top Especifica o número máximo de itens que podem ser incluídos no resultado da coleção.</span><span class="sxs-lookup"><span data-stu-id="ac218-129">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="ac218-130">Option.Skip Especifica o número de itens que devem ser ignorados e não são incluídos no resultado.</span><span class="sxs-lookup"><span data-stu-id="ac218-130">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="ac218-131">Se option.top for especificado, o conjunto de resultados será iniciado depois de ignorar o número de itens especificado.</span><span class="sxs-lookup"><span data-stu-id="ac218-131">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.BindingLoadOptions): Excel.Binding;'
    return:
      type:
      - excel.Excel.Binding
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - excel.Excel.Interfaces.BindingLoadOptions
- uid: excel.Excel.Binding.load_1
  summary: <span data-ttu-id="ac218-132">Filas de backup de um comando para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="ac218-132">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="ac218-133">Você deve chamar `context.sync()` antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="ac218-133">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.Binding;'
    return:
      type:
      - excel.Excel.Binding
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"ac218-134\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"ac218-134\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var binding = ctx.workbook.bindings.getItemAt(0);\n    binding.load('type');\n    return ctx.sync().then(function() {\n        console.log(binding.type);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="ac218-135">Uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades de carga.</span><span class="sxs-lookup"><span data-stu-id="ac218-135">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.Binding.load_2
  summary: <span data-ttu-id="ac218-136">Filas de backup de um comando para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="ac218-136">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="ac218-137">Você deve chamar `context.sync()` antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="ac218-137">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.Binding;'
    return:
      type:
      - excel.Excel.Binding
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: <span data-ttu-id="ac218-138">Onde propertyNamesAndPaths.select é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades para carregar e propertyNamesAndPaths.expand é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades de navegação para carregar.</span><span class="sxs-lookup"><span data-stu-id="ac218-138">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>
      type:
      - '{ select?: string; expand?: string; }'
- uid: excel.Excel.Binding.onDataChanged
  summary: >-
    <span data-ttu-id="ac218-139">Ocorre quando os dados ou a formatação dentro da associação são alterados.</span><span class="sxs-lookup"><span data-stu-id="ac218-139">Occurs when data or formatting within the binding is changed.</span></span>


    <span data-ttu-id="ac218-140">\[[Conjunto de APIs: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ac218-140">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: onDataChanged
  fullName: onDataChanged
  langs:
  - typeScript
  type: event
  syntax:
    content: 'readonly onDataChanged: OfficeExtension.EventHandlers<Excel.BindingDataChangedEventArgs>;'
    return:
      type:
      - OfficeExtension.EventHandlers<Excel.BindingDataChangedEventArgs>
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"ac218-141\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"ac218-141\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");    \n    const salesTable = sheet.tables.getItem(\"SalesTable\");\n    const salesByQuarterBinding = context.workbook.bindings.add(salesTable.getRange(), \"Table\", \"SalesByQuarter\");\n    salesByQuarterBinding.onDataChanged.add(onSalesDataChanged);\n\n    console.log(\"The data changed handler is registered.\");\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.Binding.onSelectionChanged
  summary: >-
    <span data-ttu-id="ac218-142">Ocorre quando o conteúdo selecionado na associação é alterado.</span><span class="sxs-lookup"><span data-stu-id="ac218-142">Occurs when the selected content in the binding is changed.</span></span>


    <span data-ttu-id="ac218-143">\[[Conjunto de APIs: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ac218-143">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: onSelectionChanged
  fullName: onSelectionChanged
  langs:
  - typeScript
  type: event
  syntax:
    content: 'readonly onSelectionChanged: OfficeExtension.EventHandlers<Excel.BindingSelectionChangedEventArgs>;'
    return:
      type:
      - OfficeExtension.EventHandlers<Excel.BindingSelectionChangedEventArgs>
- uid: excel.Excel.Binding.toJSON
  summary: <span data-ttu-id="ac218-144">Substitui o JavaScript `toJSON()` método para fornecer a saída mais úteis quando um objeto API é passado para `JSON.stringify()` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="ac218-144">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="ac218-145">(`JSON.stringify`<!-- -->, em seguida, chama o `toJSON` método do objeto que é passado para ele.) Enquanto o objeto Excel.Binding original é um objeto de API, o `toJSON` método retorna um objeto de JavaScript simples (digitado como `Excel.Interfaces.BindingData` <!-- -->) que contém superficiais cópias de todas as propriedades do objeto original filho carregado.</span><span class="sxs-lookup"><span data-stu-id="ac218-145">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.Binding object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.BindingData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.BindingData;'
    return:
      type:
      - excel.Excel.Interfaces.BindingData
      description: ''
- uid: excel.Excel.Binding.type
  summary: >-
    <span data-ttu-id="ac218-146">Retorna o tipo da ligação.</span><span class="sxs-lookup"><span data-stu-id="ac218-146">Returns the type of the binding.</span></span> <span data-ttu-id="ac218-147">Consulte Excel.BindingType para obter detalhes.</span><span class="sxs-lookup"><span data-stu-id="ac218-147">See Excel.BindingType for details.</span></span> <span data-ttu-id="ac218-148">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="ac218-148">Read-only.</span></span>


    <span data-ttu-id="ac218-149">\[[Conjunto de APIs: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ac218-149">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: type
  fullName: type
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly type: Excel.BindingType | "Range" | "Table" | "Text";'
    return:
      type:
      - Excel.BindingType | "Range" | "Table" | "Text"
