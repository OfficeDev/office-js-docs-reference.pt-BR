### YamlMime:UniversalReference
ms.openlocfilehash: a74f0bb3c12aee505fb37db2191e26863b44522b
ms.sourcegitcommit: 3f4a320fa860d05d348c8bdec2295e046a45a34f
ms.translationtype: MT
ms.contentlocale: pt-BR
ms.lasthandoff: 02/07/2019
ms.locfileid: "29769047"
items:
- uid: excel.Excel.DataValidation
  summary: >-
    <span data-ttu-id="219f2-101">Representa a validação de dados aplicada ao intervalo atual.</span><span class="sxs-lookup"><span data-stu-id="219f2-101">Represents the data validation applied to the current range.</span></span>


    <span data-ttu-id="219f2-102">\[[Conjunto de APIs: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="219f2-102">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.DataValidation
  fullName: Excel.DataValidation
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.DataValidation.clear
  - excel.Excel.DataValidation.context
  - excel.Excel.DataValidation.errorAlert
  - excel.Excel.DataValidation.ignoreBlanks
  - excel.Excel.DataValidation.load
  - excel.Excel.DataValidation.prompt
  - excel.Excel.DataValidation.rule
  - excel.Excel.DataValidation.set
  - excel.Excel.DataValidation.toJSON
  - excel.Excel.DataValidation.type
  - excel.Excel.DataValidation.valid
- uid: excel.Excel.DataValidation.clear
  summary: >-
    <span data-ttu-id="219f2-103">Desfazer a validação de dados do intervalo atual.</span><span class="sxs-lookup"><span data-stu-id="219f2-103">Clears the data validation from the current range.</span></span>


    <span data-ttu-id="219f2-104">\[[Conjunto de APIs: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="219f2-104">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: clear()
  fullName: clear
  langs:
  - typeScript
  type: method
  syntax:
    content: 'clear(): void;'
    return:
      type:
      - void
      description: ''
- uid: excel.Excel.DataValidation.context
  summary: <span data-ttu-id="219f2-105">O contexto de solicitação associado ao objeto.</span><span class="sxs-lookup"><span data-stu-id="219f2-105">The request context associated with the object.</span></span> <span data-ttu-id="219f2-106">Esse procedimento fará processo do suplemento de processo do aplicativo host do Office.</span><span class="sxs-lookup"><span data-stu-id="219f2-106">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.DataValidation.errorAlert
  summary: >-
    <span data-ttu-id="219f2-107">Alerta de erro quando o usuário insere dados inválidos.</span><span class="sxs-lookup"><span data-stu-id="219f2-107">Error alert when user enters invalid data.</span></span>


    <span data-ttu-id="219f2-108">\[[Conjunto de APIs: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="219f2-108">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: errorAlert
  fullName: errorAlert
  langs:
  - typeScript
  type: property
  syntax:
    content: 'errorAlert: Excel.DataValidationErrorAlert;'
    return:
      type:
      - excel.Excel.DataValidationErrorAlert
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"219f2-109\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"219f2-109\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Decision\");\n    const commentsRange = \n        sheet.tables.getItem(\"NameOptionsTable\").columns.getItem(\"Comments\").getDataBodyRange();\n\n    // When you are developing, it is a good practice to\n    // clear the dataValidation object with each run of your code.\n    commentsRange.dataValidation.clear();   \n\n    // If the value of A2 is contained in the value of C2, then \n    // SEARCH(A2,C2) returns the number where it begins. Otherwise,\n    // it does not return a number.\n    let redundantStringRule = {\n        custom: {\n            formula: \"=NOT(ISNUMBER(SEARCH(A2,C2)))\"\n        }\n    };\n    commentsRange.dataValidation.rule = redundantStringRule;\n    commentsRange.dataValidation.errorAlert = {\n        message: \"It is redundant to include the baby name in the comment.\",\n        showAlert: true,\n        style: \"Information\",\n        title: \"Baby Name in Comment\"\n    };\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.DataValidation.ignoreBlanks
  summary: >-
    <span data-ttu-id="219f2-110">Ignora espaços em branco: nenhuma validação de dados será executada em células vazias, o padrão será definido como verdadeiro.</span><span class="sxs-lookup"><span data-stu-id="219f2-110">Ignore blanks: no data validation will be performed on blank cells, it defaults to true.</span></span>


    <span data-ttu-id="219f2-111">\[[Conjunto de APIs: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="219f2-111">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: ignoreBlanks
  fullName: ignoreBlanks
  langs:
  - typeScript
  type: property
  syntax:
    content: 'ignoreBlanks: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.DataValidation.load
  summary: <span data-ttu-id="219f2-112">Filas de backup de um comando para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="219f2-112">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="219f2-113">Você deve chamar "context.sync()" antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="219f2-113">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="219f2-114">Além dessa assinatura, esse método tem as seguintes assinaturas:</span><span class="sxs-lookup"><span data-stu-id="219f2-114">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="219f2-115">`load(option?: { select?: string; expand?: string; }): Excel.DataValidation`-Onde option.select é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades para carregar e options.expand é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades de navegação para carregar.</span><span class="sxs-lookup"><span data-stu-id="219f2-115">`load(option?: { select?: string; expand?: string; }): Excel.DataValidation` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="219f2-116">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.DataValidation`-Só está disponível em tipos de coleção.</span><span class="sxs-lookup"><span data-stu-id="219f2-116">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.DataValidation` - Only available on collection types.</span></span> <span data-ttu-id="219f2-117">Ele é semelhante à assinatura anterior.</span><span class="sxs-lookup"><span data-stu-id="219f2-117">It is similar to the preceding signature.</span></span> <span data-ttu-id="219f2-118">Option.Top Especifica o número máximo de itens que podem ser incluídos no resultado da coleção.</span><span class="sxs-lookup"><span data-stu-id="219f2-118">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="219f2-119">Option.Skip Especifica o número de itens que devem ser ignorados e não são incluídos no resultado.</span><span class="sxs-lookup"><span data-stu-id="219f2-119">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="219f2-120">Se option.top for especificado, o conjunto de resultados será iniciado depois de ignorar o número de itens especificado.</span><span class="sxs-lookup"><span data-stu-id="219f2-120">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Excel.DataValidation;'
    return:
      type:
      - excel.Excel.DataValidation
      description: ''
    parameters:
    - id: option
      description: <span data-ttu-id="219f2-121">Uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades de carga.</span><span class="sxs-lookup"><span data-stu-id="219f2-121">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.DataValidation.prompt
  summary: >-
    <span data-ttu-id="219f2-122">Avisar quando os usuários selecionam uma célula.</span><span class="sxs-lookup"><span data-stu-id="219f2-122">Prompt when users select a cell.</span></span>


    <span data-ttu-id="219f2-123">\[[Conjunto de APIs: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="219f2-123">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: prompt
  fullName: prompt
  langs:
  - typeScript
  type: property
  syntax:
    content: 'prompt: Excel.DataValidationPrompt;'
    return:
      type:
      - excel.Excel.DataValidationPrompt
- uid: excel.Excel.DataValidation.rule
  summary: >-
    <span data-ttu-id="219f2-124">Regra de validação de dados que contém os diferentes tipos de critérios de validação de dados.</span><span class="sxs-lookup"><span data-stu-id="219f2-124">Data validation rule that contains different type of data validation criteria.</span></span>


    <span data-ttu-id="219f2-125">\[[Conjunto de APIs: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="219f2-125">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: rule
  fullName: rule
  langs:
  - typeScript
  type: property
  syntax:
    content: 'rule: Excel.DataValidationRule;'
    return:
      type:
      - excel.Excel.DataValidationRule
- uid: excel.Excel.DataValidation.set
  summary: <span data-ttu-id="219f2-126">Define várias propriedades de um objeto ao mesmo tempo.</span><span class="sxs-lookup"><span data-stu-id="219f2-126">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="219f2-127">Você pode passar um objeto sem formatação com as propriedades adequadas ou outro objeto API do mesmo tipo.</span><span class="sxs-lookup"><span data-stu-id="219f2-127">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>
  remarks: >-
    <span data-ttu-id="219f2-128">Esse método tem a seguinte assinatura adicional:</span><span class="sxs-lookup"><span data-stu-id="219f2-128">This method has the following additional signature:</span></span>


    `set(properties: Excel.DataValidation): void`
  name: set(properties, options)
  fullName: set
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Interfaces.DataValidationUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: <span data-ttu-id="219f2-129">Um objeto de JavaScript com propriedades que são estruturadas isomorphically às propriedades do objeto no qual o método é chamado.</span><span class="sxs-lookup"><span data-stu-id="219f2-129">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
      type:
      - Interfaces.DataValidationUpdateData
    - id: options
      description: <span data-ttu-id="219f2-130">Fornece uma opção para suprimir erros se o objeto properties tenta definir todas as propriedades somente leitura.</span><span class="sxs-lookup"><span data-stu-id="219f2-130">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
      type:
      - office.OfficeExtension.UpdateOptions
- uid: excel.Excel.DataValidation.toJSON
  summary: <span data-ttu-id="219f2-131">Substitui o JavaScript `toJSON()` método para fornecer a saída mais úteis quando um objeto API é passado para `JSON.stringify()` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="219f2-131">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="219f2-132">(`JSON.stringify`<!-- -->, em seguida, chama o `toJSON` método do objeto que é passado para ele.) Enquanto o objeto Excel.DataValidation original é um objeto de API, o `toJSON` método retorna um objeto de JavaScript simples (digitado como `Excel.Interfaces.DataValidationData` <!-- -->) que contém superficiais cópias de todas as propriedades do objeto original filho carregado.</span><span class="sxs-lookup"><span data-stu-id="219f2-132">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.DataValidation object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.DataValidationData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.DataValidationData;'
    return:
      type:
      - excel.Excel.Interfaces.DataValidationData
      description: ''
- uid: excel.Excel.DataValidation.type
  summary: >-
    <span data-ttu-id="219f2-133">Tipo de validação de dados, confira Excel.DataValidationType para obter detalhes.</span><span class="sxs-lookup"><span data-stu-id="219f2-133">Type of the data validation, see Excel.DataValidationType for details.</span></span>


    <span data-ttu-id="219f2-134">\[[Conjunto de APIs: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="219f2-134">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: type
  fullName: type
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly type: Excel.DataValidationType | "None" | "WholeNumber" | "Decimal" | "List" | "Date" | "Time" | "TextLength" | "Custom" | "Inconsistent" | "MixedCriteria";'
    return:
      type:
      - Excel.DataValidationType | "None" | "WholeNumber" | "Decimal" | "List" | "Date" | "Time" | "TextLength" | "Custom" | "Inconsistent" | "MixedCriteria"
- uid: excel.Excel.DataValidation.valid
  summary: >-
    <span data-ttu-id="219f2-135">Representa se todos os valores de célula são válidos de acordo com as regras de validação de dados.</span><span class="sxs-lookup"><span data-stu-id="219f2-135">Represents if all cell values are valid according to the data validation rules.</span></span> <span data-ttu-id="219f2-136">Retorna true se todos os valores de célula são válidos, ou false se todos os valores de célula são inválidos.</span><span class="sxs-lookup"><span data-stu-id="219f2-136">Returns true if all cell values are valid, or false if all cell values are invalid.</span></span> <span data-ttu-id="219f2-137">Retorna null se existem em ambos os valores das células válidas e inválidas dentro do intervalo.</span><span class="sxs-lookup"><span data-stu-id="219f2-137">Returns null if there are both valid and invalid cell values within the range.</span></span>


    <span data-ttu-id="219f2-138">\[[Conjunto de APIs: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="219f2-138">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: valid
  fullName: valid
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly valid: boolean;'
    return:
      type:
      - boolean
