### YamlMime:UniversalReference
ms.openlocfilehash: b56b193c85e9117364d0355daf706d7742edab69
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: pt-BR
ms.lasthandoff: 02/20/2019
ms.locfileid: "30104923"
items:
- uid: excel.Excel.WorksheetFreezePanes
  summary: '<span data-ttu-id="7e489-101">\[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7e489-101">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>'
  name: Excel.WorksheetFreezePanes
  fullName: Excel.WorksheetFreezePanes
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.WorksheetFreezePanes.context
  - excel.Excel.WorksheetFreezePanes.freezeAt
  - excel.Excel.WorksheetFreezePanes.freezeColumns
  - excel.Excel.WorksheetFreezePanes.freezeRows
  - excel.Excel.WorksheetFreezePanes.getLocation
  - excel.Excel.WorksheetFreezePanes.getLocationOrNullObject
  - excel.Excel.WorksheetFreezePanes.toJSON
  - excel.Excel.WorksheetFreezePanes.unfreeze
- uid: excel.Excel.WorksheetFreezePanes.context
  summary: <span data-ttu-id="7e489-102">O contexto de solicitação associado ao objeto.</span><span class="sxs-lookup"><span data-stu-id="7e489-102">The request context associated with the object.</span></span> <span data-ttu-id="7e489-103">Isso conecta o processo do suplemento ao processo do aplicativo host do Office.</span><span class="sxs-lookup"><span data-stu-id="7e489-103">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.WorksheetFreezePanes.freezeAt
  summary: >-
    <span data-ttu-id="7e489-104">Define as células congeladas no modo de exibição da planilha ativa.</span><span class="sxs-lookup"><span data-stu-id="7e489-104">Sets the frozen cells in the active worksheet view.</span></span> <span data-ttu-id="7e489-105">O intervalo fornecido corresponde a células que serão congeladas no painel superior e à esquerda.</span><span class="sxs-lookup"><span data-stu-id="7e489-105">The range provided corresponds to cells that will be frozen in the top- and left-most pane.</span></span>


    <span data-ttu-id="7e489-106">\[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7e489-106">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: freezeAt(frozenRange)
  fullName: freezeAt(frozenRange)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'freezeAt(frozenRange: Range | string): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"7e489-107\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"7e489-107\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n\n    // Freeze the specified range in top-and-left-most pane of the worksheet.\n    sheet.freezePanes.freezeAt(sheet.getRange(\"H2:K5\"));\n\n    await context.sync();\n});\n```"
    parameters:
    - id: frozenRange
      description: <span data-ttu-id="7e489-108">Um intervalo que representa as células a serem congeladas ou nulo para remover todos os painéis congelados.</span><span class="sxs-lookup"><span data-stu-id="7e489-108">A range that represents the cells to be frozen, or null to remove all frozen panes.</span></span>
      type:
      - Range | string
- uid: excel.Excel.WorksheetFreezePanes.freezeColumns
  summary: >-
    <span data-ttu-id="7e489-109">Congela a primeira colunas da planilha no local.</span><span class="sxs-lookup"><span data-stu-id="7e489-109">Freeze the first column(s) of the worksheet in place.</span></span>


    <span data-ttu-id="7e489-110">\[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7e489-110">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: freezeColumns(count)
  fullName: freezeColumns(count)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'freezeColumns(count?: number): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"7e489-111\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"7e489-111\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n\n    // Freeze the first two columns in the worksheet.\n    sheet.freezePanes.freezeColumns(2);\n\n    await context.sync();\n});\n```"
    parameters:
    - id: count
      description: <span data-ttu-id="7e489-112">Número opcional de colunas a serem congeladas ou zero para descongelar todas as colunas</span><span class="sxs-lookup"><span data-stu-id="7e489-112">Optional number of columns to freeze, or zero to unfreeze all columns</span></span>
      type:
      - number
- uid: excel.Excel.WorksheetFreezePanes.freezeRows
  summary: >-
    <span data-ttu-id="7e489-113">Congela as linhas superiores da planilha no local.</span><span class="sxs-lookup"><span data-stu-id="7e489-113">Freeze the top row(s) of the worksheet in place.</span></span>


    <span data-ttu-id="7e489-114">\[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7e489-114">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: freezeRows(count)
  fullName: freezeRows(count)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'freezeRows(count?: number): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"7e489-115\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"7e489-115\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n\n    // Freeze the top two rows in the worksheet.\n    sheet.freezePanes.freezeRows(2);\n\n    await context.sync();\n});\n```"
    parameters:
    - id: count
      description: <span data-ttu-id="7e489-116">Número opcional de linhas a serem congeladas ou zero para descongelar todas as linhas</span><span class="sxs-lookup"><span data-stu-id="7e489-116">Optional number of rows to freeze, or zero to unfreeze all rows</span></span>
      type:
      - number
- uid: excel.Excel.WorksheetFreezePanes.getLocation
  summary: >-
    <span data-ttu-id="7e489-117">Obtém um intervalo que descreve as células congeladas no modo de exibição da planilha ativa.</span><span class="sxs-lookup"><span data-stu-id="7e489-117">Gets a range that describes the frozen cells in the active worksheet view.</span></span> <span data-ttu-id="7e489-118">O intervalo congelado corresponde às células que estão congeladas no painel superior e à esquerda.</span><span class="sxs-lookup"><span data-stu-id="7e489-118">The frozen range is corresponds to cells that are frozen in the top- and left-most pane.</span></span>


    <span data-ttu-id="7e489-119">\[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7e489-119">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getLocation()
  fullName: getLocation()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getLocation(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: ''
- uid: excel.Excel.WorksheetFreezePanes.getLocationOrNullObject
  summary: >-
    <span data-ttu-id="7e489-120">Obtém um intervalo que descreve as células congeladas no modo de exibição da planilha ativa.</span><span class="sxs-lookup"><span data-stu-id="7e489-120">Gets a range that describes the frozen cells in the active worksheet view.</span></span> <span data-ttu-id="7e489-121">O intervalo congelado corresponde às células que estão congeladas no painel superior e à esquerda.</span><span class="sxs-lookup"><span data-stu-id="7e489-121">The frozen range is corresponds to cells that are frozen in the top- and left-most pane.</span></span> <span data-ttu-id="7e489-122">Se não houver nenhum painel congelado, retorna um objeto NULL.</span><span class="sxs-lookup"><span data-stu-id="7e489-122">If there is no frozen pane, returns a null object.</span></span>


    <span data-ttu-id="7e489-123">\[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7e489-123">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getLocationOrNullObject()
  fullName: getLocationOrNullObject()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getLocationOrNullObject(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"7e489-124\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"7e489-124\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const frozenRange = sheet.freezePanes.getLocationOrNullObject();\n    frozenRange.load(\"address\");\n\n    await context.sync();\n\n    if (frozenRange.isNullObject) {\n        console.log(`The worksheet does not contain a frozen pane.`);\n    } else {\n        console.log(`The address of the frozen range (cells that are frozen in the top-and-left-most pane) is \"${frozenRange.address}\"`);\n    }\n});\n```"
- uid: excel.Excel.WorksheetFreezePanes.toJSON
  summary: <span data-ttu-id="7e489-125">Substitui o método `toJSON()` JavaScript para fornecer uma saída mais útil quando um objeto API é passado para `JSON.stringify()` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="7e489-125">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="7e489-126">(`JSON.stringify`<!-- -->, por sua vez, chama `toJSON` o método do objeto que é passado para ele). Enquanto o objeto Excel. WorksheetFreezePanes original é um objeto API, o `toJSON` método retorna um objeto JavaScript simples (digitado `Excel.Interfaces.WorksheetFreezePanesData` <!-- -->como) que contém cópias superficiais de qualquer propriedade filho carregada do objeto original.</span><span class="sxs-lookup"><span data-stu-id="7e489-126">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.WorksheetFreezePanes object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.WorksheetFreezePanesData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: >-
      toJSON(): {
                  [key: string]: string;
              };
    return:
      type:
      - >-
        {
                    [key: string]: string;
                }
      description: ''
- uid: excel.Excel.WorksheetFreezePanes.unfreeze
  summary: >-
    <span data-ttu-id="7e489-127">Remove todos os painéis congelados na planilha.</span><span class="sxs-lookup"><span data-stu-id="7e489-127">Removes all frozen panes in the worksheet.</span></span>


    <span data-ttu-id="7e489-128">\[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7e489-128">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: unfreeze()
  fullName: unfreeze()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'unfreeze(): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"7e489-129\">Examples</span><span class=\"sxs-lookup\"><span data-stu-id=\"7e489-129\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    sheet.freezePanes.unfreeze();\n\n    await context.sync();\n});\n```"
