### YamlMime:UniversalReference
ms.openlocfilehash: b56b193c85e9117364d0355daf706d7742edab69
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: pt-BR
ms.lasthandoff: 02/20/2019
ms.locfileid: "30104923"
items:
- uid: excel.Excel.WorksheetFreezePanes
  summary: '\[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]'
  name: Excel.WorksheetFreezePanes
  fullName: Excel.WorksheetFreezePanes
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.WorksheetFreezePanes.context
  - excel.Excel.WorksheetFreezePanes.freezeAt
  - excel.Excel.WorksheetFreezePanes.freezeColumns
  - excel.Excel.WorksheetFreezePanes.freezeRows
  - excel.Excel.WorksheetFreezePanes.getLocation
  - excel.Excel.WorksheetFreezePanes.getLocationOrNullObject
  - excel.Excel.WorksheetFreezePanes.toJSON
  - excel.Excel.WorksheetFreezePanes.unfreeze
- uid: excel.Excel.WorksheetFreezePanes.context
  summary: O contexto de solicitação associado ao objeto. Isso conecta o processo do suplemento ao processo do aplicativo host do Office.
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.WorksheetFreezePanes.freezeAt
  summary: >-
    Define as células congeladas no modo de exibição da planilha ativa. O intervalo fornecido corresponde a células que serão congeladas no painel superior e à esquerda.


    \[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: freezeAt(frozenRange)
  fullName: freezeAt(frozenRange)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'freezeAt(frozenRange: Range | string): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a>Exemplos\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n\n    // Freeze the specified range in top-and-left-most pane of the worksheet.\n    sheet.freezePanes.freezeAt(sheet.getRange(\"H2:K5\"));\n\n    await context.sync();\n});\n```"
    parameters:
    - id: frozenRange
      description: Um intervalo que representa as células a serem congeladas ou nulo para remover todos os painéis congelados.
      type:
      - Range | string
- uid: excel.Excel.WorksheetFreezePanes.freezeColumns
  summary: >-
    Congela a primeira colunas da planilha no local.


    \[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: freezeColumns(count)
  fullName: freezeColumns(count)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'freezeColumns(count?: number): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a>Exemplos\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n\n    // Freeze the first two columns in the worksheet.\n    sheet.freezePanes.freezeColumns(2);\n\n    await context.sync();\n});\n```"
    parameters:
    - id: count
      description: Número opcional de colunas a serem congeladas ou zero para descongelar todas as colunas
      type:
      - number
- uid: excel.Excel.WorksheetFreezePanes.freezeRows
  summary: >-
    Congela as linhas superiores da planilha no local.


    \[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: freezeRows(count)
  fullName: freezeRows(count)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'freezeRows(count?: number): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a>Exemplos\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n\n    // Freeze the top two rows in the worksheet.\n    sheet.freezePanes.freezeRows(2);\n\n    await context.sync();\n});\n```"
    parameters:
    - id: count
      description: Número opcional de linhas a serem congeladas ou zero para descongelar todas as linhas
      type:
      - number
- uid: excel.Excel.WorksheetFreezePanes.getLocation
  summary: >-
    Obtém um intervalo que descreve as células congeladas no modo de exibição da planilha ativa. O intervalo congelado corresponde às células que estão congeladas no painel superior e à esquerda.


    \[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: getLocation()
  fullName: getLocation()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getLocation(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: ''
- uid: excel.Excel.WorksheetFreezePanes.getLocationOrNullObject
  summary: >-
    Obtém um intervalo que descreve as células congeladas no modo de exibição da planilha ativa. O intervalo congelado corresponde às células que estão congeladas no painel superior e à esquerda. Se não houver nenhum painel congelado, retorna um objeto NULL.


    \[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: getLocationOrNullObject()
  fullName: getLocationOrNullObject()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getLocationOrNullObject(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a>Exemplos\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const frozenRange = sheet.freezePanes.getLocationOrNullObject();\n    frozenRange.load(\"address\");\n\n    await context.sync();\n\n    if (frozenRange.isNullObject) {\n        console.log(`The worksheet does not contain a frozen pane.`);\n    } else {\n        console.log(`The address of the frozen range (cells that are frozen in the top-and-left-most pane) is \"${frozenRange.address}\"`);\n    }\n});\n```"
- uid: excel.Excel.WorksheetFreezePanes.toJSON
  summary: Substitui o método `toJSON()` JavaScript para fornecer uma saída mais útil quando um objeto API é passado para `JSON.stringify()` <!-- -->. (`JSON.stringify`<!-- -->, por sua vez, chama `toJSON` o método do objeto que é passado para ele). Enquanto o objeto Excel. WorksheetFreezePanes original é um objeto API, o `toJSON` método retorna um objeto JavaScript simples (digitado `Excel.Interfaces.WorksheetFreezePanesData` <!-- -->como) que contém cópias superficiais de qualquer propriedade filho carregada do objeto original.
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: >-
      toJSON(): {
                  [key: string]: string;
              };
    return:
      type:
      - >-
        {
                    [key: string]: string;
                }
      description: ''
- uid: excel.Excel.WorksheetFreezePanes.unfreeze
  summary: >-
    Remove todos os painéis congelados na planilha.


    \[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: unfreeze()
  fullName: unfreeze()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'unfreeze(): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a>Examples\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    sheet.freezePanes.unfreeze();\n\n    await context.sync();\n});\n```"
