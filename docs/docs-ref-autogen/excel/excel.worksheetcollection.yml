### YamlMime:UniversalReference
items:
  - uid: excel.Excel.WorksheetCollection
    summary: |-
      <span data-ttu-id="1567c-101">Representa uma coleção de todos os objetos da planilha que fazem parte da pasta de trabalho.</span><span class="sxs-lookup"><span data-stu-id="1567c-101">Represents a collection of worksheet objects that are part of the workbook.</span></span>

      <span data-ttu-id="1567c-102">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1567c-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.WorksheetCollection
    fullName: Excel.WorksheetCollection
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: excel
    children:
      - excel.Excel.WorksheetCollection.add
      - excel.Excel.WorksheetCollection.addFromBase64
      - excel.Excel.WorksheetCollection.addFromBase64_1
      - excel.Excel.WorksheetCollection.context
      - excel.Excel.WorksheetCollection.getActiveWorksheet
      - excel.Excel.WorksheetCollection.getCount
      - excel.Excel.WorksheetCollection.getFirst
      - excel.Excel.WorksheetCollection.getItem
      - excel.Excel.WorksheetCollection.getItemOrNullObject
      - excel.Excel.WorksheetCollection.getLast
      - excel.Excel.WorksheetCollection.items
      - excel.Excel.WorksheetCollection.load
      - excel.Excel.WorksheetCollection.load_1
      - excel.Excel.WorksheetCollection.load_2
      - excel.Excel.WorksheetCollection.onActivated
      - excel.Excel.WorksheetCollection.onAdded
      - excel.Excel.WorksheetCollection.onCalculated
      - excel.Excel.WorksheetCollection.onChanged
      - excel.Excel.WorksheetCollection.onColumnSorted
      - excel.Excel.WorksheetCollection.onDeactivated
      - excel.Excel.WorksheetCollection.onDeleted
      - excel.Excel.WorksheetCollection.onFiltered
      - excel.Excel.WorksheetCollection.onFormatChanged
      - excel.Excel.WorksheetCollection.onRowHiddenChanged
      - excel.Excel.WorksheetCollection.onRowSorted
      - excel.Excel.WorksheetCollection.onSelectionChanged
      - excel.Excel.WorksheetCollection.onSingleClicked
      - excel.Excel.WorksheetCollection.toJSON
  - uid: excel.Excel.WorksheetCollection.add
    summary: |-
      <span data-ttu-id="1567c-p101">Adiciona uma nova planilha à pasta de trabalho. A planilha será adicionada ao final das planilhas existentes. Se você quiser ativar a planilha recém-adicionada, chame “.activate()” nela.</span><span class="sxs-lookup"><span data-stu-id="1567c-p101">Adds a new worksheet to the workbook. The worksheet will be added at the end of existing worksheets. If you wish to activate the newly added worksheet, call ".activate() on it.</span></span>

      <span data-ttu-id="1567c-106">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1567c-106">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: add(name)
    fullName: add(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(name?: string): Excel.Worksheet;'
      return:
        type:
          - excel.Excel.Worksheet
        description: |-


          #### <a name="examples"></a><span data-ttu-id="1567c-107">Exemplos</span><span class="sxs-lookup"><span data-stu-id="1567c-107">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var wSheetName = 'Sample Name';
              var worksheet = ctx.workbook.worksheets.add(wSheetName);
              worksheet.load('name');
              return ctx.sync().then(function() {
                  console.log(worksheet.name);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: name
          description: '<span data-ttu-id="1567c-p102">Opcional. O nome da planilha a ser adicionada. Se especificado, o nome deve ser exclusivo. Se não especificado, o Excel determina o nome da nova planilha.</span><span class="sxs-lookup"><span data-stu-id="1567c-p102">Optional. The name of the worksheet to be added. If specified, name should be unqiue. If not specified, Excel determines the name of the new worksheet.</span></span>'
          type:
            - string
  - uid: excel.Excel.WorksheetCollection.addFromBase64
    summary: |-
      <span data-ttu-id="1567c-112">Insere as planilhas especificadas de uma pasta de trabalho na pasta de trabalho atual.</span><span class="sxs-lookup"><span data-stu-id="1567c-112">Inserts the specified worksheets of a workbook into the current workbook.</span></span>

      <span data-ttu-id="1567c-113">\[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1567c-113">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: 'addFromBase64(base64File, sheetNamesToInsert, positionType, relativeTo)'
    fullName: 'addFromBase64(base64File, sheetNamesToInsert, positionType, relativeTo)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addFromBase64(base64File: string, sheetNamesToInsert?: string[], positionType?: Excel.WorksheetPositionType, relativeTo?: Worksheet | string): OfficeExtension.ClientResult<string[]>;'
      return:
        type:
          - 'OfficeExtension.ClientResult<string[]>'
        description: |-
          <span data-ttu-id="1567c-114">Uma matriz de IDs correspondente a cada nova planilha inserida.</span><span class="sxs-lookup"><span data-stu-id="1567c-114">An array of ids corresponding to each newly inserted worksheet.</span></span>

          #### <a name="examples"></a><span data-ttu-id="1567c-115">Exemplos</span><span class="sxs-lookup"><span data-stu-id="1567c-115">Examples</span></span>

          ```javascript
          const myFile = <HTMLInputElement>document.getElementById("file");
          const reader = new FileReader();

          reader.onload = (event) => {
              Excel.run((context) => {
                  // strip off the metadata before the base64-encoded string
                  const startIndex = (<string>(<FileReader>event.target).result).indexOf("base64,");
                  const workbookContents = (<string>(<FileReader>event.target).result).substr(startIndex + 7);

                  const sheets = context.workbook.worksheets;
                  sheets.addFromBase64(
                      workbookContents,
                      null, // get all the worksheets 
                      Excel.WorksheetPositionType.end // insert them after the current workbook's worksheets
                      );
                  return context.sync();
              });
          };

          // read in the file as a data URL so we can parse the base64-encoded string
          reader.readAsDataURL(myFile.files[0]);
          ```
      parameters:
        - id: base64File
          description: <span data-ttu-id="1567c-116">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="1567c-116">Required.</span></span> <span data-ttu-id="1567c-117">A cadeia de caracteres codificada em base64 que representa o arquivo de pasta de trabalho de origem.</span><span class="sxs-lookup"><span data-stu-id="1567c-117">The base64-encoded string representing the source workbook file.</span></span>
          type:
            - string
        - id: sheetNamesToInsert
          description: '<span data-ttu-id="1567c-118">Opcional.</span><span class="sxs-lookup"><span data-stu-id="1567c-118">Optional.</span></span> <span data-ttu-id="1567c-119">Os nomes de planilhas individuais a serem inseridas.</span><span class="sxs-lookup"><span data-stu-id="1567c-119">The names of individual worksheets to insert.</span></span> <span data-ttu-id="1567c-120">Por padrão, todas as planilhas da pasta de trabalho de origem são inseridas.</span><span class="sxs-lookup"><span data-stu-id="1567c-120">By default, all the worksheets from the source workbook are inserted.</span></span>'
          type:
            - 'string[]'
        - id: positionType
          description: <span data-ttu-id="1567c-121">Opcional.</span><span class="sxs-lookup"><span data-stu-id="1567c-121">Optional.</span></span> <span data-ttu-id="1567c-122">Em que na pasta de trabalho atual as novas planilhas serão inseridas.</span><span class="sxs-lookup"><span data-stu-id="1567c-122">Where in the current workbook the new worksheets will be inserted.</span></span> <span data-ttu-id="1567c-123">Consulte Excel. WorksheetPositionType para obter detalhes.</span><span class="sxs-lookup"><span data-stu-id="1567c-123">See Excel.WorksheetPositionType for details.</span></span> <span data-ttu-id="1567c-124">O padrão é "Start".</span><span class="sxs-lookup"><span data-stu-id="1567c-124">Default is "Start".</span></span>
          type:
            - excel.Excel.WorksheetPositionType
        - id: relativeTo
          description: '<span data-ttu-id="1567c-125">Opcional.</span><span class="sxs-lookup"><span data-stu-id="1567c-125">Optional.</span></span> <span data-ttu-id="1567c-126">A planilha na pasta de trabalho atual que é referenciada para o parâmetro PositionType.</span><span class="sxs-lookup"><span data-stu-id="1567c-126">The worksheet in the current workbook that is referenced for the positionType parameter.</span></span> <span data-ttu-id="1567c-127">O padrão é nulo e, com base em PositionType, ele inserirá planilhas no início ou no final da pasta de trabalho atual.</span><span class="sxs-lookup"><span data-stu-id="1567c-127">Default is null and, based on positionType, it will insert worksheets at the start or end of the current workbook.</span></span>'
          type:
            - Worksheet | string
  - uid: excel.Excel.WorksheetCollection.addFromBase64_1
    summary: |-
      <span data-ttu-id="1567c-128">Insere as planilhas especificadas de uma pasta de trabalho na pasta de trabalho atual.</span><span class="sxs-lookup"><span data-stu-id="1567c-128">Inserts the specified worksheets of a workbook into the current workbook.</span></span>

      <span data-ttu-id="1567c-129">\[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1567c-129">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: 'addFromBase64(base64File, sheetNamesToInsert, positionTypeString, relativeTo)'
    fullName: 'addFromBase64(base64File, sheetNamesToInsert, positionTypeString, relativeTo)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addFromBase64(base64File: string, sheetNamesToInsert?: string[], positionTypeString?: "None" | "Before" | "After" | "Beginning" | "End", relativeTo?: Worksheet | string): OfficeExtension.ClientResult<string[]>;'
      return:
        type:
          - 'OfficeExtension.ClientResult<string[]>'
        description: <span data-ttu-id="1567c-130">Uma matriz de IDs correspondente a cada nova planilha inserida.</span><span class="sxs-lookup"><span data-stu-id="1567c-130">An array of ids corresponding to each newly inserted worksheet.</span></span>
      parameters:
        - id: base64File
          description: <span data-ttu-id="1567c-131">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="1567c-131">Required.</span></span> <span data-ttu-id="1567c-132">A cadeia de caracteres codificada em base64 que representa o arquivo de pasta de trabalho de origem.</span><span class="sxs-lookup"><span data-stu-id="1567c-132">The base64-encoded string representing the source workbook file.</span></span>
          type:
            - string
        - id: sheetNamesToInsert
          description: '<span data-ttu-id="1567c-133">Opcional.</span><span class="sxs-lookup"><span data-stu-id="1567c-133">Optional.</span></span> <span data-ttu-id="1567c-134">Os nomes de planilhas individuais a serem inseridas.</span><span class="sxs-lookup"><span data-stu-id="1567c-134">The names of individual worksheets to insert.</span></span> <span data-ttu-id="1567c-135">Por padrão, todas as planilhas da pasta de trabalho de origem são inseridas.</span><span class="sxs-lookup"><span data-stu-id="1567c-135">By default, all the worksheets from the source workbook are inserted.</span></span>'
          type:
            - 'string[]'
        - id: positionTypeString
          description: <span data-ttu-id="1567c-136">Opcional.</span><span class="sxs-lookup"><span data-stu-id="1567c-136">Optional.</span></span> <span data-ttu-id="1567c-137">Em que na pasta de trabalho atual as novas planilhas serão inseridas.</span><span class="sxs-lookup"><span data-stu-id="1567c-137">Where in the current workbook the new worksheets will be inserted.</span></span> <span data-ttu-id="1567c-138">Consulte Excel. WorksheetPositionType para obter detalhes.</span><span class="sxs-lookup"><span data-stu-id="1567c-138">See Excel.WorksheetPositionType for details.</span></span> <span data-ttu-id="1567c-139">O padrão é "Start".</span><span class="sxs-lookup"><span data-stu-id="1567c-139">Default is "Start".</span></span>
          type:
            - '"None" | "Before" | "After" | "Beginning" | "End"'
        - id: relativeTo
          description: '<span data-ttu-id="1567c-140">Opcional.</span><span class="sxs-lookup"><span data-stu-id="1567c-140">Optional.</span></span> <span data-ttu-id="1567c-141">A planilha na pasta de trabalho atual que é referenciada para o parâmetro PositionType.</span><span class="sxs-lookup"><span data-stu-id="1567c-141">The worksheet in the current workbook that is referenced for the positionType parameter.</span></span> <span data-ttu-id="1567c-142">O padrão é nulo e, com base em PositionType, ele inserirá planilhas no início ou no final da pasta de trabalho atual.</span><span class="sxs-lookup"><span data-stu-id="1567c-142">Default is null and, based on positionType, it will insert worksheets at the start or end of the current workbook.</span></span>'
          type:
            - Worksheet | string
  - uid: excel.Excel.WorksheetCollection.context
    summary: <span data-ttu-id="1567c-143">O contexto de solicitação associado ao objeto.</span><span class="sxs-lookup"><span data-stu-id="1567c-143">The request context associated with the object.</span></span> <span data-ttu-id="1567c-144">Isso conecta o processo do suplemento ao processo do aplicativo host do Office.</span><span class="sxs-lookup"><span data-stu-id="1567c-144">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: excel.Excel.WorksheetCollection.getActiveWorksheet
    summary: |-
      <span data-ttu-id="1567c-145">Obtém a planilha ativa no momento na pasta de trabalho.</span><span class="sxs-lookup"><span data-stu-id="1567c-145">Gets the currently active worksheet in the workbook.</span></span>

      <span data-ttu-id="1567c-146">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1567c-146">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getActiveWorksheet()
    fullName: getActiveWorksheet()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getActiveWorksheet(): Excel.Worksheet;'
      return:
        type:
          - excel.Excel.Worksheet
        description: |-


          #### <a name="examples"></a><span data-ttu-id="1567c-147">Exemplos</span><span class="sxs-lookup"><span data-stu-id="1567c-147">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) {  
              var activeWorksheet = ctx.workbook.worksheets.getActiveWorksheet();
              activeWorksheet.load('name');
              return ctx.sync().then(function() {
                      console.log(activeWorksheet.name);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: excel.Excel.WorksheetCollection.getCount
    summary: |-
      <span data-ttu-id="1567c-148">Obtém o número de planilhas na coleção.</span><span class="sxs-lookup"><span data-stu-id="1567c-148">Gets the number of worksheets in the collection.</span></span>

      <span data-ttu-id="1567c-149">\[[Conjunto de APIs: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1567c-149">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getCount(visibleOnly)
    fullName: getCount(visibleOnly)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(visibleOnly?: boolean): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - OfficeExtension.ClientResult<number>
        description: ''
      parameters:
        - id: visibleOnly
          description: '<span data-ttu-id="1567c-150">Opcional.</span><span class="sxs-lookup"><span data-stu-id="1567c-150">Optional.</span></span> <span data-ttu-id="1567c-151">Se true, só considera planilhas visíveis, ignorando as ocultas.</span><span class="sxs-lookup"><span data-stu-id="1567c-151">If true, considers only visible worksheets, skipping over any hidden ones.</span></span>'
          type:
            - boolean
  - uid: excel.Excel.WorksheetCollection.getFirst
    summary: |-
      <span data-ttu-id="1567c-152">Obtém a primeira planilha na coleção.</span><span class="sxs-lookup"><span data-stu-id="1567c-152">Gets the first worksheet in the collection.</span></span>

      <span data-ttu-id="1567c-153">\[[Conjunto de APIs: ExcelApi 1,5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1567c-153">\[ [API set: ExcelApi 1.5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getFirst(visibleOnly)
    fullName: getFirst(visibleOnly)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getFirst(visibleOnly?: boolean): Excel.Worksheet;'
      return:
        type:
          - excel.Excel.Worksheet
        description: |-


          #### <a name="examples"></a><span data-ttu-id="1567c-154">Exemplos</span><span class="sxs-lookup"><span data-stu-id="1567c-154">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheets = context.workbook.worksheets;

              // We don't want to include the default worksheet that was created
              // when the workbook was created, so our "firstSheet" will be the one
              // after the literal first. Note chaining of navigation methods.
              const firstSheet = sheets.getFirst().getNext();
              const lastSheet = sheets.getLast();
              const firstTaxRateRange = firstSheet.getRange("B2");
              const lastTaxRateRange = lastSheet.getRange("B2");

              firstSheet.load("name");
              lastSheet.load("name");
              firstTaxRateRange.load("text");
              lastTaxRateRange.load("text");

              await context.sync();

              let firstYear = firstSheet.name.substr(5, 4);
              let lastYear = lastSheet.name.substr(5, 4);
              console.log(`Tax Rate change from ${firstYear} to ${lastYear}`, `Tax rate for ${firstYear}: ${firstTaxRateRange.text[0][0]}\nTax rate for ${lastYear}: ${lastTaxRateRange.text[0][0]}`)

              await context.sync();
          });
          ```
      parameters:
        - id: visibleOnly
          description: '<span data-ttu-id="1567c-155">Opcional.</span><span class="sxs-lookup"><span data-stu-id="1567c-155">Optional.</span></span> <span data-ttu-id="1567c-156">Se true, só considera planilhas visíveis, ignorando as ocultas.</span><span class="sxs-lookup"><span data-stu-id="1567c-156">If true, considers only visible worksheets, skipping over any hidden ones.</span></span>'
          type:
            - boolean
  - uid: excel.Excel.WorksheetCollection.getItem
    summary: |-
      <span data-ttu-id="1567c-157">Obtém um objeto worksheet usando o Nome ou ID dele.</span><span class="sxs-lookup"><span data-stu-id="1567c-157">Gets a worksheet object using its Name or ID.</span></span>

      <span data-ttu-id="1567c-158">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1567c-158">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItem(key)
    fullName: getItem(key)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(key: string): Excel.Worksheet;'
      return:
        type:
          - excel.Excel.Worksheet
        description: ''
      parameters:
        - id: key
          description: <span data-ttu-id="1567c-159">O Nome ou ID da planilha.</span><span class="sxs-lookup"><span data-stu-id="1567c-159">The Name or ID of the worksheet.</span></span>
          type:
            - string
  - uid: excel.Excel.WorksheetCollection.getItemOrNullObject
    summary: |-
      <span data-ttu-id="1567c-160">Obtém um objeto worksheet usando o Nome ou ID dele.</span><span class="sxs-lookup"><span data-stu-id="1567c-160">Gets a worksheet object using its Name or ID.</span></span> <span data-ttu-id="1567c-161">Se a planilha não existir, retornará um objeto null.</span><span class="sxs-lookup"><span data-stu-id="1567c-161">If the worksheet does not exist, will return a null object.</span></span>

      <span data-ttu-id="1567c-162">\[[Conjunto de APIs: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1567c-162">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItemOrNullObject(key)
    fullName: getItemOrNullObject(key)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemOrNullObject(key: string): Excel.Worksheet;'
      return:
        type:
          - excel.Excel.Worksheet
        description: ''
      parameters:
        - id: key
          description: <span data-ttu-id="1567c-163">O Nome ou ID da planilha.</span><span class="sxs-lookup"><span data-stu-id="1567c-163">The Name or ID of the worksheet.</span></span>
          type:
            - string
  - uid: excel.Excel.WorksheetCollection.getLast
    summary: |-
      <span data-ttu-id="1567c-164">Obtém a última planilha na coleção.</span><span class="sxs-lookup"><span data-stu-id="1567c-164">Gets the last worksheet in the collection.</span></span>

      <span data-ttu-id="1567c-165">\[[Conjunto de APIs: ExcelApi 1,5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1567c-165">\[ [API set: ExcelApi 1.5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getLast(visibleOnly)
    fullName: getLast(visibleOnly)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getLast(visibleOnly?: boolean): Excel.Worksheet;'
      return:
        type:
          - excel.Excel.Worksheet
        description: |-


          #### <a name="examples"></a><span data-ttu-id="1567c-166">Exemplos</span><span class="sxs-lookup"><span data-stu-id="1567c-166">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheets = context.workbook.worksheets;

              // We don't want to include the default worksheet that was created
              // when the workbook was created, so our "firstSheet" will be the one
              // after the literal first. Note chaining of navigation methods.
              const firstSheet = sheets.getFirst().getNext();
              const lastSheet = sheets.getLast();
              const firstTaxRateRange = firstSheet.getRange("B2");
              const lastTaxRateRange = lastSheet.getRange("B2");

              firstSheet.load("name");
              lastSheet.load("name");
              firstTaxRateRange.load("text");
              lastTaxRateRange.load("text");

              await context.sync();

              let firstYear = firstSheet.name.substr(5, 4);
              let lastYear = lastSheet.name.substr(5, 4);
              console.log(`Tax Rate change from ${firstYear} to ${lastYear}`, `Tax rate for ${firstYear}: ${firstTaxRateRange.text[0][0]}\nTax rate for ${lastYear}: ${lastTaxRateRange.text[0][0]}`)

              await context.sync();
          });
          ```
      parameters:
        - id: visibleOnly
          description: '<span data-ttu-id="1567c-167">Opcional.</span><span class="sxs-lookup"><span data-stu-id="1567c-167">Optional.</span></span> <span data-ttu-id="1567c-168">Se true, só considera planilhas visíveis, ignorando as ocultas.</span><span class="sxs-lookup"><span data-stu-id="1567c-168">If true, considers only visible worksheets, skipping over any hidden ones.</span></span>'
          type:
            - boolean
  - uid: excel.Excel.WorksheetCollection.items
    summary: <span data-ttu-id="1567c-169">Obtém os itens filhos carregados nesta coleção.</span><span class="sxs-lookup"><span data-stu-id="1567c-169">Gets the loaded child items in this collection.</span></span>
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.Worksheet[];'
      return:
        type:
          - 'Excel.Worksheet[]'
  - uid: excel.Excel.WorksheetCollection.load
    summary: <span data-ttu-id="1567c-170">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="1567c-170">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="1567c-171">Você deve chamar "context.sync()" antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="1567c-171">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="1567c-172">Além dessa assinatura, este método tem as seguintes assinaturas:</span><span class="sxs-lookup"><span data-stu-id="1567c-172">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="1567c-173">`load(option?: string | string[]): Excel.WorksheetCollection`-Where Option é uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="1567c-173">`load(option?: string | string[]): Excel.WorksheetCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="1567c-174">`load(option?: { select?: string; expand?: string; }): Excel.WorksheetCollection`-Onde Option. Select é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades a serem carregadas, e Options. Expand é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades de navegação a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="1567c-174">`load(option?: { select?: string; expand?: string; }): Excel.WorksheetCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="1567c-175">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.WorksheetCollection`– Disponível somente nos tipos de coleção.</span><span class="sxs-lookup"><span data-stu-id="1567c-175">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.WorksheetCollection` - Only available on collection types.</span></span> <span data-ttu-id="1567c-176">É semelhante à assinatura anterior.</span><span class="sxs-lookup"><span data-stu-id="1567c-176">It is similar to the preceding signature.</span></span> <span data-ttu-id="1567c-177">Option. Top especifica o número máximo de itens de coleta que podem ser incluídos no resultado.</span><span class="sxs-lookup"><span data-stu-id="1567c-177">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="1567c-178">Option. Skip especifica o número de itens que devem ser ignorados e não incluídos no resultado.</span><span class="sxs-lookup"><span data-stu-id="1567c-178">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="1567c-179">Se Option. Top for especificado, o conjunto de resultados será iniciado depois de ignorar o número de itens especificado.</span><span class="sxs-lookup"><span data-stu-id="1567c-179">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.WorksheetCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.WorksheetCollection;'
      return:
        type:
          - excel.Excel.WorksheetCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - Excel.Interfaces.WorksheetCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
  - uid: excel.Excel.WorksheetCollection.load_1
    summary: <span data-ttu-id="1567c-180">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="1567c-180">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="1567c-181">Você deve chamar `context.sync()` antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="1567c-181">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.WorksheetCollection;'
      return:
        type:
          - excel.Excel.WorksheetCollection
        description: |-


          #### <a name="examples"></a><span data-ttu-id="1567c-182">Exemplos</span><span class="sxs-lookup"><span data-stu-id="1567c-182">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var worksheets = ctx.workbook.worksheets;
              worksheets.load('items');
              return ctx.sync().then(function() {
                  for (var i = 0; i < worksheets.items.length; i++)
                  {
                      console.log(worksheets.items[i].name);
                      console.log(worksheets.items[i].index);
                  }
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="1567c-183">Uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="1567c-183">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: excel.Excel.WorksheetCollection.load_2
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): Excel.WorksheetCollection;'
      return:
        type:
          - excel.Excel.WorksheetCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - office.OfficeExtension.LoadOption
  - uid: excel.Excel.WorksheetCollection.onActivated
    summary: |-
      <span data-ttu-id="1567c-184">Ocorre quando qualquer planilha na pasta de trabalho é ativada.</span><span class="sxs-lookup"><span data-stu-id="1567c-184">Occurs when any worksheet in the workbook is activated.</span></span>

      <span data-ttu-id="1567c-185">\[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1567c-185">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: onActivated
    fullName: onActivated
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onActivated: OfficeExtension.EventHandlers<Excel.WorksheetActivatedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.WorksheetActivatedEventArgs>
        description: |-


          #### <a name="examples"></a><span data-ttu-id="1567c-186">Exemplos</span><span class="sxs-lookup"><span data-stu-id="1567c-186">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              let sheets = context.workbook.worksheets;
              sheets.onActivated.add(onActivate);

              await context.sync();
              console.log("A handler has been registered for the OnActivate event.");
          });
          ```
  - uid: excel.Excel.WorksheetCollection.onAdded
    summary: |-
      <span data-ttu-id="1567c-187">Ocorre quando uma nova planilha é adicionada à pasta de trabalho.</span><span class="sxs-lookup"><span data-stu-id="1567c-187">Occurs when a new worksheet is added to the workbook.</span></span>

      <span data-ttu-id="1567c-188">\[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1567c-188">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: onAdded
    fullName: onAdded
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onAdded: OfficeExtension.EventHandlers<Excel.WorksheetAddedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.WorksheetAddedEventArgs>
        description: |-


          #### <a name="examples"></a><span data-ttu-id="1567c-189">Exemplos</span><span class="sxs-lookup"><span data-stu-id="1567c-189">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              let sheet = context.workbook.worksheets;
              sheet.onAdded.add(onWorksheetAdd);

              await context.sync();
              console.log("A handler has been registered for the OnAdded event.");
          });
          ```
  - uid: excel.Excel.WorksheetCollection.onCalculated
    summary: |-
      <span data-ttu-id="1567c-190">Ocorre quando qualquer planilha na pasta de trabalho é calculada.</span><span class="sxs-lookup"><span data-stu-id="1567c-190">Occurs when any worksheet in the workbook is calculated.</span></span>

      <span data-ttu-id="1567c-191">\[[Conjunto de APIs: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1567c-191">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: onCalculated
    fullName: onCalculated
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onCalculated: OfficeExtension.EventHandlers<Excel.WorksheetCalculatedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.WorksheetCalculatedEventArgs>
  - uid: excel.Excel.WorksheetCollection.onChanged
    summary: |-
      <span data-ttu-id="1567c-192">Ocorre quando uma planilha da pasta de trabalho é alterada.</span><span class="sxs-lookup"><span data-stu-id="1567c-192">Occurs when any worksheet in the workbook is changed.</span></span>

      <span data-ttu-id="1567c-193">\[[Conjunto de APIs: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1567c-193">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: onChanged
    fullName: onChanged
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onChanged: OfficeExtension.EventHandlers<Excel.WorksheetChangedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.WorksheetChangedEventArgs>
  - uid: excel.Excel.WorksheetCollection.onColumnSorted
    summary: |-
      <span data-ttu-id="1567c-194">Ocorre durante a classificação de colunas.</span><span class="sxs-lookup"><span data-stu-id="1567c-194">Occurs when sorting on columns.</span></span>

      <span data-ttu-id="1567c-195">\[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1567c-195">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: onColumnSorted
    fullName: onColumnSorted
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onColumnSorted: OfficeExtension.EventHandlers<Excel.WorksheetColumnSortedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.WorksheetColumnSortedEventArgs>
  - uid: excel.Excel.WorksheetCollection.onDeactivated
    summary: |-
      <span data-ttu-id="1567c-196">Ocorre quando qualquer planilha na pasta de trabalho é desativada.</span><span class="sxs-lookup"><span data-stu-id="1567c-196">Occurs when any worksheet in the workbook is deactivated.</span></span>

      <span data-ttu-id="1567c-197">\[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1567c-197">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: onDeactivated
    fullName: onDeactivated
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onDeactivated: OfficeExtension.EventHandlers<Excel.WorksheetDeactivatedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.WorksheetDeactivatedEventArgs>
        description: |-


          #### <a name="examples"></a><span data-ttu-id="1567c-198">Exemplos</span><span class="sxs-lookup"><span data-stu-id="1567c-198">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              let sheets = context.workbook.worksheets;
              sheets.onDeactivated.add(onDeactivate);

              await context.sync();
              console.log("A handler has been registered for the OnDeactivate event.");
          });
          ```
  - uid: excel.Excel.WorksheetCollection.onDeleted
    summary: |-
      <span data-ttu-id="1567c-199">Ocorre quando uma planilha é excluída da pasta de trabalho.</span><span class="sxs-lookup"><span data-stu-id="1567c-199">Occurs when a worksheet is deleted from the workbook.</span></span>

      <span data-ttu-id="1567c-200">\[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1567c-200">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: onDeleted
    fullName: onDeleted
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onDeleted: OfficeExtension.EventHandlers<Excel.WorksheetDeletedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.WorksheetDeletedEventArgs>
  - uid: excel.Excel.WorksheetCollection.onFiltered
    summary: |-
      <span data-ttu-id="1567c-201">Ocorre quando filtro de uma planilha é aplicado na pasta de trabalho.</span><span class="sxs-lookup"><span data-stu-id="1567c-201">Occurs when any worksheet's filter is applied in the workbook.</span></span>

      <span data-ttu-id="1567c-202">\[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1567c-202">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: onFiltered
    fullName: onFiltered
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onFiltered: OfficeExtension.EventHandlers<Excel.WorksheetFilteredEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.WorksheetFilteredEventArgs>
  - uid: excel.Excel.WorksheetCollection.onFormatChanged
    summary: |-
      <span data-ttu-id="1567c-203">Ocorre quando uma planilha na pasta de trabalho tem o formato alterado.</span><span class="sxs-lookup"><span data-stu-id="1567c-203">Occurs when any worksheet in the workbook has format changed.</span></span>

      <span data-ttu-id="1567c-204">\[[Conjunto de APIs: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1567c-204">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: onFormatChanged
    fullName: onFormatChanged
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onFormatChanged: OfficeExtension.EventHandlers<Excel.WorksheetFormatChangedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.WorksheetFormatChangedEventArgs>
  - uid: excel.Excel.WorksheetCollection.onRowHiddenChanged
    summary: |-
      <span data-ttu-id="1567c-205">Ocorre quando qualquer planilha na pasta de trabalho tem o estado oculto de linha alterado.</span><span class="sxs-lookup"><span data-stu-id="1567c-205">Occurs when any worksheet in the workbook has row hidden state changed.</span></span>

      <span data-ttu-id="1567c-206">\[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1567c-206">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: onRowHiddenChanged
    fullName: onRowHiddenChanged
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onRowHiddenChanged: OfficeExtension.EventHandlers<Excel.WorksheetRowHiddenChangedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.WorksheetRowHiddenChangedEventArgs>
  - uid: excel.Excel.WorksheetCollection.onRowSorted
    summary: |-
      <span data-ttu-id="1567c-207">Ocorre durante a classificação de linhas.</span><span class="sxs-lookup"><span data-stu-id="1567c-207">Occurs when sorting on rows.</span></span>

      <span data-ttu-id="1567c-208">\[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1567c-208">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: onRowSorted
    fullName: onRowSorted
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onRowSorted: OfficeExtension.EventHandlers<Excel.WorksheetRowSortedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.WorksheetRowSortedEventArgs>
  - uid: excel.Excel.WorksheetCollection.onSelectionChanged
    summary: |-
      <span data-ttu-id="1567c-209">Ocorre quando a seleção é alterada em uma planilha.</span><span class="sxs-lookup"><span data-stu-id="1567c-209">Occurs when the selection changes on any worksheet.</span></span>

      <span data-ttu-id="1567c-210">\[[Conjunto de APIs: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1567c-210">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: onSelectionChanged
    fullName: onSelectionChanged
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onSelectionChanged: OfficeExtension.EventHandlers<Excel.WorksheetSelectionChangedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.WorksheetSelectionChangedEventArgs>
  - uid: excel.Excel.WorksheetCollection.onSingleClicked
    summary: |-
      <span data-ttu-id="1567c-211">Ocorre quando a operação com o botão esquerdo/tocado acontece na coleção de planilhas.</span><span class="sxs-lookup"><span data-stu-id="1567c-211">Occurs when left-clicked/tapped operation happens in the worksheet collection.</span></span>

      <span data-ttu-id="1567c-212">\[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1567c-212">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: onSingleClicked
    fullName: onSingleClicked
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onSingleClicked: OfficeExtension.EventHandlers<Excel.WorksheetSingleClickedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.WorksheetSingleClickedEventArgs>
  - uid: excel.Excel.WorksheetCollection.toJSON
    summary: '<span data-ttu-id="1567c-213">Substitui o método `toJSON()` JavaScript para fornecer uma saída mais útil quando um objeto API é passado para`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="1567c-213">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="1567c-214">.</span><span class="sxs-lookup"><span data-stu-id="1567c-214"></span></span> <span data-ttu-id="1567c-215">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="1567c-215"></span></span><!-- --><span data-ttu-id="1567c-216">, por sua vez, chama `toJSON` o método do objeto que é passado para ele.) Enquanto o objeto `Excel.WorksheetCollection` original é um objeto API, o `toJSON` método retorna um objeto JavaScript simples (digitado como`Excel.Interfaces.WorksheetCollectionData`</span><span class="sxs-lookup"><span data-stu-id="1567c-216">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.WorksheetCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.WorksheetCollectionData`</span></span><!-- --><span data-ttu-id="1567c-217">) que contém uma matriz de "itens" com cópias superficiais de qualquer propriedade carregada dos itens da coleção.</span><span class="sxs-lookup"><span data-stu-id="1567c-217">) that contains an "items" array with shallow copies of any loaded properties from the collection''s items.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.WorksheetCollectionData;'
      return:
        type:
          - excel.Excel.Interfaces.WorksheetCollectionData
        description: ''