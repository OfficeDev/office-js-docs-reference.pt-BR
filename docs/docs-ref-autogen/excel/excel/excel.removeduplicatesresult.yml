### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.RemoveDuplicatesResult:class'
    summary: |-
      <span data-ttu-id="60b07-101">Representa os resultados do método removeDuplicates no intervalo</span><span class="sxs-lookup"><span data-stu-id="60b07-101">Represents the results from the removeDuplicates method on range</span></span>

      <span data-ttu-id="60b07-102">\[[Conjunto de APIs: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="60b07-102">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.RemoveDuplicatesResult
    fullName: Excel.RemoveDuplicatesResult
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.RemoveDuplicatesResult#context:member'
      - 'excel!Excel.RemoveDuplicatesResult#load:member(1)'
      - 'excel!Excel.RemoveDuplicatesResult#load:member(2)'
      - 'excel!Excel.RemoveDuplicatesResult#load:member(3)'
      - 'excel!Excel.RemoveDuplicatesResult#removed:member'
      - 'excel!Excel.RemoveDuplicatesResult#toJSON:member(1)'
      - 'excel!Excel.RemoveDuplicatesResult#uniqueRemaining:member'
  - uid: 'excel!Excel.RemoveDuplicatesResult#context:member'
    summary: <span data-ttu-id="60b07-103">O contexto de solicitação associado ao objeto.</span><span class="sxs-lookup"><span data-stu-id="60b07-103">The request context associated with the object.</span></span> <span data-ttu-id="60b07-104">Isso conecta o processo do suplemento ao processo do aplicativo host do Office.</span><span class="sxs-lookup"><span data-stu-id="60b07-104">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.RemoveDuplicatesResult#load:member(1)'
    summary: <span data-ttu-id="60b07-105">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="60b07-105">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="60b07-106">Você deve chamar `context.sync()` antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="60b07-106">You must call `context.sync()` before reading the properties.</span></span>
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.RemoveDuplicatesResultLoadOptions): Excel.RemoveDuplicatesResult;'
      return:
        type:
          - 'excel!Excel.RemoveDuplicatesResult:class'
        description: ''
      parameters:
        - id: options
          description: <span data-ttu-id="60b07-107">Fornece opções para as propriedades do objeto a ser carregado.</span><span class="sxs-lookup"><span data-stu-id="60b07-107">Provides options for which properties of the object to load.</span></span>
          type:
            - 'excel!Excel.Interfaces.RemoveDuplicatesResultLoadOptions:interface'
  - uid: 'excel!Excel.RemoveDuplicatesResult#load:member(2)'
    summary: <span data-ttu-id="60b07-108">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="60b07-108">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="60b07-109">Você deve chamar `context.sync()` antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="60b07-109">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.RemoveDuplicatesResult;'
      return:
        type:
          - 'excel!Excel.RemoveDuplicatesResult:class'
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="60b07-110">Uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="60b07-110">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.RemoveDuplicatesResult#load:member(3)'
    summary: <span data-ttu-id="60b07-111">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="60b07-111">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="60b07-112">Você deve chamar `context.sync()` antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="60b07-112">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.RemoveDuplicatesResult;
      return:
        type:
          - 'excel!Excel.RemoveDuplicatesResult:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="60b07-113">`propertyNamesAndPaths.select`é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades a serem `propertyNamesAndPaths.expand` carregadas e é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades de navegação a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="60b07-113">`propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - |-
              {
                          select?: string;
                          expand?: string;
                      }
  - uid: 'excel!Excel.RemoveDuplicatesResult#removed:member'
    summary: |-
      <span data-ttu-id="60b07-114">Número de linhas duplicadas removidas pela operação.</span><span class="sxs-lookup"><span data-stu-id="60b07-114">Number of duplicated rows removed by the operation.</span></span>

      <span data-ttu-id="60b07-115">\[[Conjunto de APIs: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="60b07-115">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: removed
    fullName: removed
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly removed: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.RemoveDuplicatesResult#toJSON:member(1)'
    summary: '<span data-ttu-id="60b07-116">Substitui o método `toJSON()` JavaScript para fornecer uma saída mais útil quando um objeto API é passado para`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="60b07-116">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="60b07-117">.</span><span class="sxs-lookup"><span data-stu-id="60b07-117"></span></span> <span data-ttu-id="60b07-118">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="60b07-118"></span></span><!-- --><span data-ttu-id="60b07-119">, por sua vez, chama `toJSON` o método do objeto que é passado para ele.) Enquanto o objeto Excel. RemoveDuplicatesResult original é um objeto API, o `toJSON` método retorna um objeto JavaScript simples (digitado como`Excel.Interfaces.RemoveDuplicatesResultData`</span><span class="sxs-lookup"><span data-stu-id="60b07-119">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.RemoveDuplicatesResult object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.RemoveDuplicatesResultData`</span></span><!-- --><span data-ttu-id="60b07-120">) que contém cópias superficiais de qualquer propriedade filho carregada do objeto original.</span><span class="sxs-lookup"><span data-stu-id="60b07-120">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.RemoveDuplicatesResultData;'
      return:
        type:
          - 'excel!Excel.Interfaces.RemoveDuplicatesResultData:interface'
        description: ''
  - uid: 'excel!Excel.RemoveDuplicatesResult#uniqueRemaining:member'
    summary: |-
      <span data-ttu-id="60b07-121">Número de linhas restantes exclusivas presentes no intervalo resultante.</span><span class="sxs-lookup"><span data-stu-id="60b07-121">Number of remaining unique rows present in the resulting range.</span></span>

      <span data-ttu-id="60b07-122">\[[Conjunto de APIs: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="60b07-122">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: uniqueRemaining
    fullName: uniqueRemaining
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly uniqueRemaining: number;'
      return:
        type:
          - number
        description: |-


          #### <a name="examples"></a><span data-ttu-id="60b07-123">Exemplos</span><span class="sxs-lookup"><span data-stu-id="60b07-123">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Sample");
              const range = sheet.getRange("B2:D11");

              const deleteResult = range.removeDuplicates([0],true);    
              deleteResult.load();    
              await context.sync();

              console.log(deleteResult.removed + " entries with duplicate names removed.");
              console.log(deleteResult.uniqueRemaining + " entries with unique names remain in the range.");
          });
          ```
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.RemoveDuplicatesResult:class'
    name: Excel.RemoveDuplicatesResult
  - uid: 'excel!Excel.Interfaces.RemoveDuplicatesResultLoadOptions:interface'
    name: Excel.Interfaces.RemoveDuplicatesResultLoadOptions
  - uid: 'excel!Excel.Interfaces.RemoveDuplicatesResultData:interface'
    name: Excel.Interfaces.RemoveDuplicatesResultData