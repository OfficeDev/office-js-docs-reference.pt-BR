### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.Table:class'
    summary: |-
      Representa uma tabela do Excel. Para saber mais sobre o modelo de objeto de tabela, leia [trabalhar com tabelas usando a API JavaScript do Excel](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-tables)<!-- -->.

      \[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: Excel.Table
    fullName: Excel.Table
    langs:
      - typeScript
    type: class
    extends:
      - 'office!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.Table#autoFilter:member'
      - 'excel!Excel.Table#clearFilters:member(1)'
      - 'excel!Excel.Table#clearStyle:member(1)'
      - 'excel!Excel.Table#columns:member'
      - 'excel!Excel.Table#context:member'
      - 'excel!Excel.Table#convertToRange:member(1)'
      - 'excel!Excel.Table#delete:member(1)'
      - 'excel!Excel.Table#getDataBodyRange:member(1)'
      - 'excel!Excel.Table#getHeaderRowRange:member(1)'
      - 'excel!Excel.Table#getRange:member(1)'
      - 'excel!Excel.Table#getTotalRowRange:member(1)'
      - 'excel!Excel.Table#highlightFirstColumn:member'
      - 'excel!Excel.Table#highlightLastColumn:member'
      - 'excel!Excel.Table#id:member'
      - 'excel!Excel.Table#legacyId:member'
      - 'excel!Excel.Table#load:member(1)'
      - 'excel!Excel.Table#load:member(2)'
      - 'excel!Excel.Table#load:member(3)'
      - 'excel!Excel.Table#name:member'
      - 'excel!Excel.Table#onChanged:member'
      - 'excel!Excel.Table#onFiltered:member'
      - 'excel!Excel.Table#onSelectionChanged:member'
      - 'excel!Excel.Table#reapplyFilters:member(1)'
      - 'excel!Excel.Table#rows:member'
      - 'excel!Excel.Table#set:member(1)'
      - 'excel!Excel.Table#set:member(2)'
      - 'excel!Excel.Table#setStyle:member(1)'
      - 'excel!Excel.Table#showBandedColumns:member'
      - 'excel!Excel.Table#showBandedRows:member'
      - 'excel!Excel.Table#showFilterButton:member'
      - 'excel!Excel.Table#showHeaders:member'
      - 'excel!Excel.Table#showTotals:member'
      - 'excel!Excel.Table#sort:member'
      - 'excel!Excel.Table#style:member'
      - 'excel!Excel.Table#tableStyle:member'
      - 'excel!Excel.Table#toJSON:member(1)'
      - 'excel!Excel.Table#worksheet:member'
  - uid: 'excel!Excel.Table#autoFilter:member'
    summary: |-
      Representa o objeto AutoFilter da tabela.

      \[[Conjunto de APIs: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: autoFilter
    fullName: autoFilter
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly autoFilter: Excel.AutoFilter;'
      return:
        type:
          - 'excel!Excel.AutoFilter:class'
  - uid: 'excel!Excel.Table#clearFilters:member(1)'
    summary: |-
      Limpa todos os filtros aplicados à tabela no momento.

      \[[Conjunto de APIs: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: clearFilters()
    fullName: clearFilters()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clearFilters(): void;'
      return:
        type:
          - void
        description: ''
  - uid: 'excel!Excel.Table#clearStyle:member(1)'
    summary: |-
      Altera a tabela para usar o estilo de tabela padrão.

      \[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    isPreview: true
    name: clearStyle()
    fullName: clearStyle()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clearStyle(): void;'
      return:
        type:
          - void
        description: ''
  - uid: 'excel!Excel.Table#columns:member'
    summary: |-
      Representa uma coleção de todas as colunas na tabela.

      \[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: columns
    fullName: columns
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly columns: Excel.TableColumnCollection;'
      return:
        type:
          - 'excel!Excel.TableColumnCollection:class'
  - uid: 'excel!Excel.Table#context:member'
    summary: O contexto de solicitação associado ao objeto. Isso conecta o processo do suplemento ao processo do aplicativo host do Office.
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.Table#convertToRange:member(1)'
    summary: |-
      Converte a tabela em um intervalo de células normal. Todos os dados são preservados.

      \[[Conjunto de APIs: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: convertToRange()
    fullName: convertToRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'convertToRange(): Excel.Range;'
      return:
        type:
          - 'excel!Excel.Range:class'
        description: |-


          #### <a name="examples"></a>Exemplos

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var table = ctx.workbook.tables.getItem(tableName);
              table.convertToRange();
              return ctx.sync(); 
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'excel!Excel.Table#delete:member(1)'
    summary: |-
      Exclui a tabela.

      \[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a>Exemplos

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var table = ctx.workbook.tables.getItem(tableName);
              table.delete();
              return ctx.sync(); 
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'excel!Excel.Table#getDataBodyRange:member(1)'
    summary: |-
      Obtém o objeto de intervalo associado ao corpo de dados da tabela.

      \[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getDataBodyRange()
    fullName: getDataBodyRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getDataBodyRange(): Excel.Range;'
      return:
        type:
          - 'excel!Excel.Range:class'
        description: |-


          #### <a name="examples"></a>Exemplos

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var table = ctx.workbook.tables.getItem(tableName);
              var tableDataRange = table.getDataBodyRange();
              tableDataRange.load('address')
              return ctx.sync().then(function() {
                      console.log(tableDataRange.address);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'excel!Excel.Table#getHeaderRowRange:member(1)'
    summary: |-
      Obtém o objeto de intervalo associado à linha de cabeçalho da tabela.

      \[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getHeaderRowRange()
    fullName: getHeaderRowRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getHeaderRowRange(): Excel.Range;'
      return:
        type:
          - 'excel!Excel.Range:class'
        description: |-


          #### <a name="examples"></a>Exemplos

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var table = ctx.workbook.tables.getItem(tableName);
              var tableHeaderRange = table.getHeaderRowRange();
              tableHeaderRange.load('address');
              return ctx.sync().then(function() {
                  console.log(tableHeaderRange.address);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'excel!Excel.Table#getRange:member(1)'
    summary: |-
      Obtém o objeto de intervalo associado a toda a tabela.

      \[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getRange()
    fullName: getRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRange(): Excel.Range;'
      return:
        type:
          - 'excel!Excel.Range:class'
        description: |-


          #### <a name="examples"></a>Exemplos

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var table = ctx.workbook.tables.getItem(tableName);
              var tableRange = table.getRange();
              tableRange.load('address');    
              return ctx.sync().then(function() {
                      console.log(tableRange.address);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'excel!Excel.Table#getTotalRowRange:member(1)'
    summary: |-
      Obtém o objeto de intervalo associado à linha de totais da tabela.

      \[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getTotalRowRange()
    fullName: getTotalRowRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getTotalRowRange(): Excel.Range;'
      return:
        type:
          - 'excel!Excel.Range:class'
        description: |-


          #### <a name="examples"></a>Exemplos

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var table = ctx.workbook.tables.getItem(tableName);
              var tableTotalsRange = table.getTotalRowRange();
              tableTotalsRange.load('address');    
              return ctx.sync().then(function() {
                      console.log(tableTotalsRange.address);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'excel!Excel.Table#highlightFirstColumn:member'
    summary: |-
      Especifica se a primeira coluna contém formatação especial.

      \[[Conjunto de APIs: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: highlightFirstColumn
    fullName: highlightFirstColumn
    langs:
      - typeScript
    type: property
    syntax:
      content: 'highlightFirstColumn: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.Table#highlightLastColumn:member'
    summary: |-
      Especifica se a última coluna contém formatação especial.

      \[[Conjunto de APIs: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: highlightLastColumn
    fullName: highlightLastColumn
    langs:
      - typeScript
    type: property
    syntax:
      content: 'highlightLastColumn: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.Table#id:member'
    summary: |-
      Retorna um valor que identifica de forma exclusiva a tabela em uma determinada pasta de trabalho. O valor do identificador permanece o mesmo, ainda que a tabela seja renomeada.

      \[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.Table#legacyId:member'
    summary: |-
      Retorna uma ID numérica.

      \[[Conjunto de APIs: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: legacyId
    fullName: legacyId
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly legacyId: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.Table#load:member(1)'
    summary: Coloca um comando na fila para carregar as propriedades especificadas do objeto. Você deve chamar `context.sync()` antes de ler as propriedades.
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.TableLoadOptions): Excel.Table;'
      return:
        type:
          - 'excel!Excel.Table:class'
        description: ''
      parameters:
        - id: options
          description: Fornece opções para as propriedades do objeto a ser carregado.
          type:
            - 'excel!Excel.Interfaces.TableLoadOptions:interface'
  - uid: 'excel!Excel.Table#load:member(2)'
    summary: Coloca um comando na fila para carregar as propriedades especificadas do objeto. Você deve chamar `context.sync()` antes de ler as propriedades.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.Table;'
      return:
        type:
          - 'excel!Excel.Table:class'
        description: |-


          #### <a name="examples"></a>Exemplos

          ```javascript
          // Get a table by name. 
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var table = ctx.workbook.tables.getItem(tableName);
              table.load('index')
              return ctx.sync().then(function() {
                      console.log(table.index);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          // Get a table by index.
          Excel.run(function (ctx) { 
              var index = 0;
              var table = ctx.workbook.tables.getItemAt(0);
              table.load('id')
              return ctx.sync().then(function() {
                      console.log(table.id);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: Uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.Table#load:member(3)'
    summary: Coloca um comando na fila para carregar as propriedades especificadas do objeto. Você deve chamar `context.sync()` antes de ler as propriedades.
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.Table;
      return:
        type:
          - 'excel!Excel.Table:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '`propertyNamesAndPaths.select`é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades a serem `propertyNamesAndPaths.expand` carregadas e é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades de navegação a serem carregadas.'
          type:
            - |-
              {
                          select?: string;
                          expand?: string;
                      }
  - uid: 'excel!Excel.Table#name:member'
    summary: |-
      Nome da tabela.

      O nome do conjunto da tabela deve seguir as diretrizes especificadas no artigo [renomear uma tabela do Excel](https://support.office.com/article/Rename-an-Excel-table-FBF49A4F-82A3-43EB-8BA2-44D21233B114) .

      \[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: name
    fullName: name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'name: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.Table#onChanged:member'
    summary: |-
      Ocorre quando os dados nas células são alterados em uma tabela específica.

      \[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: onChanged
    fullName: onChanged
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onChanged: OfficeExtension.EventHandlers<Excel.TableChangedEventArgs>;'
      return:
        type:
          - 'excel!Excel.Table#onChanged~0:complex'
        description: |-


          #### <a name="examples"></a>Exemplos

          ```typescript
          // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/30-events/events-table-changed.yaml
          await Excel.run(async (context) => {
              let table = context.workbook.tables.getItemAt(0);
              table.onChanged.add(onChange);

              await context.sync();
              console.log("A handler has been registered for the onChanged event");
          });
          ```
  - uid: 'excel!Excel.Table#onFiltered:member'
    summary: |-
      Ocorre quando o filtro é aplicado em uma tabela específica.

      \[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    isPreview: true
    name: onFiltered
    fullName: onFiltered
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onFiltered: OfficeExtension.EventHandlers<Excel.TableFilteredEventArgs>;'
      return:
        type:
          - 'excel!Excel.Table#onFiltered~0:complex'
  - uid: 'excel!Excel.Table#onSelectionChanged:member'
    summary: |-
      Ocorre quando a seleção é alterada em uma tabela específica.

      \[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: onSelectionChanged
    fullName: onSelectionChanged
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onSelectionChanged: OfficeExtension.EventHandlers<Excel.TableSelectionChangedEventArgs>;'
      return:
        type:
          - 'excel!Excel.Table#onSelectionChanged~0:complex'
        description: |-


          #### <a name="examples"></a>Exemplos

          ```typescript
          // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/30-events/events-table-changed.yaml
          await Excel.run(async (context) => {
              let table = context.workbook.tables.getItemAt(0);
              table.onSelectionChanged.add(onSelectionChange);

              await context.sync();
              console.log("A handler has been registered for table onSelectionChanged event");
          });
          ```
  - uid: 'excel!Excel.Table#reapplyFilters:member(1)'
    summary: |-
      Aplica novamente todos os filtros à tabela.

      \[[Conjunto de APIs: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: reapplyFilters()
    fullName: reapplyFilters()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'reapplyFilters(): void;'
      return:
        type:
          - void
        description: ''
  - uid: 'excel!Excel.Table#rows:member'
    summary: |-
      Representa uma coleção de todas as linhas na tabela.

      \[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: rows
    fullName: rows
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly rows: Excel.TableRowCollection;'
      return:
        type:
          - 'excel!Excel.TableRowCollection:class'
  - uid: 'excel!Excel.Table#set:member(1)'
    summary: Define várias propriedades de um objeto ao mesmo tempo. Você pode passar um objeto simples com as propriedades apropriadas ou outro objeto API do mesmo tipo.
    remarks: |-
      Este método tem a seguinte assinatura adicional:

      `set(properties: Excel.Table): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.TableUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: Um objeto JavaScript com propriedades que são estruturadas isomorphically para as propriedades do objeto no qual o método é chamado.
          type:
            - 'excel!Excel.Interfaces.TableUpdateData:interface'
        - id: options
          description: Fornece uma opção para suprimir erros se o objeto Properties tentar definir qualquer propriedade somente leitura.
          type:
            - 'office!OfficeExtension.UpdateOptions:interface'
  - uid: 'excel!Excel.Table#set:member(2)'
    summary: 'Define várias propriedades no objeto ao mesmo tempo, com base em um objeto carregado existente.'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.Table): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'excel!Excel.Table:class'
  - uid: 'excel!Excel.Table#setStyle:member(1)'
    summary: |-
      Define o estilo aplicado à segmentação de,.

      \[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    isPreview: true
    name: setStyle(style)
    fullName: setStyle(style)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setStyle(style: string | PivotTableStyle | BuiltInTableStyle): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: style
          description: O estilo a ser aplicado à tabela dinâmica. Um `InvalidArgumentException` é acionado se uma cadeia de caracteres é fornecida que não corresponde ao nome de qualquer estilo.
          type:
            - 'excel!Excel.Table#setStyle~0:complex'
  - uid: 'excel!Excel.Table#showBandedColumns:member'
    summary: |-
      Especifica se as colunas mostram a formatação em tiras nas quais as colunas ímpares são realçadas de forma diferente de mesmo para tornar a leitura da tabela mais fácil.

      \[[Conjunto de APIs: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: showBandedColumns
    fullName: showBandedColumns
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showBandedColumns: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.Table#showBandedRows:member'
    summary: |-
      Especifica se as linhas mostram a formatação em tiras nas quais as linhas ímpares são realçadas de forma diferente de mesmo para tornar a leitura da tabela mais fácil.

      \[[Conjunto de APIs: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: showBandedRows
    fullName: showBandedRows
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showBandedRows: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.Table#showFilterButton:member'
    summary: |-
      Especifica se os botões de filtro estão visíveis na parte superior de cada cabeçalho de coluna. Essa configuração só será permitida se a tabela tiver uma linha de cabeçalho.

      \[[Conjunto de APIs: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: showFilterButton
    fullName: showFilterButton
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showFilterButton: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.Table#showHeaders:member'
    summary: |-
      Especifica se a linha de cabeçalho está visível. Esse valor pode ser definido para mostrar ou remover a linha do cabeçalho.

      \[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: showHeaders
    fullName: showHeaders
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showHeaders: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.Table#showTotals:member'
    summary: |-
      Especifica se a linha de total está visível. Esse valor pode ser definido para mostrar ou remover a linha do total.

      \[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: showTotals
    fullName: showTotals
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showTotals: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.Table#sort:member'
    summary: |-
      Representa a classificação da tabela.

      \[[Conjunto de APIs: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: sort
    fullName: sort
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly sort: Excel.TableSort;'
      return:
        type:
          - 'excel!Excel.TableSort:class'
  - uid: 'excel!Excel.Table#style:member'
    summary: |-
      Valor da constante que representa o estilo de Tabela. Os valores possíveis são: "TableStyleLight1" por meio de "TableStyleLight21", "TableStyleMedium1" até "TableStyleMedium28", "TableStyleDark1" até "TableStyleDark11". Também é possível usar um estilo definido pelo usuário que esteja presente na planilha.

      \[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: style
    fullName: style
    langs:
      - typeScript
    type: property
    syntax:
      content: 'style: string;'
      return:
        type:
          - string
        description: |-


          #### <a name="examples"></a>Exemplos

          ```javascript
          // Set table style. 
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var table = ctx.workbook.tables.getItem(tableName);
              table.name = 'Table1-Renamed';
              table.showTotals = false;
              table.style = 'TableStyleMedium2';
              table.load('tableStyle');
              return ctx.sync().then(function() {
                      console.log(table.style);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'excel!Excel.Table#tableStyle:member'
    summary: |-
      O estilo aplicado à tabela.

      \[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    isPreview: true
    name: tableStyle
    fullName: tableStyle
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly tableStyle: Excel.TableStyle;'
      return:
        type:
          - 'excel!Excel.TableStyle:class'
  - uid: 'excel!Excel.Table#toJSON:member(1)'
    summary: 'Substitui o método `toJSON()` JavaScript para fornecer uma saída mais útil quando um objeto API é passado para`JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, por sua vez, chama `toJSON` o método do objeto que é passado para ele.) Enquanto o objeto Excel. Table original é um objeto API, o `toJSON` método retorna um objeto JavaScript simples (digitado como`Excel.Interfaces.TableData`<!-- -->) que contém cópias superficiais de qualquer propriedade filho carregada do objeto original.'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.TableData;'
      return:
        type:
          - 'excel!Excel.Interfaces.TableData:interface'
        description: ''
  - uid: 'excel!Excel.Table#worksheet:member'
    summary: |-
      A planilha que contém a tabela atual.

      \[[Conjunto de APIs: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: worksheet
    fullName: worksheet
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly worksheet: Excel.Worksheet;'
      return:
        type:
          - 'excel!Excel.Worksheet:class'
references:
  - uid: 'office!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.AutoFilter:class'
    name: Excel.AutoFilter
  - uid: 'excel!Excel.TableColumnCollection:class'
    name: Excel.TableColumnCollection
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.Range:class'
    name: Excel.Range
  - uid: 'excel!Excel.Table:class'
    name: Excel.Table
  - uid: 'excel!Excel.Interfaces.TableLoadOptions:interface'
    name: Excel.Interfaces.TableLoadOptions
  - uid: 'excel!Excel.Table#onChanged~0:complex'
    name: OfficeExtension.EventHandlers<Excel.TableChangedEventArgs>
    fullName: OfficeExtension.EventHandlers<Excel.TableChangedEventArgs>
    spec.typeScript:
      - uid: 'office!OfficeExtension.EventHandlers:class'
        name: OfficeExtension.EventHandlers
        fullName: OfficeExtension.EventHandlers
      - name: <
        fullName: <
      - uid: 'excel!Excel.TableChangedEventArgs:interface'
        name: Excel.TableChangedEventArgs
        fullName: Excel.TableChangedEventArgs
      - name: '>'
        fullName: '>'
  - uid: 'excel!Excel.Table#onFiltered~0:complex'
    name: OfficeExtension.EventHandlers<Excel.TableFilteredEventArgs>
    fullName: OfficeExtension.EventHandlers<Excel.TableFilteredEventArgs>
    spec.typeScript:
      - uid: 'office!OfficeExtension.EventHandlers:class'
        name: OfficeExtension.EventHandlers
        fullName: OfficeExtension.EventHandlers
      - name: <
        fullName: <
      - uid: 'excel!Excel.TableFilteredEventArgs:interface'
        name: Excel.TableFilteredEventArgs
        fullName: Excel.TableFilteredEventArgs
      - name: '>'
        fullName: '>'
  - uid: 'excel!Excel.Table#onSelectionChanged~0:complex'
    name: OfficeExtension.EventHandlers<Excel.TableSelectionChangedEventArgs>
    fullName: OfficeExtension.EventHandlers<Excel.TableSelectionChangedEventArgs>
    spec.typeScript:
      - uid: 'office!OfficeExtension.EventHandlers:class'
        name: OfficeExtension.EventHandlers
        fullName: OfficeExtension.EventHandlers
      - name: <
        fullName: <
      - uid: 'excel!Excel.TableSelectionChangedEventArgs:interface'
        name: Excel.TableSelectionChangedEventArgs
        fullName: Excel.TableSelectionChangedEventArgs
      - name: '>'
        fullName: '>'
  - uid: 'excel!Excel.TableRowCollection:class'
    name: Excel.TableRowCollection
  - uid: 'excel!Excel.Interfaces.TableUpdateData:interface'
    name: Interfaces.TableUpdateData
  - uid: 'office!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'excel!Excel.Table#setStyle~0:complex'
    name: string | PivotTableStyle | BuiltInTableStyle
    fullName: string | Excel.PivotTableStyle | Excel.BuiltInTableStyle
    spec.typeScript:
      - name: 'string | '
        fullName: 'string | '
      - uid: 'excel!Excel.PivotTableStyle:class'
        name: PivotTableStyle
        fullName: Excel.PivotTableStyle
      - name: ' | '
        fullName: ' | '
      - uid: 'excel!Excel.BuiltInTableStyle:enum'
        name: BuiltInTableStyle
        fullName: Excel.BuiltInTableStyle
  - uid: 'excel!Excel.TableSort:class'
    name: Excel.TableSort
  - uid: 'excel!Excel.TableStyle:class'
    name: Excel.TableStyle
  - uid: 'excel!Excel.Interfaces.TableData:interface'
    name: Excel.Interfaces.TableData
  - uid: 'excel!Excel.Worksheet:class'
    name: Excel.Worksheet