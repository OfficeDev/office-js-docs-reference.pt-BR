### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.PivotField:class'
    summary: |-
      Representa o Excel PivotField.

      \[[Conjunto de APIs: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: Excel.PivotField
    fullName: Excel.PivotField
    langs:
      - typeScript
    type: class
    extends:
      - 'office!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.PivotField#applyFilter:member(1)'
      - 'excel!Excel.PivotField#clearAllFilters:member(1)'
      - 'excel!Excel.PivotField#clearFilter:member(1)'
      - 'excel!Excel.PivotField#clearFilter:member(2)'
      - 'excel!Excel.PivotField#context:member'
      - 'excel!Excel.PivotField#getFilters:member(1)'
      - 'excel!Excel.PivotField#id:member'
      - 'excel!Excel.PivotField#isFiltered:member(1)'
      - 'excel!Excel.PivotField#isFiltered:member(2)'
      - 'excel!Excel.PivotField#items:member'
      - 'excel!Excel.PivotField#load:member(1)'
      - 'excel!Excel.PivotField#load:member(2)'
      - 'excel!Excel.PivotField#load:member(3)'
      - 'excel!Excel.PivotField#name:member'
      - 'excel!Excel.PivotField#set:member(1)'
      - 'excel!Excel.PivotField#set:member(2)'
      - 'excel!Excel.PivotField#showAllItems:member'
      - 'excel!Excel.PivotField#sortByLabels:member(1)'
      - 'excel!Excel.PivotField#sortByValues:member(1)'
      - 'excel!Excel.PivotField#sortByValues:member(2)'
      - 'excel!Excel.PivotField#subtotals:member'
      - 'excel!Excel.PivotField#toJSON:member(1)'
  - uid: 'excel!Excel.PivotField#applyFilter:member(1)'
    summary: |-
      Define um ou mais PivotFilters atuais do campo e os aplica ao campo. Se os filtros fornecidos forem inválidos ou não puderem ser aplicados, uma exceção será lançada.

      \[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    isPreview: true
    name: applyFilter(filter)
    fullName: applyFilter(filter)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'applyFilter(filter: Excel.PivotFilters): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: filter
          description: Um PivotFilter específico configurado ou uma interface PivotFilters que contém vários filtros configurados.
          type:
            - 'excel!Excel.PivotFilters:interface'
  - uid: 'excel!Excel.PivotField#clearAllFilters:member(1)'
    summary: |-
      Limpa todos os critérios de todos os filtros de campo. Isso removerá qualquer filtragem ativa no campo.

      \[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    isPreview: true
    name: clearAllFilters()
    fullName: clearAllFilters()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clearAllFilters(): void;'
      return:
        type:
          - void
        description: ''
  - uid: 'excel!Excel.PivotField#clearFilter:member(1)'
    summary: |-
      Limpa todos os critérios existentes do filtro do campo de determinado tipo (se houver algum aplicado no momento).

      \[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    isPreview: true
    name: clearFilter(filterType)
    fullName: clearFilter(filterType)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clearFilter(filterType: Excel.PivotFilterType): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: filterType
          description: O tipo de filtro no campo do qual limpar todos os critérios.
          type:
            - 'excel!Excel.PivotFilterType:enum'
  - uid: 'excel!Excel.PivotField#clearFilter:member(2)'
    summary: |-
      Limpa todos os critérios existentes do filtro do campo de determinado tipo (se houver algum aplicado no momento).

      \[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: clearFilter(filterTypeString)
    fullName: clearFilter(filterTypeString)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clearFilter(filterTypeString: "Unknown" | "Value" | "Manual" | "Label" | "Date"): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: filterTypeString
          description: O tipo de filtro no campo do qual limpar todos os critérios.
          type:
            - '"Unknown" | "Value" | "Manual" | "Label" | "Date"'
  - uid: 'excel!Excel.PivotField#context:member'
    summary: O contexto de solicitação associado ao objeto. Isso conecta o processo do suplemento ao processo do aplicativo host do Office.
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.PivotField#getFilters:member(1)'
    summary: |-
      Obtém todos os filtros aplicados no campo no momento.

      \[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    isPreview: true
    name: getFilters()
    fullName: getFilters()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getFilters(): OfficeExtension.ClientResult<Excel.PivotFilters>;'
      return:
        type:
          - 'excel!Excel.PivotField#getFilters~0:complex'
        description: Uma interface PivotFilters com todos os filtros ativos.
  - uid: 'excel!Excel.PivotField#id:member'
    summary: |-
      ID do PivotField..

      \[[Conjunto de APIs: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.PivotField#isFiltered:member(1)'
    summary: |-
      Verifica se há filtros aplicados no campo.

      \[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    isPreview: true
    name: isFiltered(filterType)
    fullName: isFiltered(filterType)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'isFiltered(filterType?: Excel.PivotFilterType): OfficeExtension.ClientResult<boolean>;'
      return:
        type:
          - 'excel!Excel.PivotField#isFiltered~0:complex'
        description: 'True se o campo tiver um filtro de tipo `filterType` aplicado. Se FilterType não for especificado, true será retornado se o campo tiver qualquer filtro aplicado.'
      parameters:
        - id: filterType
          description: 'O tipo de filtro a ser verificado. Se nenhum tipo for fornecido, este método verificará se o filtro foi aplicado.'
          type:
            - 'excel!Excel.PivotFilterType:enum'
  - uid: 'excel!Excel.PivotField#isFiltered:member(2)'
    summary: |-
      Verifica se há filtros aplicados no campo.

      \[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: isFiltered(filterTypeString)
    fullName: isFiltered(filterTypeString)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'isFiltered(filterTypeString?: "Unknown" | "Value" | "Manual" | "Label" | "Date"): OfficeExtension.ClientResult<boolean>;'
      return:
        type:
          - 'excel!Excel.PivotField#isFiltered~1:complex'
        description: 'True se o campo tiver um filtro de tipo `filterType` aplicado. Se FilterType não for especificado, true será retornado se o campo tiver qualquer filtro aplicado.'
      parameters:
        - id: filterTypeString
          description: 'O tipo de filtro a ser verificado. Se nenhum tipo for fornecido, este método verificará se o filtro foi aplicado.'
          type:
            - '"Unknown" | "Value" | "Manual" | "Label" | "Date"'
  - uid: 'excel!Excel.PivotField#items:member'
    summary: |-
      Retorna PivotFields associados ao PivotField.

      \[[Conjunto de APIs: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.PivotItemCollection;'
      return:
        type:
          - 'excel!Excel.PivotItemCollection:class'
  - uid: 'excel!Excel.PivotField#load:member(1)'
    summary: Coloca um comando na fila para carregar as propriedades especificadas do objeto. Você deve chamar `context.sync()` antes de ler as propriedades.
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.PivotFieldLoadOptions): Excel.PivotField;'
      return:
        type:
          - 'excel!Excel.PivotField:class'
        description: ''
      parameters:
        - id: options
          description: Fornece opções para as propriedades do objeto a ser carregado.
          type:
            - 'excel!Excel.Interfaces.PivotFieldLoadOptions:interface'
  - uid: 'excel!Excel.PivotField#load:member(2)'
    summary: Coloca um comando na fila para carregar as propriedades especificadas do objeto. Você deve chamar `context.sync()` antes de ler as propriedades.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.PivotField;'
      return:
        type:
          - 'excel!Excel.PivotField:class'
        description: ''
      parameters:
        - id: propertyNames
          description: Uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.PivotField#load:member(3)'
    summary: Coloca um comando na fila para carregar as propriedades especificadas do objeto. Você deve chamar `context.sync()` antes de ler as propriedades.
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.PivotField;
      return:
        type:
          - 'excel!Excel.PivotField:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '`propertyNamesAndPaths.select`é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades a serem carregadas e `propertyNamesAndPaths.expand` é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades de navegação a serem carregadas.'
          type:
            - |-
              {
                          select?: string;
                          expand?: string;
                      }
  - uid: 'excel!Excel.PivotField#name:member'
    summary: |-
      Nome do PivotField.

      \[[Conjunto de APIs: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: name
    fullName: name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'name: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.PivotField#set:member(1)'
    summary: Define várias propriedades de um objeto ao mesmo tempo. Você pode passar um objeto simples com as propriedades apropriadas ou outro objeto API do mesmo tipo.
    remarks: |-
      Este método tem a seguinte assinatura adicional:

      `set(properties: Excel.PivotField): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.PivotFieldUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: Um objeto JavaScript com propriedades que são estruturadas isomorphically para as propriedades do objeto no qual o método é chamado.
          type:
            - 'excel!Excel.Interfaces.PivotFieldUpdateData:interface'
        - id: options
          description: Fornece uma opção para suprimir erros se o objeto Properties tentar definir qualquer propriedade somente leitura.
          type:
            - 'office!OfficeExtension.UpdateOptions:interface'
  - uid: 'excel!Excel.PivotField#set:member(2)'
    summary: 'Define várias propriedades no objeto ao mesmo tempo, com base em um objeto carregado existente.'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.PivotField): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'excel!Excel.PivotField:class'
  - uid: 'excel!Excel.PivotField#showAllItems:member'
    summary: |-
      Determina se deseja mostrar todos os itens de PivotField.

      \[[Conjunto de APIs: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: showAllItems
    fullName: showAllItems
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showAllItems: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.PivotField#sortByLabels:member(1)'
    summary: |-
      Classifica o PivotField. Se um DataPivotHierarchy for especificado, a classificação será aplicada com base nele, se a classificação não for baseada no campo PivotField.

      \[[Conjunto de APIs: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: sortByLabels(sortBy)
    fullName: sortByLabels(sortBy)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'sortByLabels(sortBy: SortBy): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: sortBy
          description: Especifica se a classificação é feita em ordem crescente ou decrescente.
          type:
            - 'excel!Excel.SortBy:enum'
  - uid: 'excel!Excel.PivotField#sortByValues:member(1)'
    summary: |-
      Classifica o Campo dinâmico por valores especificados em um determinado escopo. O escopo define quais valores específicos serão usados para classificar quando houver vários valores do mesmo DataPivotHierarchy.

      \[[Conjunto de APIs: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: 'sortByValues(sortBy, valuesHierarchy, pivotItemScope)'
    fullName: 'sortByValues(sortBy, valuesHierarchy, pivotItemScope)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'sortByValues(sortBy: Excel.SortBy, valuesHierarchy: Excel.DataPivotHierarchy, pivotItemScope?: Array<PivotItem | string>): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: sortBy
          description: Especifica se a classificação é feita em ordem crescente ou decrescente.
          type:
            - 'excel!Excel.SortBy:enum'
        - id: valuesHierarchy
          description: Especifica a hierarquia de valores no eixo dos dados a ser usado para a classificação.
          type:
            - 'excel!Excel.DataPivotHierarchy:class'
        - id: pivotItemScope
          description: 'Os itens que devem ser usados para o escopo da classificação. Eles serão os itens que compõem a linha ou coluna que você deseja classificar. Se uma cadeia de caracteres é usada em vez de um PivotItem, a cadeia de caracteres representa a ID do PivotItem. Se não houver nenhum item além da hierarquia de dados no eixo que você deseja classificar, isso poderá ficar vazio.'
          type:
            - 'excel!Excel.PivotField#sortByValues~0:complex'
  - uid: 'excel!Excel.PivotField#sortByValues:member(2)'
    summary: |-
      Classifica o Campo dinâmico por valores especificados em um determinado escopo. O escopo define quais valores específicos serão usados para classificar quando houver vários valores do mesmo DataPivotHierarchy.

      \[[Conjunto de APIs: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: 'sortByValues(sortByString, valuesHierarchy, pivotItemScope)'
    fullName: 'sortByValues(sortByString, valuesHierarchy, pivotItemScope)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'sortByValues(sortByString: "Ascending" | "Descending", valuesHierarchy: Excel.DataPivotHierarchy, pivotItemScope?: Array<PivotItem | string>): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: sortByString
          description: Especifica se a classificação é feita em ordem crescente ou decrescente.
          type:
            - '"Ascending" | "Descending"'
        - id: valuesHierarchy
          description: Especifica a hierarquia de valores no eixo dos dados a ser usado para a classificação.
          type:
            - 'excel!Excel.DataPivotHierarchy:class'
        - id: pivotItemScope
          description: 'Os itens que devem ser usados para o escopo da classificação. Eles serão os itens que compõem a linha ou coluna que você deseja classificar. Se uma cadeia de caracteres é usada em vez de um PivotItem, a cadeia de caracteres representa a ID do PivotItem. Se não houver nenhum item além da hierarquia de dados no eixo que você deseja classificar, isso poderá ficar vazio.'
          type:
            - 'excel!Excel.PivotField#sortByValues~1:complex'
  - uid: 'excel!Excel.PivotField#subtotals:member'
    summary: |-
      Subtotais de PivotField.

      \[[Conjunto de APIs: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: subtotals
    fullName: subtotals
    langs:
      - typeScript
    type: property
    syntax:
      content: 'subtotals: Excel.Subtotals;'
      return:
        type:
          - 'excel!Excel.Subtotals:interface'
  - uid: 'excel!Excel.PivotField#toJSON:member(1)'
    summary: 'Substitui o `toJSON()` método JavaScript para fornecer uma saída mais útil quando um objeto API é passado para`JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, por sua vez, chama o `toJSON` método do objeto que é passado para ele.) Enquanto o objeto Excel. PivotField original é um objeto API, o `toJSON` método retorna um objeto JavaScript simples (digitado como`Excel.Interfaces.PivotFieldData`<!-- -->) que contém cópias superficiais de qualquer propriedade filho carregada do objeto original.'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.PivotFieldData;'
      return:
        type:
          - 'excel!Excel.Interfaces.PivotFieldData:interface'
        description: ''
references:
  - uid: 'office!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.PivotFilters:interface'
    name: Excel.PivotFilters
  - uid: 'excel!Excel.PivotFilterType:enum'
    name: Excel.PivotFilterType
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.PivotField#getFilters~0:complex'
    name: OfficeExtension.ClientResult<Excel.PivotFilters>
    fullName: OfficeExtension.ClientResult<Excel.PivotFilters>
    spec.typeScript:
      - uid: 'office!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <
        fullName: <
      - uid: 'excel!Excel.PivotFilters:interface'
        name: Excel.PivotFilters
        fullName: Excel.PivotFilters
      - name: '>'
        fullName: '>'
  - uid: 'excel!Excel.PivotField#isFiltered~0:complex'
    name: OfficeExtension.ClientResult<boolean>
    fullName: OfficeExtension.ClientResult<boolean>
    spec.typeScript:
      - uid: 'office!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <boolean>
        fullName: <boolean>
  - uid: 'excel!Excel.PivotField#isFiltered~1:complex'
    name: OfficeExtension.ClientResult<boolean>
    fullName: OfficeExtension.ClientResult<boolean>
    spec.typeScript:
      - uid: 'office!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <boolean>
        fullName: <boolean>
  - uid: 'excel!Excel.PivotItemCollection:class'
    name: Excel.PivotItemCollection
  - uid: 'excel!Excel.PivotField:class'
    name: Excel.PivotField
  - uid: 'excel!Excel.Interfaces.PivotFieldLoadOptions:interface'
    name: Excel.Interfaces.PivotFieldLoadOptions
  - uid: 'excel!Excel.Interfaces.PivotFieldUpdateData:interface'
    name: Interfaces.PivotFieldUpdateData
  - uid: 'office!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'excel!Excel.SortBy:enum'
    name: SortBy
  - uid: 'excel!Excel.DataPivotHierarchy:class'
    name: Excel.DataPivotHierarchy
  - uid: 'excel!Excel.PivotField#sortByValues~0:complex'
    name: Array<PivotItem | string>
    fullName: Array<Excel.PivotItem | string>
    spec.typeScript:
      - uid: '!Array:interface'
        name: Array
        fullName: Array
      - name: <
        fullName: <
      - uid: 'excel!Excel.PivotItem:class'
        name: PivotItem
        fullName: Excel.PivotItem
      - name: ' | string>'
        fullName: ' | string>'
  - uid: 'excel!Excel.PivotField#sortByValues~1:complex'
    name: Array<PivotItem | string>
    fullName: Array<Excel.PivotItem | string>
    spec.typeScript:
      - uid: '!Array:interface'
        name: Array
        fullName: Array
      - name: <
        fullName: <
      - uid: 'excel!Excel.PivotItem:class'
        name: PivotItem
        fullName: Excel.PivotItem
      - name: ' | string>'
        fullName: ' | string>'
  - uid: 'excel!Excel.Subtotals:interface'
    name: Excel.Subtotals
  - uid: 'excel!Excel.Interfaces.PivotFieldData:interface'
    name: Excel.Interfaces.PivotFieldData