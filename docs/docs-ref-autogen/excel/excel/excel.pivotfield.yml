### YamlMime:TSType
name: Excel.PivotField
uid: excel!Excel.PivotField:class
package: excel!
fullName: Excel.PivotField
summary: >-
  Representa o Excel PivotField.


  \[[Conjunto de APIs: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
- name: context
  uid: excel!Excel.PivotField#context:member
  package: excel!
  fullName: context
  summary: O contexto de solicitação associado ao objeto. Isso conecta o processo do suplemento ao processo do aplicativo host do Office.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'context: RequestContext;'
    return:
      type: <xref uid="excel!Excel.RequestContext:class" />
- name: id
  uid: excel!Excel.PivotField#id:member
  package: excel!
  fullName: id
  summary: >-
    ID do PivotField..


    \[[Conjunto de APIs: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly id: string;'
    return:
      type: string
- name: items
  uid: excel!Excel.PivotField#items:member
  package: excel!
  fullName: items
  summary: >-
    Retorna PivotFields associados ao PivotField.


    \[[Conjunto de APIs: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly items: Excel.PivotItemCollection;'
    return:
      type: <xref uid="excel!Excel.PivotItemCollection:class" />
- name: name
  uid: excel!Excel.PivotField#name:member
  package: excel!
  fullName: name
  summary: >-
    Nome do PivotField.


    \[[Conjunto de APIs: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'name: string;'
    return:
      type: string
- name: showAllItems
  uid: excel!Excel.PivotField#showAllItems:member
  package: excel!
  fullName: showAllItems
  summary: >-
    Determina se deseja mostrar todos os itens de PivotField.


    \[[Conjunto de APIs: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'showAllItems: boolean;'
    return:
      type: boolean
- name: subtotals
  uid: excel!Excel.PivotField#subtotals:member
  package: excel!
  fullName: subtotals
  summary: >-
    Subtotais de PivotField.


    \[[Conjunto de APIs: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'subtotals: Excel.Subtotals;'
    return:
      type: <xref uid="excel!Excel.Subtotals:interface" />
methods:
- name: applyFilter(filter)
  uid: excel!Excel.PivotField#applyFilter:member(1)
  package: excel!
  fullName: applyFilter(filter)
  summary: >-
    Define um ou mais PivotFilters atuais do campo e os aplica ao campo. Se os filtros fornecidos forem inválidos ou não puderem ser aplicados, uma exceção será lançada.


    \[[Conjunto de APIs: ExcelApi 1,12](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'applyFilter(filter: Excel.PivotFilters): void;'
    parameters:
    - id: filter
      description: Um PivotFilter específico configurado ou uma interface PivotFilters que contém vários filtros configurados.
      type: <xref uid="excel!Excel.PivotFilters:interface" />
    return:
      type: void
      description: ''
- name: clearAllFilters()
  uid: excel!Excel.PivotField#clearAllFilters:member(1)
  package: excel!
  fullName: clearAllFilters()
  summary: >-
    Limpa todos os critérios de todos os filtros de campo. Isso removerá qualquer filtragem ativa no campo.


    \[[Conjunto de APIs: ExcelApi 1,12](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'clearAllFilters(): void;'
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>Exemplos\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/38-pivottable/pivottable-pivotfilters.yaml\nawait Excel.run(async (context) => {\n  // Clear all the PivotFilters.\n\n  // Get the PivotTable.\n  const pivotTable = context.workbook.worksheets.getActiveWorksheet().pivotTables.getItem(\"Farm Sales\");\n  pivotTable.hierarchies.load(\"name\");\n  await context.sync();\n\n  // Clear the filters on each PivotField.\n  pivotTable.hierarchies.items.forEach((hierarchy) => {\n    hierarchy.fields.getItem(hierarchy.name).clearAllFilters();\n  });\n  await context.sync();\n});\n```"
- name: clearFilter(filterType)
  uid: excel!Excel.PivotField#clearFilter:member(1)
  package: excel!
  fullName: clearFilter(filterType)
  summary: >-
    Limpa todos os critérios existentes do filtro do campo de determinado tipo (se houver algum aplicado no momento).


    \[[Conjunto de APIs: ExcelApi 1,12](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'clearFilter(filterType: Excel.PivotFilterType): void;'
    parameters:
    - id: filterType
      description: O tipo de filtro no campo do qual limpar todos os critérios.
      type: <xref uid="excel!Excel.PivotFilterType:enum" />
    return:
      type: void
      description: ''
- name: clearFilter(filterTypeString)
  uid: excel!Excel.PivotField#clearFilter:member(2)
  package: excel!
  fullName: clearFilter(filterTypeString)
  summary: >-
    Limpa todos os critérios existentes do filtro do campo de determinado tipo (se houver algum aplicado no momento).


    \[[Conjunto de APIs: ExcelApi 1,12](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'clearFilter(filterTypeString: "Unknown" | "Value" | "Manual" | "Label" | "Date"): void;'
    parameters:
    - id: filterTypeString
      description: O tipo de filtro no campo do qual limpar todos os critérios.
      type: "\"Unknown\" | \"Value\" | \"Manual\" | \"Label\" | \"Date\""
    return:
      type: void
      description: ''
- name: getFilters()
  uid: excel!Excel.PivotField#getFilters:member(1)
  package: excel!
  fullName: getFilters()
  summary: >-
    Obtém todos os filtros aplicados no campo no momento.


    \[[Conjunto de APIs: ExcelApi 1,12](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getFilters(): OfficeExtension.ClientResult<Excel.PivotFilters>;'
    return:
      type: <xref uid="office!OfficeExtension.ClientResult:class" />&lt;<xref uid="excel!Excel.PivotFilters:interface" />&gt;
      description: Uma interface PivotFilters com todos os filtros ativos.
- name: isFiltered(filterType)
  uid: excel!Excel.PivotField#isFiltered:member(1)
  package: excel!
  fullName: isFiltered(filterType)
  summary: >-
    Verifica se há filtros aplicados no campo.


    \[[Conjunto de APIs: ExcelApi 1,12](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'isFiltered(filterType?: Excel.PivotFilterType): OfficeExtension.ClientResult<boolean>;'
    parameters:
    - id: filterType
      description: O tipo de filtro a ser verificado. Se nenhum tipo for fornecido, este método verificará se o filtro foi aplicado.
      type: <xref uid="excel!Excel.PivotFilterType:enum" />
    return:
      type: <xref uid="office!OfficeExtension.ClientResult:class" />&lt;boolean&gt;
      description: True se o campo tiver um filtro de tipo `filterType` aplicado. Se FilterType não for especificado, true será retornado se o campo tiver qualquer filtro aplicado.
- name: isFiltered(filterTypeString)
  uid: excel!Excel.PivotField#isFiltered:member(2)
  package: excel!
  fullName: isFiltered(filterTypeString)
  summary: >-
    Verifica se há filtros aplicados no campo.


    \[[Conjunto de APIs: ExcelApi 1,12](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'isFiltered(filterTypeString?: "Unknown" | "Value" | "Manual" | "Label" | "Date"): OfficeExtension.ClientResult<boolean>;'
    parameters:
    - id: filterTypeString
      description: O tipo de filtro a ser verificado. Se nenhum tipo for fornecido, este método verificará se o filtro foi aplicado.
      type: "\"Unknown\" | \"Value\" | \"Manual\" | \"Label\" | \"Date\""
    return:
      type: <xref uid="office!OfficeExtension.ClientResult:class" />&lt;boolean&gt;
      description: True se o campo tiver um filtro de tipo `filterType` aplicado. Se FilterType não for especificado, true será retornado se o campo tiver qualquer filtro aplicado.
- name: load(options)
  uid: excel!Excel.PivotField#load:member(1)
  package: excel!
  fullName: load(options)
  summary: Coloca um comando na fila para carregar as propriedades especificadas do objeto. Você deve chamar `context.sync()` antes de ler as propriedades.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(options?: Excel.Interfaces.PivotFieldLoadOptions): Excel.PivotField;'
    parameters:
    - id: options
      description: Fornece opções para as propriedades do objeto a ser carregado.
      type: <xref uid="excel!Excel.Interfaces.PivotFieldLoadOptions:interface" />
    return:
      type: <xref uid="excel!Excel.PivotField:class" />
      description: ''
- name: load(propertyNames)
  uid: excel!Excel.PivotField#load:member(2)
  package: excel!
  fullName: load(propertyNames)
  summary: Coloca um comando na fila para carregar as propriedades especificadas do objeto. Você deve chamar `context.sync()` antes de ler as propriedades.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.PivotField;'
    parameters:
    - id: propertyNames
      description: Uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.
      type: string | string[]
    return:
      type: <xref uid="excel!Excel.PivotField:class" />
      description: ''
- name: load(propertyNamesAndPaths)
  uid: excel!Excel.PivotField#load:member(3)
  package: excel!
  fullName: load(propertyNamesAndPaths)
  summary: Coloca um comando na fila para carregar as propriedades especificadas do objeto. Você deve chamar `context.sync()` antes de ler as propriedades.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      load(propertyNamesAndPaths?: {
                  select?: string;
                  expand?: string;
              }): Excel.PivotField;
    parameters:
    - id: propertyNamesAndPaths
      description: '`propertyNamesAndPaths.select` é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades a serem carregadas e `propertyNamesAndPaths.expand` é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades de navegação a serem carregadas.'
      type: >-
        {
                    select?: string;
                    expand?: string;
                }
    return:
      type: <xref uid="excel!Excel.PivotField:class" />
      description: ''
- name: set(properties, options)
  uid: excel!Excel.PivotField#set:member(1)
  package: excel!
  fullName: set(properties, options)
  summary: Define várias propriedades de um objeto ao mesmo tempo. Você pode passar um objeto simples com as propriedades apropriadas ou outro objeto API do mesmo tipo.
  remarks: >-
    Este método tem a seguinte assinatura adicional:


    `set(properties: Excel.PivotField): void`
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(properties: Interfaces.PivotFieldUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    parameters:
    - id: properties
      description: Um objeto JavaScript com propriedades que são estruturadas isomorphically para as propriedades do objeto no qual o método é chamado.
      type: <xref uid="excel!Excel.Interfaces.PivotFieldUpdateData:interface" />
    - id: options
      description: Fornece uma opção para suprimir erros se o objeto Properties tentar definir qualquer propriedade somente leitura.
      type: <xref uid="office!OfficeExtension.UpdateOptions:interface" />
    return:
      type: void
      description: ''
- name: set(properties)
  uid: excel!Excel.PivotField#set:member(2)
  package: excel!
  fullName: set(properties)
  summary: Define várias propriedades no objeto ao mesmo tempo, com base em um objeto carregado existente.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(properties: Excel.PivotField): void;'
    parameters:
    - id: properties
      description: ''
      type: <xref uid="excel!Excel.PivotField:class" />
    return:
      type: void
      description: ''
- name: sortByLabels(sortBy)
  uid: excel!Excel.PivotField#sortByLabels:member(1)
  package: excel!
  fullName: sortByLabels(sortBy)
  summary: >-
    Classifica o PivotField. Se um DataPivotHierarchy for especificado, a classificação será aplicada com base nele, se a classificação não for baseada no campo PivotField.


    \[[Conjunto de APIs: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'sortByLabels(sortBy: SortBy): void;'
    parameters:
    - id: sortBy
      description: Especifica se a classificação é feita em ordem crescente ou decrescente.
      type: <xref uid="excel!Excel.SortBy:enum" />
    return:
      type: void
      description: ''
- name: sortByValues(sortBy, valuesHierarchy, pivotItemScope)
  uid: excel!Excel.PivotField#sortByValues:member(1)
  package: excel!
  fullName: sortByValues(sortBy, valuesHierarchy, pivotItemScope)
  summary: >-
    Classifica o Campo dinâmico por valores especificados em um determinado escopo. O escopo define quais valores específicos serão usados para classificar quando houver vários valores do mesmo DataPivotHierarchy.


    \[[Conjunto de APIs: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'sortByValues(sortBy: Excel.SortBy, valuesHierarchy: Excel.DataPivotHierarchy, pivotItemScope?: Array<PivotItem | string>): void;'
    parameters:
    - id: sortBy
      description: Especifica se a classificação é feita em ordem crescente ou decrescente.
      type: <xref uid="excel!Excel.SortBy:enum" />
    - id: valuesHierarchy
      description: Especifica a hierarquia de valores no eixo dos dados a ser usado para a classificação.
      type: <xref uid="excel!Excel.DataPivotHierarchy:class" />
    - id: pivotItemScope
      description: Os itens que devem ser usados para o escopo da classificação. Eles serão os itens que compõem a linha ou coluna que você deseja classificar. Se uma cadeia de caracteres é usada em vez de um PivotItem, a cadeia de caracteres representa a ID do PivotItem. Se não houver nenhum item além da hierarquia de dados no eixo que você deseja classificar, isso poderá ficar vazio.
      type: Array&lt;<xref uid="excel!Excel.PivotItem:class" /> | string&gt;
    return:
      type: void
      description: ''
- name: sortByValues(sortByString, valuesHierarchy, pivotItemScope)
  uid: excel!Excel.PivotField#sortByValues:member(2)
  package: excel!
  fullName: sortByValues(sortByString, valuesHierarchy, pivotItemScope)
  summary: >-
    Classifica o Campo dinâmico por valores especificados em um determinado escopo. O escopo define quais valores específicos serão usados para classificar quando houver vários valores do mesmo DataPivotHierarchy.


    \[[Conjunto de APIs: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'sortByValues(sortByString: "Ascending" | "Descending", valuesHierarchy: Excel.DataPivotHierarchy, pivotItemScope?: Array<PivotItem | string>): void;'
    parameters:
    - id: sortByString
      description: Especifica se a classificação é feita em ordem crescente ou decrescente.
      type: "\"Ascending\" | \"Descending\""
    - id: valuesHierarchy
      description: Especifica a hierarquia de valores no eixo dos dados a ser usado para a classificação.
      type: <xref uid="excel!Excel.DataPivotHierarchy:class" />
    - id: pivotItemScope
      description: Os itens que devem ser usados para o escopo da classificação. Eles serão os itens que compõem a linha ou coluna que você deseja classificar. Se uma cadeia de caracteres é usada em vez de um PivotItem, a cadeia de caracteres representa a ID do PivotItem. Se não houver nenhum item além da hierarquia de dados no eixo que você deseja classificar, isso poderá ficar vazio.
      type: Array&lt;<xref uid="excel!Excel.PivotItem:class" /> | string&gt;
    return:
      type: void
      description: ''
- name: toJSON()
  uid: excel!Excel.PivotField#toJSON:member(1)
  package: excel!
  fullName: toJSON()
  summary: Substitui o `toJSON()` método JavaScript para fornecer uma saída mais útil quando um objeto API é passado para `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, por sua vez, chama o `toJSON` método do objeto que é passado para ele.) Enquanto o objeto Excel. PivotField original é um objeto API, o `toJSON` método retorna um objeto JavaScript simples (digitado como `Excel.Interfaces.PivotFieldData`<!-- -->) que contém cópias superficiais de qualquer propriedade filho carregada do objeto original.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'toJSON(): Excel.Interfaces.PivotFieldData;'
    return:
      type: <xref uid="excel!Excel.Interfaces.PivotFieldData:interface" />
      description: ''
extends: <xref uid="office!OfficeExtension.ClientObject:class" />
metadata:
  ms.openlocfilehash: c036ad589e3e5a62a85f57ce0a127620a62666d9
  ms.sourcegitcommit: 3bab97ab3b91da7cca497f6fc895408a76bd8b46
  ms.translationtype: MT
  ms.contentlocale: pt-BR
  ms.lasthandoff: 11/18/2020
  ms.locfileid: "49317024"
