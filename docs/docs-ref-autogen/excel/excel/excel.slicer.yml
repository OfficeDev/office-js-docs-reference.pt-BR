### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.Slicer:class'
    summary: |-
      <span data-ttu-id="9707a-101">Representa um objeto slicer na pasta de trabalho.</span><span class="sxs-lookup"><span data-stu-id="9707a-101">Represents a slicer object in the workbook.</span></span>

      <span data-ttu-id="9707a-102">\[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9707a-102">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: Excel.Slicer
    fullName: Excel.Slicer
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.Slicer#caption:member'
      - 'excel!Excel.Slicer#clearFilters:member(1)'
      - 'excel!Excel.Slicer#context:member'
      - 'excel!Excel.Slicer#delete:member(1)'
      - 'excel!Excel.Slicer#getSelectedItems:member(1)'
      - 'excel!Excel.Slicer#height:member'
      - 'excel!Excel.Slicer#id:member'
      - 'excel!Excel.Slicer#isFilterCleared:member'
      - 'excel!Excel.Slicer#left:member'
      - 'excel!Excel.Slicer#load:member(1)'
      - 'excel!Excel.Slicer#load:member(2)'
      - 'excel!Excel.Slicer#load:member(3)'
      - 'excel!Excel.Slicer#name:member'
      - 'excel!Excel.Slicer#nameInFormula:member'
      - 'excel!Excel.Slicer#selectItems:member(1)'
      - 'excel!Excel.Slicer#set:member(1)'
      - 'excel!Excel.Slicer#set:member(2)'
      - 'excel!Excel.Slicer#slicerItems:member'
      - 'excel!Excel.Slicer#sortBy:member'
      - 'excel!Excel.Slicer#style:member'
      - 'excel!Excel.Slicer#toJSON:member(1)'
      - 'excel!Excel.Slicer#top:member'
      - 'excel!Excel.Slicer#width:member'
      - 'excel!Excel.Slicer#worksheet:member'
  - uid: 'excel!Excel.Slicer#caption:member'
    summary: |-
      <span data-ttu-id="9707a-103">Representa a legenda da segmentação de dados.</span><span class="sxs-lookup"><span data-stu-id="9707a-103">Represents the caption of slicer.</span></span>

      <span data-ttu-id="9707a-104">\[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9707a-104">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: caption
    fullName: caption
    langs:
      - typeScript
    type: property
    syntax:
      content: 'caption: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.Slicer#clearFilters:member(1)'
    summary: |-
      <span data-ttu-id="9707a-105">Limpa todos os filtros aplicados à segmentação de dados no momento.</span><span class="sxs-lookup"><span data-stu-id="9707a-105">Clears all the filters currently applied on the slicer.</span></span>

      <span data-ttu-id="9707a-106">\[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9707a-106">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: clearFilters()
    fullName: clearFilters()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clearFilters(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="9707a-107">Exemplos</span><span class="sxs-lookup"><span data-stu-id="9707a-107">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const slicer = context.workbook.slicers.getItem("Fruit Slicer");
              slicer.clearFilters();
              await context.sync();
          });
          ```
  - uid: 'excel!Excel.Slicer#context:member'
    summary: <span data-ttu-id="9707a-108">O contexto de solicitação associado ao objeto.</span><span class="sxs-lookup"><span data-stu-id="9707a-108">The request context associated with the object.</span></span> <span data-ttu-id="9707a-109">Isso conecta o processo do suplemento ao processo do aplicativo host do Office.</span><span class="sxs-lookup"><span data-stu-id="9707a-109">This connects the add-in's process to the Office host application's process.</span></span>
    isPreview: true
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.Slicer#delete:member(1)'
    summary: |-
      <span data-ttu-id="9707a-110">Exclui a segmentação de dados.</span><span class="sxs-lookup"><span data-stu-id="9707a-110">Deletes the slicer.</span></span>

      <span data-ttu-id="9707a-111">\[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9707a-111">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="9707a-112">Exemplos</span><span class="sxs-lookup"><span data-stu-id="9707a-112">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getActiveWorksheet();
              sheet.slicers.getItemAt(0).delete();
              await context.sync();
          });
          ```
  - uid: 'excel!Excel.Slicer#getSelectedItems:member(1)'
    summary: |-
      <span data-ttu-id="9707a-113">Retorna uma matriz de chaves de itens selecionados.</span><span class="sxs-lookup"><span data-stu-id="9707a-113">Returns an array of selected items' keys.</span></span> <span data-ttu-id="9707a-114">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="9707a-114">Read-only.</span></span>

      <span data-ttu-id="9707a-115">\[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9707a-115">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: getSelectedItems()
    fullName: getSelectedItems()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getSelectedItems(): OfficeExtension.ClientResult<string[]>;'
      return:
        type:
          - 'excel!Excel.Slicer#getSelectedItems~0:complex'
        description: ''
  - uid: 'excel!Excel.Slicer#height:member'
    summary: |-
      <span data-ttu-id="9707a-116">Representa a altura, em pontos, da segmentação de dados.</span><span class="sxs-lookup"><span data-stu-id="9707a-116">Represents the height, in points, of the slicer.</span></span> <span data-ttu-id="9707a-117">Gera um "o argumento é inválido ou está ausente ou tem um formato incorreto."</span><span class="sxs-lookup"><span data-stu-id="9707a-117">Throws an "The argument is invalid or missing or has an incorrect format."</span></span> <span data-ttu-id="9707a-118">exceção quando definida com valor negativo ou zero como entrada.</span><span class="sxs-lookup"><span data-stu-id="9707a-118">exception when set with negative value or zero as input.</span></span>

      <span data-ttu-id="9707a-119">\[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9707a-119">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: height
    fullName: height
    langs:
      - typeScript
    type: property
    syntax:
      content: 'height: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.Slicer#id:member'
    summary: |-
      <span data-ttu-id="9707a-120">Representa a id exclusiva da segmentação de dados.</span><span class="sxs-lookup"><span data-stu-id="9707a-120">Represents the unique id of slicer.</span></span> <span data-ttu-id="9707a-121">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="9707a-121">Read-only.</span></span>

      <span data-ttu-id="9707a-122">\[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9707a-122">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.Slicer#isFilterCleared:member'
    summary: |-
      <span data-ttu-id="9707a-123">Verdadeiro se todos os filtros atualmente aplicados na segmentação de dados estiverem desmarcados.</span><span class="sxs-lookup"><span data-stu-id="9707a-123">True if all filters currently applied on the slicer are cleared.</span></span>

      <span data-ttu-id="9707a-124">\[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9707a-124">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: isFilterCleared
    fullName: isFilterCleared
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly isFilterCleared: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.Slicer#left:member'
    summary: |-
      <span data-ttu-id="9707a-125">Representa a distância, em pontos, da lateral esquerda da segmentação de dados à esquerda da planilha.</span><span class="sxs-lookup"><span data-stu-id="9707a-125">Represents the distance, in points, from the left side of the slicer to the left of the worksheet.</span></span> <span data-ttu-id="9707a-126">Gera um "o argumento é inválido ou está ausente ou tem um formato incorreto."</span><span class="sxs-lookup"><span data-stu-id="9707a-126">Throws an "The argument is invalid or missing or has an incorrect format."</span></span> <span data-ttu-id="9707a-127">exceção quando definida com valor negativo como entrada.</span><span class="sxs-lookup"><span data-stu-id="9707a-127">exception when set with negative value as input.</span></span>

      <span data-ttu-id="9707a-128">\[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9707a-128">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: left
    fullName: left
    langs:
      - typeScript
    type: property
    syntax:
      content: 'left: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.Slicer#load:member(1)'
    summary: <span data-ttu-id="9707a-129">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="9707a-129">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="9707a-130">Você deve chamar `context.sync()` antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="9707a-130">You must call `context.sync()` before reading the properties.</span></span>
    isPreview: true
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.SlicerLoadOptions): Excel.Slicer;'
      return:
        type:
          - 'excel!Excel.Slicer:class'
        description: ''
      parameters:
        - id: options
          description: <span data-ttu-id="9707a-131">Fornece opções para as propriedades do objeto a ser carregado.</span><span class="sxs-lookup"><span data-stu-id="9707a-131">Provides options for which properties of the object to load.</span></span>
          type:
            - 'excel!Excel.Interfaces.SlicerLoadOptions:interface'
  - uid: 'excel!Excel.Slicer#load:member(2)'
    summary: <span data-ttu-id="9707a-132">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="9707a-132">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="9707a-133">Você deve chamar `context.sync()` antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="9707a-133">You must call `context.sync()` before reading the properties.</span></span>
    isPreview: true
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.Slicer;'
      return:
        type:
          - 'excel!Excel.Slicer:class'
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="9707a-134">Uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="9707a-134">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.Slicer#load:member(3)'
    summary: <span data-ttu-id="9707a-135">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="9707a-135">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="9707a-136">Você deve chamar `context.sync()` antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="9707a-136">You must call `context.sync()` before reading the properties.</span></span>
    isPreview: true
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.Slicer;
      return:
        type:
          - 'excel!Excel.Slicer:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="9707a-137">`propertyNamesAndPaths.select`é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades a serem `propertyNamesAndPaths.expand` carregadas e é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades de navegação a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="9707a-137">`propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - |-
              {
                          select?: string;
                          expand?: string;
                      }
  - uid: 'excel!Excel.Slicer#name:member'
    summary: |-
      <span data-ttu-id="9707a-138">Representa o nome da segmentação de dados.</span><span class="sxs-lookup"><span data-stu-id="9707a-138">Represents the name of slicer.</span></span>

      <span data-ttu-id="9707a-139">\[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9707a-139">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: name
    fullName: name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'name: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.Slicer#nameInFormula:member'
    summary: |-
      <span data-ttu-id="9707a-140">Representa o nome da segmentação de dados usada na fórmula.</span><span class="sxs-lookup"><span data-stu-id="9707a-140">Represents the slicer name used in the formula.</span></span>

      <span data-ttu-id="9707a-141">\[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9707a-141">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: nameInFormula
    fullName: nameInFormula
    langs:
      - typeScript
    type: property
    syntax:
      content: 'nameInFormula: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.Slicer#selectItems:member(1)'
    summary: |-
      <span data-ttu-id="9707a-142">Seleciona itens de segmentação de itens com base em suas chaves.</span><span class="sxs-lookup"><span data-stu-id="9707a-142">Selects slicer items based on their keys.</span></span> <span data-ttu-id="9707a-143">As seleções anteriores estão desmarcadas.</span><span class="sxs-lookup"><span data-stu-id="9707a-143">The previous selections are cleared.</span></span> <span data-ttu-id="9707a-144">Todos os itens serão selecionados por padrão se a matriz estiver vazia.</span><span class="sxs-lookup"><span data-stu-id="9707a-144">All items will be selected by default if the array is empty.</span></span>

      <span data-ttu-id="9707a-145">\[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9707a-145">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: selectItems(items)
    fullName: selectItems(items)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'selectItems(items?: string[]): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="9707a-146">Exemplos</span><span class="sxs-lookup"><span data-stu-id="9707a-146">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const slicer = context.workbook.slicers.getItem("Fruit Slicer");
              slicer.selectItems(["Lemon", "Lime", "Orange"]);
              await context.sync();
          });
          ```
      parameters:
        - id: items
          description: <span data-ttu-id="9707a-147">Opcional.</span><span class="sxs-lookup"><span data-stu-id="9707a-147">Optional.</span></span> <span data-ttu-id="9707a-148">Os nomes de item de segmentação de itens especificados a serem selecionados.</span><span class="sxs-lookup"><span data-stu-id="9707a-148">The specified slicer item names to be selected.</span></span>
          type:
            - 'string[]'
  - uid: 'excel!Excel.Slicer#set:member(1)'
    summary: '<span data-ttu-id="9707a-149">Define várias propriedades de um objeto ao mesmo tempo.</span><span class="sxs-lookup"><span data-stu-id="9707a-149">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="9707a-150">Você pode passar um objeto simples com as propriedades apropriadas ou outro objeto API do mesmo tipo.</span><span class="sxs-lookup"><span data-stu-id="9707a-150">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="9707a-151">Este método tem a seguinte assinatura adicional:</span><span class="sxs-lookup"><span data-stu-id="9707a-151">This method has the following additional signature:</span></span>

      `set(properties: Excel.Slicer): void`
    isPreview: true
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.SlicerUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="9707a-152">Um objeto JavaScript com propriedades que são estruturadas isomorphically para as propriedades do objeto no qual o método é chamado.</span><span class="sxs-lookup"><span data-stu-id="9707a-152">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - 'excel!Excel.Interfaces.SlicerUpdateData:interface'
        - id: options
          description: <span data-ttu-id="9707a-153">Fornece uma opção para suprimir erros se o objeto Properties tentar definir qualquer propriedade somente leitura.</span><span class="sxs-lookup"><span data-stu-id="9707a-153">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - 'excel!OfficeExtension.UpdateOptions:interface'
  - uid: 'excel!Excel.Slicer#set:member(2)'
    summary: '<span data-ttu-id="9707a-154">Define várias propriedades no objeto ao mesmo tempo, com base em um objeto carregado existente.</span><span class="sxs-lookup"><span data-stu-id="9707a-154">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    isPreview: true
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.Slicer): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'excel!Excel.Slicer:class'
  - uid: 'excel!Excel.Slicer#slicerItems:member'
    summary: |-
      <span data-ttu-id="9707a-155">Representa a coleção de SlicerItems que faz parte da segmentação de dados.</span><span class="sxs-lookup"><span data-stu-id="9707a-155">Represents the collection of SlicerItems that are part of the slicer.</span></span> <span data-ttu-id="9707a-156">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="9707a-156">Read-only.</span></span>

      <span data-ttu-id="9707a-157">\[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9707a-157">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: slicerItems
    fullName: slicerItems
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly slicerItems: Excel.SlicerItemCollection;'
      return:
        type:
          - 'excel!Excel.SlicerItemCollection:class'
  - uid: 'excel!Excel.Slicer#sortBy:member'
    summary: |-
      <span data-ttu-id="9707a-158">Representa a ordem de classificação dos itens na segmentação de dados.</span><span class="sxs-lookup"><span data-stu-id="9707a-158">Represents the sort order of the items in the slicer.</span></span> <span data-ttu-id="9707a-159">Os valores possíveis são: "DataSourceOrder", "crescente", "decrescente".</span><span class="sxs-lookup"><span data-stu-id="9707a-159">Possible values are: "DataSourceOrder", "Ascending", "Descending".</span></span>

      <span data-ttu-id="9707a-160">\[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9707a-160">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: sortBy
    fullName: sortBy
    langs:
      - typeScript
    type: property
    syntax:
      content: 'sortBy: Excel.SlicerSortType | "DataSourceOrder" | "Ascending" | "Descending";'
      return:
        type:
          - 'excel!Excel.Slicer#sortBy~0:complex'
  - uid: 'excel!Excel.Slicer#style:member'
    summary: |-
      <span data-ttu-id="9707a-161">Valor da constante que representa o estilo da Segmentação de dados.</span><span class="sxs-lookup"><span data-stu-id="9707a-161">Constant value that represents the Slicer style.</span></span> <span data-ttu-id="9707a-162">Os valores possíveis são: "SlicerStyleLight1" por meio de "SlicerStyleLight6", "TableStyleOther1" até "TableStyleOther2", "SlicerStyleDark1" até "SlicerStyleDark6".</span><span class="sxs-lookup"><span data-stu-id="9707a-162">Possible values are: "SlicerStyleLight1" through "SlicerStyleLight6", "TableStyleOther1" through "TableStyleOther2", "SlicerStyleDark1" through "SlicerStyleDark6".</span></span> <span data-ttu-id="9707a-163">Também é possível usar um estilo definido pelo usuário que esteja presente na planilha.</span><span class="sxs-lookup"><span data-stu-id="9707a-163">A custom user-defined style present in the workbook can also be specified.</span></span>

      <span data-ttu-id="9707a-164">\[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9707a-164">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: style
    fullName: style
    langs:
      - typeScript
    type: property
    syntax:
      content: 'style: string;'
      return:
        type:
          - string
        description: |-


          #### <a name="examples"></a><span data-ttu-id="9707a-165">Exemplos</span><span class="sxs-lookup"><span data-stu-id="9707a-165">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const slicer = context.workbook.slicers.getItem("Fruit Slicer");
              slicer.style = "SlicerStyleLight6";
              await context.sync();
          });
          ```
  - uid: 'excel!Excel.Slicer#toJSON:member(1)'
    summary: '<span data-ttu-id="9707a-166">Substitui o método `toJSON()` JavaScript para fornecer uma saída mais útil quando um objeto API é passado para`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="9707a-166">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="9707a-167">.</span><span class="sxs-lookup"><span data-stu-id="9707a-167"></span></span> <span data-ttu-id="9707a-168">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="9707a-168"></span></span><!-- --><span data-ttu-id="9707a-169">, por sua vez, chama `toJSON` o método do objeto que é passado para ele.) Enquanto o objeto Excel. slicer original é um objeto API, o `toJSON` método retorna um objeto JavaScript simples (digitado como`Excel.Interfaces.SlicerData`</span><span class="sxs-lookup"><span data-stu-id="9707a-169">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.Slicer object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.SlicerData`</span></span><!-- --><span data-ttu-id="9707a-170">) que contém cópias superficiais de qualquer propriedade filho carregada do objeto original.</span><span class="sxs-lookup"><span data-stu-id="9707a-170">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    isPreview: true
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.SlicerData;'
      return:
        type:
          - 'excel!Excel.Interfaces.SlicerData:interface'
        description: ''
  - uid: 'excel!Excel.Slicer#top:member'
    summary: |-
      <span data-ttu-id="9707a-171">Representa a distância, em pontos, da borda superior da segmentação de dados na parte superior da planilha.</span><span class="sxs-lookup"><span data-stu-id="9707a-171">Represents the distance, in points, from the top edge of the slicer to the top of the worksheet.</span></span> <span data-ttu-id="9707a-172">Gera um "o argumento é inválido ou está ausente ou tem um formato incorreto."</span><span class="sxs-lookup"><span data-stu-id="9707a-172">Throws an "The argument is invalid or missing or has an incorrect format."</span></span> <span data-ttu-id="9707a-173">exceção quando definida com valor negativo como entrada.</span><span class="sxs-lookup"><span data-stu-id="9707a-173">exception when set with negative value as input.</span></span>

      <span data-ttu-id="9707a-174">\[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9707a-174">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: top
    fullName: top
    langs:
      - typeScript
    type: property
    syntax:
      content: 'top: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.Slicer#width:member'
    summary: |-
      <span data-ttu-id="9707a-175">Representa a largura, em pontos, da segmentação de dados.</span><span class="sxs-lookup"><span data-stu-id="9707a-175">Represents the width, in points, of the slicer.</span></span> <span data-ttu-id="9707a-176">Gera um "o argumento é inválido ou está ausente ou tem um formato incorreto."</span><span class="sxs-lookup"><span data-stu-id="9707a-176">Throws an "The argument is invalid or missing or has an incorrect format."</span></span> <span data-ttu-id="9707a-177">exceção quando definida com valor negativo ou zero como entrada.</span><span class="sxs-lookup"><span data-stu-id="9707a-177">exception when set with negative value or zero as input.</span></span>

      <span data-ttu-id="9707a-178">\[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9707a-178">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: width
    fullName: width
    langs:
      - typeScript
    type: property
    syntax:
      content: 'width: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.Slicer#worksheet:member'
    summary: |-
      <span data-ttu-id="9707a-179">Representa a planilha que contém a segmentação de dados.</span><span class="sxs-lookup"><span data-stu-id="9707a-179">Represents the worksheet containing the slicer.</span></span> <span data-ttu-id="9707a-180">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="9707a-180">Read-only.</span></span>

      <span data-ttu-id="9707a-181">\[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9707a-181">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: worksheet
    fullName: worksheet
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly worksheet: Excel.Worksheet;'
      return:
        type:
          - 'excel!Excel.Worksheet:class'
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.Slicer#getSelectedItems~0:complex'
    name: 'OfficeExtension.ClientResult<string[]>'
    fullName: 'OfficeExtension.ClientResult<string[]>'
    spec.typeScript:
      - uid: 'excel!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: '<string[]>'
        fullName: '<string[]>'
  - uid: 'excel!Excel.Slicer:class'
    name: Excel.Slicer
  - uid: 'excel!Excel.Interfaces.SlicerLoadOptions:interface'
    name: Excel.Interfaces.SlicerLoadOptions
  - uid: 'excel!Excel.Interfaces.SlicerUpdateData:interface'
    name: Interfaces.SlicerUpdateData
  - uid: 'excel!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'excel!Excel.SlicerItemCollection:class'
    name: Excel.SlicerItemCollection
  - uid: 'excel!Excel.Slicer#sortBy~0:complex'
    name: Excel.SlicerSortType | "DataSourceOrder" | "Ascending" | "Descending"
    fullName: Excel.SlicerSortType | "DataSourceOrder" | "Ascending" | "Descending"
    spec.typeScript:
      - uid: 'excel!Excel.SlicerSortType:enum'
        name: Excel.SlicerSortType
        fullName: Excel.SlicerSortType
      - name: ' | "DataSourceOrder" | "Ascending" | "Descending"'
        fullName: ' | "DataSourceOrder" | "Ascending" | "Descending"'
  - uid: 'excel!Excel.Interfaces.SlicerData:interface'
    name: Excel.Interfaces.SlicerData
  - uid: 'excel!Excel.Worksheet:class'
    name: Excel.Worksheet