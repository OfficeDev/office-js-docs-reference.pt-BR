### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.WorksheetCollection:class'
    summary: |-
      <span data-ttu-id="0a144-101">Representa uma coleção de todos os objetos da planilha que fazem parte da pasta de trabalho.</span><span class="sxs-lookup"><span data-stu-id="0a144-101">Represents a collection of worksheet objects that are part of the workbook.</span></span>

      <span data-ttu-id="0a144-102">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0a144-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.WorksheetCollection
    fullName: Excel.WorksheetCollection
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.WorksheetCollection#add:member(1)'
      - 'excel!Excel.WorksheetCollection#addFromBase64:member(1)'
      - 'excel!Excel.WorksheetCollection#addFromBase64:member(2)'
      - 'excel!Excel.WorksheetCollection#context:member'
      - 'excel!Excel.WorksheetCollection#getActiveWorksheet:member(1)'
      - 'excel!Excel.WorksheetCollection#getCount:member(1)'
      - 'excel!Excel.WorksheetCollection#getFirst:member(1)'
      - 'excel!Excel.WorksheetCollection#getItem:member(1)'
      - 'excel!Excel.WorksheetCollection#getItemOrNullObject:member(1)'
      - 'excel!Excel.WorksheetCollection#getLast:member(1)'
      - 'excel!Excel.WorksheetCollection#items:member'
      - 'excel!Excel.WorksheetCollection#load:member(1)'
      - 'excel!Excel.WorksheetCollection#load:member(2)'
      - 'excel!Excel.WorksheetCollection#load:member(3)'
      - 'excel!Excel.WorksheetCollection#onActivated:member'
      - 'excel!Excel.WorksheetCollection#onAdded:member'
      - 'excel!Excel.WorksheetCollection#onCalculated:member'
      - 'excel!Excel.WorksheetCollection#onChanged:member'
      - 'excel!Excel.WorksheetCollection#onColumnSorted:member'
      - 'excel!Excel.WorksheetCollection#onDeactivated:member'
      - 'excel!Excel.WorksheetCollection#onDeleted:member'
      - 'excel!Excel.WorksheetCollection#onFiltered:member'
      - 'excel!Excel.WorksheetCollection#onFormatChanged:member'
      - 'excel!Excel.WorksheetCollection#onRowHiddenChanged:member'
      - 'excel!Excel.WorksheetCollection#onRowSorted:member'
      - 'excel!Excel.WorksheetCollection#onSelectionChanged:member'
      - 'excel!Excel.WorksheetCollection#onSingleClicked:member'
      - 'excel!Excel.WorksheetCollection#toJSON:member(1)'
  - uid: 'excel!Excel.WorksheetCollection#add:member(1)'
    summary: |-
      <span data-ttu-id="0a144-p101">Adiciona uma nova planilha à pasta de trabalho. A planilha será adicionada ao final das planilhas existentes. Se você quiser ativar a planilha recém-adicionada, chame “.activate()” nela.</span><span class="sxs-lookup"><span data-stu-id="0a144-p101">Adds a new worksheet to the workbook. The worksheet will be added at the end of existing worksheets. If you wish to activate the newly added worksheet, call ".activate() on it.</span></span>

      <span data-ttu-id="0a144-106">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0a144-106">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: add(name)
    fullName: add(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(name?: string): Excel.Worksheet;'
      return:
        type:
          - 'excel!Excel.Worksheet:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="0a144-107">Exemplos</span><span class="sxs-lookup"><span data-stu-id="0a144-107">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var wSheetName = 'Sample Name';
              var worksheet = ctx.workbook.worksheets.add(wSheetName);
              worksheet.load('name');
              return ctx.sync().then(function() {
                  console.log(worksheet.name);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: name
          description: '<span data-ttu-id="0a144-p102">Opcional. O nome da planilha a ser adicionada. Se especificado, o nome deve ser exclusivo. Se não especificado, o Excel determina o nome da nova planilha.</span><span class="sxs-lookup"><span data-stu-id="0a144-p102">Optional. The name of the worksheet to be added. If specified, name should be unqiue. If not specified, Excel determines the name of the new worksheet.</span></span>'
          type:
            - string
  - uid: 'excel!Excel.WorksheetCollection#addFromBase64:member(1)'
    summary: |-
      <span data-ttu-id="0a144-112">Insere as planilhas especificadas de uma pasta de trabalho na pasta de trabalho atual.</span><span class="sxs-lookup"><span data-stu-id="0a144-112">Inserts the specified worksheets of a workbook into the current workbook.</span></span>

      <span data-ttu-id="0a144-113">\[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0a144-113">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: 'addFromBase64(base64File, sheetNamesToInsert, positionType, relativeTo)'
    fullName: 'addFromBase64(base64File, sheetNamesToInsert, positionType, relativeTo)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addFromBase64(base64File: string, sheetNamesToInsert?: string[], positionType?: Excel.WorksheetPositionType, relativeTo?: Worksheet | string): OfficeExtension.ClientResult<string[]>;'
      return:
        type:
          - 'excel!Excel.WorksheetCollection#addFromBase64~0:complex'
        description: |-
          <span data-ttu-id="0a144-114">Uma matriz de IDs correspondente a cada nova planilha inserida.</span><span class="sxs-lookup"><span data-stu-id="0a144-114">An array of ids corresponding to each newly inserted worksheet.</span></span>

          #### <a name="examples"></a><span data-ttu-id="0a144-115">Exemplos</span><span class="sxs-lookup"><span data-stu-id="0a144-115">Examples</span></span>

          ```javascript
          const myFile = <HTMLInputElement>document.getElementById("file");
          const reader = new FileReader();

          reader.onload = (event) => {
              Excel.run((context) => {
                  // strip off the metadata before the base64-encoded string
                  const startIndex = reader.result.toString().indexOf("base64,");
                  const workbookContents = reader.result.toString().substr(startIndex + 7);

                  const sheets = context.workbook.worksheets;
                  sheets.addFromBase64(
                      workbookContents,
                      null, // get all the worksheets 
                      Excel.WorksheetPositionType.end // insert them after the current workbook's worksheets
                      );
                  return context.sync();
              });
          };

          // read in the file as a data URL so we can parse the base64-encoded string
          reader.readAsDataURL(myFile.files[0]);
          ```
      parameters:
        - id: base64File
          description: <span data-ttu-id="0a144-116">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="0a144-116">Required.</span></span> <span data-ttu-id="0a144-117">A cadeia de caracteres codificada em base64 que representa o arquivo de pasta de trabalho de origem.</span><span class="sxs-lookup"><span data-stu-id="0a144-117">The base64-encoded string representing the source workbook file.</span></span>
          type:
            - string
        - id: sheetNamesToInsert
          description: '<span data-ttu-id="0a144-118">Opcional.</span><span class="sxs-lookup"><span data-stu-id="0a144-118">Optional.</span></span> <span data-ttu-id="0a144-119">Os nomes de planilhas individuais a serem inseridas.</span><span class="sxs-lookup"><span data-stu-id="0a144-119">The names of individual worksheets to insert.</span></span> <span data-ttu-id="0a144-120">Por padrão, todas as planilhas da pasta de trabalho de origem são inseridas.</span><span class="sxs-lookup"><span data-stu-id="0a144-120">By default, all the worksheets from the source workbook are inserted.</span></span>'
          type:
            - 'string[]'
        - id: positionType
          description: <span data-ttu-id="0a144-121">Opcional.</span><span class="sxs-lookup"><span data-stu-id="0a144-121">Optional.</span></span> <span data-ttu-id="0a144-122">Em que na pasta de trabalho atual as novas planilhas serão inseridas.</span><span class="sxs-lookup"><span data-stu-id="0a144-122">Where in the current workbook the new worksheets will be inserted.</span></span> <span data-ttu-id="0a144-123">Consulte Excel. WorksheetPositionType para obter detalhes.</span><span class="sxs-lookup"><span data-stu-id="0a144-123">See Excel.WorksheetPositionType for details.</span></span> <span data-ttu-id="0a144-124">O padrão é "Start".</span><span class="sxs-lookup"><span data-stu-id="0a144-124">Default is "Start".</span></span>
          type:
            - 'excel!Excel.WorksheetPositionType:enum'
        - id: relativeTo
          description: '<span data-ttu-id="0a144-125">Opcional.</span><span class="sxs-lookup"><span data-stu-id="0a144-125">Optional.</span></span> <span data-ttu-id="0a144-126">A planilha na pasta de trabalho atual que é referenciada para o parâmetro PositionType.</span><span class="sxs-lookup"><span data-stu-id="0a144-126">The worksheet in the current workbook that is referenced for the positionType parameter.</span></span> <span data-ttu-id="0a144-127">O padrão é nulo e, com base em PositionType, ele inserirá planilhas no início ou no final da pasta de trabalho atual.</span><span class="sxs-lookup"><span data-stu-id="0a144-127">Default is null and, based on positionType, it will insert worksheets at the start or end of the current workbook.</span></span>'
          type:
            - 'excel!Excel.WorksheetCollection#addFromBase64~1:complex'
  - uid: 'excel!Excel.WorksheetCollection#addFromBase64:member(2)'
    summary: |-
      <span data-ttu-id="0a144-128">Insere as planilhas especificadas de uma pasta de trabalho na pasta de trabalho atual.</span><span class="sxs-lookup"><span data-stu-id="0a144-128">Inserts the specified worksheets of a workbook into the current workbook.</span></span>

      <span data-ttu-id="0a144-129">\[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0a144-129">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: 'addFromBase64(base64File, sheetNamesToInsert, positionTypeString, relativeTo)'
    fullName: 'addFromBase64(base64File, sheetNamesToInsert, positionTypeString, relativeTo)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addFromBase64(base64File: string, sheetNamesToInsert?: string[], positionTypeString?: "None" | "Before" | "After" | "Beginning" | "End", relativeTo?: Worksheet | string): OfficeExtension.ClientResult<string[]>;'
      return:
        type:
          - 'excel!Excel.WorksheetCollection#addFromBase64~2:complex'
        description: <span data-ttu-id="0a144-130">Uma matriz de IDs correspondente a cada nova planilha inserida.</span><span class="sxs-lookup"><span data-stu-id="0a144-130">An array of ids corresponding to each newly inserted worksheet.</span></span>
      parameters:
        - id: base64File
          description: <span data-ttu-id="0a144-131">Obrigatório.</span><span class="sxs-lookup"><span data-stu-id="0a144-131">Required.</span></span> <span data-ttu-id="0a144-132">A cadeia de caracteres codificada em base64 que representa o arquivo de pasta de trabalho de origem.</span><span class="sxs-lookup"><span data-stu-id="0a144-132">The base64-encoded string representing the source workbook file.</span></span>
          type:
            - string
        - id: sheetNamesToInsert
          description: '<span data-ttu-id="0a144-133">Opcional.</span><span class="sxs-lookup"><span data-stu-id="0a144-133">Optional.</span></span> <span data-ttu-id="0a144-134">Os nomes de planilhas individuais a serem inseridas.</span><span class="sxs-lookup"><span data-stu-id="0a144-134">The names of individual worksheets to insert.</span></span> <span data-ttu-id="0a144-135">Por padrão, todas as planilhas da pasta de trabalho de origem são inseridas.</span><span class="sxs-lookup"><span data-stu-id="0a144-135">By default, all the worksheets from the source workbook are inserted.</span></span>'
          type:
            - 'string[]'
        - id: positionTypeString
          description: <span data-ttu-id="0a144-136">Opcional.</span><span class="sxs-lookup"><span data-stu-id="0a144-136">Optional.</span></span> <span data-ttu-id="0a144-137">Em que na pasta de trabalho atual as novas planilhas serão inseridas.</span><span class="sxs-lookup"><span data-stu-id="0a144-137">Where in the current workbook the new worksheets will be inserted.</span></span> <span data-ttu-id="0a144-138">Consulte Excel. WorksheetPositionType para obter detalhes.</span><span class="sxs-lookup"><span data-stu-id="0a144-138">See Excel.WorksheetPositionType for details.</span></span> <span data-ttu-id="0a144-139">O padrão é "Start".</span><span class="sxs-lookup"><span data-stu-id="0a144-139">Default is "Start".</span></span>
          type:
            - '"None" | "Before" | "After" | "Beginning" | "End"'
        - id: relativeTo
          description: '<span data-ttu-id="0a144-140">Opcional.</span><span class="sxs-lookup"><span data-stu-id="0a144-140">Optional.</span></span> <span data-ttu-id="0a144-141">A planilha na pasta de trabalho atual que é referenciada para o parâmetro PositionType.</span><span class="sxs-lookup"><span data-stu-id="0a144-141">The worksheet in the current workbook that is referenced for the positionType parameter.</span></span> <span data-ttu-id="0a144-142">O padrão é nulo e, com base em PositionType, ele inserirá planilhas no início ou no final da pasta de trabalho atual.</span><span class="sxs-lookup"><span data-stu-id="0a144-142">Default is null and, based on positionType, it will insert worksheets at the start or end of the current workbook.</span></span>'
          type:
            - 'excel!Excel.WorksheetCollection#addFromBase64~3:complex'
  - uid: 'excel!Excel.WorksheetCollection#context:member'
    summary: <span data-ttu-id="0a144-143">O contexto de solicitação associado ao objeto.</span><span class="sxs-lookup"><span data-stu-id="0a144-143">The request context associated with the object.</span></span> <span data-ttu-id="0a144-144">Isso conecta o processo do suplemento ao processo do aplicativo host do Office.</span><span class="sxs-lookup"><span data-stu-id="0a144-144">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.WorksheetCollection#getActiveWorksheet:member(1)'
    summary: |-
      <span data-ttu-id="0a144-145">Obtém a planilha ativa no momento na pasta de trabalho.</span><span class="sxs-lookup"><span data-stu-id="0a144-145">Gets the currently active worksheet in the workbook.</span></span>

      <span data-ttu-id="0a144-146">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0a144-146">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getActiveWorksheet()
    fullName: getActiveWorksheet()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getActiveWorksheet(): Excel.Worksheet;'
      return:
        type:
          - 'excel!Excel.Worksheet:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="0a144-147">Exemplos</span><span class="sxs-lookup"><span data-stu-id="0a144-147">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) {  
              var activeWorksheet = ctx.workbook.worksheets.getActiveWorksheet();
              activeWorksheet.load('name');
              return ctx.sync().then(function() {
                      console.log(activeWorksheet.name);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'excel!Excel.WorksheetCollection#getCount:member(1)'
    summary: |-
      <span data-ttu-id="0a144-148">Obtém o número de planilhas na coleção.</span><span class="sxs-lookup"><span data-stu-id="0a144-148">Gets the number of worksheets in the collection.</span></span>

      <span data-ttu-id="0a144-149">\[[Conjunto de APIs: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0a144-149">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getCount(visibleOnly)
    fullName: getCount(visibleOnly)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(visibleOnly?: boolean): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - 'excel!Excel.WorksheetCollection#getCount~0:complex'
        description: ''
      parameters:
        - id: visibleOnly
          description: '<span data-ttu-id="0a144-150">Opcional.</span><span class="sxs-lookup"><span data-stu-id="0a144-150">Optional.</span></span> <span data-ttu-id="0a144-151">Se true, só considera planilhas visíveis, ignorando as ocultas.</span><span class="sxs-lookup"><span data-stu-id="0a144-151">If true, considers only visible worksheets, skipping over any hidden ones.</span></span>'
          type:
            - boolean
  - uid: 'excel!Excel.WorksheetCollection#getFirst:member(1)'
    summary: |-
      <span data-ttu-id="0a144-152">Obtém a primeira planilha na coleção.</span><span class="sxs-lookup"><span data-stu-id="0a144-152">Gets the first worksheet in the collection.</span></span>

      <span data-ttu-id="0a144-153">\[[Conjunto de APIs: ExcelApi 1,5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0a144-153">\[ [API set: ExcelApi 1.5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getFirst(visibleOnly)
    fullName: getFirst(visibleOnly)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getFirst(visibleOnly?: boolean): Excel.Worksheet;'
      return:
        type:
          - 'excel!Excel.Worksheet:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="0a144-154">Exemplos</span><span class="sxs-lookup"><span data-stu-id="0a144-154">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheets = context.workbook.worksheets;

              // We don't want to include the default worksheet that was created
              // when the workbook was created, so our "firstSheet" will be the one
              // after the literal first. Note chaining of navigation methods.
              const firstSheet = sheets.getFirst().getNext();
              const lastSheet = sheets.getLast();
              const firstTaxRateRange = firstSheet.getRange("B2");
              const lastTaxRateRange = lastSheet.getRange("B2");

              firstSheet.load("name");
              lastSheet.load("name");
              firstTaxRateRange.load("text");
              lastTaxRateRange.load("text");

              await context.sync();

              let firstYear = firstSheet.name.substr(5, 4);
              let lastYear = lastSheet.name.substr(5, 4);
              console.log(`Tax Rate change from ${firstYear} to ${lastYear}`, `Tax rate for ${firstYear}: ${firstTaxRateRange.text[0][0]}\nTax rate for ${lastYear}: ${lastTaxRateRange.text[0][0]}`)

              await context.sync();
          });
          ```
      parameters:
        - id: visibleOnly
          description: '<span data-ttu-id="0a144-155">Opcional.</span><span class="sxs-lookup"><span data-stu-id="0a144-155">Optional.</span></span> <span data-ttu-id="0a144-156">Se true, só considera planilhas visíveis, ignorando as ocultas.</span><span class="sxs-lookup"><span data-stu-id="0a144-156">If true, considers only visible worksheets, skipping over any hidden ones.</span></span>'
          type:
            - boolean
  - uid: 'excel!Excel.WorksheetCollection#getItem:member(1)'
    summary: |-
      <span data-ttu-id="0a144-157">Obtém um objeto worksheet usando o Nome ou ID dele.</span><span class="sxs-lookup"><span data-stu-id="0a144-157">Gets a worksheet object using its Name or ID.</span></span>

      <span data-ttu-id="0a144-158">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0a144-158">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItem(key)
    fullName: getItem(key)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(key: string): Excel.Worksheet;'
      return:
        type:
          - 'excel!Excel.Worksheet:class'
        description: ''
      parameters:
        - id: key
          description: <span data-ttu-id="0a144-159">O Nome ou ID da planilha.</span><span class="sxs-lookup"><span data-stu-id="0a144-159">The Name or ID of the worksheet.</span></span>
          type:
            - string
  - uid: 'excel!Excel.WorksheetCollection#getItemOrNullObject:member(1)'
    summary: |-
      <span data-ttu-id="0a144-160">Obtém um objeto worksheet usando o Nome ou ID dele.</span><span class="sxs-lookup"><span data-stu-id="0a144-160">Gets a worksheet object using its Name or ID.</span></span> <span data-ttu-id="0a144-161">Se a planilha não existir, retornará um objeto null.</span><span class="sxs-lookup"><span data-stu-id="0a144-161">If the worksheet does not exist, will return a null object.</span></span>

      <span data-ttu-id="0a144-162">\[[Conjunto de APIs: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0a144-162">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItemOrNullObject(key)
    fullName: getItemOrNullObject(key)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemOrNullObject(key: string): Excel.Worksheet;'
      return:
        type:
          - 'excel!Excel.Worksheet:class'
        description: ''
      parameters:
        - id: key
          description: <span data-ttu-id="0a144-163">O Nome ou ID da planilha.</span><span class="sxs-lookup"><span data-stu-id="0a144-163">The Name or ID of the worksheet.</span></span>
          type:
            - string
  - uid: 'excel!Excel.WorksheetCollection#getLast:member(1)'
    summary: |-
      <span data-ttu-id="0a144-164">Obtém a última planilha na coleção.</span><span class="sxs-lookup"><span data-stu-id="0a144-164">Gets the last worksheet in the collection.</span></span>

      <span data-ttu-id="0a144-165">\[[Conjunto de APIs: ExcelApi 1,5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0a144-165">\[ [API set: ExcelApi 1.5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getLast(visibleOnly)
    fullName: getLast(visibleOnly)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getLast(visibleOnly?: boolean): Excel.Worksheet;'
      return:
        type:
          - 'excel!Excel.Worksheet:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="0a144-166">Exemplos</span><span class="sxs-lookup"><span data-stu-id="0a144-166">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheets = context.workbook.worksheets;

              // We don't want to include the default worksheet that was created
              // when the workbook was created, so our "firstSheet" will be the one
              // after the literal first. Note chaining of navigation methods.
              const firstSheet = sheets.getFirst().getNext();
              const lastSheet = sheets.getLast();
              const firstTaxRateRange = firstSheet.getRange("B2");
              const lastTaxRateRange = lastSheet.getRange("B2");

              firstSheet.load("name");
              lastSheet.load("name");
              firstTaxRateRange.load("text");
              lastTaxRateRange.load("text");

              await context.sync();

              let firstYear = firstSheet.name.substr(5, 4);
              let lastYear = lastSheet.name.substr(5, 4);
              console.log(`Tax Rate change from ${firstYear} to ${lastYear}`, `Tax rate for ${firstYear}: ${firstTaxRateRange.text[0][0]}\nTax rate for ${lastYear}: ${lastTaxRateRange.text[0][0]}`)

              await context.sync();
          });
          ```
      parameters:
        - id: visibleOnly
          description: '<span data-ttu-id="0a144-167">Opcional.</span><span class="sxs-lookup"><span data-stu-id="0a144-167">Optional.</span></span> <span data-ttu-id="0a144-168">Se true, só considera planilhas visíveis, ignorando as ocultas.</span><span class="sxs-lookup"><span data-stu-id="0a144-168">If true, considers only visible worksheets, skipping over any hidden ones.</span></span>'
          type:
            - boolean
  - uid: 'excel!Excel.WorksheetCollection#items:member'
    summary: <span data-ttu-id="0a144-169">Obtém os itens filhos carregados nesta coleção.</span><span class="sxs-lookup"><span data-stu-id="0a144-169">Gets the loaded child items in this collection.</span></span>
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.Worksheet[];'
      return:
        type:
          - 'excel!Excel.WorksheetCollection#items~0:complex'
  - uid: 'excel!Excel.WorksheetCollection#load:member(1)'
    summary: <span data-ttu-id="0a144-170">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="0a144-170">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="0a144-171">Você deve chamar `context.sync()` antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="0a144-171">You must call `context.sync()` before reading the properties.</span></span>
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.WorksheetCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.WorksheetCollection;'
      return:
        type:
          - 'excel!Excel.WorksheetCollection:class'
        description: ''
      parameters:
        - id: options
          description: <span data-ttu-id="0a144-172">Fornece opções para as propriedades do objeto a ser carregado.</span><span class="sxs-lookup"><span data-stu-id="0a144-172">Provides options for which properties of the object to load.</span></span>
          type:
            - 'excel!Excel.WorksheetCollection#load~0:complex'
  - uid: 'excel!Excel.WorksheetCollection#load:member(2)'
    summary: <span data-ttu-id="0a144-173">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="0a144-173">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="0a144-174">Você deve chamar `context.sync()` antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="0a144-174">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.WorksheetCollection;'
      return:
        type:
          - 'excel!Excel.WorksheetCollection:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="0a144-175">Exemplos</span><span class="sxs-lookup"><span data-stu-id="0a144-175">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var worksheets = ctx.workbook.worksheets;
              worksheets.load('items');
              return ctx.sync().then(function() {
                  for (var i = 0; i < worksheets.items.length; i++)
                  {
                      console.log(worksheets.items[i].name);
                      console.log(worksheets.items[i].index);
                  }
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="0a144-176">Uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="0a144-176">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.WorksheetCollection#load:member(3)'
    summary: <span data-ttu-id="0a144-177">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="0a144-177">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="0a144-178">Você deve chamar `context.sync()` antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="0a144-178">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: OfficeExtension.LoadOption): Excel.WorksheetCollection;'
      return:
        type:
          - 'excel!Excel.WorksheetCollection:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="0a144-179">`propertyNamesAndPaths.select`é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades a serem `propertyNamesAndPaths.expand` carregadas e é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades de navegação a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="0a144-179">`propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - 'excel!OfficeExtension.LoadOption:interface'
  - uid: 'excel!Excel.WorksheetCollection#onActivated:member'
    summary: |-
      <span data-ttu-id="0a144-180">Ocorre quando qualquer planilha na pasta de trabalho é ativada.</span><span class="sxs-lookup"><span data-stu-id="0a144-180">Occurs when any worksheet in the workbook is activated.</span></span>

      <span data-ttu-id="0a144-181">\[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0a144-181">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: onActivated
    fullName: onActivated
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onActivated: OfficeExtension.EventHandlers<Excel.WorksheetActivatedEventArgs>;'
      return:
        type:
          - 'excel!Excel.WorksheetCollection#onActivated~0:complex'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="0a144-182">Exemplos</span><span class="sxs-lookup"><span data-stu-id="0a144-182">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              let sheets = context.workbook.worksheets;
              sheets.onActivated.add(onActivate);

              await context.sync();
              console.log("A handler has been registered for the OnActivate event.");
          });
          ```
  - uid: 'excel!Excel.WorksheetCollection#onAdded:member'
    summary: |-
      <span data-ttu-id="0a144-183">Ocorre quando uma nova planilha é adicionada à pasta de trabalho.</span><span class="sxs-lookup"><span data-stu-id="0a144-183">Occurs when a new worksheet is added to the workbook.</span></span>

      <span data-ttu-id="0a144-184">\[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0a144-184">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: onAdded
    fullName: onAdded
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onAdded: OfficeExtension.EventHandlers<Excel.WorksheetAddedEventArgs>;'
      return:
        type:
          - 'excel!Excel.WorksheetCollection#onAdded~0:complex'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="0a144-185">Exemplos</span><span class="sxs-lookup"><span data-stu-id="0a144-185">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              let sheet = context.workbook.worksheets;
              sheet.onAdded.add(onWorksheetAdd);

              await context.sync();
              console.log("A handler has been registered for the OnAdded event.");
          });
          ```
  - uid: 'excel!Excel.WorksheetCollection#onCalculated:member'
    summary: |-
      <span data-ttu-id="0a144-186">Ocorre quando qualquer planilha na pasta de trabalho é calculada.</span><span class="sxs-lookup"><span data-stu-id="0a144-186">Occurs when any worksheet in the workbook is calculated.</span></span>

      <span data-ttu-id="0a144-187">\[[Conjunto de APIs: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0a144-187">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: onCalculated
    fullName: onCalculated
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onCalculated: OfficeExtension.EventHandlers<Excel.WorksheetCalculatedEventArgs>;'
      return:
        type:
          - 'excel!Excel.WorksheetCollection#onCalculated~0:complex'
  - uid: 'excel!Excel.WorksheetCollection#onChanged:member'
    summary: |-
      <span data-ttu-id="0a144-188">Ocorre quando uma planilha da pasta de trabalho é alterada.</span><span class="sxs-lookup"><span data-stu-id="0a144-188">Occurs when any worksheet in the workbook is changed.</span></span>

      <span data-ttu-id="0a144-189">\[[Conjunto de APIs: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0a144-189">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: onChanged
    fullName: onChanged
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onChanged: OfficeExtension.EventHandlers<Excel.WorksheetChangedEventArgs>;'
      return:
        type:
          - 'excel!Excel.WorksheetCollection#onChanged~0:complex'
  - uid: 'excel!Excel.WorksheetCollection#onColumnSorted:member'
    summary: |-
      <span data-ttu-id="0a144-190">Ocorre quando uma ou mais colunas foram classificadas.</span><span class="sxs-lookup"><span data-stu-id="0a144-190">Occurs when one or more columns have been sorted.</span></span> <span data-ttu-id="0a144-191">Isso acontece como resultado de uma operação de classificação da esquerda para a direita.</span><span class="sxs-lookup"><span data-stu-id="0a144-191">This happens as the result of a left-to-right sort operation.</span></span>

      <span data-ttu-id="0a144-192">\[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0a144-192">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: onColumnSorted
    fullName: onColumnSorted
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onColumnSorted: OfficeExtension.EventHandlers<Excel.WorksheetColumnSortedEventArgs>;'
      return:
        type:
          - 'excel!Excel.WorksheetCollection#onColumnSorted~0:complex'
  - uid: 'excel!Excel.WorksheetCollection#onDeactivated:member'
    summary: |-
      <span data-ttu-id="0a144-193">Ocorre quando qualquer planilha na pasta de trabalho é desativada.</span><span class="sxs-lookup"><span data-stu-id="0a144-193">Occurs when any worksheet in the workbook is deactivated.</span></span>

      <span data-ttu-id="0a144-194">\[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0a144-194">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: onDeactivated
    fullName: onDeactivated
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onDeactivated: OfficeExtension.EventHandlers<Excel.WorksheetDeactivatedEventArgs>;'
      return:
        type:
          - 'excel!Excel.WorksheetCollection#onDeactivated~0:complex'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="0a144-195">Exemplos</span><span class="sxs-lookup"><span data-stu-id="0a144-195">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              let sheets = context.workbook.worksheets;
              sheets.onDeactivated.add(onDeactivate);

              await context.sync();
              console.log("A handler has been registered for the OnDeactivate event.");
          });
          ```
  - uid: 'excel!Excel.WorksheetCollection#onDeleted:member'
    summary: |-
      <span data-ttu-id="0a144-196">Ocorre quando uma planilha é excluída da pasta de trabalho.</span><span class="sxs-lookup"><span data-stu-id="0a144-196">Occurs when a worksheet is deleted from the workbook.</span></span>

      <span data-ttu-id="0a144-197">\[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0a144-197">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: onDeleted
    fullName: onDeleted
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onDeleted: OfficeExtension.EventHandlers<Excel.WorksheetDeletedEventArgs>;'
      return:
        type:
          - 'excel!Excel.WorksheetCollection#onDeleted~0:complex'
  - uid: 'excel!Excel.WorksheetCollection#onFiltered:member'
    summary: |-
      <span data-ttu-id="0a144-198">Ocorre quando filtro de uma planilha é aplicado na pasta de trabalho.</span><span class="sxs-lookup"><span data-stu-id="0a144-198">Occurs when any worksheet's filter is applied in the workbook.</span></span>

      <span data-ttu-id="0a144-199">\[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0a144-199">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: onFiltered
    fullName: onFiltered
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onFiltered: OfficeExtension.EventHandlers<Excel.WorksheetFilteredEventArgs>;'
      return:
        type:
          - 'excel!Excel.WorksheetCollection#onFiltered~0:complex'
  - uid: 'excel!Excel.WorksheetCollection#onFormatChanged:member'
    summary: |-
      <span data-ttu-id="0a144-200">Ocorre quando uma planilha na pasta de trabalho tem o formato alterado.</span><span class="sxs-lookup"><span data-stu-id="0a144-200">Occurs when any worksheet in the workbook has format changed.</span></span>

      <span data-ttu-id="0a144-201">\[[Conjunto de APIs: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0a144-201">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: onFormatChanged
    fullName: onFormatChanged
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onFormatChanged: OfficeExtension.EventHandlers<Excel.WorksheetFormatChangedEventArgs>;'
      return:
        type:
          - 'excel!Excel.WorksheetCollection#onFormatChanged~0:complex'
  - uid: 'excel!Excel.WorksheetCollection#onRowHiddenChanged:member'
    summary: |-
      <span data-ttu-id="0a144-202">Ocorre quando o estado oculto de uma ou mais linhas é alterado em uma planilha específica.</span><span class="sxs-lookup"><span data-stu-id="0a144-202">Occurs when the hidden state of one or more rows has changed on a specific worksheet.</span></span>

      <span data-ttu-id="0a144-203">\[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0a144-203">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: onRowHiddenChanged
    fullName: onRowHiddenChanged
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onRowHiddenChanged: OfficeExtension.EventHandlers<Excel.WorksheetRowHiddenChangedEventArgs>;'
      return:
        type:
          - 'excel!Excel.WorksheetCollection#onRowHiddenChanged~0:complex'
  - uid: 'excel!Excel.WorksheetCollection#onRowSorted:member'
    summary: |-
      <span data-ttu-id="0a144-204">Ocorre quando uma ou mais linhas foram classificadas.</span><span class="sxs-lookup"><span data-stu-id="0a144-204">Occurs when one or more rows have been sorted.</span></span> <span data-ttu-id="0a144-205">Isso acontece como resultado de uma operação de classificação de cima para baixo.</span><span class="sxs-lookup"><span data-stu-id="0a144-205">This happens as the result of a top-to-bottom sort operation.</span></span>

      <span data-ttu-id="0a144-206">\[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0a144-206">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: onRowSorted
    fullName: onRowSorted
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onRowSorted: OfficeExtension.EventHandlers<Excel.WorksheetRowSortedEventArgs>;'
      return:
        type:
          - 'excel!Excel.WorksheetCollection#onRowSorted~0:complex'
  - uid: 'excel!Excel.WorksheetCollection#onSelectionChanged:member'
    summary: |-
      <span data-ttu-id="0a144-207">Ocorre quando a seleção é alterada em uma planilha.</span><span class="sxs-lookup"><span data-stu-id="0a144-207">Occurs when the selection changes on any worksheet.</span></span>

      <span data-ttu-id="0a144-208">\[[Conjunto de APIs: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0a144-208">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: onSelectionChanged
    fullName: onSelectionChanged
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onSelectionChanged: OfficeExtension.EventHandlers<Excel.WorksheetSelectionChangedEventArgs>;'
      return:
        type:
          - 'excel!Excel.WorksheetCollection#onSelectionChanged~0:complex'
  - uid: 'excel!Excel.WorksheetCollection#onSingleClicked:member'
    summary: |-
      <span data-ttu-id="0a144-209">Ocorre quando a operação com o botão esquerdo/tocado acontece na coleção de planilhas.</span><span class="sxs-lookup"><span data-stu-id="0a144-209">Occurs when left-clicked/tapped operation happens in the worksheet collection.</span></span> <span data-ttu-id="0a144-210">Esse evento não será acionado quando você clicar nos seguintes casos:</span><span class="sxs-lookup"><span data-stu-id="0a144-210">This event will not be fired when clicking in the following cases:</span></span>

      - <span data-ttu-id="0a144-211">O usuário arrasta o mouse para várias seleções.</span><span class="sxs-lookup"><span data-stu-id="0a144-211">The user drags the mouse for multi-selection.</span></span>

      - <span data-ttu-id="0a144-212">O usuário seleciona uma célula no modo quando os argumentos de célula são selecionados para referências de fórmula.</span><span class="sxs-lookup"><span data-stu-id="0a144-212">The user selects a cell in the mode when cell arguments are selected for formula references.</span></span>

      <span data-ttu-id="0a144-213">\[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0a144-213">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: onSingleClicked
    fullName: onSingleClicked
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onSingleClicked: OfficeExtension.EventHandlers<Excel.WorksheetSingleClickedEventArgs>;'
      return:
        type:
          - 'excel!Excel.WorksheetCollection#onSingleClicked~0:complex'
  - uid: 'excel!Excel.WorksheetCollection#toJSON:member(1)'
    summary: '<span data-ttu-id="0a144-214">Substitui o método `toJSON()` JavaScript para fornecer uma saída mais útil quando um objeto API é passado para`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="0a144-214">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="0a144-215">.</span><span class="sxs-lookup"><span data-stu-id="0a144-215"></span></span> <span data-ttu-id="0a144-216">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="0a144-216"></span></span><!-- --><span data-ttu-id="0a144-217">, por sua vez, chama `toJSON` o método do objeto que é passado para ele.) Enquanto o objeto `Excel.WorksheetCollection` original é um objeto API, o `toJSON` método retorna um objeto JavaScript simples (digitado como`Excel.Interfaces.WorksheetCollectionData`</span><span class="sxs-lookup"><span data-stu-id="0a144-217">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.WorksheetCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.WorksheetCollectionData`</span></span><!-- --><span data-ttu-id="0a144-218">) que contém uma matriz de "itens" com cópias superficiais de qualquer propriedade carregada dos itens da coleção.</span><span class="sxs-lookup"><span data-stu-id="0a144-218">) that contains an "items" array with shallow copies of any loaded properties from the collection''s items.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.WorksheetCollectionData;'
      return:
        type:
          - 'excel!Excel.Interfaces.WorksheetCollectionData:interface'
        description: ''
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.Worksheet:class'
    name: Excel.Worksheet
  - uid: 'excel!Excel.WorksheetCollection#addFromBase64~0:complex'
    name: 'OfficeExtension.ClientResult<string[]>'
    fullName: 'OfficeExtension.ClientResult<string[]>'
    spec.typeScript:
      - uid: 'excel!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: '<string[]>'
        fullName: '<string[]>'
  - uid: 'excel!Excel.WorksheetPositionType:enum'
    name: Excel.WorksheetPositionType
  - uid: 'excel!Excel.WorksheetCollection#addFromBase64~1:complex'
    name: Worksheet | string
    fullName: Excel.Worksheet | string
    spec.typeScript:
      - uid: 'excel!Excel.Worksheet:class'
        name: Worksheet
        fullName: Excel.Worksheet
      - name: ' | string'
        fullName: ' | string'
  - uid: 'excel!Excel.WorksheetCollection#addFromBase64~2:complex'
    name: 'OfficeExtension.ClientResult<string[]>'
    fullName: 'OfficeExtension.ClientResult<string[]>'
    spec.typeScript:
      - uid: 'excel!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: '<string[]>'
        fullName: '<string[]>'
  - uid: 'excel!Excel.WorksheetCollection#addFromBase64~3:complex'
    name: Worksheet | string
    fullName: Excel.Worksheet | string
    spec.typeScript:
      - uid: 'excel!Excel.Worksheet:class'
        name: Worksheet
        fullName: Excel.Worksheet
      - name: ' | string'
        fullName: ' | string'
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.WorksheetCollection#getCount~0:complex'
    name: OfficeExtension.ClientResult<number>
    fullName: OfficeExtension.ClientResult<number>
    spec.typeScript:
      - uid: 'excel!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <number>
        fullName: <number>
  - uid: 'excel!Excel.WorksheetCollection#items~0:complex'
    name: 'Excel.Worksheet[]'
    fullName: 'Excel.Worksheet[]'
    spec.typeScript:
      - uid: 'excel!Excel.Worksheet:class'
        name: Excel.Worksheet
        fullName: Excel.Worksheet
      - name: '[]'
        fullName: '[]'
  - uid: 'excel!Excel.WorksheetCollection:class'
    name: Excel.WorksheetCollection
  - uid: 'excel!Excel.WorksheetCollection#load~0:complex'
    name: Excel.Interfaces.WorksheetCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    fullName: Excel.Interfaces.WorksheetCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    spec.typeScript:
      - uid: 'excel!Excel.Interfaces.WorksheetCollectionLoadOptions:interface'
        name: Excel.Interfaces.WorksheetCollectionLoadOptions
        fullName: Excel.Interfaces.WorksheetCollectionLoadOptions
      - name: ' & '
        fullName: ' & '
      - uid: 'excel!Excel.Interfaces.CollectionLoadOptions:interface'
        name: Excel.Interfaces.CollectionLoadOptions
        fullName: Excel.Interfaces.CollectionLoadOptions
  - uid: 'excel!OfficeExtension.LoadOption:interface'
    name: OfficeExtension.LoadOption
  - uid: 'excel!Excel.WorksheetCollection#onActivated~0:complex'
    name: OfficeExtension.EventHandlers<Excel.WorksheetActivatedEventArgs>
    fullName: OfficeExtension.EventHandlers<Excel.WorksheetActivatedEventArgs>
    spec.typeScript:
      - uid: 'excel!OfficeExtension.EventHandlers:class'
        name: OfficeExtension.EventHandlers
        fullName: OfficeExtension.EventHandlers
      - name: <
        fullName: <
      - uid: 'excel!Excel.WorksheetActivatedEventArgs:interface'
        name: Excel.WorksheetActivatedEventArgs
        fullName: Excel.WorksheetActivatedEventArgs
      - name: '>'
        fullName: '>'
  - uid: 'excel!Excel.WorksheetCollection#onAdded~0:complex'
    name: OfficeExtension.EventHandlers<Excel.WorksheetAddedEventArgs>
    fullName: OfficeExtension.EventHandlers<Excel.WorksheetAddedEventArgs>
    spec.typeScript:
      - uid: 'excel!OfficeExtension.EventHandlers:class'
        name: OfficeExtension.EventHandlers
        fullName: OfficeExtension.EventHandlers
      - name: <
        fullName: <
      - uid: 'excel!Excel.WorksheetAddedEventArgs:interface'
        name: Excel.WorksheetAddedEventArgs
        fullName: Excel.WorksheetAddedEventArgs
      - name: '>'
        fullName: '>'
  - uid: 'excel!Excel.WorksheetCollection#onCalculated~0:complex'
    name: OfficeExtension.EventHandlers<Excel.WorksheetCalculatedEventArgs>
    fullName: OfficeExtension.EventHandlers<Excel.WorksheetCalculatedEventArgs>
    spec.typeScript:
      - uid: 'excel!OfficeExtension.EventHandlers:class'
        name: OfficeExtension.EventHandlers
        fullName: OfficeExtension.EventHandlers
      - name: <
        fullName: <
      - uid: 'excel!Excel.WorksheetCalculatedEventArgs:interface'
        name: Excel.WorksheetCalculatedEventArgs
        fullName: Excel.WorksheetCalculatedEventArgs
      - name: '>'
        fullName: '>'
  - uid: 'excel!Excel.WorksheetCollection#onChanged~0:complex'
    name: OfficeExtension.EventHandlers<Excel.WorksheetChangedEventArgs>
    fullName: OfficeExtension.EventHandlers<Excel.WorksheetChangedEventArgs>
    spec.typeScript:
      - uid: 'excel!OfficeExtension.EventHandlers:class'
        name: OfficeExtension.EventHandlers
        fullName: OfficeExtension.EventHandlers
      - name: <
        fullName: <
      - uid: 'excel!Excel.WorksheetChangedEventArgs:interface'
        name: Excel.WorksheetChangedEventArgs
        fullName: Excel.WorksheetChangedEventArgs
      - name: '>'
        fullName: '>'
  - uid: 'excel!Excel.WorksheetCollection#onColumnSorted~0:complex'
    name: OfficeExtension.EventHandlers<Excel.WorksheetColumnSortedEventArgs>
    fullName: OfficeExtension.EventHandlers<Excel.WorksheetColumnSortedEventArgs>
    spec.typeScript:
      - uid: 'excel!OfficeExtension.EventHandlers:class'
        name: OfficeExtension.EventHandlers
        fullName: OfficeExtension.EventHandlers
      - name: <
        fullName: <
      - uid: 'excel!Excel.WorksheetColumnSortedEventArgs:interface'
        name: Excel.WorksheetColumnSortedEventArgs
        fullName: Excel.WorksheetColumnSortedEventArgs
      - name: '>'
        fullName: '>'
  - uid: 'excel!Excel.WorksheetCollection#onDeactivated~0:complex'
    name: OfficeExtension.EventHandlers<Excel.WorksheetDeactivatedEventArgs>
    fullName: OfficeExtension.EventHandlers<Excel.WorksheetDeactivatedEventArgs>
    spec.typeScript:
      - uid: 'excel!OfficeExtension.EventHandlers:class'
        name: OfficeExtension.EventHandlers
        fullName: OfficeExtension.EventHandlers
      - name: <
        fullName: <
      - uid: 'excel!Excel.WorksheetDeactivatedEventArgs:interface'
        name: Excel.WorksheetDeactivatedEventArgs
        fullName: Excel.WorksheetDeactivatedEventArgs
      - name: '>'
        fullName: '>'
  - uid: 'excel!Excel.WorksheetCollection#onDeleted~0:complex'
    name: OfficeExtension.EventHandlers<Excel.WorksheetDeletedEventArgs>
    fullName: OfficeExtension.EventHandlers<Excel.WorksheetDeletedEventArgs>
    spec.typeScript:
      - uid: 'excel!OfficeExtension.EventHandlers:class'
        name: OfficeExtension.EventHandlers
        fullName: OfficeExtension.EventHandlers
      - name: <
        fullName: <
      - uid: 'excel!Excel.WorksheetDeletedEventArgs:interface'
        name: Excel.WorksheetDeletedEventArgs
        fullName: Excel.WorksheetDeletedEventArgs
      - name: '>'
        fullName: '>'
  - uid: 'excel!Excel.WorksheetCollection#onFiltered~0:complex'
    name: OfficeExtension.EventHandlers<Excel.WorksheetFilteredEventArgs>
    fullName: OfficeExtension.EventHandlers<Excel.WorksheetFilteredEventArgs>
    spec.typeScript:
      - uid: 'excel!OfficeExtension.EventHandlers:class'
        name: OfficeExtension.EventHandlers
        fullName: OfficeExtension.EventHandlers
      - name: <
        fullName: <
      - uid: 'excel!Excel.WorksheetFilteredEventArgs:interface'
        name: Excel.WorksheetFilteredEventArgs
        fullName: Excel.WorksheetFilteredEventArgs
      - name: '>'
        fullName: '>'
  - uid: 'excel!Excel.WorksheetCollection#onFormatChanged~0:complex'
    name: OfficeExtension.EventHandlers<Excel.WorksheetFormatChangedEventArgs>
    fullName: OfficeExtension.EventHandlers<Excel.WorksheetFormatChangedEventArgs>
    spec.typeScript:
      - uid: 'excel!OfficeExtension.EventHandlers:class'
        name: OfficeExtension.EventHandlers
        fullName: OfficeExtension.EventHandlers
      - name: <
        fullName: <
      - uid: 'excel!Excel.WorksheetFormatChangedEventArgs:interface'
        name: Excel.WorksheetFormatChangedEventArgs
        fullName: Excel.WorksheetFormatChangedEventArgs
      - name: '>'
        fullName: '>'
  - uid: 'excel!Excel.WorksheetCollection#onRowHiddenChanged~0:complex'
    name: OfficeExtension.EventHandlers<Excel.WorksheetRowHiddenChangedEventArgs>
    fullName: OfficeExtension.EventHandlers<Excel.WorksheetRowHiddenChangedEventArgs>
    spec.typeScript:
      - uid: 'excel!OfficeExtension.EventHandlers:class'
        name: OfficeExtension.EventHandlers
        fullName: OfficeExtension.EventHandlers
      - name: <
        fullName: <
      - uid: 'excel!Excel.WorksheetRowHiddenChangedEventArgs:interface'
        name: Excel.WorksheetRowHiddenChangedEventArgs
        fullName: Excel.WorksheetRowHiddenChangedEventArgs
      - name: '>'
        fullName: '>'
  - uid: 'excel!Excel.WorksheetCollection#onRowSorted~0:complex'
    name: OfficeExtension.EventHandlers<Excel.WorksheetRowSortedEventArgs>
    fullName: OfficeExtension.EventHandlers<Excel.WorksheetRowSortedEventArgs>
    spec.typeScript:
      - uid: 'excel!OfficeExtension.EventHandlers:class'
        name: OfficeExtension.EventHandlers
        fullName: OfficeExtension.EventHandlers
      - name: <
        fullName: <
      - uid: 'excel!Excel.WorksheetRowSortedEventArgs:interface'
        name: Excel.WorksheetRowSortedEventArgs
        fullName: Excel.WorksheetRowSortedEventArgs
      - name: '>'
        fullName: '>'
  - uid: 'excel!Excel.WorksheetCollection#onSelectionChanged~0:complex'
    name: OfficeExtension.EventHandlers<Excel.WorksheetSelectionChangedEventArgs>
    fullName: OfficeExtension.EventHandlers<Excel.WorksheetSelectionChangedEventArgs>
    spec.typeScript:
      - uid: 'excel!OfficeExtension.EventHandlers:class'
        name: OfficeExtension.EventHandlers
        fullName: OfficeExtension.EventHandlers
      - name: <
        fullName: <
      - uid: 'excel!Excel.WorksheetSelectionChangedEventArgs:interface'
        name: Excel.WorksheetSelectionChangedEventArgs
        fullName: Excel.WorksheetSelectionChangedEventArgs
      - name: '>'
        fullName: '>'
  - uid: 'excel!Excel.WorksheetCollection#onSingleClicked~0:complex'
    name: OfficeExtension.EventHandlers<Excel.WorksheetSingleClickedEventArgs>
    fullName: OfficeExtension.EventHandlers<Excel.WorksheetSingleClickedEventArgs>
    spec.typeScript:
      - uid: 'excel!OfficeExtension.EventHandlers:class'
        name: OfficeExtension.EventHandlers
        fullName: OfficeExtension.EventHandlers
      - name: <
        fullName: <
      - uid: 'excel!Excel.WorksheetSingleClickedEventArgs:interface'
        name: Excel.WorksheetSingleClickedEventArgs
        fullName: Excel.WorksheetSingleClickedEventArgs
      - name: '>'
        fullName: '>'
  - uid: 'excel!Excel.Interfaces.WorksheetCollectionData:interface'
    name: Excel.Interfaces.WorksheetCollectionData