### YamlMime:UniversalReference
items:
  - uid: excel.Excel.TableChangedEventArgs
    summary: |-
      Fornece informações sobre a tabela que gerou o evento Changed.

      \[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: Excel.TableChangedEventArgs
    fullName: Excel.TableChangedEventArgs
    langs:
      - typeScript
    type: interface
    package: excel
    children:
      - excel.Excel.TableChangedEventArgs.getRange
      - excel.Excel.TableChangedEventArgs.getRangeOrNullObject
      - excel.Excel.TableChangedEventArgs.address
      - excel.Excel.TableChangedEventArgs.changeType
      - excel.Excel.TableChangedEventArgs.details
      - excel.Excel.TableChangedEventArgs.source
      - excel.Excel.TableChangedEventArgs.tableId
      - excel.Excel.TableChangedEventArgs.type
      - excel.Excel.TableChangedEventArgs.worksheetId
  - uid: excel.Excel.TableChangedEventArgs.getRange
    summary: |-
      Obtém o intervalo que representa a área alterada de uma tabela em uma planilha específica.

      \[[Conjunto de APIs: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getRange(ctx)
    fullName: getRange(ctx)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRange(ctx: Excel.RequestContext): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: ''
      parameters:
        - id: ctx
          description: ''
          type:
            - excel.Excel.RequestContext
  - uid: excel.Excel.TableChangedEventArgs.getRangeOrNullObject
    summary: |-
      Obtém o intervalo que representa a área alterada de uma tabela em uma planilha específica. Pode retornar o objeto null.

      \[[Conjunto de APIs: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getRangeOrNullObject(ctx)
    fullName: getRangeOrNullObject(ctx)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRangeOrNullObject(ctx: Excel.RequestContext): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: ''
      parameters:
        - id: ctx
          description: ''
          type:
            - excel.Excel.RequestContext
  - uid: excel.Excel.TableChangedEventArgs.address
    summary: |-
      Obtém o endereço que representa a área alterada de uma tabela em uma planilha específica.

      \[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: address
    fullName: address
    langs:
      - typeScript
    type: property
    syntax:
      content: 'address: string;'
      return:
        type:
          - string
  - uid: excel.Excel.TableChangedEventArgs.changeType
    summary: |-
      Obtém o tipo de mudança que representa como o evento Changed é acionado. Confira Excel. datachangtype para obter detalhes.

      \[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: changeType
    fullName: changeType
    langs:
      - typeScript
    type: property
    syntax:
      content: 'changeType: Excel.DataChangeType | "Unknown" | "RangeEdited" | "RowInserted" | "RowDeleted" | "ColumnInserted" | "ColumnDeleted" | "CellInserted" | "CellDeleted";'
      return:
        type:
          - Excel.DataChangeType | "Unknown" | "RangeEdited" | "RowInserted" | "RowDeleted" | "ColumnInserted" | "ColumnDeleted" | "CellInserted" | "CellDeleted"
  - uid: excel.Excel.TableChangedEventArgs.details
    summary: |-
      Representa as informações sobre os detalhes da alteração. Essa propriedade pode ser recuperada quando o evento Changed é disparado em uma única célula. Se o evento Changed é disparado em várias células, esta propriedade não pode ser recuperada.

      \[[Conjunto de APIs: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: details
    fullName: details
    langs:
      - typeScript
    type: property
    syntax:
      content: 'details: Excel.ChangedEventDetail;'
      return:
        type:
          - excel.Excel.ChangedEventDetail
        description: |-


          #### <a name="examples"></a>Exemplos

          ```typescript
          async function onTableChanged(eventArgs: Excel.TableChangedEventArgs) {
              await Excel.run(async (context) => {
                  const details = eventArgs.details;
                  const address = eventArgs.address;

                  console.log(`Change at ${address}: was ${details.valueBefore}(${details.valueTypeBefore}),`
                    + ` now is ${details.valueAfter}(${details.valueTypeAfter})`);
              });
          }
          ```
  - uid: excel.Excel.TableChangedEventArgs.source
    summary: |-
      Obtém a origem do evento. Para saber detalhes, confira Excel.EventSource.

      \[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: source
    fullName: source
    langs:
      - typeScript
    type: property
    syntax:
      content: 'source: Excel.EventSource | "Local" | "Remote";'
      return:
        type:
          - Excel.EventSource | "Local" | "Remote"
  - uid: excel.Excel.TableChangedEventArgs.tableId
    summary: |-
      Obtém o id da tabela na qual os dados foram alterados.

      \[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: tableId
    fullName: tableId
    langs:
      - typeScript
    type: property
    syntax:
      content: 'tableId: string;'
      return:
        type:
          - string
        description: |-


          #### <a name="examples"></a>Exemplos

          ```typescript
          async function onChange(event) {
              await Excel.run(async (context) => {
                  let table = context.workbook.tables.getItem(event.tableId);
                  let worksheet = context.workbook.worksheets.getItem(event.worksheetId);
                  worksheet.load("name");

                  await context.sync();

                  console.log("Handler for table collection onChanged event has been triggered. Data changed address: " + event.address);
                  console.log("Table Id : " + event.tableId);
                  console.log("Worksheet Id : " + worksheet.name);
              });
          }
          ```
  - uid: excel.Excel.TableChangedEventArgs.type
    summary: |-
      Obtém o tipo do evento. Para saber detalhes, confira Excel.EventType.

      \[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: type
    fullName: type
    langs:
      - typeScript
    type: property
    syntax:
      content: 'type: "TableChanged";'
      return:
        type:
          - '"TableChanged"'
  - uid: excel.Excel.TableChangedEventArgs.worksheetId
    summary: |-
      Obtém o id da planilha na qual os dados são alterados.

      \[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: worksheetId
    fullName: worksheetId
    langs:
      - typeScript
    type: property
    syntax:
      content: 'worksheetId: string;'
      return:
        type:
          - string
        description: |-


          #### <a name="examples"></a>Exemplos

          ```typescript
          async function onChange(event) {
              await Excel.run(async (context) => {
                  let table = context.workbook.tables.getItem(event.tableId);
                  let worksheet = context.workbook.worksheets.getItem(event.worksheetId);
                  worksheet.load("name");

                  await context.sync();

                  console.log("Handler for table collection onChanged event has been triggered. Data changed address: " + event.address);
                  console.log("Table Id : " + event.tableId);
                  console.log("Worksheet Id : " + worksheet.name);
              });
          }
          ```