### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.SlicerStyleCollection:class'
    summary: |-
      Representa uma coleção de objetos SlicerStyle.

      \[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    isPreview: true
    name: Excel.SlicerStyleCollection
    fullName: Excel.SlicerStyleCollection
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.SlicerStyleCollection#add:member(1)'
      - 'excel!Excel.SlicerStyleCollection#context:member'
      - 'excel!Excel.SlicerStyleCollection#getCount:member(1)'
      - 'excel!Excel.SlicerStyleCollection#getDefault:member(1)'
      - 'excel!Excel.SlicerStyleCollection#getItem:member(1)'
      - 'excel!Excel.SlicerStyleCollection#getItemOrNullObject:member(1)'
      - 'excel!Excel.SlicerStyleCollection#items:member'
      - 'excel!Excel.SlicerStyleCollection#load:member(1)'
      - 'excel!Excel.SlicerStyleCollection#load:member(2)'
      - 'excel!Excel.SlicerStyleCollection#load:member(3)'
      - 'excel!Excel.SlicerStyleCollection#setDefault:member(1)'
      - 'excel!Excel.SlicerStyleCollection#toJSON:member(1)'
  - uid: 'excel!Excel.SlicerStyleCollection#add:member(1)'
    summary: |-
      Cria um SlicerStyle em branco com o nome especificado.

      \[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    isPreview: true
    name: 'add(name, makeUniqueName)'
    fullName: 'add(name, makeUniqueName)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(name: string, makeUniqueName?: boolean): Excel.SlicerStyle;'
      return:
        type:
          - 'excel!Excel.SlicerStyle:class'
        description: O recém-criado SlicerStyle.
      parameters:
        - id: name
          description: O nome exclusivo do novo SlicerStyle. Lançará uma exceção de argumento inválida se o nome já estiver em uso.
          type:
            - string
        - id: makeUniqueName
          description: 'Opcional, o padrão é false. Se true, acrescentará números ao nome para torná-lo exclusivo, se necessário.'
          type:
            - boolean
  - uid: 'excel!Excel.SlicerStyleCollection#context:member'
    summary: O contexto de solicitação associado ao objeto. Isso conecta o processo do suplemento ao processo do aplicativo host do Office.
    isPreview: true
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.SlicerStyleCollection#getCount:member(1)'
    summary: |-
      Obtém o número de segmentação de estilos na coleção.

      \[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    isPreview: true
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - 'excel!Excel.SlicerStyleCollection#getCount~0:complex'
        description: ''
  - uid: 'excel!Excel.SlicerStyleCollection#getDefault:member(1)'
    summary: |-
      Obtém o padrão SlicerStyle para o escopo do objeto pai.

      \[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    isPreview: true
    name: getDefault()
    fullName: getDefault()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getDefault(): Excel.SlicerStyle;'
      return:
        type:
          - 'excel!Excel.SlicerStyle:class'
        description: O objeto SlicerStyle que é o SlicerStyle padrão atual.
  - uid: 'excel!Excel.SlicerStyleCollection#getItem:member(1)'
    summary: |-
      Obtém uma SlicerStyle por nome.

      \[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    isPreview: true
    name: getItem(name)
    fullName: getItem(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(name: string): Excel.SlicerStyle;'
      return:
        type:
          - 'excel!Excel.SlicerStyle:class'
        description: O objeto SlicerStyle cujo nome corresponde à entrada.
      parameters:
        - id: name
          description: Nome do SlicerStyle a ser recuperado.
          type:
            - string
  - uid: 'excel!Excel.SlicerStyleCollection#getItemOrNullObject:member(1)'
    summary: |-
      Obtém uma SlicerStyle por nome. Se o SlicerStyle não existir, retornará um objeto null.

      \[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    isPreview: true
    name: getItemOrNullObject(name)
    fullName: getItemOrNullObject(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemOrNullObject(name: string): Excel.SlicerStyle;'
      return:
        type:
          - 'excel!Excel.SlicerStyle:class'
        description: O objeto SlicerStyle cujo nome corresponde à entrada.
      parameters:
        - id: name
          description: Nome do SlicerStyle a ser recuperado.
          type:
            - string
  - uid: 'excel!Excel.SlicerStyleCollection#items:member'
    summary: Obtém os itens filhos carregados nesta coleção.
    isPreview: true
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.SlicerStyle[];'
      return:
        type:
          - 'excel!Excel.SlicerStyleCollection#items~0:complex'
  - uid: 'excel!Excel.SlicerStyleCollection#load:member(1)'
    summary: Coloca um comando na fila para carregar as propriedades especificadas do objeto. Você deve chamar `context.sync()` antes de ler as propriedades.
    isPreview: true
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.SlicerStyleCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.SlicerStyleCollection;'
      return:
        type:
          - 'excel!Excel.SlicerStyleCollection:class'
        description: ''
      parameters:
        - id: options
          description: Fornece opções para as propriedades do objeto a ser carregado.
          type:
            - 'excel!Excel.SlicerStyleCollection#load~0:complex'
  - uid: 'excel!Excel.SlicerStyleCollection#load:member(2)'
    summary: Coloca um comando na fila para carregar as propriedades especificadas do objeto. Você deve chamar `context.sync()` antes de ler as propriedades.
    isPreview: true
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.SlicerStyleCollection;'
      return:
        type:
          - 'excel!Excel.SlicerStyleCollection:class'
        description: ''
      parameters:
        - id: propertyNames
          description: Uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.SlicerStyleCollection#load:member(3)'
    summary: Coloca um comando na fila para carregar as propriedades especificadas do objeto. Você deve chamar `context.sync()` antes de ler as propriedades.
    isPreview: true
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: OfficeExtension.LoadOption): Excel.SlicerStyleCollection;'
      return:
        type:
          - 'excel!Excel.SlicerStyleCollection:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '`propertyNamesAndPaths.select`é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades a serem `propertyNamesAndPaths.expand` carregadas e é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades de navegação a serem carregadas.'
          type:
            - 'excel!OfficeExtension.LoadOption:interface'
  - uid: 'excel!Excel.SlicerStyleCollection#setDefault:member(1)'
    summary: |-
      Define o padrão SlicerStyle para uso no escopo do objeto pai.

      \[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    isPreview: true
    name: setDefault(newDefaultStyle)
    fullName: setDefault(newDefaultStyle)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setDefault(newDefaultStyle: SlicerStyle | string): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: newDefaultStyle
          description: O objeto SlicerStyle ou o nome do objeto SlicerStyle que deve ser o novo padrão.
          type:
            - 'excel!Excel.SlicerStyleCollection#setDefault~0:complex'
  - uid: 'excel!Excel.SlicerStyleCollection#toJSON:member(1)'
    summary: 'Substitui o método `toJSON()` JavaScript para fornecer uma saída mais útil quando um objeto API é passado para`JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, por sua vez, chama `toJSON` o método do objeto que é passado para ele.) Enquanto o objeto `Excel.SlicerStyleCollection` original é um objeto API, o `toJSON` método retorna um objeto JavaScript simples (digitado como`Excel.Interfaces.SlicerStyleCollectionData`<!-- -->) que contém uma matriz de "itens" com cópias superficiais de qualquer propriedade carregada dos itens da coleção.'
    isPreview: true
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.SlicerStyleCollectionData;'
      return:
        type:
          - 'excel!Excel.Interfaces.SlicerStyleCollectionData:interface'
        description: ''
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.SlicerStyle:class'
    name: Excel.SlicerStyle
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.SlicerStyleCollection#getCount~0:complex'
    name: OfficeExtension.ClientResult<number>
    fullName: OfficeExtension.ClientResult<number>
    spec.typeScript:
      - uid: 'excel!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <number>
        fullName: <number>
  - uid: 'excel!Excel.SlicerStyleCollection#items~0:complex'
    name: 'Excel.SlicerStyle[]'
    fullName: 'Excel.SlicerStyle[]'
    spec.typeScript:
      - uid: 'excel!Excel.SlicerStyle:class'
        name: Excel.SlicerStyle
        fullName: Excel.SlicerStyle
      - name: '[]'
        fullName: '[]'
  - uid: 'excel!Excel.SlicerStyleCollection:class'
    name: Excel.SlicerStyleCollection
  - uid: 'excel!Excel.SlicerStyleCollection#load~0:complex'
    name: Excel.Interfaces.SlicerStyleCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    fullName: Excel.Interfaces.SlicerStyleCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    spec.typeScript:
      - uid: 'excel!Excel.Interfaces.SlicerStyleCollectionLoadOptions:interface'
        name: Excel.Interfaces.SlicerStyleCollectionLoadOptions
        fullName: Excel.Interfaces.SlicerStyleCollectionLoadOptions
      - name: ' & '
        fullName: ' & '
      - uid: 'excel!Excel.Interfaces.CollectionLoadOptions:interface'
        name: Excel.Interfaces.CollectionLoadOptions
        fullName: Excel.Interfaces.CollectionLoadOptions
  - uid: 'excel!OfficeExtension.LoadOption:interface'
    name: OfficeExtension.LoadOption
  - uid: 'excel!Excel.SlicerStyleCollection#setDefault~0:complex'
    name: SlicerStyle | string
    fullName: Excel.SlicerStyle | string
    spec.typeScript:
      - uid: 'excel!Excel.SlicerStyle:class'
        name: SlicerStyle
        fullName: Excel.SlicerStyle
      - name: ' | string'
        fullName: ' | string'
  - uid: 'excel!Excel.Interfaces.SlicerStyleCollectionData:interface'
    name: Excel.Interfaces.SlicerStyleCollectionData