### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.ShapeGroup:class'
    summary: |-
      Representa um grupo de formas dentro de uma planilha. Para obter o objeto Shape correspondente, use`ShapeGroup.shape`<!-- -->.

      \[[Conjunto de APIs: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: Excel.ShapeGroup
    fullName: Excel.ShapeGroup
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.ShapeGroup#context:member'
      - 'excel!Excel.ShapeGroup#id:member'
      - 'excel!Excel.ShapeGroup#load:member(1)'
      - 'excel!Excel.ShapeGroup#load:member(2)'
      - 'excel!Excel.ShapeGroup#load:member(3)'
      - 'excel!Excel.ShapeGroup#shape:member'
      - 'excel!Excel.ShapeGroup#shapes:member'
      - 'excel!Excel.ShapeGroup#toJSON:member(1)'
      - 'excel!Excel.ShapeGroup#ungroup:member(1)'
  - uid: 'excel!Excel.ShapeGroup#context:member'
    summary: O contexto de solicitação associado ao objeto. Isso conecta o processo do suplemento ao processo do aplicativo host do Office.
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.ShapeGroup#id:member'
    summary: |-
      Representa o identificador de forma. Somente leitura.

      \[[Conjunto de APIs: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.ShapeGroup#load:member(1)'
    summary: Coloca um comando na fila para carregar as propriedades especificadas do objeto. Você deve chamar `context.sync()` antes de ler as propriedades.
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.ShapeGroupLoadOptions): Excel.ShapeGroup;'
      return:
        type:
          - 'excel!Excel.ShapeGroup:class'
        description: ''
      parameters:
        - id: options
          description: Fornece opções para as propriedades do objeto a ser carregado.
          type:
            - 'excel!Excel.Interfaces.ShapeGroupLoadOptions:interface'
  - uid: 'excel!Excel.ShapeGroup#load:member(2)'
    summary: Coloca um comando na fila para carregar as propriedades especificadas do objeto. Você deve chamar `context.sync()` antes de ler as propriedades.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.ShapeGroup;'
      return:
        type:
          - 'excel!Excel.ShapeGroup:class'
        description: ''
      parameters:
        - id: propertyNames
          description: Uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.ShapeGroup#load:member(3)'
    summary: Coloca um comando na fila para carregar as propriedades especificadas do objeto. Você deve chamar `context.sync()` antes de ler as propriedades.
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.ShapeGroup;
      return:
        type:
          - 'excel!Excel.ShapeGroup:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '`propertyNamesAndPaths.select`é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades a serem `propertyNamesAndPaths.expand` carregadas e é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades de navegação a serem carregadas.'
          type:
            - |-
              {
                          select?: string;
                          expand?: string;
                      }
  - uid: 'excel!Excel.ShapeGroup#shape:member'
    summary: |-
      Retorna o objeto de forma associado ao grupo. Somente leitura.

      \[[Conjunto de APIs: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: shape
    fullName: shape
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly shape: Excel.Shape;'
      return:
        type:
          - 'excel!Excel.Shape:class'
  - uid: 'excel!Excel.ShapeGroup#shapes:member'
    summary: |-
      Retorna uma coleção de objetos de forma. Somente leitura.

      \[[Conjunto de APIs: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: shapes
    fullName: shapes
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly shapes: Excel.GroupShapeCollection;'
      return:
        type:
          - 'excel!Excel.GroupShapeCollection:class'
  - uid: 'excel!Excel.ShapeGroup#toJSON:member(1)'
    summary: 'Substitui o método `toJSON()` JavaScript para fornecer uma saída mais útil quando um objeto API é passado para`JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, por sua vez, chama `toJSON` o método do objeto que é passado para ele.) Enquanto o objeto Excel. Shape original é um objeto API, o `toJSON` método retorna um objeto JavaScript simples (digitado como`Excel.Interfaces.ShapeGroupData`<!-- -->) que contém cópias superficiais de qualquer propriedade filho carregada do objeto original.'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.ShapeGroupData;'
      return:
        type:
          - 'excel!Excel.Interfaces.ShapeGroupData:interface'
        description: ''
  - uid: 'excel!Excel.ShapeGroup#ungroup:member(1)'
    summary: |-
      Desagrupa todas as formas agrupadas no grupo de forma especificado.

      \[[Conjunto de APIs: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: ungroup()
    fullName: ungroup()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'ungroup(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a>Exemplos

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Shapes");

              const shapeGroup = sheet.shapes.getItem("Group").group;
              shapeGroup.ungroup();
              console.log("Shapes ungrouped");

              await context.sync();
          });
          ```
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.ShapeGroup:class'
    name: Excel.ShapeGroup
  - uid: 'excel!Excel.Interfaces.ShapeGroupLoadOptions:interface'
    name: Excel.Interfaces.ShapeGroupLoadOptions
  - uid: 'excel!Excel.Shape:class'
    name: Excel.Shape
  - uid: 'excel!Excel.GroupShapeCollection:class'
    name: Excel.GroupShapeCollection
  - uid: 'excel!Excel.Interfaces.ShapeGroupData:interface'
    name: Excel.Interfaces.ShapeGroupData