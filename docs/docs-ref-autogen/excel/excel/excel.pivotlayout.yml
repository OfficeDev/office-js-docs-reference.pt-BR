### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.PivotLayout:class'
    summary: |-
      <span data-ttu-id="83d87-101">Representa o layout visual da tabela dinâmica.</span><span class="sxs-lookup"><span data-stu-id="83d87-101">Represents the visual layout of the PivotTable.</span></span>

      <span data-ttu-id="83d87-102">\[[Conjunto de APIs: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="83d87-102">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.PivotLayout
    fullName: Excel.PivotLayout
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.PivotLayout#autoFormat:member'
      - 'excel!Excel.PivotLayout#context:member'
      - 'excel!Excel.PivotLayout#enableFieldList:member'
      - 'excel!Excel.PivotLayout#getCell:member(1)'
      - 'excel!Excel.PivotLayout#getColumnLabelRange:member(1)'
      - 'excel!Excel.PivotLayout#getDataBodyRange:member(1)'
      - 'excel!Excel.PivotLayout#getDataHierarchy:member(1)'
      - 'excel!Excel.PivotLayout#getFilterAxisRange:member(1)'
      - 'excel!Excel.PivotLayout#getPivotItems:member(1)'
      - 'excel!Excel.PivotLayout#getPivotItems:member(2)'
      - 'excel!Excel.PivotLayout#getRange:member(1)'
      - 'excel!Excel.PivotLayout#getRowLabelRange:member(1)'
      - 'excel!Excel.PivotLayout#layoutType:member'
      - 'excel!Excel.PivotLayout#load:member(1)'
      - 'excel!Excel.PivotLayout#load:member(2)'
      - 'excel!Excel.PivotLayout#load:member(3)'
      - 'excel!Excel.PivotLayout#preserveFormatting:member'
      - 'excel!Excel.PivotLayout#set:member(1)'
      - 'excel!Excel.PivotLayout#set:member(2)'
      - 'excel!Excel.PivotLayout#setAutoSortOnCell:member(1)'
      - 'excel!Excel.PivotLayout#setAutoSortOnCell:member(2)'
      - 'excel!Excel.PivotLayout#showColumnGrandTotals:member'
      - 'excel!Excel.PivotLayout#showRowGrandTotals:member'
      - 'excel!Excel.PivotLayout#subtotalLocation:member'
      - 'excel!Excel.PivotLayout#toJSON:member(1)'
  - uid: 'excel!Excel.PivotLayout#autoFormat:member'
    summary: |-
      <span data-ttu-id="83d87-103">Especifica se a formatação será formatada automaticamente quando for atualizada ou quando os campos forem movidos</span><span class="sxs-lookup"><span data-stu-id="83d87-103">Specifies whether formatting will be automatically formatted when it’s refreshed or when fields are moved</span></span>

      <span data-ttu-id="83d87-104">\[[Conjunto de APIs: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="83d87-104">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: autoFormat
    fullName: autoFormat
    langs:
      - typeScript
    type: property
    syntax:
      content: 'autoFormat: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.PivotLayout#context:member'
    summary: <span data-ttu-id="83d87-105">O contexto de solicitação associado ao objeto.</span><span class="sxs-lookup"><span data-stu-id="83d87-105">The request context associated with the object.</span></span> <span data-ttu-id="83d87-106">Isso conecta o processo do suplemento ao processo do aplicativo host do Office.</span><span class="sxs-lookup"><span data-stu-id="83d87-106">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.PivotLayout#enableFieldList:member'
    summary: |-
      <span data-ttu-id="83d87-107">Especifica se a lista de campos pode ser mostrada na interface do usuário.</span><span class="sxs-lookup"><span data-stu-id="83d87-107">Specifies whether the field list can be shown in the UI.</span></span>

      <span data-ttu-id="83d87-108">\[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="83d87-108">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: enableFieldList
    fullName: enableFieldList
    langs:
      - typeScript
    type: property
    syntax:
      content: 'enableFieldList: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.PivotLayout#getCell:member(1)'
    summary: |-
      <span data-ttu-id="83d87-109">Obtém uma célula exclusiva na tabela dinâmica com base em uma hierarquia de dados, bem como os itens de linha e coluna de suas respectivas hierarquias.</span><span class="sxs-lookup"><span data-stu-id="83d87-109">Gets a unique cell in the PivotTable based on a data hierarchy and the row and column items of their respective hierarchies.</span></span> <span data-ttu-id="83d87-110">A célula retornada é a interseção da linha e coluna fornecidas que contém os dados da hierarquia especificada.</span><span class="sxs-lookup"><span data-stu-id="83d87-110">The returned cell is the intersection of the given row and column that contains the data from the given hierarchy.</span></span> <span data-ttu-id="83d87-111">Esse método é o inverso de chamar getPivotItems e getDataHierarchy em uma célula específica.</span><span class="sxs-lookup"><span data-stu-id="83d87-111">This method is the inverse of calling getPivotItems and getDataHierarchy on a particular cell.</span></span>

      <span data-ttu-id="83d87-112">\[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="83d87-112">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: 'getCell(dataHierarchy, rowItems, columnItems)'
    fullName: 'getCell(dataHierarchy, rowItems, columnItems)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCell(dataHierarchy: DataPivotHierarchy | string, rowItems: Array<PivotItem | string>, columnItems: Array<PivotItem | string>): Excel.Range;'
      return:
        type:
          - 'excel!Excel.Range:class'
        description: <span data-ttu-id="83d87-113">Um intervalo que especifica uma única célula que contém o valor especificado.</span><span class="sxs-lookup"><span data-stu-id="83d87-113">A range specifying a single cell that contains the value specified.</span></span>
      parameters:
        - id: dataHierarchy
          description: <span data-ttu-id="83d87-114">A hierarquia de dados que fornece o item de dados a ser localizado.</span><span class="sxs-lookup"><span data-stu-id="83d87-114">The dataHierarchy that provides the data item to find.</span></span>
          type:
            - 'excel!Excel.PivotLayout#getCell~0:complex'
        - id: rowItems
          description: <span data-ttu-id="83d87-115">O PivotItems do eixo das linhas que compõem o valor a ser localizado.</span><span class="sxs-lookup"><span data-stu-id="83d87-115">The PivotItems from the row axis that make up the value to find.</span></span>
          type:
            - 'excel!Excel.PivotLayout#getCell~1:complex'
        - id: columnItems
          description: <span data-ttu-id="83d87-116">O PivotItems do eixo das colunas que compõem o valor a ser localizado.</span><span class="sxs-lookup"><span data-stu-id="83d87-116">The PivotItems from the column axis that make up the value to find.</span></span>
          type:
            - 'excel!Excel.PivotLayout#getCell~2:complex'
  - uid: 'excel!Excel.PivotLayout#getColumnLabelRange:member(1)'
    summary: |-
      <span data-ttu-id="83d87-117">Retorna o intervalo onde residem os rótulos de coluna da Tabela Dinâmica.</span><span class="sxs-lookup"><span data-stu-id="83d87-117">Returns the range where the PivotTable's column labels reside.</span></span>

      <span data-ttu-id="83d87-118">\[[Conjunto de APIs: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="83d87-118">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getColumnLabelRange()
    fullName: getColumnLabelRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getColumnLabelRange(): Excel.Range;'
      return:
        type:
          - 'excel!Excel.Range:class'
        description: ''
  - uid: 'excel!Excel.PivotLayout#getDataBodyRange:member(1)'
    summary: |-
      <span data-ttu-id="83d87-119">Retorna o intervalo onde residem os valores de dados da tabela dinâmica.</span><span class="sxs-lookup"><span data-stu-id="83d87-119">Returns the range where the PivotTable's data values reside.</span></span>

      <span data-ttu-id="83d87-120">\[[Conjunto de APIs: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="83d87-120">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getDataBodyRange()
    fullName: getDataBodyRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getDataBodyRange(): Excel.Range;'
      return:
        type:
          - 'excel!Excel.Range:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="83d87-121">Exemplos</span><span class="sxs-lookup"><span data-stu-id="83d87-121">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const pivotTable = context.workbook.worksheets.getActiveWorksheet().pivotTables.getItem("Farm Sales");

              // the layout controls the ranges used by the PivotTable
              const range = pivotTable.layout.getDataBodyRange();

              // get all the data hierarchy totals
              const grandTotalRange = range.getLastRow();
              grandTotalRange.load("address");
              await context.sync();
              
              // use the wholesale and farm sale totals to make a final sum
              const masterTotalRange = context.workbook.worksheets.getActiveWorksheet().getRange("B27:C27");
              masterTotalRange.formulas = [["All Crates", "=SUM(" + grandTotalRange.address + ")"]];
              await context.sync();
          });
          ```
  - uid: 'excel!Excel.PivotLayout#getDataHierarchy:member(1)'
    summary: |-
      <span data-ttu-id="83d87-122">Obtém o DataHierarchy que é usado para calcular o valor em um intervalo especificado dentro da Tabela dinâmica.</span><span class="sxs-lookup"><span data-stu-id="83d87-122">Gets the DataHierarchy that is used to calculate the value in a specified range within the PivotTable.</span></span>

      <span data-ttu-id="83d87-123">\[[Conjunto de APIs: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="83d87-123">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getDataHierarchy(cell)
    fullName: getDataHierarchy(cell)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getDataHierarchy(cell: Range | string): Excel.DataPivotHierarchy;'
      return:
        type:
          - 'excel!Excel.DataPivotHierarchy:class'
        description: <span data-ttu-id="83d87-124">O objeto DataPivotHierarchy usado para calcular o valor na célula especificada.</span><span class="sxs-lookup"><span data-stu-id="83d87-124">The DataPivotHierarchy object used to calculate the value in the specified cell.</span></span>
      parameters:
        - id: cell
          description: <span data-ttu-id="83d87-125">Uma única célula dentro do corpo de dados da tabela dinâmica.</span><span class="sxs-lookup"><span data-stu-id="83d87-125">A single cell within the PivotTable data body.</span></span>
          type:
            - 'excel!Excel.PivotLayout#getDataHierarchy~0:complex'
  - uid: 'excel!Excel.PivotLayout#getFilterAxisRange:member(1)'
    summary: |-
      <span data-ttu-id="83d87-126">Retorna o intervalo de área de filtro da Tabela Dinâmica.</span><span class="sxs-lookup"><span data-stu-id="83d87-126">Returns the range of the PivotTable's filter area.</span></span>

      <span data-ttu-id="83d87-127">\[[Conjunto de APIs: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="83d87-127">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getFilterAxisRange()
    fullName: getFilterAxisRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getFilterAxisRange(): Excel.Range;'
      return:
        type:
          - 'excel!Excel.Range:class'
        description: ''
  - uid: 'excel!Excel.PivotLayout#getPivotItems:member(1)'
    summary: |-
      <span data-ttu-id="83d87-128">Obtém os Itens dinâmicos de um eixo que compõem o valor em um intervalo especificado dentro da Tabela dinâmica.</span><span class="sxs-lookup"><span data-stu-id="83d87-128">Gets the PivotItems from an axis that make up the value in a specified range within the PivotTable.</span></span>

      <span data-ttu-id="83d87-129">\[[Conjunto de APIs: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="83d87-129">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'getPivotItems(axis, cell)'
    fullName: 'getPivotItems(axis, cell)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getPivotItems(axis: Excel.PivotAxis, cell: Range | string): OfficeExtension.ClientResult<Excel.PivotItem[]>;'
      return:
        type:
          - 'excel!Excel.PivotLayout#getPivotItems~0:complex'
        description: <span data-ttu-id="83d87-130">Uma coleção de PivotItems que é usada para calcular os valores na linha especificada.</span><span class="sxs-lookup"><span data-stu-id="83d87-130">A collection of PivotItems that are used to calculate the values in the specified row.</span></span>
      parameters:
        - id: axis
          description: <span data-ttu-id="83d87-131">O eixo do qual obter o PivotItems.</span><span class="sxs-lookup"><span data-stu-id="83d87-131">The axis from which to get the PivotItems.</span></span> <span data-ttu-id="83d87-132">Deve ser "Row" ou "Column".</span><span class="sxs-lookup"><span data-stu-id="83d87-132">Must be either "row" or "column."</span></span>
          type:
            - 'excel!Excel.PivotAxis:enum'
        - id: cell
          description: <span data-ttu-id="83d87-133">Uma única célula dentro do corpo de dados da tabela dinâmica.</span><span class="sxs-lookup"><span data-stu-id="83d87-133">A single cell within the PivotTable's data body.</span></span>
          type:
            - 'excel!Excel.PivotLayout#getPivotItems~1:complex'
  - uid: 'excel!Excel.PivotLayout#getPivotItems:member(2)'
    summary: |-
      <span data-ttu-id="83d87-134">Obtém os Itens dinâmicos de um eixo que compõem o valor em um intervalo especificado dentro da Tabela dinâmica.</span><span class="sxs-lookup"><span data-stu-id="83d87-134">Gets the PivotItems from an axis that make up the value in a specified range within the PivotTable.</span></span>

      <span data-ttu-id="83d87-135">\[[Conjunto de APIs: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="83d87-135">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'getPivotItems(axisString, cell)'
    fullName: 'getPivotItems(axisString, cell)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getPivotItems(axisString: "Unknown" | "Row" | "Column" | "Data" | "Filter", cell: Range | string): OfficeExtension.ClientResult<Excel.PivotItem[]>;'
      return:
        type:
          - 'excel!Excel.PivotLayout#getPivotItems~2:complex'
        description: <span data-ttu-id="83d87-136">Uma coleção de PivotItems que é usada para calcular os valores na linha especificada.</span><span class="sxs-lookup"><span data-stu-id="83d87-136">A collection of PivotItems that are used to calculate the values in the specified row.</span></span>
      parameters:
        - id: axisString
          description: <span data-ttu-id="83d87-137">O eixo do qual obter o PivotItems.</span><span class="sxs-lookup"><span data-stu-id="83d87-137">The axis from which to get the PivotItems.</span></span> <span data-ttu-id="83d87-138">Deve ser "Row" ou "Column".</span><span class="sxs-lookup"><span data-stu-id="83d87-138">Must be either "row" or "column."</span></span>
          type:
            - '"Unknown" | "Row" | "Column" | "Data" | "Filter"'
        - id: cell
          description: <span data-ttu-id="83d87-139">Uma única célula dentro do corpo de dados da tabela dinâmica.</span><span class="sxs-lookup"><span data-stu-id="83d87-139">A single cell within the PivotTable's data body.</span></span>
          type:
            - 'excel!Excel.PivotLayout#getPivotItems~3:complex'
  - uid: 'excel!Excel.PivotLayout#getRange:member(1)'
    summary: |-
      <span data-ttu-id="83d87-140">Retorna o intervalo em que a Tabela Dinâmica existe, excluindo a área de filtro.</span><span class="sxs-lookup"><span data-stu-id="83d87-140">Returns the range the PivotTable exists on, excluding the filter area.</span></span>

      <span data-ttu-id="83d87-141">\[[Conjunto de APIs: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="83d87-141">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getRange()
    fullName: getRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRange(): Excel.Range;'
      return:
        type:
          - 'excel!Excel.Range:class'
        description: ''
  - uid: 'excel!Excel.PivotLayout#getRowLabelRange:member(1)'
    summary: |-
      <span data-ttu-id="83d87-142">Retorna o intervalo onde residem os rótulos de linha da Tabela Dinâmica.</span><span class="sxs-lookup"><span data-stu-id="83d87-142">Returns the range where the PivotTable's row labels reside.</span></span>

      <span data-ttu-id="83d87-143">\[[Conjunto de APIs: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="83d87-143">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getRowLabelRange()
    fullName: getRowLabelRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRowLabelRange(): Excel.Range;'
      return:
        type:
          - 'excel!Excel.Range:class'
        description: ''
  - uid: 'excel!Excel.PivotLayout#layoutType:member'
    summary: |-
      <span data-ttu-id="83d87-144">Essa propriedade indica o PivotLayoutType de todos os campos da Tabela Dinâmica.</span><span class="sxs-lookup"><span data-stu-id="83d87-144">This property indicates the PivotLayoutType of all fields on the PivotTable.</span></span> <span data-ttu-id="83d87-145">Se os campos têm diferentes estados, ele será nulo.</span><span class="sxs-lookup"><span data-stu-id="83d87-145">If fields have different states, this will be null.</span></span>

      <span data-ttu-id="83d87-146">\[[Conjunto de APIs: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="83d87-146">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: layoutType
    fullName: layoutType
    langs:
      - typeScript
    type: property
    syntax:
      content: 'layoutType: Excel.PivotLayoutType | "Compact" | "Tabular" | "Outline";'
      return:
        type:
          - 'excel!Excel.PivotLayout#layoutType~0:complex'
  - uid: 'excel!Excel.PivotLayout#load:member(1)'
    summary: <span data-ttu-id="83d87-147">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="83d87-147">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="83d87-148">Você deve chamar `context.sync()` antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="83d87-148">You must call `context.sync()` before reading the properties.</span></span>
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.PivotLayoutLoadOptions): Excel.PivotLayout;'
      return:
        type:
          - 'excel!Excel.PivotLayout:class'
        description: ''
      parameters:
        - id: options
          description: <span data-ttu-id="83d87-149">Fornece opções para as propriedades do objeto a ser carregado.</span><span class="sxs-lookup"><span data-stu-id="83d87-149">Provides options for which properties of the object to load.</span></span>
          type:
            - 'excel!Excel.Interfaces.PivotLayoutLoadOptions:interface'
  - uid: 'excel!Excel.PivotLayout#load:member(2)'
    summary: <span data-ttu-id="83d87-150">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="83d87-150">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="83d87-151">Você deve chamar `context.sync()` antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="83d87-151">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.PivotLayout;'
      return:
        type:
          - 'excel!Excel.PivotLayout:class'
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="83d87-152">Uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="83d87-152">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.PivotLayout#load:member(3)'
    summary: <span data-ttu-id="83d87-153">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="83d87-153">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="83d87-154">Você deve chamar `context.sync()` antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="83d87-154">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.PivotLayout;
      return:
        type:
          - 'excel!Excel.PivotLayout:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="83d87-155">`propertyNamesAndPaths.select`é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades a serem `propertyNamesAndPaths.expand` carregadas e é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades de navegação a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="83d87-155">`propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - |-
              {
                          select?: string;
                          expand?: string;
                      }
  - uid: 'excel!Excel.PivotLayout#preserveFormatting:member'
    summary: |-
      <span data-ttu-id="83d87-156">Especifica se a formatação será preservada quando o relatório for atualizado ou recalculado por operações como giro, classificação ou alteração de itens de campo da página.</span><span class="sxs-lookup"><span data-stu-id="83d87-156">Specifies whether formatting is preserved when the report is refreshed or recalculated by operations such as pivoting, sorting, or changing page field items.</span></span>

      <span data-ttu-id="83d87-157">\[[Conjunto de APIs: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="83d87-157">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: preserveFormatting
    fullName: preserveFormatting
    langs:
      - typeScript
    type: property
    syntax:
      content: 'preserveFormatting: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.PivotLayout#set:member(1)'
    summary: '<span data-ttu-id="83d87-158">Define várias propriedades de um objeto ao mesmo tempo.</span><span class="sxs-lookup"><span data-stu-id="83d87-158">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="83d87-159">Você pode passar um objeto simples com as propriedades apropriadas ou outro objeto API do mesmo tipo.</span><span class="sxs-lookup"><span data-stu-id="83d87-159">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="83d87-160">Este método tem a seguinte assinatura adicional:</span><span class="sxs-lookup"><span data-stu-id="83d87-160">This method has the following additional signature:</span></span>

      `set(properties: Excel.PivotLayout): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.PivotLayoutUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="83d87-161">Um objeto JavaScript com propriedades que são estruturadas isomorphically para as propriedades do objeto no qual o método é chamado.</span><span class="sxs-lookup"><span data-stu-id="83d87-161">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - 'excel!Excel.Interfaces.PivotLayoutUpdateData:interface'
        - id: options
          description: <span data-ttu-id="83d87-162">Fornece uma opção para suprimir erros se o objeto Properties tentar definir qualquer propriedade somente leitura.</span><span class="sxs-lookup"><span data-stu-id="83d87-162">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - 'excel!OfficeExtension.UpdateOptions:interface'
  - uid: 'excel!Excel.PivotLayout#set:member(2)'
    summary: '<span data-ttu-id="83d87-163">Define várias propriedades no objeto ao mesmo tempo, com base em um objeto carregado existente.</span><span class="sxs-lookup"><span data-stu-id="83d87-163">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.PivotLayout): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'excel!Excel.PivotLayout:class'
  - uid: 'excel!Excel.PivotLayout#setAutoSortOnCell:member(1)'
    summary: |-
      <span data-ttu-id="83d87-164">Define a Tabela Dinâmica para classificar automaticamente usando a célula especificada para selecionar automaticamente todos os critérios e contextos necessários.</span><span class="sxs-lookup"><span data-stu-id="83d87-164">Sets the PivotTable to automatically sort using the specified cell to automatically select all necessary criteria and context.</span></span> <span data-ttu-id="83d87-165">Funciona de maneira idêntica à aplicação de uma autoclassificação da interface do usuário.</span><span class="sxs-lookup"><span data-stu-id="83d87-165">This behaves identically to applying an autosort from the UI.</span></span>

      <span data-ttu-id="83d87-166">\[[Conjunto de APIs: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="83d87-166">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'setAutoSortOnCell(cell, sortBy)'
    fullName: 'setAutoSortOnCell(cell, sortBy)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setAutoSortOnCell(cell: Range | string, sortBy: Excel.SortBy): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: cell
          description: <span data-ttu-id="83d87-167">Uma única célula a ser usada para obter os critérios para a aplicação da AutoClassificação.</span><span class="sxs-lookup"><span data-stu-id="83d87-167">A single cell to use get the criteria from for applying the autosort.</span></span>
          type:
            - 'excel!Excel.PivotLayout#setAutoSortOnCell~0:complex'
        - id: sortBy
          description: <span data-ttu-id="83d87-168">A direção da classificação.</span><span class="sxs-lookup"><span data-stu-id="83d87-168">The direction of the sort.</span></span>
          type:
            - 'excel!Excel.SortBy:enum'
  - uid: 'excel!Excel.PivotLayout#setAutoSortOnCell:member(2)'
    summary: |-
      <span data-ttu-id="83d87-169">Define a Tabela Dinâmica para classificar automaticamente usando a célula especificada para selecionar automaticamente todos os critérios e contextos necessários.</span><span class="sxs-lookup"><span data-stu-id="83d87-169">Sets the PivotTable to automatically sort using the specified cell to automatically select all necessary criteria and context.</span></span> <span data-ttu-id="83d87-170">Funciona de maneira idêntica à aplicação de uma autoclassificação da interface do usuário.</span><span class="sxs-lookup"><span data-stu-id="83d87-170">This behaves identically to applying an autosort from the UI.</span></span>

      <span data-ttu-id="83d87-171">\[[Conjunto de APIs: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="83d87-171">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'setAutoSortOnCell(cell, sortByString)'
    fullName: 'setAutoSortOnCell(cell, sortByString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setAutoSortOnCell(cell: Range | string, sortByString: "Ascending" | "Descending"): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: cell
          description: <span data-ttu-id="83d87-172">Uma única célula a ser usada para obter os critérios para a aplicação da AutoClassificação.</span><span class="sxs-lookup"><span data-stu-id="83d87-172">A single cell to use get the criteria from for applying the autosort.</span></span>
          type:
            - 'excel!Excel.PivotLayout#setAutoSortOnCell~1:complex'
        - id: sortByString
          description: <span data-ttu-id="83d87-173">A direção da classificação.</span><span class="sxs-lookup"><span data-stu-id="83d87-173">The direction of the sort.</span></span>
          type:
            - '"Ascending" | "Descending"'
  - uid: 'excel!Excel.PivotLayout#showColumnGrandTotals:member'
    summary: |-
      <span data-ttu-id="83d87-174">Especifica se o relatório de tabela dinâmica mostra os totais gerais das colunas.</span><span class="sxs-lookup"><span data-stu-id="83d87-174">Specifies whether the PivotTable report shows grand totals for columns.</span></span>

      <span data-ttu-id="83d87-175">\[[Conjunto de APIs: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="83d87-175">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: showColumnGrandTotals
    fullName: showColumnGrandTotals
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showColumnGrandTotals: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.PivotLayout#showRowGrandTotals:member'
    summary: |-
      <span data-ttu-id="83d87-176">Especifica se o relatório de tabela dinâmica mostra os totais gerais para as linhas.</span><span class="sxs-lookup"><span data-stu-id="83d87-176">Specifies whether the PivotTable report shows grand totals for rows.</span></span>

      <span data-ttu-id="83d87-177">\[[Conjunto de APIs: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="83d87-177">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: showRowGrandTotals
    fullName: showRowGrandTotals
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showRowGrandTotals: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.PivotLayout#subtotalLocation:member'
    summary: |-
      <span data-ttu-id="83d87-178">Essa propriedade indica SubtotalLocationType de todos os campos da Tabela Dinâmica.</span><span class="sxs-lookup"><span data-stu-id="83d87-178">This property indicates the SubtotalLocationType of all fields on the PivotTable.</span></span> <span data-ttu-id="83d87-179">Se os campos têm diferentes estados, ele será nulo.</span><span class="sxs-lookup"><span data-stu-id="83d87-179">If fields have different states, this will be null.</span></span>

      <span data-ttu-id="83d87-180">\[[Conjunto de APIs: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="83d87-180">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: subtotalLocation
    fullName: subtotalLocation
    langs:
      - typeScript
    type: property
    syntax:
      content: 'subtotalLocation: Excel.SubtotalLocationType | "AtTop" | "AtBottom" | "Off";'
      return:
        type:
          - 'excel!Excel.PivotLayout#subtotalLocation~0:complex'
  - uid: 'excel!Excel.PivotLayout#toJSON:member(1)'
    summary: '<span data-ttu-id="83d87-181">Substitui o método `toJSON()` JavaScript para fornecer uma saída mais útil quando um objeto API é passado para`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="83d87-181">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="83d87-182">.</span><span class="sxs-lookup"><span data-stu-id="83d87-182"></span></span> <span data-ttu-id="83d87-183">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="83d87-183"></span></span><!-- --><span data-ttu-id="83d87-184">, por sua vez, chama `toJSON` o método do objeto que é passado para ele.) Enquanto o objeto Excel. PivotLayout original é um objeto API, o `toJSON` método retorna um objeto JavaScript simples (digitado como`Excel.Interfaces.PivotLayoutData`</span><span class="sxs-lookup"><span data-stu-id="83d87-184">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.PivotLayout object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.PivotLayoutData`</span></span><!-- --><span data-ttu-id="83d87-185">) que contém cópias superficiais de qualquer propriedade filho carregada do objeto original.</span><span class="sxs-lookup"><span data-stu-id="83d87-185">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.PivotLayoutData;'
      return:
        type:
          - 'excel!Excel.Interfaces.PivotLayoutData:interface'
        description: ''
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.Range:class'
    name: Excel.Range
  - uid: 'excel!Excel.PivotLayout#getCell~0:complex'
    name: DataPivotHierarchy | string
    fullName: Excel.DataPivotHierarchy | string
    spec.typeScript:
      - uid: 'excel!Excel.DataPivotHierarchy:class'
        name: DataPivotHierarchy
        fullName: Excel.DataPivotHierarchy
      - name: ' | string'
        fullName: ' | string'
  - uid: 'excel!Excel.PivotLayout#getCell~1:complex'
    name: Array<PivotItem | string>
    fullName: Array<Excel.PivotItem | string>
    spec.typeScript:
      - uid: '!Array:interface'
        name: Array
        fullName: Array
      - name: <
        fullName: <
      - uid: 'excel!Excel.PivotItem:class'
        name: PivotItem
        fullName: Excel.PivotItem
      - name: ' | string>'
        fullName: ' | string>'
  - uid: 'excel!Excel.PivotLayout#getCell~2:complex'
    name: Array<PivotItem | string>
    fullName: Array<Excel.PivotItem | string>
    spec.typeScript:
      - uid: '!Array:interface'
        name: Array
        fullName: Array
      - name: <
        fullName: <
      - uid: 'excel!Excel.PivotItem:class'
        name: PivotItem
        fullName: Excel.PivotItem
      - name: ' | string>'
        fullName: ' | string>'
  - uid: 'excel!Excel.DataPivotHierarchy:class'
    name: Excel.DataPivotHierarchy
  - uid: 'excel!Excel.PivotLayout#getDataHierarchy~0:complex'
    name: Range | string
    fullName: Excel.Range | string
    spec.typeScript:
      - uid: 'excel!Excel.Range:class'
        name: Range
        fullName: Excel.Range
      - name: ' | string'
        fullName: ' | string'
  - uid: 'excel!Excel.PivotLayout#getPivotItems~0:complex'
    name: 'OfficeExtension.ClientResult<Excel.PivotItem[]>'
    fullName: 'OfficeExtension.ClientResult<Excel.PivotItem[]>'
    spec.typeScript:
      - uid: 'excel!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <
        fullName: <
      - uid: 'excel!Excel.PivotItem:class'
        name: Excel.PivotItem
        fullName: Excel.PivotItem
      - name: '[]>'
        fullName: '[]>'
  - uid: 'excel!Excel.PivotAxis:enum'
    name: Excel.PivotAxis
  - uid: 'excel!Excel.PivotLayout#getPivotItems~1:complex'
    name: Range | string
    fullName: Excel.Range | string
    spec.typeScript:
      - uid: 'excel!Excel.Range:class'
        name: Range
        fullName: Excel.Range
      - name: ' | string'
        fullName: ' | string'
  - uid: 'excel!Excel.PivotLayout#getPivotItems~2:complex'
    name: 'OfficeExtension.ClientResult<Excel.PivotItem[]>'
    fullName: 'OfficeExtension.ClientResult<Excel.PivotItem[]>'
    spec.typeScript:
      - uid: 'excel!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <
        fullName: <
      - uid: 'excel!Excel.PivotItem:class'
        name: Excel.PivotItem
        fullName: Excel.PivotItem
      - name: '[]>'
        fullName: '[]>'
  - uid: 'excel!Excel.PivotLayout#getPivotItems~3:complex'
    name: Range | string
    fullName: Excel.Range | string
    spec.typeScript:
      - uid: 'excel!Excel.Range:class'
        name: Range
        fullName: Excel.Range
      - name: ' | string'
        fullName: ' | string'
  - uid: 'excel!Excel.PivotLayout#layoutType~0:complex'
    name: Excel.PivotLayoutType | "Compact" | "Tabular" | "Outline"
    fullName: Excel.PivotLayoutType | "Compact" | "Tabular" | "Outline"
    spec.typeScript:
      - uid: 'excel!Excel.PivotLayoutType:enum'
        name: Excel.PivotLayoutType
        fullName: Excel.PivotLayoutType
      - name: ' | "Compact" | "Tabular" | "Outline"'
        fullName: ' | "Compact" | "Tabular" | "Outline"'
  - uid: 'excel!Excel.PivotLayout:class'
    name: Excel.PivotLayout
  - uid: 'excel!Excel.Interfaces.PivotLayoutLoadOptions:interface'
    name: Excel.Interfaces.PivotLayoutLoadOptions
  - uid: 'excel!Excel.Interfaces.PivotLayoutUpdateData:interface'
    name: Interfaces.PivotLayoutUpdateData
  - uid: 'excel!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'excel!Excel.PivotLayout#setAutoSortOnCell~0:complex'
    name: Range | string
    fullName: Excel.Range | string
    spec.typeScript:
      - uid: 'excel!Excel.Range:class'
        name: Range
        fullName: Excel.Range
      - name: ' | string'
        fullName: ' | string'
  - uid: 'excel!Excel.SortBy:enum'
    name: Excel.SortBy
  - uid: 'excel!Excel.PivotLayout#setAutoSortOnCell~1:complex'
    name: Range | string
    fullName: Excel.Range | string
    spec.typeScript:
      - uid: 'excel!Excel.Range:class'
        name: Range
        fullName: Excel.Range
      - name: ' | string'
        fullName: ' | string'
  - uid: 'excel!Excel.PivotLayout#subtotalLocation~0:complex'
    name: Excel.SubtotalLocationType | "AtTop" | "AtBottom" | "Off"
    fullName: Excel.SubtotalLocationType | "AtTop" | "AtBottom" | "Off"
    spec.typeScript:
      - uid: 'excel!Excel.SubtotalLocationType:enum'
        name: Excel.SubtotalLocationType
        fullName: Excel.SubtotalLocationType
      - name: ' | "AtTop" | "AtBottom" | "Off"'
        fullName: ' | "AtTop" | "AtBottom" | "Off"'
  - uid: 'excel!Excel.Interfaces.PivotLayoutData:interface'
    name: Excel.Interfaces.PivotLayoutData