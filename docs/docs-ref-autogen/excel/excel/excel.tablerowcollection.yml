### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.TableRowCollection:class'
    summary: |-
      <span data-ttu-id="de3ea-101">Representa uma coleção de todas as linhas que fazem parte da tabela.</span><span class="sxs-lookup"><span data-stu-id="de3ea-101">Represents a collection of all the rows that are part of the table.</span></span>

      <span data-ttu-id="de3ea-102">Observe que, ao contrário de intervalos ou colunas, que serão ajustados se novas linhas/colunas forem adicionadas antes delas, um objeto TableRow representará o local físico da linha da tabela, mas não os dados.</span><span class="sxs-lookup"><span data-stu-id="de3ea-102">Note that unlike Ranges or Columns, which will adjust if new rows/columns are added before them, a TableRow object represent the physical location of the table row, but not the data.</span></span> <span data-ttu-id="de3ea-103">Ou seja, se os dados forem classificados ou se novas linhas forem adicionadas, uma linha de tabela continuará a apontar para o índice para o qual foi criada.</span><span class="sxs-lookup"><span data-stu-id="de3ea-103">That is, if the data is sorted or if new rows are added, a table row will continue to point at the index for which it was created.</span></span>

      <span data-ttu-id="de3ea-104">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="de3ea-104">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.TableRowCollection
    fullName: Excel.TableRowCollection
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.TableRowCollection#add:member(1)'
      - 'excel!Excel.TableRowCollection#context:member'
      - 'excel!Excel.TableRowCollection#count:member'
      - 'excel!Excel.TableRowCollection#getCount:member(1)'
      - 'excel!Excel.TableRowCollection#getItemAt:member(1)'
      - 'excel!Excel.TableRowCollection#items:member'
      - 'excel!Excel.TableRowCollection#load:member(1)'
      - 'excel!Excel.TableRowCollection#load:member(2)'
      - 'excel!Excel.TableRowCollection#load:member(3)'
      - 'excel!Excel.TableRowCollection#toJSON:member(1)'
  - uid: 'excel!Excel.TableRowCollection#add:member(1)'
    summary: |-
      <span data-ttu-id="de3ea-105">Adiciona uma ou mais linhas à tabela.</span><span class="sxs-lookup"><span data-stu-id="de3ea-105">Adds one or more rows to the table.</span></span> <span data-ttu-id="de3ea-106">O objeto de retorno será a parte superior das linhas adicionadas recentemente.</span><span class="sxs-lookup"><span data-stu-id="de3ea-106">The return object will be the top of the newly added row(s).</span></span>

      <span data-ttu-id="de3ea-107">Observe que, ao contrário de intervalos ou colunas, que serão ajustados se novas linhas/colunas forem adicionadas antes delas, um objeto TableRow representará o local físico da linha da tabela, mas não os dados.</span><span class="sxs-lookup"><span data-stu-id="de3ea-107">Note that unlike Ranges or Columns, which will adjust if new rows/columns are added before them, a TableRow object represent the physical location of the table row, but not the data.</span></span> <span data-ttu-id="de3ea-108">Ou seja, se os dados forem classificados ou se novas linhas forem adicionadas, uma linha de tabela continuará a apontar para o índice para o qual foi criada.</span><span class="sxs-lookup"><span data-stu-id="de3ea-108">That is, if the data is sorted or if new rows are added, a table row will continue to point at the index for which it was created.</span></span>

      <span data-ttu-id="de3ea-109">\[[Conjunto de APIs: ExcelApi 1,1 para adicionar uma única linha; 1,4 permite a adição de várias linhas.](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)</span><span class="sxs-lookup"><span data-stu-id="de3ea-109">\[ [API set: ExcelApi 1.1 for adding a single row; 1.4 allows adding of multiple rows.](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)</span></span> <span data-ttu-id="de3ea-110">\]</span><span class="sxs-lookup"><span data-stu-id="de3ea-110"></span></span>
    name: 'add(index, values)'
    fullName: 'add(index, values)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(index?: number, values?: Array<Array<boolean | string | number>> | boolean | string | number): Excel.TableRow;'
      return:
        type:
          - 'excel!Excel.TableRow:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="de3ea-111">Exemplos</span><span class="sxs-lookup"><span data-stu-id="de3ea-111">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tables = ctx.workbook.tables;
              var values = [["Sample", "Values", "For", "New", "Row"]];
              var row = tables.getItem("Table1").rows.add(null, values);
              row.load('index');
              return ctx.sync().then(function() {
                  console.log(row.index);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: index
          description: '<span data-ttu-id="de3ea-p105">Opcional. Especifica a posição relativa da nova linha. Se for null ou -1, a adição ocorre no final. Todas as linhas abaixo da linha inserida serão deslocadas para baixo. Indexado com zero.</span><span class="sxs-lookup"><span data-stu-id="de3ea-p105">Optional. Specifies the relative position of the new row. If null or -1, the addition happens at the end. Any rows below the inserted row are shifted downwards. Zero-indexed.</span></span>'
          type:
            - number
        - id: values
          description: <span data-ttu-id="de3ea-117">Opcional.</span><span class="sxs-lookup"><span data-stu-id="de3ea-117">Optional.</span></span> <span data-ttu-id="de3ea-118">Uma matriz bidimensional de valores não formatados da linha da tabela.</span><span class="sxs-lookup"><span data-stu-id="de3ea-118">A 2-dimensional array of unformatted values of the table row.</span></span>
          type:
            - 'excel!Excel.TableRowCollection#add~0:complex'
  - uid: 'excel!Excel.TableRowCollection#context:member'
    summary: <span data-ttu-id="de3ea-119">O contexto de solicitação associado ao objeto.</span><span class="sxs-lookup"><span data-stu-id="de3ea-119">The request context associated with the object.</span></span> <span data-ttu-id="de3ea-120">Isso conecta o processo do suplemento ao processo do aplicativo host do Office.</span><span class="sxs-lookup"><span data-stu-id="de3ea-120">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.TableRowCollection#count:member'
    summary: |-
      <span data-ttu-id="de3ea-121">Retorna o número de linhas na tabela.</span><span class="sxs-lookup"><span data-stu-id="de3ea-121">Returns the number of rows in the table.</span></span> <span data-ttu-id="de3ea-122">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="de3ea-122">Read-only.</span></span>

      <span data-ttu-id="de3ea-123">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="de3ea-123">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: count
    fullName: count
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly count: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.TableRowCollection#getCount:member(1)'
    summary: |-
      <span data-ttu-id="de3ea-124">Obtém a quantidade de linhas na tabela.</span><span class="sxs-lookup"><span data-stu-id="de3ea-124">Gets the number of rows in the table.</span></span>

      <span data-ttu-id="de3ea-125">\[[Conjunto de APIs: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="de3ea-125">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - 'excel!Excel.TableRowCollection#getCount~0:complex'
        description: ''
  - uid: 'excel!Excel.TableRowCollection#getItemAt:member(1)'
    summary: |-
      <span data-ttu-id="de3ea-126">Obtém uma linha com base em sua posição na coleção.</span><span class="sxs-lookup"><span data-stu-id="de3ea-126">Gets a row based on its position in the collection.</span></span>

      <span data-ttu-id="de3ea-127">Observe que, ao contrário de intervalos ou colunas, que serão ajustados se novas linhas/colunas forem adicionadas antes delas, um objeto TableRow representará o local físico da linha da tabela, mas não os dados.</span><span class="sxs-lookup"><span data-stu-id="de3ea-127">Note that unlike Ranges or Columns, which will adjust if new rows/columns are added before them, a TableRow object represent the physical location of the table row, but not the data.</span></span> <span data-ttu-id="de3ea-128">Ou seja, se os dados forem classificados ou se novas linhas forem adicionadas, uma linha de tabela continuará a apontar para o índice para o qual foi criada.</span><span class="sxs-lookup"><span data-stu-id="de3ea-128">That is, if the data is sorted or if new rows are added, a table row will continue to point at the index for which it was created.</span></span>

      <span data-ttu-id="de3ea-129">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="de3ea-129">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItemAt(index)
    fullName: getItemAt(index)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemAt(index: number): Excel.TableRow;'
      return:
        type:
          - 'excel!Excel.TableRow:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="de3ea-130">Exemplos</span><span class="sxs-lookup"><span data-stu-id="de3ea-130">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tablerow = ctx.workbook.tables.getItem('Table1').rows.getItemAt(0);
              tablerow.load('name');
              return ctx.sync().then(function() {
                      console.log(tablerow.name);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: index
          description: <span data-ttu-id="de3ea-131">Valor de índice do objeto a ser recuperado.</span><span class="sxs-lookup"><span data-stu-id="de3ea-131">Index value of the object to be retrieved.</span></span> <span data-ttu-id="de3ea-132">Indexados com zero.</span><span class="sxs-lookup"><span data-stu-id="de3ea-132">Zero-indexed.</span></span>
          type:
            - number
  - uid: 'excel!Excel.TableRowCollection#items:member'
    summary: <span data-ttu-id="de3ea-133">Obtém os itens filhos carregados nesta coleção.</span><span class="sxs-lookup"><span data-stu-id="de3ea-133">Gets the loaded child items in this collection.</span></span>
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.TableRow[];'
      return:
        type:
          - 'excel!Excel.TableRowCollection#items~0:complex'
  - uid: 'excel!Excel.TableRowCollection#load:member(1)'
    summary: <span data-ttu-id="de3ea-134">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="de3ea-134">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="de3ea-135">Você deve chamar `context.sync()` antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="de3ea-135">You must call `context.sync()` before reading the properties.</span></span>
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.TableRowCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.TableRowCollection;'
      return:
        type:
          - 'excel!Excel.TableRowCollection:class'
        description: ''
      parameters:
        - id: options
          description: <span data-ttu-id="de3ea-136">Fornece opções para as propriedades do objeto a ser carregado.</span><span class="sxs-lookup"><span data-stu-id="de3ea-136">Provides options for which properties of the object to load.</span></span>
          type:
            - 'excel!Excel.TableRowCollection#load~0:complex'
  - uid: 'excel!Excel.TableRowCollection#load:member(2)'
    summary: <span data-ttu-id="de3ea-137">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="de3ea-137">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="de3ea-138">Você deve chamar `context.sync()` antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="de3ea-138">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.TableRowCollection;'
      return:
        type:
          - 'excel!Excel.TableRowCollection:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="de3ea-139">Exemplos</span><span class="sxs-lookup"><span data-stu-id="de3ea-139">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tablerows = ctx.workbook.tables.getItem('Table1').rows;
              tablerows.load('items');
              return ctx.sync().then(function() {
                  console.log("tablerows Count: " + tablerows.count);
                  for (var i = 0; i < tablerows.items.length; i++)
                  {
                      console.log(tablerows.items[i].index);
                  }
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          // In the example, we'll select the top 100 rows of the table.
          Excel.run(function (ctx) { 
              var table = ctx.workbook.tables.getItem("Table1");
              var tableRows = table.rows.load({"select" : "index, values","top": 100, "skip": 0 })
              return ctx.sync().then(function() {
                  for (var i = 0; i < tableRows.items.length; i++)
                  {
                      console.log(tableRows.items[i].index);
                      console.log(tableRows.items[i].values);
                  }
              });
          }).catch(function(error) {
                  console.log("Error: " + error);
                  if (error instanceof OfficeExtension.Error) {
                      console.log("Debug info: " + JSON.stringify(error.debugInfo));
                  }
          });
          ```
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="de3ea-140">Uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="de3ea-140">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.TableRowCollection#load:member(3)'
    summary: <span data-ttu-id="de3ea-141">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="de3ea-141">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="de3ea-142">Você deve chamar `context.sync()` antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="de3ea-142">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: OfficeExtension.LoadOption): Excel.TableRowCollection;'
      return:
        type:
          - 'excel!Excel.TableRowCollection:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="de3ea-143">`propertyNamesAndPaths.select`é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades a serem `propertyNamesAndPaths.expand` carregadas e é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades de navegação a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="de3ea-143">`propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - 'excel!OfficeExtension.LoadOption:interface'
  - uid: 'excel!Excel.TableRowCollection#toJSON:member(1)'
    summary: '<span data-ttu-id="de3ea-144">Substitui o método `toJSON()` JavaScript para fornecer uma saída mais útil quando um objeto API é passado para`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="de3ea-144">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="de3ea-145">.</span><span class="sxs-lookup"><span data-stu-id="de3ea-145"></span></span> <span data-ttu-id="de3ea-146">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="de3ea-146"></span></span><!-- --><span data-ttu-id="de3ea-147">, por sua vez, chama `toJSON` o método do objeto que é passado para ele.) Enquanto o objeto `Excel.TableRowCollection` original é um objeto API, o `toJSON` método retorna um objeto JavaScript simples (digitado como`Excel.Interfaces.TableRowCollectionData`</span><span class="sxs-lookup"><span data-stu-id="de3ea-147">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.TableRowCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.TableRowCollectionData`</span></span><!-- --><span data-ttu-id="de3ea-148">) que contém uma matriz de "itens" com cópias superficiais de qualquer propriedade carregada dos itens da coleção.</span><span class="sxs-lookup"><span data-stu-id="de3ea-148">) that contains an "items" array with shallow copies of any loaded properties from the collection''s items.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.TableRowCollectionData;'
      return:
        type:
          - 'excel!Excel.Interfaces.TableRowCollectionData:interface'
        description: ''
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.TableRow:class'
    name: Excel.TableRow
  - uid: 'excel!Excel.TableRowCollection#add~0:complex'
    name: Array<Array<boolean | string | number>> | boolean | string | number
    fullName: Array<Array<boolean | string | number>> | boolean | string | number
    spec.typeScript:
      - uid: '!Array:interface'
        name: Array
        fullName: Array
      - name: <
        fullName: <
      - uid: '!Array:interface'
        name: Array
        fullName: Array
      - name: <boolean | string | number>> | boolean | string | number
        fullName: <boolean | string | number>> | boolean | string | number
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.TableRowCollection#getCount~0:complex'
    name: OfficeExtension.ClientResult<number>
    fullName: OfficeExtension.ClientResult<number>
    spec.typeScript:
      - uid: 'excel!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <number>
        fullName: <number>
  - uid: 'excel!Excel.TableRowCollection#items~0:complex'
    name: 'Excel.TableRow[]'
    fullName: 'Excel.TableRow[]'
    spec.typeScript:
      - uid: 'excel!Excel.TableRow:class'
        name: Excel.TableRow
        fullName: Excel.TableRow
      - name: '[]'
        fullName: '[]'
  - uid: 'excel!Excel.TableRowCollection:class'
    name: Excel.TableRowCollection
  - uid: 'excel!Excel.TableRowCollection#load~0:complex'
    name: Excel.Interfaces.TableRowCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    fullName: Excel.Interfaces.TableRowCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    spec.typeScript:
      - uid: 'excel!Excel.Interfaces.TableRowCollectionLoadOptions:interface'
        name: Excel.Interfaces.TableRowCollectionLoadOptions
        fullName: Excel.Interfaces.TableRowCollectionLoadOptions
      - name: ' & '
        fullName: ' & '
      - uid: 'excel!Excel.Interfaces.CollectionLoadOptions:interface'
        name: Excel.Interfaces.CollectionLoadOptions
        fullName: Excel.Interfaces.CollectionLoadOptions
  - uid: 'excel!OfficeExtension.LoadOption:interface'
    name: OfficeExtension.LoadOption
  - uid: 'excel!Excel.Interfaces.TableRowCollectionData:interface'
    name: Excel.Interfaces.TableRowCollectionData