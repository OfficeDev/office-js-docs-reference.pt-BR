### YamlMime:UniversalReference
ms.openlocfilehash: 646ac2590bc8a12f11afd6ae43bfc0c579c44aec
ms.sourcegitcommit: fd03ef72d6a546b0e4dbe0cc9e75d2a7cf9341a1
ms.translationtype: MT
ms.contentlocale: pt-BR
ms.lasthandoff: 02/27/2019
ms.locfileid: "30302987"
items:
- uid: excel.Excel.StyleCollection
  summary: >-
    <span data-ttu-id="5e163-101">Representa uma coleção de todos os estilos.</span><span class="sxs-lookup"><span data-stu-id="5e163-101">Represents a collection of all the styles.</span></span>


    <span data-ttu-id="5e163-102">\[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="5e163-102">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.StyleCollection
  fullName: Excel.StyleCollection
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.StyleCollection.add
  - excel.Excel.StyleCollection.context
  - excel.Excel.StyleCollection.getCount
  - excel.Excel.StyleCollection.getItem
  - excel.Excel.StyleCollection.getItemAt
  - excel.Excel.StyleCollection.items
  - excel.Excel.StyleCollection.load
  - excel.Excel.StyleCollection.load_1
  - excel.Excel.StyleCollection.load_2
  - excel.Excel.StyleCollection.toJSON
- uid: excel.Excel.StyleCollection.add
  summary: >-
    <span data-ttu-id="5e163-103">Adiciona um novo estilo para o conjunto.</span><span class="sxs-lookup"><span data-stu-id="5e163-103">Adds a new style to the collection.</span></span>


    <span data-ttu-id="5e163-104">\[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="5e163-104">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: add(name)
  fullName: add(name)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'add(name: string): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"5e163-105\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"5e163-105\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    let styles = context.workbook.styles;\n\n    // Add a new style to the style collection.\n    // Styles is in the Home tab ribbon.\n    styles.add(\"Diagonal Orientation Style\");\n          \n    let newStyle = styles.getItem(\"Diagonal Orientation Style\");\n    \n    // The \"Diagonal Orientation Style\" properties.\n    newStyle.textOrientation = 38;\n    newStyle.autoIndent = true;\n    newStyle.includeProtection = true;\n    newStyle.shrinkToFit = true;\n    newStyle.locked = false;\n    \n    await context.sync();\n\n    console.log(\"Successfully added a new style with diagonal orientation to the Home tab ribbon.\");\n});\n```"
    parameters:
    - id: name
      description: <span data-ttu-id="5e163-106">Nome do estilo a ser adicionado.</span><span class="sxs-lookup"><span data-stu-id="5e163-106">Name of the style to be added.</span></span>
      type:
      - string
- uid: excel.Excel.StyleCollection.context
  summary: <span data-ttu-id="5e163-107">O contexto de solicitação associado ao objeto.</span><span class="sxs-lookup"><span data-stu-id="5e163-107">The request context associated with the object.</span></span> <span data-ttu-id="5e163-108">Isso conecta o processo do suplemento ao processo do aplicativo host do Office.</span><span class="sxs-lookup"><span data-stu-id="5e163-108">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.StyleCollection.getCount
  summary: >-
    <span data-ttu-id="5e163-109">Obtém o número de estilos na coleção.</span><span class="sxs-lookup"><span data-stu-id="5e163-109">Gets the number of styles in the collection.</span></span>


    <span data-ttu-id="5e163-110">\[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="5e163-110">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: getCount()
  fullName: getCount()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getCount(): OfficeExtension.ClientResult<number>;'
    return:
      type:
      - OfficeExtension.ClientResult<number>
      description: ''
- uid: excel.Excel.StyleCollection.getItem
  summary: >-
    <span data-ttu-id="5e163-111">Obtém um estilo por nome.</span><span class="sxs-lookup"><span data-stu-id="5e163-111">Gets a style by name.</span></span>


    <span data-ttu-id="5e163-112">\[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="5e163-112">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getItem(name)
  fullName: getItem(name)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItem(name: string): Excel.Style;'
    return:
      type:
      - excel.Excel.Style
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"5e163-113\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"5e163-113\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    let styles = context.workbook.styles;\n\n    // Add a new style to the style collection.\n    // Styles is in the Home tab ribbon.\n    styles.add(\"Diagonal Orientation Style\");\n          \n    let newStyle = styles.getItem(\"Diagonal Orientation Style\");\n    \n    // The \"Diagonal Orientation Style\" properties.\n    newStyle.textOrientation = 38;\n    newStyle.autoIndent = true;\n    newStyle.includeProtection = true;\n    newStyle.shrinkToFit = true;\n    newStyle.locked = false;\n    \n    await context.sync();\n\n    console.log(\"Successfully added a new style with diagonal orientation to the Home tab ribbon.\");\n});\n```"
    parameters:
    - id: name
      description: <span data-ttu-id="5e163-114">Nome do estilo a ser recuperado.</span><span class="sxs-lookup"><span data-stu-id="5e163-114">Name of the style to be retrieved.</span></span>
      type:
      - string
- uid: excel.Excel.StyleCollection.getItemAt
  summary: >-
    <span data-ttu-id="5e163-115">Obtém um estilo com base em sua posição na coleção.</span><span class="sxs-lookup"><span data-stu-id="5e163-115">Gets a style based on its position in the collection.</span></span>


    <span data-ttu-id="5e163-116">\[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="5e163-116">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: getItemAt(index)
  fullName: getItemAt(index)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItemAt(index: number): Excel.Style;'
    return:
      type:
      - excel.Excel.Style
      description: ''
    parameters:
    - id: index
      description: <span data-ttu-id="5e163-117">Valor de índice do objeto Style a ser recuperado.</span><span class="sxs-lookup"><span data-stu-id="5e163-117">Index value of the style object to be retrieved.</span></span> <span data-ttu-id="5e163-118">Indexado com zero.</span><span class="sxs-lookup"><span data-stu-id="5e163-118">Zero-indexed.</span></span>
      type:
      - number
- uid: excel.Excel.StyleCollection.items
  summary: <span data-ttu-id="5e163-119">Obtém os itens filhos carregados nesta coleção.</span><span class="sxs-lookup"><span data-stu-id="5e163-119">Gets the loaded child items in this collection.</span></span>
  name: items
  fullName: items
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly items: Excel.Style[];'
    return:
      type:
      - Excel.Style[]
- uid: excel.Excel.StyleCollection.load
  summary: <span data-ttu-id="5e163-120">Enfileira um comando para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="5e163-120">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="5e163-121">Você deve chamar "context. Sync ()" antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="5e163-121">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="5e163-122">Além dessa assinatura, este método tem as seguintes assinaturas:</span><span class="sxs-lookup"><span data-stu-id="5e163-122">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="5e163-123">`load(option?: string | string[]): Excel.StyleCollection`-Where Option é uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="5e163-123">`load(option?: string | string[]): Excel.StyleCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="5e163-124">`load(option?: { select?: string; expand?: string; }): Excel.StyleCollection`-Onde Option. Select é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades a serem carregadas, e Options. Expand é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades de navegação a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="5e163-124">`load(option?: { select?: string; expand?: string; }): Excel.StyleCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="5e163-125">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.StyleCollection`– Disponível somente nos tipos de coleção.</span><span class="sxs-lookup"><span data-stu-id="5e163-125">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.StyleCollection` - Only available on collection types.</span></span> <span data-ttu-id="5e163-126">É semelhante à assinatura anterior.</span><span class="sxs-lookup"><span data-stu-id="5e163-126">It is similar to the preceding signature.</span></span> <span data-ttu-id="5e163-127">Option. Top especifica o número máximo de itens de coleta que podem ser incluídos no resultado.</span><span class="sxs-lookup"><span data-stu-id="5e163-127">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="5e163-128">Option. Skip especifica o número de itens que devem ser ignorados e não incluídos no resultado.</span><span class="sxs-lookup"><span data-stu-id="5e163-128">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="5e163-129">Se Option. Top for especificado, o conjunto de resultados será iniciado depois de ignorar o número de itens especificado.</span><span class="sxs-lookup"><span data-stu-id="5e163-129">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.StyleCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.StyleCollection;'
    return:
      type:
      - excel.Excel.StyleCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - Excel.Interfaces.StyleCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
- uid: excel.Excel.StyleCollection.load_1
  summary: <span data-ttu-id="5e163-130">Enfileira um comando para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="5e163-130">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="5e163-131">Você deve chamar `context.sync()` antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="5e163-131">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.StyleCollection;'
    return:
      type:
      - excel.Excel.StyleCollection
      description: ''
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="5e163-132">Uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="5e163-132">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.StyleCollection.load_2
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: OfficeExtension.LoadOption): Excel.StyleCollection;'
    return:
      type:
      - excel.Excel.StyleCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - office.OfficeExtension.LoadOption
- uid: excel.Excel.StyleCollection.toJSON
  summary: <span data-ttu-id="5e163-133">Substitui o método `toJSON()` JavaScript para fornecer uma saída mais útil quando um objeto API é passado para `JSON.stringify()` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="5e163-133">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="5e163-134">(`JSON.stringify`<!-- -->, por sua vez, chama `toJSON` o método do objeto que é passado para ele). Enquanto o objeto `Excel.StyleCollection` original é um objeto API, o `toJSON` método retorna um objeto JavaScript simples (digitado `Excel.Interfaces.StyleCollectionData` <!-- -->como) que contém uma matriz "Items" com cópias superficiais de qualquer propriedade carregada dos itens da coleção.</span><span class="sxs-lookup"><span data-stu-id="5e163-134">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.StyleCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.StyleCollectionData`<!-- -->) that contains an "items" array with shallow copies of any loaded properties from the collection's items.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.StyleCollectionData;'
    return:
      type:
      - excel.Excel.Interfaces.StyleCollectionData
      description: ''
