### YamlMime:UniversalReference
ms.openlocfilehash: 1cb4e5b876fffc200b265c0b25c79ea7e35f67e2
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: pt-BR
ms.lasthandoff: 02/20/2019
ms.locfileid: "30093697"
items:
- uid: excel.Excel.PivotTable
  summary: >-
    <span data-ttu-id="b3448-101">Representa uma Tabela Dinâmica do Excel.</span><span class="sxs-lookup"><span data-stu-id="b3448-101">Represents an Excel PivotTable.</span></span>


    <span data-ttu-id="b3448-102">\[[Conjunto de APIs: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b3448-102">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.PivotTable
  fullName: Excel.PivotTable
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.PivotTable.columnHierarchies
  - excel.Excel.PivotTable.context
  - excel.Excel.PivotTable.dataHierarchies
  - excel.Excel.PivotTable.delete
  - excel.Excel.PivotTable.enableDataValueEditing
  - excel.Excel.PivotTable.filterHierarchies
  - excel.Excel.PivotTable.hierarchies
  - excel.Excel.PivotTable.id
  - excel.Excel.PivotTable.layout
  - excel.Excel.PivotTable.load
  - excel.Excel.PivotTable.load_1
  - excel.Excel.PivotTable.load_2
  - excel.Excel.PivotTable.name
  - excel.Excel.PivotTable.refresh
  - excel.Excel.PivotTable.rowHierarchies
  - excel.Excel.PivotTable.set
  - excel.Excel.PivotTable.set_1
  - excel.Excel.PivotTable.toJSON
  - excel.Excel.PivotTable.useCustomSortLists
  - excel.Excel.PivotTable.worksheet
- uid: excel.Excel.PivotTable.columnHierarchies
  summary: >-
    <span data-ttu-id="b3448-103">As hierarquias de pivô da coluna da Tabela Dinâmica.</span><span class="sxs-lookup"><span data-stu-id="b3448-103">The Column Pivot Hierarchies of the PivotTable.</span></span>


    <span data-ttu-id="b3448-104">\[[Conjunto de APIs: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b3448-104">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: columnHierarchies
  fullName: columnHierarchies
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly columnHierarchies: Excel.RowColumnPivotHierarchyCollection;'
    return:
      type:
      - excel.Excel.RowColumnPivotHierarchyCollection
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"b3448-105\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3448-105\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const pivotTable = context.workbook.worksheets.getActiveWorksheet().pivotTables.getItem(\"Farm Sales\");       \n\n    // check if the PivotTable already has a column\n    const column = pivotTable.columnHierarchies.getItemOrNullObject(\"Farm\");\n    column.load(\"id\");\n    await context.sync();\n\n    if (column.isNullObject) {\n        // ading the farm column to the column hierarchy automatically removes it from the row hierarchy\n        pivotTable.columnHierarchies.add(pivotTable.hierarchies.getItem(\"Farm\"));\n    } else {\n        pivotTable.columnHierarchies.remove(column);\n    }\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.PivotTable.context
  summary: <span data-ttu-id="b3448-106">O contexto de solicitação associado ao objeto.</span><span class="sxs-lookup"><span data-stu-id="b3448-106">The request context associated with the object.</span></span> <span data-ttu-id="b3448-107">Isso conecta o processo do suplemento ao processo do aplicativo host do Office.</span><span class="sxs-lookup"><span data-stu-id="b3448-107">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.PivotTable.dataHierarchies
  summary: >-
    <span data-ttu-id="b3448-108">As hierarquias dinâmicas de dados da Tabela Dinâmica.</span><span class="sxs-lookup"><span data-stu-id="b3448-108">The Data Pivot Hierarchies of the PivotTable.</span></span>


    <span data-ttu-id="b3448-109">\[[Conjunto de APIs: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b3448-109">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: dataHierarchies
  fullName: dataHierarchies
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly dataHierarchies: Excel.DataPivotHierarchyCollection;'
    return:
      type:
      - excel.Excel.DataPivotHierarchyCollection
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"b3448-110\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3448-110\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const pivotTable = context.workbook.worksheets.getActiveWorksheet().pivotTables.getItem(\"Farm Sales\");\n    pivotTable.dataHierarchies.add(pivotTable.hierarchies.getItem(\"Crates Sold at Farm\"));\n    pivotTable.dataHierarchies.add(pivotTable.hierarchies.getItem(\"Crates Sold Wholesale\"));\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.PivotTable.delete
  summary: >-
    <span data-ttu-id="b3448-111">Exclui a Tabela Dinâmica.</span><span class="sxs-lookup"><span data-stu-id="b3448-111">Deletes the PivotTable.</span></span>


    <span data-ttu-id="b3448-112">\[[Conjunto de APIs: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b3448-112">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: delete()
  fullName: delete()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'delete(): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"b3448-113\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3448-113\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    context.workbook.worksheets.getItem(\"Pivot\").pivotTables.getItem(\"Farm Sales\").delete();\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.PivotTable.enableDataValueEditing
  summary: >-
    <span data-ttu-id="b3448-114">True se a tabela dinâmica deve usar listas personalizadas ao classificar.</span><span class="sxs-lookup"><span data-stu-id="b3448-114">True if the PivotTable should use custom lists when sorting.</span></span>


    <span data-ttu-id="b3448-115">\[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b3448-115">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: enableDataValueEditing
  fullName: enableDataValueEditing
  langs:
  - typeScript
  type: property
  syntax:
    content: 'enableDataValueEditing: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.PivotTable.filterHierarchies
  summary: >-
    <span data-ttu-id="b3448-116">As hierarquias de pivô do filtro da Tabela Dinâmica.</span><span class="sxs-lookup"><span data-stu-id="b3448-116">The Filter Pivot Hierarchies of the PivotTable.</span></span>


    <span data-ttu-id="b3448-117">\[[Conjunto de APIs: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b3448-117">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: filterHierarchies
  fullName: filterHierarchies
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly filterHierarchies: Excel.FilterPivotHierarchyCollection;'
    return:
      type:
      - excel.Excel.FilterPivotHierarchyCollection
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"b3448-118\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3448-118\">Examples</span></span>\n\n```typescript\nasync function filter(functionType: Excel.AggregationFunction) {\n    await Excel.run(async (context) => {\n        const pivotTable = context.workbook.worksheets.getActiveWorksheet().pivotTables.getItem(\"Farm Sales\");\n        const filters = pivotTable.filterHierarchies;\n        const filter = filters.getItemOrNullObject(\"Classification\");\n        filter.load();\n        await context.sync();\n\n        // add the Classification hierarchy to the filter, if it's not already there\n        if (filter.isNullObject) {\n            filters.add(pivotTable.hierarchies.getItem(\"Classification\"));\n            await context.sync();\n        }\n    });\n}\n```"
- uid: excel.Excel.PivotTable.hierarchies
  summary: >-
    <span data-ttu-id="b3448-119">Hierarquias pivô da Tabela Dinâmica.</span><span class="sxs-lookup"><span data-stu-id="b3448-119">The Pivot Hierarchies of the PivotTable.</span></span>


    <span data-ttu-id="b3448-120">\[[Conjunto de APIs: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b3448-120">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: hierarchies
  fullName: hierarchies
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly hierarchies: Excel.PivotHierarchyCollection;'
    return:
      type:
      - excel.Excel.PivotHierarchyCollection
- uid: excel.Excel.PivotTable.id
  summary: >-
    <span data-ttu-id="b3448-p102">Id da Tabela Dinâmica. Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="b3448-p102">Id of the PivotTable. Read-only.</span></span>


    <span data-ttu-id="b3448-123">\[[Conjunto de APIs: ExcelApi 1,5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b3448-123">\[ [API set: ExcelApi 1.5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: id
  fullName: id
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly id: string;'
    return:
      type:
      - string
- uid: excel.Excel.PivotTable.layout
  summary: >-
    <span data-ttu-id="b3448-124">O PivotLayout descreve o layout e estrutura visual da Tabela Dinâmica.</span><span class="sxs-lookup"><span data-stu-id="b3448-124">The PivotLayout describing the layout and visual structure of the PivotTable.</span></span>


    <span data-ttu-id="b3448-125">\[[Conjunto de APIs: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b3448-125">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: layout
  fullName: layout
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly layout: Excel.PivotLayout;'
    return:
      type:
      - excel.Excel.PivotLayout
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"b3448-126\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"b3448-126\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const pivotTable = context.workbook.worksheets.getActiveWorksheet().pivotTables.getItem(\"Farm Sales\");\n    pivotTable.layout.load(\"layoutType\");\n    await context.sync();\n\n    // cycle between the three layout types\n    if (pivotTable.layout.layoutType === \"Compact\") {\n        pivotTable.layout.layoutType = \"Outline\";\n    } else if (pivotTable.layout.layoutType === \"Outline\") {\n        pivotTable.layout.layoutType = \"Tabular\";\n    } else {\n        pivotTable.layout.layoutType = \"Compact\";\n    }\n    await context.sync();\n    console.log(\"Pivot layout is now \" + pivotTable.layout.layoutType);\n});\n```"
- uid: excel.Excel.PivotTable.load
  summary: <span data-ttu-id="b3448-127">Enfileira um comando para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="b3448-127">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="b3448-128">Você deve chamar "context. Sync ()" antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="b3448-128">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="b3448-129">Além dessa assinatura, este método tem as seguintes assinaturas:</span><span class="sxs-lookup"><span data-stu-id="b3448-129">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="b3448-130">`load(option?: string | string[]): Excel.PivotTable`-Where Option é uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="b3448-130">`load(option?: string | string[]): Excel.PivotTable` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="b3448-131">`load(option?: { select?: string; expand?: string; }): Excel.PivotTable`-Onde Option. Select é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades a serem carregadas, e Options. Expand é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades de navegação a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="b3448-131">`load(option?: { select?: string; expand?: string; }): Excel.PivotTable` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="b3448-132">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.PivotTable`– Disponível somente nos tipos de coleção.</span><span class="sxs-lookup"><span data-stu-id="b3448-132">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.PivotTable` - Only available on collection types.</span></span> <span data-ttu-id="b3448-133">É semelhante à assinatura anterior.</span><span class="sxs-lookup"><span data-stu-id="b3448-133">It is similar to the preceding signature.</span></span> <span data-ttu-id="b3448-134">Option. Top especifica o número máximo de itens de coleta que podem ser incluídos no resultado.</span><span class="sxs-lookup"><span data-stu-id="b3448-134">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="b3448-135">Option. Skip especifica o número de itens que devem ser ignorados e não incluídos no resultado.</span><span class="sxs-lookup"><span data-stu-id="b3448-135">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="b3448-136">Se Option. Top for especificado, o conjunto de resultados será iniciado depois de ignorar o número de itens especificado.</span><span class="sxs-lookup"><span data-stu-id="b3448-136">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.PivotTableLoadOptions): Excel.PivotTable;'
    return:
      type:
      - excel.Excel.PivotTable
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - excel.Excel.Interfaces.PivotTableLoadOptions
- uid: excel.Excel.PivotTable.load_1
  summary: <span data-ttu-id="b3448-137">Enfileira um comando para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="b3448-137">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="b3448-138">Você deve chamar `context.sync()` antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="b3448-138">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.PivotTable;'
    return:
      type:
      - excel.Excel.PivotTable
      description: ''
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="b3448-139">Uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="b3448-139">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.PivotTable.load_2
  summary: <span data-ttu-id="b3448-140">Enfileira um comando para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="b3448-140">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="b3448-141">Você deve chamar `context.sync()` antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="b3448-141">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.PivotTable;'
    return:
      type:
      - excel.Excel.PivotTable
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: <span data-ttu-id="b3448-142">Onde propertyNamesAndPaths. Select é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades a serem carregadas e propertyNamesAndPaths. Expand é uma sequência de caracteres delimitada por vírgula que especifica as propriedades de navegação a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="b3448-142">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>
      type:
      - '{ select?: string; expand?: string; }'
- uid: excel.Excel.PivotTable.name
  summary: >-
    <span data-ttu-id="b3448-143">Nome da Tabela Dinâmica.</span><span class="sxs-lookup"><span data-stu-id="b3448-143">Name of the PivotTable.</span></span>


    <span data-ttu-id="b3448-144">\[[Conjunto de APIs: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b3448-144">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: name
  fullName: name
  langs:
  - typeScript
  type: property
  syntax:
    content: 'name: string;'
    return:
      type:
      - string
- uid: excel.Excel.PivotTable.refresh
  summary: >-
    <span data-ttu-id="b3448-145">Atualiza a Tabela Dinâmica.</span><span class="sxs-lookup"><span data-stu-id="b3448-145">Refreshes the PivotTable.</span></span>


    <span data-ttu-id="b3448-146">\[[Conjunto de APIs: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b3448-146">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: refresh()
  fullName: refresh()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'refresh(): void;'
    return:
      type:
      - void
      description: ''
- uid: excel.Excel.PivotTable.rowHierarchies
  summary: >-
    <span data-ttu-id="b3448-147">As hierarquias de pivô de linha da Tabela Dinâmica.</span><span class="sxs-lookup"><span data-stu-id="b3448-147">The Row Pivot Hierarchies of the PivotTable.</span></span>


    <span data-ttu-id="b3448-148">\[[Conjunto de APIs: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b3448-148">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: rowHierarchies
  fullName: rowHierarchies
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly rowHierarchies: Excel.RowColumnPivotHierarchyCollection;'
    return:
      type:
      - excel.Excel.RowColumnPivotHierarchyCollection
- uid: excel.Excel.PivotTable.set
  summary: <span data-ttu-id="b3448-149">Define várias propriedades de um objeto ao mesmo tempo.</span><span class="sxs-lookup"><span data-stu-id="b3448-149">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="b3448-150">Você pode passar um objeto simples com as propriedades apropriadas ou outro objeto API do mesmo tipo.</span><span class="sxs-lookup"><span data-stu-id="b3448-150">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>
  remarks: >-
    <span data-ttu-id="b3448-151">Este método tem a seguinte assinatura adicional:</span><span class="sxs-lookup"><span data-stu-id="b3448-151">This method has the following additional signature:</span></span>


    `set(properties: Excel.PivotTable): void`
  name: set(properties, options)
  fullName: set(properties, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Interfaces.PivotTableUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: <span data-ttu-id="b3448-152">Um objeto JavaScript com propriedades que são estruturadas isomorphically para as propriedades do objeto no qual o método é chamado.</span><span class="sxs-lookup"><span data-stu-id="b3448-152">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
      type:
      - Interfaces.PivotTableUpdateData
    - id: options
      description: <span data-ttu-id="b3448-153">Fornece uma opção para suprimir erros se o objeto Properties tentar definir qualquer propriedade somente leitura.</span><span class="sxs-lookup"><span data-stu-id="b3448-153">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
      type:
      - office.OfficeExtension.UpdateOptions
- uid: excel.Excel.PivotTable.set_1
  summary: <span data-ttu-id="b3448-154">Define várias propriedades no objeto ao mesmo tempo, com base em um objeto carregado existente.</span><span class="sxs-lookup"><span data-stu-id="b3448-154">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>
  name: set(properties)
  fullName: set(properties)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Excel.PivotTable): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: ''
      type:
      - excel.Excel.PivotTable
- uid: excel.Excel.PivotTable.toJSON
  summary: <span data-ttu-id="b3448-155">Substitui o método `toJSON()` JavaScript para fornecer uma saída mais útil quando um objeto API é passado para `JSON.stringify()` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="b3448-155">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="b3448-156">(`JSON.stringify`<!-- -->, por sua vez, chama `toJSON` o método do objeto que é passado para ele). Enquanto o objeto Excel. PivotTable original é um objeto API, `toJSON` o método retorna um objeto JavaScript simples (digitado como `Excel.Interfaces.PivotTableData` <!-- -->) que contém cópias superficiais de qualquer propriedade filho carregada do objeto original.</span><span class="sxs-lookup"><span data-stu-id="b3448-156">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.PivotTable object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.PivotTableData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.PivotTableData;'
    return:
      type:
      - excel.Excel.Interfaces.PivotTableData
      description: ''
- uid: excel.Excel.PivotTable.useCustomSortLists
  summary: >-
    <span data-ttu-id="b3448-157">True se a tabela dinâmica deve usar listas personalizadas ao classificar.</span><span class="sxs-lookup"><span data-stu-id="b3448-157">True if the PivotTable should use custom lists when sorting.</span></span>


    <span data-ttu-id="b3448-158">\[[Conjunto de APIs: EXCELAPI beta (apenas para visualização)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b3448-158">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: useCustomSortLists
  fullName: useCustomSortLists
  langs:
  - typeScript
  type: property
  syntax:
    content: 'useCustomSortLists: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.PivotTable.worksheet
  summary: >-
    <span data-ttu-id="b3448-159">A planilha que contém a tabela dinâmica atual.</span><span class="sxs-lookup"><span data-stu-id="b3448-159">The worksheet containing the current PivotTable.</span></span>


    <span data-ttu-id="b3448-160">\[[Conjunto de APIs: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b3448-160">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: worksheet
  fullName: worksheet
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly worksheet: Excel.Worksheet;'
    return:
      type:
      - excel.Excel.Worksheet
