### YamlMime:UniversalReference
ms.openlocfilehash: adf4c462ada93c84042e42702056d134dace9b3e
ms.sourcegitcommit: d356f1545c328d4b59ce814fcab8191e4231f1dc
ms.translationtype: MT
ms.contentlocale: pt-BR
ms.lasthandoff: 02/13/2019
ms.locfileid: "29974357"
items:
- uid: excel.Excel.ChartGridlines
  summary: >-
    <span data-ttu-id="5a2cb-101">Representa linhas de grade principais ou secundárias em um eixo do gráfico.</span><span class="sxs-lookup"><span data-stu-id="5a2cb-101">Represents major or minor gridlines on a chart axis.</span></span>


    <span data-ttu-id="5a2cb-102">\[[Conjunto de APIs: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="5a2cb-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.ChartGridlines
  fullName: Excel.ChartGridlines
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.ChartGridlines.context
  - excel.Excel.ChartGridlines.format
  - excel.Excel.ChartGridlines.load
  - excel.Excel.ChartGridlines.load_1
  - excel.Excel.ChartGridlines.load_2
  - excel.Excel.ChartGridlines.set
  - excel.Excel.ChartGridlines.set_1
  - excel.Excel.ChartGridlines.toJSON
  - excel.Excel.ChartGridlines.visible
- uid: excel.Excel.ChartGridlines.context
  summary: <span data-ttu-id="5a2cb-103">O contexto de solicitação associado ao objeto.</span><span class="sxs-lookup"><span data-stu-id="5a2cb-103">The request context associated with the object.</span></span> <span data-ttu-id="5a2cb-104">Esse procedimento fará processo do suplemento de processo do aplicativo host do Office.</span><span class="sxs-lookup"><span data-stu-id="5a2cb-104">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.ChartGridlines.format
  summary: >-
    <span data-ttu-id="5a2cb-p102">Representa a formatação de linhas de grade do gráfico. Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="5a2cb-p102">Represents the formatting of chart gridlines. Read-only.</span></span>


    <span data-ttu-id="5a2cb-107">\[[Conjunto de APIs: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="5a2cb-107">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: format
  fullName: format
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly format: Excel.ChartGridlinesFormat;'
    return:
      type:
      - excel.Excel.ChartGridlinesFormat
- uid: excel.Excel.ChartGridlines.load
  summary: <span data-ttu-id="5a2cb-108">Filas de backup de um comando para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="5a2cb-108">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="5a2cb-109">Você deve chamar "context.sync()" antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="5a2cb-109">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="5a2cb-110">Além dessa assinatura, esse método tem as seguintes assinaturas:</span><span class="sxs-lookup"><span data-stu-id="5a2cb-110">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="5a2cb-111">`load(option?: string | string[]): Excel.ChartGridlines`-Onde opção é uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades de carga.</span><span class="sxs-lookup"><span data-stu-id="5a2cb-111">`load(option?: string | string[]): Excel.ChartGridlines` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="5a2cb-112">`load(option?: { select?: string; expand?: string; }): Excel.ChartGridlines`-Onde option.select é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades para carregar e options.expand é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades de navegação para carregar.</span><span class="sxs-lookup"><span data-stu-id="5a2cb-112">`load(option?: { select?: string; expand?: string; }): Excel.ChartGridlines` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="5a2cb-113">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ChartGridlines`-Só está disponível em tipos de coleção.</span><span class="sxs-lookup"><span data-stu-id="5a2cb-113">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ChartGridlines` - Only available on collection types.</span></span> <span data-ttu-id="5a2cb-114">Ele é semelhante à assinatura anterior.</span><span class="sxs-lookup"><span data-stu-id="5a2cb-114">It is similar to the preceding signature.</span></span> <span data-ttu-id="5a2cb-115">Option.Top Especifica o número máximo de itens que podem ser incluídos no resultado da coleção.</span><span class="sxs-lookup"><span data-stu-id="5a2cb-115">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="5a2cb-116">Option.Skip Especifica o número de itens que devem ser ignorados e não são incluídos no resultado.</span><span class="sxs-lookup"><span data-stu-id="5a2cb-116">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="5a2cb-117">Se option.top for especificado, o conjunto de resultados será iniciado depois de ignorar o número de itens especificado.</span><span class="sxs-lookup"><span data-stu-id="5a2cb-117">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.ChartGridlinesLoadOptions): Excel.ChartGridlines;'
    return:
      type:
      - excel.Excel.ChartGridlines
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - excel.Excel.Interfaces.ChartGridlinesLoadOptions
- uid: excel.Excel.ChartGridlines.load_1
  summary: <span data-ttu-id="5a2cb-118">Filas de backup de um comando para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="5a2cb-118">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="5a2cb-119">Você deve chamar `context.sync()` antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="5a2cb-119">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.ChartGridlines;'
    return:
      type:
      - excel.Excel.ChartGridlines
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"5a2cb-120\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"5a2cb-120\">Examples</span></span>\n\n```javascript\n// Get the visible of Major Gridlines on value axis of Chart1\nExcel.run(function (ctx) { \n    var chart = ctx.workbook.worksheets.getItem(\"Sheet1\").charts.getItem(\"Chart1\");    \n    var majGridlines = chart.axes.valueaxis.majorGridlines;\n    majGridlines.load('visible');\n    return ctx.sync().then(function() {\n            console.log(majGridlines.visible);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\n// Set to show major gridlines on valueAxis of Chart1\nExcel.run(function (ctx) { \n    var chart = ctx.workbook.worksheets.getItem(\"Sheet1\").charts.getItem(\"Chart1\");    \n    chart.axes.valueAxis.majorGridlines.visible = true;\n    return ctx.sync().then(function() {\n            console.log(\"Axis Gridlines Added \");\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="5a2cb-121">Uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades de carga.</span><span class="sxs-lookup"><span data-stu-id="5a2cb-121">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.ChartGridlines.load_2
  summary: <span data-ttu-id="5a2cb-122">Filas de backup de um comando para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="5a2cb-122">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="5a2cb-123">Você deve chamar `context.sync()` antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="5a2cb-123">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.ChartGridlines;'
    return:
      type:
      - excel.Excel.ChartGridlines
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: <span data-ttu-id="5a2cb-124">Onde propertyNamesAndPaths.select é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades para carregar e propertyNamesAndPaths.expand é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades de navegação para carregar.</span><span class="sxs-lookup"><span data-stu-id="5a2cb-124">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>
      type:
      - '{ select?: string; expand?: string; }'
- uid: excel.Excel.ChartGridlines.set
  summary: <span data-ttu-id="5a2cb-125">Define várias propriedades de um objeto ao mesmo tempo.</span><span class="sxs-lookup"><span data-stu-id="5a2cb-125">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="5a2cb-126">Você pode passar um objeto sem formatação com as propriedades adequadas ou outro objeto API do mesmo tipo.</span><span class="sxs-lookup"><span data-stu-id="5a2cb-126">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>
  remarks: >-
    <span data-ttu-id="5a2cb-127">Esse método tem a seguinte assinatura adicional:</span><span class="sxs-lookup"><span data-stu-id="5a2cb-127">This method has the following additional signature:</span></span>


    `set(properties: Excel.ChartGridlines): void`
  name: set(properties, options)
  fullName: set(properties, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Interfaces.ChartGridlinesUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: <span data-ttu-id="5a2cb-128">Um objeto de JavaScript com propriedades que são estruturadas isomorphically às propriedades do objeto no qual o método é chamado.</span><span class="sxs-lookup"><span data-stu-id="5a2cb-128">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
      type:
      - Interfaces.ChartGridlinesUpdateData
    - id: options
      description: <span data-ttu-id="5a2cb-129">Fornece uma opção para suprimir erros se o objeto properties tenta definir todas as propriedades somente leitura.</span><span class="sxs-lookup"><span data-stu-id="5a2cb-129">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
      type:
      - office.OfficeExtension.UpdateOptions
- uid: excel.Excel.ChartGridlines.set_1
  summary: <span data-ttu-id="5a2cb-130">Define várias propriedades em um objeto ao mesmo tempo, com base em um objeto carregado existente.</span><span class="sxs-lookup"><span data-stu-id="5a2cb-130">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>
  name: set(properties)
  fullName: set(properties)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Excel.ChartGridlines): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: ''
      type:
      - excel.Excel.ChartGridlines
- uid: excel.Excel.ChartGridlines.toJSON
  summary: <span data-ttu-id="5a2cb-131">Substitui o JavaScript `toJSON()` método para fornecer a saída mais úteis quando um objeto API é passado para `JSON.stringify()` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="5a2cb-131">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="5a2cb-132">(`JSON.stringify`<!-- -->, em seguida, chama o `toJSON` método do objeto que é passado para ele.) Enquanto o objeto Excel.ChartGridlines original é um objeto de API, o `toJSON` método retorna um objeto de JavaScript simples (digitado como `Excel.Interfaces.ChartGridlinesData` <!-- -->) que contém superficiais cópias de todas as propriedades do objeto original filho carregado.</span><span class="sxs-lookup"><span data-stu-id="5a2cb-132">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.ChartGridlines object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ChartGridlinesData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.ChartGridlinesData;'
    return:
      type:
      - excel.Excel.Interfaces.ChartGridlinesData
      description: ''
- uid: excel.Excel.ChartGridlines.visible
  summary: >-
    <span data-ttu-id="5a2cb-133">Valor booliano que determina se as linhas de grade do eixo ficam visíveis ou não.</span><span class="sxs-lookup"><span data-stu-id="5a2cb-133">Boolean value representing if the axis gridlines are visible or not.</span></span>


    <span data-ttu-id="5a2cb-134">\[[Conjunto de APIs: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="5a2cb-134">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: visible
  fullName: visible
  langs:
  - typeScript
  type: property
  syntax:
    content: 'visible: boolean;'
    return:
      type:
      - boolean
