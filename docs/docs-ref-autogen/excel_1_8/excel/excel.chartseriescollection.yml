### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.ChartSeriesCollection:class'
    summary: |-
      <span data-ttu-id="8b696-101">Representa uma coleção de série do gráfico.</span><span class="sxs-lookup"><span data-stu-id="8b696-101">Represents a collection of chart series.</span></span>

      <span data-ttu-id="8b696-102">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8b696-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.ChartSeriesCollection
    fullName: Excel.ChartSeriesCollection
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.ChartSeriesCollection#add:member(1)'
      - 'excel!Excel.ChartSeriesCollection#context:member'
      - 'excel!Excel.ChartSeriesCollection#count:member'
      - 'excel!Excel.ChartSeriesCollection#getCount:member(1)'
      - 'excel!Excel.ChartSeriesCollection#getItemAt:member(1)'
      - 'excel!Excel.ChartSeriesCollection#items:member'
      - 'excel!Excel.ChartSeriesCollection#load:member(1)'
      - 'excel!Excel.ChartSeriesCollection#load:member(2)'
      - 'excel!Excel.ChartSeriesCollection#load:member(3)'
      - 'excel!Excel.ChartSeriesCollection#toJSON:member(1)'
  - uid: 'excel!Excel.ChartSeriesCollection#add:member(1)'
    summary: |-
      <span data-ttu-id="8b696-103">Adiciona uma nova série para o conjunto.</span><span class="sxs-lookup"><span data-stu-id="8b696-103">Add a new series to the collection.</span></span> <span data-ttu-id="8b696-104">A nova série adicionada não fica visível até que Set Values/x Axis Values/tamanho da bolha (dependendo do tipo de gráfico).</span><span class="sxs-lookup"><span data-stu-id="8b696-104">The new added series is not visible until set values/x axis values/bubble sizes for it (depending on chart type).</span></span>

      <span data-ttu-id="8b696-105">\[[Conjunto de APIs: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8b696-105">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'add(name, index)'
    fullName: 'add(name, index)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(name?: string, index?: number): Excel.ChartSeries;'
      return:
        type:
          - 'excel!Excel.ChartSeries:class'
        description: ''
      parameters:
        - id: name
          description: <span data-ttu-id="8b696-106">Opcional.</span><span class="sxs-lookup"><span data-stu-id="8b696-106">Optional.</span></span> <span data-ttu-id="8b696-107">Nome da série.</span><span class="sxs-lookup"><span data-stu-id="8b696-107">Name of the series.</span></span>
          type:
            - string
        - id: index
          description: <span data-ttu-id="8b696-108">Opcional.</span><span class="sxs-lookup"><span data-stu-id="8b696-108">Optional.</span></span> <span data-ttu-id="8b696-109">Valor de índice da série a ser adicionada.</span><span class="sxs-lookup"><span data-stu-id="8b696-109">Index value of the series to be added.</span></span> <span data-ttu-id="8b696-110">Indexados com zero.</span><span class="sxs-lookup"><span data-stu-id="8b696-110">Zero-indexed.</span></span>
          type:
            - number
  - uid: 'excel!Excel.ChartSeriesCollection#context:member'
    summary: <span data-ttu-id="8b696-111">O contexto de solicitação associado ao objeto.</span><span class="sxs-lookup"><span data-stu-id="8b696-111">The request context associated with the object.</span></span> <span data-ttu-id="8b696-112">Isso conecta o processo do suplemento ao processo do aplicativo host do Office.</span><span class="sxs-lookup"><span data-stu-id="8b696-112">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.ChartSeriesCollection#count:member'
    summary: |-
      <span data-ttu-id="8b696-113">Retorna o número de série da coleção.</span><span class="sxs-lookup"><span data-stu-id="8b696-113">Returns the number of series in the collection.</span></span> <span data-ttu-id="8b696-114">Somente leitura.</span><span class="sxs-lookup"><span data-stu-id="8b696-114">Read-only.</span></span>

      <span data-ttu-id="8b696-115">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8b696-115">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: count
    fullName: count
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly count: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.ChartSeriesCollection#getCount:member(1)'
    summary: |-
      <span data-ttu-id="8b696-116">Retorna o número de série da coleção.</span><span class="sxs-lookup"><span data-stu-id="8b696-116">Returns the number of series in the collection.</span></span>

      <span data-ttu-id="8b696-117">\[[Conjunto de APIs: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8b696-117">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - 'excel!Excel.ChartSeriesCollection#getCount~0:complex'
        description: ''
  - uid: 'excel!Excel.ChartSeriesCollection#getItemAt:member(1)'
    summary: |-
      <span data-ttu-id="8b696-118">Recupera uma série com base na respectiva posição na coleção.</span><span class="sxs-lookup"><span data-stu-id="8b696-118">Retrieves a series based on its position in the collection.</span></span>

      <span data-ttu-id="8b696-119">\[[Conjunto de APIs: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8b696-119">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItemAt(index)
    fullName: getItemAt(index)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemAt(index: number): Excel.ChartSeries;'
      return:
        type:
          - 'excel!Excel.ChartSeries:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="8b696-120">Exemplos</span><span class="sxs-lookup"><span data-stu-id="8b696-120">Examples</span></span>

          ```javascript
          // Get the name of the first series in the series collection.
          Excel.run(function (ctx) { 
              var seriesCollection = ctx.workbook.worksheets.getItem("Sheet1").charts.getItem("Chart1").series;
              seriesCollection.load('items');
              return ctx.sync().then(function() {
                  console.log(seriesCollection.items[0].name);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: index
          description: <span data-ttu-id="8b696-121">Valor de índice do objeto a ser recuperado.</span><span class="sxs-lookup"><span data-stu-id="8b696-121">Index value of the object to be retrieved.</span></span> <span data-ttu-id="8b696-122">Indexados com zero.</span><span class="sxs-lookup"><span data-stu-id="8b696-122">Zero-indexed.</span></span>
          type:
            - number
  - uid: 'excel!Excel.ChartSeriesCollection#items:member'
    summary: <span data-ttu-id="8b696-123">Obtém os itens filhos carregados nesta coleção.</span><span class="sxs-lookup"><span data-stu-id="8b696-123">Gets the loaded child items in this collection.</span></span>
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.ChartSeries[];'
      return:
        type:
          - 'excel!Excel.ChartSeriesCollection#items~0:complex'
  - uid: 'excel!Excel.ChartSeriesCollection#load:member(1)'
    summary: <span data-ttu-id="8b696-124">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="8b696-124">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="8b696-125">Você deve chamar `context.sync()` antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="8b696-125">You must call `context.sync()` before reading the properties.</span></span>
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.ChartSeriesCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.ChartSeriesCollection;'
      return:
        type:
          - 'excel!Excel.ChartSeriesCollection:class'
        description: ''
      parameters:
        - id: options
          description: <span data-ttu-id="8b696-126">Fornece opções para as propriedades do objeto a ser carregado.</span><span class="sxs-lookup"><span data-stu-id="8b696-126">Provides options for which properties of the object to load.</span></span>
          type:
            - 'excel!Excel.ChartSeriesCollection#load~0:complex'
  - uid: 'excel!Excel.ChartSeriesCollection#load:member(2)'
    summary: <span data-ttu-id="8b696-127">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="8b696-127">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="8b696-128">Você deve chamar `context.sync()` antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="8b696-128">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.ChartSeriesCollection;'
      return:
        type:
          - 'excel!Excel.ChartSeriesCollection:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="8b696-129">Exemplos</span><span class="sxs-lookup"><span data-stu-id="8b696-129">Examples</span></span>

          ```javascript
          // Getting the names of series in the series collection.
          Excel.run(function (ctx) { 
              var seriesCollection = ctx.workbook.worksheets.getItem("Sheet1").charts.getItem("Chart1").series;
              seriesCollection.load('items');
              return ctx.sync().then(function() {
                  for (var i = 0; i < seriesCollection.items.length; i++)
                  {
                      console.log(seriesCollection.items[i].name);
                  }
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          // Get the number of chart series in collection.
          Excel.run(function (ctx) { 
              var seriesCollection = ctx.workbook.worksheets.getItem("Sheet1").charts.getItem("Chart1").series;
              seriesCollection.load('count');
              return ctx.sync().then(function() {
                  console.log("series: Count= " + seriesCollection.count);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="8b696-130">Uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="8b696-130">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.ChartSeriesCollection#load:member(3)'
    summary: <span data-ttu-id="8b696-131">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="8b696-131">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="8b696-132">Você deve chamar `context.sync()` antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="8b696-132">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: OfficeExtension.LoadOption): Excel.ChartSeriesCollection;'
      return:
        type:
          - 'excel!Excel.ChartSeriesCollection:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="8b696-133">`propertyNamesAndPaths.select`é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades a serem `propertyNamesAndPaths.expand` carregadas e é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades de navegação a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="8b696-133">`propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - 'excel!OfficeExtension.LoadOption:interface'
  - uid: 'excel!Excel.ChartSeriesCollection#toJSON:member(1)'
    summary: '<span data-ttu-id="8b696-134">Substitui o método `toJSON()` JavaScript para fornecer uma saída mais útil quando um objeto API é passado para`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="8b696-134">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="8b696-135">.</span><span class="sxs-lookup"><span data-stu-id="8b696-135"></span></span> <span data-ttu-id="8b696-136">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="8b696-136"></span></span><!-- --><span data-ttu-id="8b696-137">, por sua vez, chama `toJSON` o método do objeto que é passado para ele.) Enquanto o objeto `Excel.ChartSeriesCollection` original é um objeto API, o `toJSON` método retorna um objeto JavaScript simples (digitado como`Excel.Interfaces.ChartSeriesCollectionData`</span><span class="sxs-lookup"><span data-stu-id="8b696-137">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.ChartSeriesCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ChartSeriesCollectionData`</span></span><!-- --><span data-ttu-id="8b696-138">) que contém uma matriz de "itens" com cópias superficiais de qualquer propriedade carregada dos itens da coleção.</span><span class="sxs-lookup"><span data-stu-id="8b696-138">) that contains an "items" array with shallow copies of any loaded properties from the collection''s items.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.ChartSeriesCollectionData;'
      return:
        type:
          - 'excel!Excel.Interfaces.ChartSeriesCollectionData:interface'
        description: ''
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.ChartSeries:class'
    name: Excel.ChartSeries
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.ChartSeriesCollection#getCount~0:complex'
    name: OfficeExtension.ClientResult<number>
    fullName: OfficeExtension.ClientResult<number>
    spec.typeScript:
      - uid: 'excel!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <number>
        fullName: <number>
  - uid: 'excel!Excel.ChartSeriesCollection#items~0:complex'
    name: 'Excel.ChartSeries[]'
    fullName: 'Excel.ChartSeries[]'
    spec.typeScript:
      - uid: 'excel!Excel.ChartSeries:class'
        name: Excel.ChartSeries
        fullName: Excel.ChartSeries
      - name: '[]'
        fullName: '[]'
  - uid: 'excel!Excel.ChartSeriesCollection:class'
    name: Excel.ChartSeriesCollection
  - uid: 'excel!Excel.ChartSeriesCollection#load~0:complex'
    name: Excel.Interfaces.ChartSeriesCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    fullName: Excel.Interfaces.ChartSeriesCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    spec.typeScript:
      - uid: 'excel!Excel.Interfaces.ChartSeriesCollectionLoadOptions:interface'
        name: Excel.Interfaces.ChartSeriesCollectionLoadOptions
        fullName: Excel.Interfaces.ChartSeriesCollectionLoadOptions
      - name: ' & '
        fullName: ' & '
      - uid: 'excel!Excel.Interfaces.CollectionLoadOptions:interface'
        name: Excel.Interfaces.CollectionLoadOptions
        fullName: Excel.Interfaces.CollectionLoadOptions
  - uid: 'excel!OfficeExtension.LoadOption:interface'
    name: OfficeExtension.LoadOption
  - uid: 'excel!Excel.Interfaces.ChartSeriesCollectionData:interface'
    name: Excel.Interfaces.ChartSeriesCollectionData