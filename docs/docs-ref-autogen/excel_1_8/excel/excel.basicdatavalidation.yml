### YamlMime:UniversalReference
items:
  - uid: excel.Excel.BasicDataValidation
    summary: |-
      Representa os critérios de validação de dados de tipo básicos.

      \[[Conjunto de APIs: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: Excel.BasicDataValidation
    fullName: Excel.BasicDataValidation
    langs:
      - typeScript
    type: interface
    package: excel
    children:
      - excel.Excel.BasicDataValidation.formula1
      - excel.Excel.BasicDataValidation.formula2
      - excel.Excel.BasicDataValidation.operator
  - uid: excel.Excel.BasicDataValidation.formula1
    summary: |-
      Especifica o operando direito quando a Propriedade Operator é definida como um operador binário como GreaterThan (o operando esquerdo é o valor que o usuário tenta inserir na célula). Com os operadores ternários between e não between, especifica o operando de limite inferior. Por exemplo, a definição de Formula1 como 10 e o operador como GreaterThan significa que os dados válidos para o intervalo devem ser maiores que 10. Ao definir o valor, ele pode ser passado como um número, um objeto Range ou uma fórmula de cadeia de caracteres (onde a cadeia de caracteres é um número em formato, uma referência de célula como "= a1" ou uma fórmula como "= MIN (a1, B1)"). Ao recuperar o valor, ele sempre será retornado como uma fórmula de cadeia de caracteres, por exemplo: "= 10", "= a1", "= SUM (a1: B5)", etc.

      \[[Conjunto de APIs: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: formula1
    fullName: formula1
    langs:
      - typeScript
    type: property
    syntax:
      content: 'formula1: string | number | Range;'
      return:
        type:
          - string | number | Range
  - uid: excel.Excel.BasicDataValidation.formula2
    summary: |-
      Com os operadores ternários between e não between, especifica o operando de limite superior. Não é usado com os operadores binários, como GreaterThan. Ao definir o valor, ele pode ser passado como um número, um objeto Range ou uma fórmula de cadeia de caracteres (onde a cadeia de caracteres é um número em formato, uma referência de célula como "= a1" ou uma fórmula como "= MIN (a1, B1)"). Ao recuperar o valor, ele sempre será retornado como uma fórmula de cadeia de caracteres, por exemplo: "= 10", "= a1", "= SUM (a1: B5)", etc.

      \[[Conjunto de APIs: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: formula2
    fullName: formula2
    langs:
      - typeScript
    type: property
    syntax:
      content: 'formula2?: string | number | Range;'
      return:
        type:
          - string | number | Range
  - uid: excel.Excel.BasicDataValidation.operator
    summary: |-
      O operador a ser usado para validar os dados.

      \[[Conjunto de APIs: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: operator
    fullName: operator
    langs:
      - typeScript
    type: property
    syntax:
      content: 'operator: Excel.DataValidationOperator | "Between" | "NotBetween" | "EqualTo" | "NotEqualTo" | "GreaterThan" | "LessThan" | "GreaterThanOrEqualTo" | "LessThanOrEqualTo";'
      return:
        type:
          - Excel.DataValidationOperator | "Between" | "NotBetween" | "EqualTo" | "NotEqualTo" | "GreaterThan" | "LessThan" | "GreaterThanOrEqualTo" | "LessThanOrEqualTo"