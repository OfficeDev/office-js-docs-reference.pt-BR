### YamlMime:UniversalReference
items:
  - uid: visio.Visio.Application
    summary: |-
      <span data-ttu-id="b3a6f-101">Representa o Aplicativo.</span><span class="sxs-lookup"><span data-stu-id="b3a6f-101">Represents the Application.</span></span>

      <span data-ttu-id="b3a6f-102">\[[Conjunto de APIs: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="b3a6f-102">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: Visio.Application
    fullName: Visio.Application
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: visio
    children:
      - visio.Visio.Application.context
      - visio.Visio.Application.load
      - visio.Visio.Application.load_1
      - visio.Visio.Application.load_2
      - visio.Visio.Application.set
      - visio.Visio.Application.set_1
      - visio.Visio.Application.showBorders
      - visio.Visio.Application.showToolbar
      - visio.Visio.Application.showToolbar_1
      - visio.Visio.Application.showToolbars
      - visio.Visio.Application.toJSON
  - uid: visio.Visio.Application.context
    summary: <span data-ttu-id="b3a6f-103">O contexto de solicitação associado ao objeto.</span><span class="sxs-lookup"><span data-stu-id="b3a6f-103">The request context associated with the object.</span></span> <span data-ttu-id="b3a6f-104">Isso conecta o processo do suplemento ao processo do aplicativo host do Office.</span><span class="sxs-lookup"><span data-stu-id="b3a6f-104">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: visio.Visio.Application.load
    summary: <span data-ttu-id="b3a6f-105">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="b3a6f-105">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="b3a6f-106">Você deve chamar "context.sync()" antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="b3a6f-106">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="b3a6f-107">Além dessa assinatura, este método tem as seguintes assinaturas:</span><span class="sxs-lookup"><span data-stu-id="b3a6f-107">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="b3a6f-108">`load(option?: string | string[]): Visio.Application`-Where Option é uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="b3a6f-108">`load(option?: string | string[]): Visio.Application` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="b3a6f-109">`load(option?: { select?: string; expand?: string; }): Visio.Application`-Onde Option. Select é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades a serem carregadas, e Options. Expand é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades de navegação a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="b3a6f-109">`load(option?: { select?: string; expand?: string; }): Visio.Application` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="b3a6f-110">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.Application`– Disponível somente nos tipos de coleção.</span><span class="sxs-lookup"><span data-stu-id="b3a6f-110">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.Application` - Only available on collection types.</span></span> <span data-ttu-id="b3a6f-111">É semelhante à assinatura anterior.</span><span class="sxs-lookup"><span data-stu-id="b3a6f-111">It is similar to the preceding signature.</span></span> <span data-ttu-id="b3a6f-112">Option. Top especifica o número máximo de itens de coleta que podem ser incluídos no resultado.</span><span class="sxs-lookup"><span data-stu-id="b3a6f-112">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="b3a6f-113">Option. Skip especifica o número de itens que devem ser ignorados e não incluídos no resultado.</span><span class="sxs-lookup"><span data-stu-id="b3a6f-113">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="b3a6f-114">Se Option. Top for especificado, o conjunto de resultados será iniciado depois de ignorar o número de itens especificado.</span><span class="sxs-lookup"><span data-stu-id="b3a6f-114">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Visio.Interfaces.ApplicationLoadOptions): Visio.Application;'
      return:
        type:
          - Visio.Application
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - Visio.Interfaces.ApplicationLoadOptions
  - uid: visio.Visio.Application.load_1
    summary: <span data-ttu-id="b3a6f-115">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="b3a6f-115">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="b3a6f-116">Você deve chamar `context.sync()` antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="b3a6f-116">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Visio.Application;'
      return:
        type:
          - Visio.Application
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="b3a6f-117">Uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="b3a6f-117">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: visio.Visio.Application.load_2
    summary: <span data-ttu-id="b3a6f-118">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="b3a6f-118">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="b3a6f-119">Você deve chamar `context.sync()` antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="b3a6f-119">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Visio.Application;'
      return:
        type:
          - Visio.Application
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="b3a6f-120">Onde propertyNamesAndPaths. Select é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades a serem carregadas e propertyNamesAndPaths. Expand é uma sequência de caracteres delimitada por vírgula que especifica as propriedades de navegação a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="b3a6f-120">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: visio.Visio.Application.set
    summary: '<span data-ttu-id="b3a6f-121">Define várias propriedades de um objeto ao mesmo tempo.</span><span class="sxs-lookup"><span data-stu-id="b3a6f-121">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="b3a6f-122">Você pode passar um objeto simples com as propriedades apropriadas ou outro objeto API do mesmo tipo.</span><span class="sxs-lookup"><span data-stu-id="b3a6f-122">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="b3a6f-123">Este método tem a seguinte assinatura adicional:</span><span class="sxs-lookup"><span data-stu-id="b3a6f-123">This method has the following additional signature:</span></span>

      `set(properties: Visio.Application): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.ApplicationUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="b3a6f-124">Um objeto JavaScript com propriedades que são estruturadas isomorphically para as propriedades do objeto no qual o método é chamado.</span><span class="sxs-lookup"><span data-stu-id="b3a6f-124">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - Interfaces.ApplicationUpdateData
        - id: options
          description: <span data-ttu-id="b3a6f-125">Fornece uma opção para suprimir erros se o objeto Properties tentar definir qualquer propriedade somente leitura.</span><span class="sxs-lookup"><span data-stu-id="b3a6f-125">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - office.OfficeExtension.UpdateOptions
  - uid: visio.Visio.Application.set_1
    summary: '<span data-ttu-id="b3a6f-126">Define várias propriedades no objeto ao mesmo tempo, com base em um objeto carregado existente.</span><span class="sxs-lookup"><span data-stu-id="b3a6f-126">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Visio.Application): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - Visio.Application
  - uid: visio.Visio.Application.showBorders
    summary: |-
      <span data-ttu-id="b3a6f-127">Mostrar ou ocultar as bordas do aplicativo iFrame.</span><span class="sxs-lookup"><span data-stu-id="b3a6f-127">Show or hide the iFrame application borders.</span></span>

      <span data-ttu-id="b3a6f-128">\[[Conjunto de APIs: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="b3a6f-128">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: showBorders
    fullName: showBorders
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showBorders: boolean;'
      return:
        type:
          - boolean
        description: |-


          #### <a name="examples"></a><span data-ttu-id="b3a6f-129">Exemplos</span><span class="sxs-lookup"><span data-stu-id="b3a6f-129">Examples</span></span>

          ```javascript
          Visio.run(session, function (ctx) {
              var application = ctx.document.application;
              application.showToolbars = false;
              application.showBorders = false;
              return ctx.sync();
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: visio.Visio.Application.showToolbar
    summary: |-
      <span data-ttu-id="b3a6f-130">Define a visibilidade de uma barra de ferramentas específica no aplicativo.</span><span class="sxs-lookup"><span data-stu-id="b3a6f-130">Sets the visibility of a specific toolbar in the application.</span></span>

      <span data-ttu-id="b3a6f-131">\[[Conjunto de APIs: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="b3a6f-131">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: 'showToolbar(id, show)'
    fullName: 'showToolbar(id, show)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'showToolbar(id: Visio.ToolBarType, show: boolean): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: id
          description: <span data-ttu-id="b3a6f-132">O tipo da barra de ferramentas</span><span class="sxs-lookup"><span data-stu-id="b3a6f-132">The type of the Toolbar</span></span>
          type:
            - visio.Visio.ToolBarType
        - id: show
          description: <span data-ttu-id="b3a6f-133">Se a barra de ferramentas é visibile ou não.</span><span class="sxs-lookup"><span data-stu-id="b3a6f-133">Whether the toolbar is visibile or not.</span></span>
          type:
            - boolean
  - uid: visio.Visio.Application.showToolbar_1
    summary: |-
      <span data-ttu-id="b3a6f-134">Define a visibilidade de uma barra de ferramentas específica no aplicativo.</span><span class="sxs-lookup"><span data-stu-id="b3a6f-134">Sets the visibility of a specific toolbar in the application.</span></span>

      <span data-ttu-id="b3a6f-135">\[[Conjunto de APIs: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="b3a6f-135">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: 'showToolbar(idString, show)'
    fullName: 'showToolbar(idString, show)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'showToolbar(idString: "CommandBar" | "PageNavigationBar" | "StatusBar", show: boolean): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: idString
          description: <span data-ttu-id="b3a6f-136">O tipo da barra de ferramentas</span><span class="sxs-lookup"><span data-stu-id="b3a6f-136">The type of the Toolbar</span></span>
          type:
            - '"CommandBar" | "PageNavigationBar" | "StatusBar"'
        - id: show
          description: <span data-ttu-id="b3a6f-137">Se a barra de ferramentas é visibile ou não.</span><span class="sxs-lookup"><span data-stu-id="b3a6f-137">Whether the toolbar is visibile or not.</span></span>
          type:
            - boolean
  - uid: visio.Visio.Application.showToolbars
    summary: |-
      <span data-ttu-id="b3a6f-138">Mostrar ou ocultar as barras de ferramentas padrão.</span><span class="sxs-lookup"><span data-stu-id="b3a6f-138">Show or hide the standard toolbars.</span></span>

      <span data-ttu-id="b3a6f-139">\[[Conjunto de APIs: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="b3a6f-139">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: showToolbars
    fullName: showToolbars
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showToolbars: boolean;'
      return:
        type:
          - boolean
  - uid: visio.Visio.Application.toJSON
    summary: '<span data-ttu-id="b3a6f-140">Substitui o método `toJSON()` JavaScript para fornecer uma saída mais útil quando um objeto API é passado para`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="b3a6f-140">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="b3a6f-141">.</span><span class="sxs-lookup"><span data-stu-id="b3a6f-141"></span></span> <span data-ttu-id="b3a6f-142">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="b3a6f-142"></span></span><!-- --><span data-ttu-id="b3a6f-143">, por sua vez, chama `toJSON` o método do objeto que é passado para ele.) Enquanto o objeto Visio. Application original é um objeto API, o `toJSON` método retorna um objeto JavaScript simples (digitado como`Visio.Interfaces.ApplicationData`</span><span class="sxs-lookup"><span data-stu-id="b3a6f-143">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Visio.Application object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Visio.Interfaces.ApplicationData`</span></span><!-- --><span data-ttu-id="b3a6f-144">) que contém cópias superficiais de qualquer propriedade filho carregada do objeto original.</span><span class="sxs-lookup"><span data-stu-id="b3a6f-144">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Visio.Interfaces.ApplicationData;'
      return:
        type:
          - Visio.Interfaces.ApplicationData
        description: ''