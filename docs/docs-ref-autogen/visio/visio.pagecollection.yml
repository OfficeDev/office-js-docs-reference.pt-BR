### YamlMime:UniversalReference
ms.openlocfilehash: 75b8b59dfb4eb9a725b22f3d45db1e5ee5e5aaee
ms.sourcegitcommit: d356f1545c328d4b59ce814fcab8191e4231f1dc
ms.translationtype: MT
ms.contentlocale: pt-BR
ms.lasthandoff: 02/13/2019
ms.locfileid: "29973160"
items:
- uid: visio.Visio.PageCollection
  summary: >-
    <span data-ttu-id="c1987-101">Representa uma coleção de todos os objetos Page que fazem parte do documento.</span><span class="sxs-lookup"><span data-stu-id="c1987-101">Represents a collection of Page objects that are part of the document.</span></span>


    <span data-ttu-id="c1987-102">\[[Conjunto de APIs: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="c1987-102">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: Visio.PageCollection
  fullName: Visio.PageCollection
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: visio
  children:
  - visio.Visio.PageCollection.getCount
  - visio.Visio.PageCollection.getItem
  - visio.Visio.PageCollection.items
  - visio.Visio.PageCollection.load
  - visio.Visio.PageCollection.load_1
  - visio.Visio.PageCollection.load_2
  - visio.Visio.PageCollection.toJSON
- uid: visio.Visio.PageCollection.getCount
  summary: >-
    <span data-ttu-id="c1987-103">Obtém a quantidade de páginas da coleção.</span><span class="sxs-lookup"><span data-stu-id="c1987-103">Gets the number of pages in the collection.</span></span>


    <span data-ttu-id="c1987-104">\[[Conjunto de APIs: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="c1987-104">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: getCount()
  fullName: getCount()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getCount(): OfficeExtension.ClientResult<number>;'
    return:
      type:
      - OfficeExtension.ClientResult<number>
      description: ''
- uid: visio.Visio.PageCollection.getItem
  summary: >-
    <span data-ttu-id="c1987-105">Obtém uma página usando sua chave (nome ou Id).</span><span class="sxs-lookup"><span data-stu-id="c1987-105">Gets a page using its key (name or Id).</span></span>


    <span data-ttu-id="c1987-106">\[[Conjunto de APIs: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="c1987-106">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: getItem(key)
  fullName: getItem(key)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItem(key: number | string): Visio.Page;'
    return:
      type:
      - Visio.Page
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"c1987-107\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"c1987-107\">Examples</span></span>\n\n```javascript\nVisio.run(session, function (ctx) {\n    var pageName = 'Page-1';\n    var page = ctx.document.pages.getItem(pageName);\n    page.activate();\n    return ctx.sync();\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: key
      description: <span data-ttu-id="c1987-108">A chave é o nome ou Id da página a ser recuperada.</span><span class="sxs-lookup"><span data-stu-id="c1987-108">Key is the name or Id of the page to be retrieved.</span></span>
      type:
      - number | string
- uid: visio.Visio.PageCollection.items
  summary: <span data-ttu-id="c1987-109">Obtém o filho carregado itens nesta coleção.</span><span class="sxs-lookup"><span data-stu-id="c1987-109">Gets the loaded child items in this collection.</span></span>
  name: items
  fullName: items
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly items: Visio.Page[];'
    return:
      type:
      - Visio.Page[]
- uid: visio.Visio.PageCollection.load
  summary: <span data-ttu-id="c1987-110">Filas de backup de um comando para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="c1987-110">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="c1987-111">Você deve chamar "context.sync()" antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="c1987-111">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="c1987-112">Além dessa assinatura, esse método tem as seguintes assinaturas:</span><span class="sxs-lookup"><span data-stu-id="c1987-112">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="c1987-113">`load(option?: string | string[]): Visio.PageCollection`-Onde opção é uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades de carga.</span><span class="sxs-lookup"><span data-stu-id="c1987-113">`load(option?: string | string[]): Visio.PageCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="c1987-114">`load(option?: { select?: string; expand?: string; }): Visio.PageCollection`-Onde option.select é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades para carregar e options.expand é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades de navegação para carregar.</span><span class="sxs-lookup"><span data-stu-id="c1987-114">`load(option?: { select?: string; expand?: string; }): Visio.PageCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="c1987-115">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.PageCollection`-Só está disponível em tipos de coleção.</span><span class="sxs-lookup"><span data-stu-id="c1987-115">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.PageCollection` - Only available on collection types.</span></span> <span data-ttu-id="c1987-116">Ele é semelhante à assinatura anterior.</span><span class="sxs-lookup"><span data-stu-id="c1987-116">It is similar to the preceding signature.</span></span> <span data-ttu-id="c1987-117">Option.Top Especifica o número máximo de itens que podem ser incluídos no resultado da coleção.</span><span class="sxs-lookup"><span data-stu-id="c1987-117">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="c1987-118">Option.Skip Especifica o número de itens que devem ser ignorados e não são incluídos no resultado.</span><span class="sxs-lookup"><span data-stu-id="c1987-118">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="c1987-119">Se option.top for especificado, o conjunto de resultados será iniciado depois de ignorar o número de itens especificado.</span><span class="sxs-lookup"><span data-stu-id="c1987-119">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Visio.Interfaces.PageCollectionLoadOptions & Visio.Interfaces.CollectionLoadOptions): Visio.PageCollection;'
    return:
      type:
      - Visio.PageCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - Visio.Interfaces.PageCollectionLoadOptions & Visio.Interfaces.CollectionLoadOptions
- uid: visio.Visio.PageCollection.load_1
  summary: <span data-ttu-id="c1987-120">Filas de backup de um comando para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="c1987-120">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="c1987-121">Você deve chamar `context.sync()` antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="c1987-121">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Visio.PageCollection;'
    return:
      type:
      - Visio.PageCollection
      description: ''
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="c1987-122">Uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades de carga.</span><span class="sxs-lookup"><span data-stu-id="c1987-122">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: visio.Visio.PageCollection.load_2
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: OfficeExtension.LoadOption): Visio.PageCollection;'
    return:
      type:
      - Visio.PageCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - office.OfficeExtension.LoadOption
- uid: visio.Visio.PageCollection.toJSON
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Visio.Interfaces.PageCollectionData;'
    return:
      type:
      - Visio.Interfaces.PageCollectionData
      description: ''
