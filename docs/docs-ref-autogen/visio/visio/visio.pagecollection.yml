### YamlMime:UniversalReference
items:
  - uid: 'visio!Visio.PageCollection:class'
    summary: |-
      Representa uma coleção de todos os objetos da Página que fazem parte do documento.

      \[[Conjunto de APIs: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
    name: Visio.PageCollection
    fullName: Visio.PageCollection
    langs:
      - typeScript
    type: class
    extends:
      - 'office!OfficeExtension.ClientObject:class'
    package: visio!
    children:
      - 'visio!Visio.PageCollection#context:member'
      - 'visio!Visio.PageCollection#getCount:member(1)'
      - 'visio!Visio.PageCollection#getItem:member(1)'
      - 'visio!Visio.PageCollection#items:member'
      - 'visio!Visio.PageCollection#load:member(1)'
      - 'visio!Visio.PageCollection#load:member(2)'
      - 'visio!Visio.PageCollection#load:member(3)'
      - 'visio!Visio.PageCollection#toJSON:member(1)'
  - uid: 'visio!Visio.PageCollection#context:member'
    summary: O contexto de solicitação associado ao objeto. Isso conecta o processo do suplemento ao processo do aplicativo host do Office.
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'visio!Visio.RequestContext:class'
  - uid: 'visio!Visio.PageCollection#getCount:member(1)'
    summary: |-
      Obtém a quantidade de páginas da coleção.

      \[[Conjunto de APIs: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - 'visio!Visio.PageCollection#getCount~0:complex'
        description: ''
  - uid: 'visio!Visio.PageCollection#getItem:member(1)'
    summary: |-
      Obtém uma página usando sua chave (nome ou Id).

      \[[Conjunto de APIs: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
    name: getItem(key)
    fullName: getItem(key)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(key: number | string): Visio.Page;'
      return:
        type:
          - 'visio!Visio.Page:class'
        description: |-


          #### <a name="examples"></a>Exemplos

          ```javascript
          Visio.run(session, function (ctx) {
              var pageName = 'Page-1';
              var page = ctx.document.pages.getItem(pageName);
              page.activate();
              return ctx.sync();
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: key
          description: A chave é o nome ou Id da página a ser recuperada.
          type:
            - number | string
  - uid: 'visio!Visio.PageCollection#items:member'
    summary: Obtém os itens filhos carregados nesta coleção.
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Visio.Page[];'
      return:
        type:
          - 'visio!Visio.PageCollection#items~0:complex'
  - uid: 'visio!Visio.PageCollection#load:member(1)'
    summary: Coloca um comando na fila para carregar as propriedades especificadas do objeto. Você deve chamar "context.sync()" antes de ler as propriedades.
    remarks: |-
      Além dessa assinatura, este método tem as seguintes assinaturas:

      `load(option?: string | string[]): Visio.PageCollection`-Where Option é uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.

      `load(option?: { select?: string; expand?: string; }): Visio.PageCollection`-Onde Option. Select é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades a serem carregadas, e Options. Expand é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades de navegação a serem carregadas.

      `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.PageCollection`– Disponível somente nos tipos de coleção. É semelhante à assinatura anterior. Option. Top especifica o número máximo de itens de coleta que podem ser incluídos no resultado. Option. Skip especifica o número de itens que devem ser ignorados e não incluídos no resultado. Se Option. Top for especificado, o conjunto de resultados será iniciado depois de ignorar o número de itens especificado.
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Visio.Interfaces.PageCollectionLoadOptions & Visio.Interfaces.CollectionLoadOptions): Visio.PageCollection;'
      return:
        type:
          - 'visio!Visio.PageCollection:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'visio!Visio.PageCollection#load~0:complex'
  - uid: 'visio!Visio.PageCollection#load:member(2)'
    summary: Coloca um comando na fila para carregar as propriedades especificadas do objeto. Você deve chamar `context.sync()` antes de ler as propriedades.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Visio.PageCollection;'
      return:
        type:
          - 'visio!Visio.PageCollection:class'
        description: ''
      parameters:
        - id: propertyNames
          description: Uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.
          type:
            - 'string | string[]'
  - uid: 'visio!Visio.PageCollection#load:member(3)'
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): Visio.PageCollection;'
      return:
        type:
          - 'visio!Visio.PageCollection:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'office!OfficeExtension.LoadOption:interface'
  - uid: 'visio!Visio.PageCollection#toJSON:member(1)'
    summary: 'Substitui o `toJSON()` método JavaScript para fornecer uma saída mais útil quando um objeto API é passado para`JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, por sua vez, chama o `toJSON` método do objeto que é passado para ele.) Enquanto o `Visio.PageCollection` objeto original é um objeto API, o `toJSON` método retorna um objeto JavaScript simples (digitado como`Visio.Interfaces.PageCollectionData`<!-- -->) que contém uma matriz de "itens" com cópias superficiais de qualquer propriedade carregada dos itens da coleção.'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Visio.Interfaces.PageCollectionData;'
      return:
        type:
          - 'visio!Visio.Interfaces.PageCollectionData:interface'
        description: ''
references:
  - uid: 'office!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'visio!Visio.RequestContext:class'
    name: RequestContext
  - uid: 'visio!Visio.PageCollection#getCount~0:complex'
    name: OfficeExtension.ClientResult<number>
    fullName: OfficeExtension.ClientResult<number>
    spec.typeScript:
      - uid: 'office!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <number>
        fullName: <number>
  - uid: 'visio!Visio.Page:class'
    name: Visio.Page
  - uid: 'visio!Visio.PageCollection#items~0:complex'
    name: 'Visio.Page[]'
    fullName: 'Visio.Page[]'
    spec.typeScript:
      - uid: 'visio!Visio.Page:class'
        name: Visio.Page
        fullName: Visio.Page
      - name: '[]'
        fullName: '[]'
  - uid: 'visio!Visio.PageCollection:class'
    name: Visio.PageCollection
  - uid: 'visio!Visio.PageCollection#load~0:complex'
    name: Visio.Interfaces.PageCollectionLoadOptions & Visio.Interfaces.CollectionLoadOptions
    fullName: Visio.Interfaces.PageCollectionLoadOptions & Visio.Interfaces.CollectionLoadOptions
    spec.typeScript:
      - uid: 'visio!Visio.Interfaces.PageCollectionLoadOptions:interface'
        name: Visio.Interfaces.PageCollectionLoadOptions
        fullName: Visio.Interfaces.PageCollectionLoadOptions
      - name: ' & '
        fullName: ' & '
      - uid: 'visio!Visio.Interfaces.CollectionLoadOptions:interface'
        name: Visio.Interfaces.CollectionLoadOptions
        fullName: Visio.Interfaces.CollectionLoadOptions
  - uid: 'office!OfficeExtension.LoadOption:interface'
    name: OfficeExtension.LoadOption
  - uid: 'visio!Visio.Interfaces.PageCollectionData:interface'
    name: Visio.Interfaces.PageCollectionData