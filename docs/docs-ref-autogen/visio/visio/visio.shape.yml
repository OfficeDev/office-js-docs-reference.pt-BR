### YamlMime:TSType
name: Visio.Shape
uid: visio!Visio.Shape:class
package: visio!
fullName: Visio.Shape
summary: >-
  Representa a classe Shape.


  \[[Conjunto de APIs: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
- name: comments
  uid: visio!Visio.Shape#comments:member
  package: visio!
  fullName: comments
  summary: >-
    Retorna a Coleção de Comentários. Somente leitura.


    \[[Conjunto de APIs: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly comments: Visio.CommentCollection;'
    return:
      type: <xref uid="visio!Visio.CommentCollection:class" />
- name: context
  uid: visio!Visio.Shape#context:member
  package: visio!
  fullName: context
  summary: O contexto de solicitação associado ao objeto. Isso conecta o processo do suplemento ao processo do aplicativo host do Office.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'context: RequestContext;'
    return:
      type: <xref uid="visio!Visio.RequestContext:class" />
- name: hyperlinks
  uid: visio!Visio.Shape#hyperlinks:member
  package: visio!
  fullName: hyperlinks
  summary: >-
    Retorna a coleção de Hiperlinks para um objeto Forma. Somente leitura.


    \[[Conjunto de APIs: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly hyperlinks: Visio.HyperlinkCollection;'
    return:
      type: <xref uid="visio!Visio.HyperlinkCollection:class" />
- name: id
  uid: visio!Visio.Shape#id:member
  package: visio!
  fullName: id
  summary: >-
    Identificador da forma. Somente leitura.


    \[[Conjunto de APIs: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly id: number;'
    return:
      type: number
- name: name
  uid: visio!Visio.Shape#name:member
  package: visio!
  fullName: name
  summary: >-
    Nome da Shape. Somente leitura.


    \[[Conjunto de APIs: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly name: string;'
    return:
      type: string
- name: select
  uid: visio!Visio.Shape#select:member
  package: visio!
  fullName: select
  summary: >-
    Retorna verdadeiro, se a forma estiver selecionada. O usuário pode definir como verdadeiro para selecionar a forma explicitamente.


    \[[Conjunto de APIs: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'select: boolean;'
    return:
      type: boolean
- name: shapeDataItems
  uid: visio!Visio.Shape#shapeDataItems:member
  package: visio!
  fullName: shapeDataItems
  summary: >-
    Retorna a Seção de Dados da Shape. Somente leitura.


    \[[Conjunto de APIs: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly shapeDataItems: Visio.ShapeDataItemCollection;'
    return:
      type: <xref uid="visio!Visio.ShapeDataItemCollection:class" />
- name: subShapes
  uid: visio!Visio.Shape#subShapes:member
  package: visio!
  fullName: subShapes
  summary: >-
    Obtém a Coleção SubShape. Somente leitura.


    \[[Conjunto de APIs: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly subShapes: Visio.ShapeCollection;'
    return:
      type: <xref uid="visio!Visio.ShapeCollection:class" />
- name: text
  uid: visio!Visio.Shape#text:member
  package: visio!
  fullName: text
  summary: >-
    Texto da forma. Somente leitura.


    \[[Conjunto de APIs: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly text: string;'
    return:
      type: string
- name: view
  uid: visio!Visio.Shape#view:member
  package: visio!
  fullName: view
  summary: >-
    Retorna a visualização da forma. Somente leitura.


    \[[Conjunto de APIs: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly view: Visio.ShapeView;'
    return:
      type: <xref uid="visio!Visio.ShapeView:class" />
methods:
- name: getBounds()
  uid: visio!Visio.Shape#getBounds:member(1)
  package: visio!
  fullName: getBounds()
  summary: >-
    Retorna o objeto BoundingBox que especifica a caixa delimitadora da forma.


    \[[Conjunto de APIs: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getBounds(): OfficeExtension.ClientResult<Visio.BoundingBox>;'
    return:
      type: <xref uid="office!OfficeExtension.ClientResult:class" />&lt;<xref uid="visio!Visio.BoundingBox:interface" />&gt;
      description: ''
- name: load(option)
  uid: visio!Visio.Shape#load:member(1)
  package: visio!
  fullName: load(option)
  summary: Coloca um comando na fila para carregar as propriedades especificadas do objeto. Você deve chamar "context.sync()" antes de ler as propriedades.
  remarks: >-
    Além dessa assinatura, este método tem as seguintes assinaturas:


    `load(option?: string | string[]): Visio.Shape` -Where Option é uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.


    `load(option?: { select?: string; expand?: string; }): Visio.Shape` -Onde Option. Select é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades a serem carregadas, e Options. Expand é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades de navegação a serem carregadas.


    `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.Shape` – Disponível somente nos tipos de coleção. É semelhante à assinatura anterior. Option. Top especifica o número máximo de itens de coleta que podem ser incluídos no resultado. Option. Skip especifica o número de itens que devem ser ignorados e não incluídos no resultado. Se Option. Top for especificado, o conjunto de resultados será iniciado depois de ignorar o número de itens especificado.
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(option?: Visio.Interfaces.ShapeLoadOptions): Visio.Shape;'
    parameters:
    - id: option
      description: ''
      type: <xref uid="visio!Visio.Interfaces.ShapeLoadOptions:interface" />
    return:
      type: <xref uid="visio!Visio.Shape:class" />
      description: ''
- name: load(propertyNames)
  uid: visio!Visio.Shape#load:member(2)
  package: visio!
  fullName: load(propertyNames)
  summary: Coloca um comando na fila para carregar as propriedades especificadas do objeto. Você deve chamar `context.sync()` antes de ler as propriedades.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): Visio.Shape;'
    parameters:
    - id: propertyNames
      description: Uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.
      type: string | string[]
    return:
      type: <xref uid="visio!Visio.Shape:class" />
      description: "\n\n#### <a name=\"examples\"></a>Exemplos\n\n```javascript\nVisio.run(session, function (ctx) {\n    var activePage = ctx.document.getActivePage();\n    var shapeName = \"Sample Name\";\n    var shape = activePage.shapes.getItem(shapeName);\n    shape.load([\"name\", \"id\", \"text\", \"select\"]);\n    return ctx.sync().then(function () {\n        console.log(shape.name);\n        console.log(shape.id);\n        console.log(shape.text);\n        console.log(shape.select);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\nVisio.run(session, function (ctx) {\n    var activePage = ctx.document.getActivePage();\n    var shape = activePage.shapes.getItem(0);\n    shape.view.highlight = { color: \"#E7E7E7\", width: 100 };\n    return ctx.sync();\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: load(propertyNamesAndPaths)
  uid: visio!Visio.Shape#load:member(3)
  package: visio!
  fullName: load(propertyNamesAndPaths)
  summary: Coloca um comando na fila para carregar as propriedades especificadas do objeto. Você deve chamar `context.sync()` antes de ler as propriedades.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Visio.Shape;'
    parameters:
    - id: propertyNamesAndPaths
      description: Onde propertyNamesAndPaths. Select é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades a serem carregadas e propertyNamesAndPaths. Expand é uma sequência de caracteres delimitada por vírgula que especifica as propriedades de navegação a serem carregadas.
      type: '{ select?: string; expand?: string; }'
    return:
      type: <xref uid="visio!Visio.Shape:class" />
      description: ''
- name: set(properties, options)
  uid: visio!Visio.Shape#set:member(1)
  package: visio!
  fullName: set(properties, options)
  summary: Define várias propriedades de um objeto ao mesmo tempo. Você pode passar um objeto simples com as propriedades apropriadas ou outro objeto API do mesmo tipo.
  remarks: >-
    Este método tem a seguinte assinatura adicional:


    `set(properties: Visio.Shape): void`
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(properties: Interfaces.ShapeUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    parameters:
    - id: properties
      description: Um objeto JavaScript com propriedades que são estruturadas isomorphically para as propriedades do objeto no qual o método é chamado.
      type: <xref uid="visio!Visio.Interfaces.ShapeUpdateData:interface" />
    - id: options
      description: Fornece uma opção para suprimir erros se o objeto Properties tentar definir qualquer propriedade somente leitura.
      type: <xref uid="office!OfficeExtension.UpdateOptions:interface" />
    return:
      type: void
      description: ''
- name: set(properties)
  uid: visio!Visio.Shape#set:member(2)
  package: visio!
  fullName: set(properties)
  summary: Define várias propriedades no objeto ao mesmo tempo, com base em um objeto carregado existente.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(properties: Visio.Shape): void;'
    parameters:
    - id: properties
      description: ''
      type: <xref uid="visio!Visio.Shape:class" />
    return:
      type: void
      description: ''
- name: toJSON()
  uid: visio!Visio.Shape#toJSON:member(1)
  package: visio!
  fullName: toJSON()
  summary: Substitui o `toJSON()` método JavaScript para fornecer uma saída mais útil quando um objeto API é passado para `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, por sua vez, chama o `toJSON` método do objeto que é passado para ele.) Enquanto o objeto Visio. Shape original é um objeto API, o `toJSON` método retorna um objeto JavaScript simples (digitado como `Visio.Interfaces.ShapeData`<!-- -->) que contém cópias superficiais de qualquer propriedade filho carregada do objeto original.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'toJSON(): Visio.Interfaces.ShapeData;'
    return:
      type: <xref uid="visio!Visio.Interfaces.ShapeData:interface" />
      description: ''
extends: <xref uid="office!OfficeExtension.ClientObject:class" />
metadata:
  ms.openlocfilehash: db857aca01d9a64b2dd052a06e51a233676aa585
  ms.sourcegitcommit: 3bab97ab3b91da7cca497f6fc895408a76bd8b46
  ms.translationtype: MT
  ms.contentlocale: pt-BR
  ms.lasthandoff: 11/18/2020
  ms.locfileid: "49193058"
