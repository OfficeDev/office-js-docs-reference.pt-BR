### YamlMime:TSType
name: Visio.ShapeDataItemCollection
uid: visio!Visio.ShapeDataItemCollection:class
package: visio!
fullName: Visio.ShapeDataItemCollection
summary: >-
  Representa o ShapeDataItemCollection de uma determinada Forma.


  \[[Conjunto de API: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
- name: context
  uid: visio!Visio.ShapeDataItemCollection#context:member
  package: visio!
  fullName: context
  summary: O contexto de solicitação associado ao objeto. Isso conecta o processo do complemento ao processo do aplicativo host do Office.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'context: RequestContext;'
    return:
      type: <xref uid="visio!Visio.RequestContext:class" />
- name: items
  uid: visio!Visio.ShapeDataItemCollection#items:member
  package: visio!
  fullName: items
  summary: Obtém os itens filhos carregados nesta coleção.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly items: Visio.ShapeDataItem[];'
    return:
      type: <xref uid="visio!Visio.ShapeDataItem:class" />[]
methods:
- name: getCount()
  uid: visio!Visio.ShapeDataItemCollection#getCount:member(1)
  package: visio!
  fullName: getCount()
  summary: >-
    Obtém a quantidade de Itens de Dados da Forma.


    \[[Conjunto de API: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getCount(): OfficeExtension.ClientResult<number>;'
    return:
      type: <xref uid="office!OfficeExtension.ClientResult:class" />&lt;number&gt;
      description: ''
- name: getItem(key)
  uid: visio!Visio.ShapeDataItemCollection#getItem:member(1)
  package: visio!
  fullName: getItem(key)
  summary: >-
    Obtém o ShapeDataItem usando seu nome.


    \[[Conjunto de API: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getItem(key: string): Visio.ShapeDataItem;'
    parameters:
    - id: key
      description: A chave é o nome do ShapeDataItem a ser recuperado.
      type: string
    return:
      type: <xref uid="visio!Visio.ShapeDataItem:class" />
      description: ''
- name: load(option)
  uid: visio!Visio.ShapeDataItemCollection#load:member(1)
  package: visio!
  fullName: load(option)
  summary: Coloca um comando na fila para carregar as propriedades especificadas do objeto. Você deve chamar "context.sync()" antes de ler as propriedades.
  remarks: >-
    Além dessa assinatura, este método tem as seguintes assinaturas:


    `load(option?: string | string[]): Visio.ShapeDataItemCollection` - Onde a opção é uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a ser carregadas.


    `load(option?: { select?: string; expand?: string; }): Visio.ShapeDataItemCollection` - Onde option.select é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades a carregar e options.expand é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades de navegação a ser carregadas.


    `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.ShapeDataItemCollection` - Disponível somente em tipos de coleção. É semelhante à assinatura anterior. Option.top especifica o número máximo de itens de coleção que podem ser incluídos no resultado. Option.skip especifica o número de itens que devem ser ignorados e não incluídos no resultado. Se option.top for especificado, o conjunto de resultados começará depois de ignorar o número especificado de itens.


    #### <a name="examples"></a>Exemplos


    ```javascript

    Visio.run(session, function (ctx) {
        var activePage = ctx.document.getActivePage();
        var shape = activePage.shapes.getItem(0);
        var shapeDataItems = shape.shapeDataItems;
        shapeDataItems.load(["label", "value"]);
        return ctx.sync().then(function() {
            for (var i = 0; i < shapeDataItems.items.length; i++) {
                console.log(shapeDataItems.items[i].label);
                console.log(shapeDataItems.items[i].value);
            }
        });
    }).catch(function(error) {
        console.log("Error: " + error);
        if (error instanceof OfficeExtension.Error) {
            console.log("Debug info: " + JSON.stringify(error.debugInfo));
        }
    });

    ```
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(option?: Visio.Interfaces.ShapeDataItemCollectionLoadOptions & Visio.Interfaces.CollectionLoadOptions): Visio.ShapeDataItemCollection;'
    parameters:
    - id: option
      description: ''
      type: <xref uid="visio!Visio.Interfaces.ShapeDataItemCollectionLoadOptions:interface" /> & <xref uid="visio!Visio.Interfaces.CollectionLoadOptions:interface" />
    return:
      type: <xref uid="visio!Visio.ShapeDataItemCollection:class" />
      description: ''
- name: load(propertyNames)
  uid: visio!Visio.ShapeDataItemCollection#load:member(2)
  package: visio!
  fullName: load(propertyNames)
  summary: Coloca um comando na fila para carregar as propriedades especificadas do objeto. Você deve chamar `context.sync()` antes de ler as propriedades.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): Visio.ShapeDataItemCollection;'
    parameters:
    - id: propertyNames
      description: Uma cadeia de caracteres delimitada por vírgulas ou uma matriz de cadeias de caracteres que especificam as propriedades a ser carregadas.
      type: string | string[]
    return:
      type: <xref uid="visio!Visio.ShapeDataItemCollection:class" />
      description: ''
- name: load(option)
  uid: visio!Visio.ShapeDataItemCollection#load:member(3)
  package: visio!
  fullName: load(option)
  summary: ''
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(option?: OfficeExtension.LoadOption): Visio.ShapeDataItemCollection;'
    parameters:
    - id: option
      description: ''
      type: <xref uid="office!OfficeExtension.LoadOption:interface" />
    return:
      type: <xref uid="visio!Visio.ShapeDataItemCollection:class" />
      description: ''
- name: toJSON()
  uid: visio!Visio.ShapeDataItemCollection#toJSON:member(1)
  package: visio!
  fullName: toJSON()
  summary: Substitui o método JavaScript `toJSON()` para fornecer uma saída mais útil quando um objeto API é passado para `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, por sua vez, chama `toJSON` o método do objeto que é passado a ele.) Enquanto o objeto original `Visio.ShapeDataItemCollection` é um objeto API, o método retorna `toJSON` um objeto JavaScript simples (digitado como `Visio.Interfaces.ShapeDataItemCollectionData`<!-- -->) que contém uma matriz "items" com cópias rasas de quaisquer propriedades carregadas dos itens da coleção.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'toJSON(): Visio.Interfaces.ShapeDataItemCollectionData;'
    return:
      type: <xref uid="visio!Visio.Interfaces.ShapeDataItemCollectionData:interface" />
      description: ''
extends: <xref uid="office!OfficeExtension.ClientObject:class" />
metadata:
  ms.openlocfilehash: a33c367b42efdcdc8a3eff7bda73e61bc32cacb9
  ms.sourcegitcommit: a8a86cfcaff5ad7dacc653d63502c76b1fedbebe
  ms.translationtype: MT
  ms.contentlocale: pt-BR
  ms.lasthandoff: 03/26/2021
  ms.locfileid: "51357952"
