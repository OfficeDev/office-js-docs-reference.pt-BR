### YamlMime:UniversalReference
items:
  - uid: 'visio!Visio.Document:class'
    summary: |-
      Representa a classe Document.

      \[[Conjunto de APIs: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
    name: Visio.Document
    fullName: Visio.Document
    langs:
      - typeScript
    type: class
    extends:
      - 'office!OfficeExtension.ClientObject:class'
    package: visio!
    children:
      - 'visio!Visio.Document#application:member'
      - 'visio!Visio.Document#context:member'
      - 'visio!Visio.Document#getActivePage:member(1)'
      - 'visio!Visio.Document#load:member(1)'
      - 'visio!Visio.Document#load:member(2)'
      - 'visio!Visio.Document#load:member(3)'
      - 'visio!Visio.Document#onDataRefreshComplete:member'
      - 'visio!Visio.Document#onDocumentLoadComplete:member'
      - 'visio!Visio.Document#onPageLoadComplete:member'
      - 'visio!Visio.Document#onSelectionChanged:member'
      - 'visio!Visio.Document#onShapeMouseEnter:member'
      - 'visio!Visio.Document#onShapeMouseLeave:member'
      - 'visio!Visio.Document#pages:member'
      - 'visio!Visio.Document#set:member(1)'
      - 'visio!Visio.Document#set:member(2)'
      - 'visio!Visio.Document#setActivePage:member(1)'
      - 'visio!Visio.Document#startDataRefresh:member(1)'
      - 'visio!Visio.Document#toJSON:member(1)'
      - 'visio!Visio.Document#view:member'
  - uid: 'visio!Visio.Document#application:member'
    summary: |-
      Representa uma instância de aplicativo do Visio que contém esse documento. Somente leitura.

      \[[Conjunto de APIs: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
    name: application
    fullName: application
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly application: Visio.Application;'
      return:
        type:
          - 'visio!Visio.Application:class'
  - uid: 'visio!Visio.Document#context:member'
    summary: O contexto de solicitação associado ao objeto. Isso conecta o processo do suplemento ao processo do aplicativo host do Office.
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'visio!Visio.RequestContext:class'
  - uid: 'visio!Visio.Document#getActivePage:member(1)'
    summary: |-
      Retorna a Página Ativa do documento.

      \[[Conjunto de APIs: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
    name: getActivePage()
    fullName: getActivePage()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getActivePage(): Visio.Page;'
      return:
        type:
          - 'visio!Visio.Page:class'
        description: |-


          #### <a name="examples"></a>Exemplos

          ```javascript
          Visio.run(session, function (ctx) {
              var document = ctx.document;
              var activePage = document.getActivePage();
              activePage.load("name");
              return ctx.sync().then(function () {
                  console.log("pageName: " +activePage.name);
              });   
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'visio!Visio.Document#load:member(1)'
    summary: Coloca um comando na fila para carregar as propriedades especificadas do objeto. Você deve chamar "context.sync()" antes de ler as propriedades.
    remarks: |-
      Além dessa assinatura, este método tem as seguintes assinaturas:

      `load(option?: string | string[]): Visio.Document`-Where Option é uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.

      `load(option?: { select?: string; expand?: string; }): Visio.Document`-Onde Option. Select é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades a serem carregadas, e Options. Expand é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades de navegação a serem carregadas.

      `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.Document`– Disponível somente nos tipos de coleção. É semelhante à assinatura anterior. Option. Top especifica o número máximo de itens de coleta que podem ser incluídos no resultado. Option. Skip especifica o número de itens que devem ser ignorados e não incluídos no resultado. Se Option. Top for especificado, o conjunto de resultados será iniciado depois de ignorar o número de itens especificado.
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Visio.Interfaces.DocumentLoadOptions): Visio.Document;'
      return:
        type:
          - 'visio!Visio.Document:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'visio!Visio.Interfaces.DocumentLoadOptions:interface'
  - uid: 'visio!Visio.Document#load:member(2)'
    summary: Coloca um comando na fila para carregar as propriedades especificadas do objeto. Você deve chamar `context.sync()` antes de ler as propriedades.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Visio.Document;'
      return:
        type:
          - 'visio!Visio.Document:class'
        description: ''
      parameters:
        - id: propertyNames
          description: Uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.
          type:
            - 'string | string[]'
  - uid: 'visio!Visio.Document#load:member(3)'
    summary: Coloca um comando na fila para carregar as propriedades especificadas do objeto. Você deve chamar `context.sync()` antes de ler as propriedades.
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Visio.Document;'
      return:
        type:
          - 'visio!Visio.Document:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: Onde propertyNamesAndPaths. Select é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades a serem carregadas e propertyNamesAndPaths. Expand é uma sequência de caracteres delimitada por vírgula que especifica as propriedades de navegação a serem carregadas.
          type:
            - '{ select?: string; expand?: string; }'
  - uid: 'visio!Visio.Document#onDataRefreshComplete:member'
    summary: |-
      Ocorre quando os dados são atualizados no diagrama.

      \[[Conjunto de APIs: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
    name: onDataRefreshComplete
    fullName: onDataRefreshComplete
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onDataRefreshComplete: OfficeExtension.EventHandlers<Visio.DataRefreshCompleteEventArgs>;'
      return:
        type:
          - 'visio!Visio.Document#onDataRefreshComplete~0:complex'
  - uid: 'visio!Visio.Document#onDocumentLoadComplete:member'
    summary: |-
      Ocorre quando o documento é carregado, atualizado ou alterado.

      \[[Conjunto de APIs: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
    name: onDocumentLoadComplete
    fullName: onDocumentLoadComplete
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onDocumentLoadComplete: OfficeExtension.EventHandlers<Visio.DocumentLoadCompleteEventArgs>;'
      return:
        type:
          - 'visio!Visio.Document#onDocumentLoadComplete~0:complex'
  - uid: 'visio!Visio.Document#onPageLoadComplete:member'
    summary: |-
      Ocorre quando termina o carregamento da página.

      \[[Conjunto de APIs: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
    name: onPageLoadComplete
    fullName: onPageLoadComplete
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onPageLoadComplete: OfficeExtension.EventHandlers<Visio.PageLoadCompleteEventArgs>;'
      return:
        type:
          - 'visio!Visio.Document#onPageLoadComplete~0:complex'
  - uid: 'visio!Visio.Document#onSelectionChanged:member'
    summary: |-
      Ocorre quando a seleção atual de formas é alterada.

      \[[Conjunto de APIs: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
    name: onSelectionChanged
    fullName: onSelectionChanged
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onSelectionChanged: OfficeExtension.EventHandlers<Visio.SelectionChangedEventArgs>;'
      return:
        type:
          - 'visio!Visio.Document#onSelectionChanged~0:complex'
  - uid: 'visio!Visio.Document#onShapeMouseEnter:member'
    summary: |-
      Ocorre quando o usuário move o ponteiro do mouse para a caixa delimitadora de uma forma.

      \[[Conjunto de APIs: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
    name: onShapeMouseEnter
    fullName: onShapeMouseEnter
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onShapeMouseEnter: OfficeExtension.EventHandlers<Visio.ShapeMouseEnterEventArgs>;'
      return:
        type:
          - 'visio!Visio.Document#onShapeMouseEnter~0:complex'
  - uid: 'visio!Visio.Document#onShapeMouseLeave:member'
    summary: |-
      Ocorre quando o usuário move o mouse para fora da caixa delimitadora de uma forma.

      \[[Conjunto de APIs: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
    name: onShapeMouseLeave
    fullName: onShapeMouseLeave
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onShapeMouseLeave: OfficeExtension.EventHandlers<Visio.ShapeMouseLeaveEventArgs>;'
      return:
        type:
          - 'visio!Visio.Document#onShapeMouseLeave~0:complex'
  - uid: 'visio!Visio.Document#pages:member'
    summary: |-
      Representa uma coleção de páginas associadas ao documento. Somente leitura.

      \[[Conjunto de APIs: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
    name: pages
    fullName: pages
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly pages: Visio.PageCollection;'
      return:
        type:
          - 'visio!Visio.PageCollection:class'
        description: |-


          #### <a name="examples"></a>Exemplos

          ```javascript
          Visio.run(session, function (ctx) {
              var pages = ctx.document.pages;
              var pageCount = pages.getCount();
              return ctx.sync().then(function () {
                  console.log("Pages Count: " +pageCount.value);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'visio!Visio.Document#set:member(1)'
    summary: Define várias propriedades de um objeto ao mesmo tempo. Você pode passar um objeto simples com as propriedades apropriadas ou outro objeto API do mesmo tipo.
    remarks: |-
      Este método tem a seguinte assinatura adicional:

      `set(properties: Visio.Document): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.DocumentUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: Um objeto JavaScript com propriedades que são estruturadas isomorphically para as propriedades do objeto no qual o método é chamado.
          type:
            - 'visio!Visio.Interfaces.DocumentUpdateData:interface'
        - id: options
          description: Fornece uma opção para suprimir erros se o objeto Properties tentar definir qualquer propriedade somente leitura.
          type:
            - 'office!OfficeExtension.UpdateOptions:interface'
  - uid: 'visio!Visio.Document#set:member(2)'
    summary: 'Define várias propriedades no objeto ao mesmo tempo, com base em um objeto carregado existente.'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Visio.Document): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'visio!Visio.Document:class'
  - uid: 'visio!Visio.Document#setActivePage:member(1)'
    summary: |-
      Define a Página Ativa do documento.

      \[[Conjunto de APIs: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
    name: setActivePage(PageName)
    fullName: setActivePage(PageName)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setActivePage(PageName: string): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a>Exemplos

          ```javascript
          Visio.run(session, function (ctx) {
              var document = ctx.document;
              var pageName = "Page-1";
              document.setActivePage(pageName);
              return ctx.sync();
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: PageName
          description: Nome da página
          type:
            - string
  - uid: 'visio!Visio.Document#startDataRefresh:member(1)'
    summary: |-
      Dispara a atualização dos dados no Diagrama, para todas as páginas.

      \[[Conjunto de APIs: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
    name: startDataRefresh()
    fullName: startDataRefresh()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'startDataRefresh(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a>Exemplos

          ```javascript
          Visio.run(session, function (ctx) {
              var document = ctx.document;
              document.startDataRefresh();
              return ctx.sync();
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'visio!Visio.Document#toJSON:member(1)'
    summary: 'Substitui o método `toJSON()` JavaScript para fornecer uma saída mais útil quando um objeto API é passado para`JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, por sua vez, chama `toJSON` o método do objeto que é passado para ele.) Enquanto o objeto Visio. Document original é um objeto API, o `toJSON` método retorna um objeto JavaScript simples (digitado como`Visio.Interfaces.DocumentData`<!-- -->) que contém cópias superficiais de qualquer propriedade filho carregada do objeto original.'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Visio.Interfaces.DocumentData;'
      return:
        type:
          - 'visio!Visio.Interfaces.DocumentData:interface'
        description: ''
  - uid: 'visio!Visio.Document#view:member'
    summary: |-
      Retorna o objeto DocumentView. Somente leitura.

      \[[Conjunto de APIs: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
    name: view
    fullName: view
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly view: Visio.DocumentView;'
      return:
        type:
          - 'visio!Visio.DocumentView:class'
references:
  - uid: 'office!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'visio!Visio.Application:class'
    name: Visio.Application
  - uid: 'visio!Visio.RequestContext:class'
    name: RequestContext
  - uid: 'visio!Visio.Page:class'
    name: Visio.Page
  - uid: 'visio!Visio.Document:class'
    name: Visio.Document
  - uid: 'visio!Visio.Interfaces.DocumentLoadOptions:interface'
    name: Visio.Interfaces.DocumentLoadOptions
  - uid: 'visio!Visio.Document#onDataRefreshComplete~0:complex'
    name: OfficeExtension.EventHandlers<Visio.DataRefreshCompleteEventArgs>
    fullName: OfficeExtension.EventHandlers<Visio.DataRefreshCompleteEventArgs>
    spec.typeScript:
      - uid: 'office!OfficeExtension.EventHandlers:class'
        name: OfficeExtension.EventHandlers
        fullName: OfficeExtension.EventHandlers
      - name: <
        fullName: <
      - uid: 'visio!Visio.DataRefreshCompleteEventArgs:interface'
        name: Visio.DataRefreshCompleteEventArgs
        fullName: Visio.DataRefreshCompleteEventArgs
      - name: '>'
        fullName: '>'
  - uid: 'visio!Visio.Document#onDocumentLoadComplete~0:complex'
    name: OfficeExtension.EventHandlers<Visio.DocumentLoadCompleteEventArgs>
    fullName: OfficeExtension.EventHandlers<Visio.DocumentLoadCompleteEventArgs>
    spec.typeScript:
      - uid: 'office!OfficeExtension.EventHandlers:class'
        name: OfficeExtension.EventHandlers
        fullName: OfficeExtension.EventHandlers
      - name: <
        fullName: <
      - uid: 'visio!Visio.DocumentLoadCompleteEventArgs:interface'
        name: Visio.DocumentLoadCompleteEventArgs
        fullName: Visio.DocumentLoadCompleteEventArgs
      - name: '>'
        fullName: '>'
  - uid: 'visio!Visio.Document#onPageLoadComplete~0:complex'
    name: OfficeExtension.EventHandlers<Visio.PageLoadCompleteEventArgs>
    fullName: OfficeExtension.EventHandlers<Visio.PageLoadCompleteEventArgs>
    spec.typeScript:
      - uid: 'office!OfficeExtension.EventHandlers:class'
        name: OfficeExtension.EventHandlers
        fullName: OfficeExtension.EventHandlers
      - name: <
        fullName: <
      - uid: 'visio!Visio.PageLoadCompleteEventArgs:interface'
        name: Visio.PageLoadCompleteEventArgs
        fullName: Visio.PageLoadCompleteEventArgs
      - name: '>'
        fullName: '>'
  - uid: 'visio!Visio.Document#onSelectionChanged~0:complex'
    name: OfficeExtension.EventHandlers<Visio.SelectionChangedEventArgs>
    fullName: OfficeExtension.EventHandlers<Visio.SelectionChangedEventArgs>
    spec.typeScript:
      - uid: 'office!OfficeExtension.EventHandlers:class'
        name: OfficeExtension.EventHandlers
        fullName: OfficeExtension.EventHandlers
      - name: <
        fullName: <
      - uid: 'visio!Visio.SelectionChangedEventArgs:interface'
        name: Visio.SelectionChangedEventArgs
        fullName: Visio.SelectionChangedEventArgs
      - name: '>'
        fullName: '>'
  - uid: 'visio!Visio.Document#onShapeMouseEnter~0:complex'
    name: OfficeExtension.EventHandlers<Visio.ShapeMouseEnterEventArgs>
    fullName: OfficeExtension.EventHandlers<Visio.ShapeMouseEnterEventArgs>
    spec.typeScript:
      - uid: 'office!OfficeExtension.EventHandlers:class'
        name: OfficeExtension.EventHandlers
        fullName: OfficeExtension.EventHandlers
      - name: <
        fullName: <
      - uid: 'visio!Visio.ShapeMouseEnterEventArgs:interface'
        name: Visio.ShapeMouseEnterEventArgs
        fullName: Visio.ShapeMouseEnterEventArgs
      - name: '>'
        fullName: '>'
  - uid: 'visio!Visio.Document#onShapeMouseLeave~0:complex'
    name: OfficeExtension.EventHandlers<Visio.ShapeMouseLeaveEventArgs>
    fullName: OfficeExtension.EventHandlers<Visio.ShapeMouseLeaveEventArgs>
    spec.typeScript:
      - uid: 'office!OfficeExtension.EventHandlers:class'
        name: OfficeExtension.EventHandlers
        fullName: OfficeExtension.EventHandlers
      - name: <
        fullName: <
      - uid: 'visio!Visio.ShapeMouseLeaveEventArgs:interface'
        name: Visio.ShapeMouseLeaveEventArgs
        fullName: Visio.ShapeMouseLeaveEventArgs
      - name: '>'
        fullName: '>'
  - uid: 'visio!Visio.PageCollection:class'
    name: Visio.PageCollection
  - uid: 'visio!Visio.Interfaces.DocumentUpdateData:interface'
    name: Interfaces.DocumentUpdateData
  - uid: 'office!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'visio!Visio.Interfaces.DocumentData:interface'
    name: Visio.Interfaces.DocumentData
  - uid: 'visio!Visio.DocumentView:class'
    name: Visio.DocumentView