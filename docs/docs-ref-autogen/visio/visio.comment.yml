### YamlMime:UniversalReference
ms.openlocfilehash: 384fa8e38732735953e01470e857b14df9bb21e8
ms.sourcegitcommit: 016e17422cf62dc9f1de1809666e9244e41cc1a9
ms.translationtype: MT
ms.contentlocale: pt-BR
ms.lasthandoff: 11/09/2018
ms.locfileid: "26229036"
items:
- uid: visio.Visio.Comment
  summary: >-
    <span data-ttu-id="ef1a5-101">Representa o Comentário.</span><span class="sxs-lookup"><span data-stu-id="ef1a5-101">Represents the Comment.</span></span>


    <span data-ttu-id="ef1a5-102">\[[Conjunto de APIs: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="ef1a5-102">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: Visio.Comment
  fullName: Visio.Comment
  langs:
  - typeScript
  type: class
  extends:
  - OfficeExtension.ClientObject
  package: visio
  children:
  - visio.Visio.Comment.author
  - visio.Visio.Comment.date
  - visio.Visio.Comment.load
  - visio.Visio.Comment.text
  - visio.Visio.Comment.toJSON
- uid: visio.Visio.Comment.author
  summary: >-
    <span data-ttu-id="ef1a5-103">Uma cadeia de caracteres que especifica o nome do autor do comentário.</span><span class="sxs-lookup"><span data-stu-id="ef1a5-103">A string that specifies the name of the author of the comment.</span></span>


    <span data-ttu-id="ef1a5-104">\[[Conjunto de APIs: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="ef1a5-104">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: author
  fullName: author
  langs:
  - typeScript
  type: property
  syntax:
    content: 'author: string;'
    return:
      type:
      - string
- uid: visio.Visio.Comment.date
  summary: >-
    <span data-ttu-id="ef1a5-105">Uma cadeia de caracteres que especifica a data em que o comentário foi criado.</span><span class="sxs-lookup"><span data-stu-id="ef1a5-105">A string that specifies the date when the comment was created.</span></span>


    <span data-ttu-id="ef1a5-106">\[[Conjunto de APIs: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="ef1a5-106">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: date
  fullName: date
  langs:
  - typeScript
  type: property
  syntax:
    content: 'date: string;'
    return:
      type:
      - string
- uid: visio.Visio.Comment.load
  summary: <span data-ttu-id="ef1a5-107">Filas de backup de um comando para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="ef1a5-107">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="ef1a5-108">Você deve chamar "context.sync()" antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="ef1a5-108">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="ef1a5-109">Além dessa assinatura, esse método tem as seguintes assinaturas:</span><span class="sxs-lookup"><span data-stu-id="ef1a5-109">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="ef1a5-110">`load(option?: { select?: string; expand?: string; }): Visio.Comment`-Onde option.select é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades para carregar e options.expand é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades de navegação para carregar.</span><span class="sxs-lookup"><span data-stu-id="ef1a5-110">`load(option?: { select?: string; expand?: string; }): Visio.Comment` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="ef1a5-111">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.Comment`-Só está disponível em tipos de coleção.</span><span class="sxs-lookup"><span data-stu-id="ef1a5-111">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.Comment` - Only available on collection types.</span></span> <span data-ttu-id="ef1a5-112">Ele é semelhante à assinatura anterior.</span><span class="sxs-lookup"><span data-stu-id="ef1a5-112">It is similar to the preceding signature.</span></span> <span data-ttu-id="ef1a5-113">Option.Top Especifica o número máximo de itens que podem ser incluídos no resultado da coleção.</span><span class="sxs-lookup"><span data-stu-id="ef1a5-113">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="ef1a5-114">Option.Skip Especifica o número de itens que devem ser ignorados e não são incluídos no resultado.</span><span class="sxs-lookup"><span data-stu-id="ef1a5-114">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="ef1a5-115">Se option.top for especificado, o conjunto de resultados será iniciado depois de ignorar o número de itens especificado.</span><span class="sxs-lookup"><span data-stu-id="ef1a5-115">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>

    #### <a name="examples"></a><span data-ttu-id="ef1a5-116">Exemplos</span><span class="sxs-lookup"><span data-stu-id="ef1a5-116">Examples</span></span>


    ```javascript

    Visio.run(session, function (ctx) {
        var activePage = ctx.document.getActivePage();
        var shapeName = "Position Belt.41";
        var shape = activePage.shapes.getItem(shapeName);
        var shapecomments= shape.comments;
        shapecomments.load();
        return ctx.sync().then(function () {
            for(var i=0; i<shapecomments.items.length;i++)
            {
                var comment= shapecomments.items[i];
                console.log("comment Author: " + comment.author);
                console.log("Comment Text: " + comment.text);
                console.log("Date " + comment.date);
            }
        });
    }).catch(function(error) {
        console.log("Error: " + error);
        if (error instanceof OfficeExtension.Error) {
            console.log("Debug info: " + JSON.stringify(error.debugInfo));
        }
    });

    ```
  name: load(option)
  fullName: load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Visio.Comment;'
    return:
      type:
      - visio.Visio.Comment
      description: ''
    parameters:
    - id: option
      description: <span data-ttu-id="ef1a5-117">Uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades de carga.</span><span class="sxs-lookup"><span data-stu-id="ef1a5-117">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: visio.Visio.Comment.text
  summary: >-
    <span data-ttu-id="ef1a5-118">Uma cadeia de caracteres que contém o texto do comentário.</span><span class="sxs-lookup"><span data-stu-id="ef1a5-118">A string that contains the comment text.</span></span>


    <span data-ttu-id="ef1a5-119">\[[Conjunto de APIs: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="ef1a5-119">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: text
  fullName: text
  langs:
  - typeScript
  type: property
  syntax:
    content: 'text: string;'
    return:
      type:
      - string
- uid: visio.Visio.Comment.toJSON
  name: toJSON()
  fullName: toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Visio.Interfaces.CommentData;'
    return:
      type:
      - visio.Visio.Interfaces.CommentData
      description: ''
