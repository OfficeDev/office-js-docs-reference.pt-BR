### YamlMime:UniversalReference
items:
  - uid: visio.Visio.HyperlinkCollection
    summary: |-
      <span data-ttu-id="16e38-101">Representa a Coleção de Hiperlinks.</span><span class="sxs-lookup"><span data-stu-id="16e38-101">Represents the Hyperlink Collection.</span></span>

      <span data-ttu-id="16e38-102">\[[Conjunto de APIs: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="16e38-102">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: Visio.HyperlinkCollection
    fullName: Visio.HyperlinkCollection
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: visio
    children:
      - visio.Visio.HyperlinkCollection.context
      - visio.Visio.HyperlinkCollection.getCount
      - visio.Visio.HyperlinkCollection.getItem
      - visio.Visio.HyperlinkCollection.items
      - visio.Visio.HyperlinkCollection.load
      - visio.Visio.HyperlinkCollection.load_1
      - visio.Visio.HyperlinkCollection.load_2
      - visio.Visio.HyperlinkCollection.toJSON
  - uid: visio.Visio.HyperlinkCollection.context
    summary: <span data-ttu-id="16e38-103">O contexto de solicitação associado ao objeto.</span><span class="sxs-lookup"><span data-stu-id="16e38-103">The request context associated with the object.</span></span> <span data-ttu-id="16e38-104">Isso conecta o processo do suplemento ao processo do aplicativo host do Office.</span><span class="sxs-lookup"><span data-stu-id="16e38-104">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: visio.Visio.HyperlinkCollection.getCount
    summary: |-
      <span data-ttu-id="16e38-105">Obtém o número de hiperlinks.</span><span class="sxs-lookup"><span data-stu-id="16e38-105">Gets the number of hyperlinks.</span></span>

      <span data-ttu-id="16e38-106">\[[Conjunto de APIs: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="16e38-106">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - OfficeExtension.ClientResult<number>
        description: ''
  - uid: visio.Visio.HyperlinkCollection.getItem
    summary: |-
      <span data-ttu-id="16e38-107">Obtém um Hiperlink usando sua chave (nome ou Id).</span><span class="sxs-lookup"><span data-stu-id="16e38-107">Gets a Hyperlink using its key (name or Id).</span></span>

      <span data-ttu-id="16e38-108">\[[Conjunto de APIs: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="16e38-108">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: getItem(Key)
    fullName: getItem(Key)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(Key: number | string): Visio.Hyperlink;'
      return:
        type:
          - visio.Visio.Hyperlink
        description: ''
      parameters:
        - id: Key
          description: <span data-ttu-id="16e38-109">A chave é o nome ou índice do Hiperlink a ser recuperado.</span><span class="sxs-lookup"><span data-stu-id="16e38-109">Key is the name or index of the Hyperlink to be retrieved.</span></span>
          type:
            - number | string
  - uid: visio.Visio.HyperlinkCollection.items
    summary: <span data-ttu-id="16e38-110">Obtém os itens filhos carregados nesta coleção.</span><span class="sxs-lookup"><span data-stu-id="16e38-110">Gets the loaded child items in this collection.</span></span>
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Visio.Hyperlink[];'
      return:
        type:
          - 'Visio.Hyperlink[]'
  - uid: visio.Visio.HyperlinkCollection.load
    summary: <span data-ttu-id="16e38-111">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="16e38-111">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="16e38-112">Você deve chamar "context.sync()" antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="16e38-112">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="16e38-113">Além dessa assinatura, este método tem as seguintes assinaturas:</span><span class="sxs-lookup"><span data-stu-id="16e38-113">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="16e38-114">`load(option?: string | string[]): Visio.HyperlinkCollection`-Where Option é uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="16e38-114">`load(option?: string | string[]): Visio.HyperlinkCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="16e38-115">`load(option?: { select?: string; expand?: string; }): Visio.HyperlinkCollection`-Onde Option. Select é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades a serem carregadas, e Options. Expand é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades de navegação a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="16e38-115">`load(option?: { select?: string; expand?: string; }): Visio.HyperlinkCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="16e38-116">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.HyperlinkCollection`– Disponível somente nos tipos de coleção.</span><span class="sxs-lookup"><span data-stu-id="16e38-116">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.HyperlinkCollection` - Only available on collection types.</span></span> <span data-ttu-id="16e38-117">É semelhante à assinatura anterior.</span><span class="sxs-lookup"><span data-stu-id="16e38-117">It is similar to the preceding signature.</span></span> <span data-ttu-id="16e38-118">Option. Top especifica o número máximo de itens de coleta que podem ser incluídos no resultado.</span><span class="sxs-lookup"><span data-stu-id="16e38-118">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="16e38-119">Option. Skip especifica o número de itens que devem ser ignorados e não incluídos no resultado.</span><span class="sxs-lookup"><span data-stu-id="16e38-119">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="16e38-120">Se Option. Top for especificado, o conjunto de resultados será iniciado depois de ignorar o número de itens especificado.</span><span class="sxs-lookup"><span data-stu-id="16e38-120">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>

      #### <a name="examples"></a><span data-ttu-id="16e38-121">Exemplos</span><span class="sxs-lookup"><span data-stu-id="16e38-121">Examples</span></span>

      ```javascript
      Visio.run(session, function (ctx) {
          var activePage = ctx.document.getActivePage();
          var shapeName = "Manager Belt";
          var shape = activePage.shapes.getItem(shapeName);
          var hyperlinks = shape.hyperlinks;
          shapeHyperlinks.load();
              ctx.sync().then(function () {
                  for(var i=0; i<shapeHyperlinks.items.length;i++)
                  {
                      var hyperlink = shapeHyperlinks.items[i];
                      console.log(
                          "Description:"+hyperlink.description +"Address:"+hyperlink.address +"SubAddress:  " + 
                          hyperlink.subAddress);
                  }
              });
      }).catch(function(error) {
          console.log("Error: " + error);
          if (error instanceof OfficeExtension.Error) {
              console.log("Debug info: " + JSON.stringify(error.debugInfo));
          }
      });
      ```
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Visio.Interfaces.HyperlinkCollectionLoadOptions & Visio.Interfaces.CollectionLoadOptions): Visio.HyperlinkCollection;'
      return:
        type:
          - visio.Visio.HyperlinkCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - Visio.Interfaces.HyperlinkCollectionLoadOptions & Visio.Interfaces.CollectionLoadOptions
  - uid: visio.Visio.HyperlinkCollection.load_1
    summary: <span data-ttu-id="16e38-122">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="16e38-122">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="16e38-123">Você deve chamar `context.sync()` antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="16e38-123">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Visio.HyperlinkCollection;'
      return:
        type:
          - visio.Visio.HyperlinkCollection
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="16e38-124">Uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="16e38-124">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: visio.Visio.HyperlinkCollection.load_2
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): Visio.HyperlinkCollection;'
      return:
        type:
          - visio.Visio.HyperlinkCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - office.OfficeExtension.LoadOption
  - uid: visio.Visio.HyperlinkCollection.toJSON
    summary: '<span data-ttu-id="16e38-125">Substitui o método `toJSON()` JavaScript para fornecer uma saída mais útil quando um objeto API é passado para`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="16e38-125">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="16e38-126">.</span><span class="sxs-lookup"><span data-stu-id="16e38-126"></span></span> <span data-ttu-id="16e38-127">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="16e38-127"></span></span><!-- --><span data-ttu-id="16e38-128">, por sua vez, chama `toJSON` o método do objeto que é passado para ele.) Enquanto o objeto `Visio.HyperlinkCollection` original é um objeto API, o `toJSON` método retorna um objeto JavaScript simples (digitado como`Visio.Interfaces.HyperlinkCollectionData`</span><span class="sxs-lookup"><span data-stu-id="16e38-128">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Visio.HyperlinkCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Visio.Interfaces.HyperlinkCollectionData`</span></span><!-- --><span data-ttu-id="16e38-129">) que contém uma matriz de "itens" com cópias superficiais de qualquer propriedade carregada dos itens da coleção.</span><span class="sxs-lookup"><span data-stu-id="16e38-129">) that contains an "items" array with shallow copies of any loaded properties from the collection''s items.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Visio.Interfaces.HyperlinkCollectionData;'
      return:
        type:
          - visio.Visio.Interfaces.HyperlinkCollectionData
        description: ''