### YamlMime:UniversalReference
items:
  - uid: visio.Visio.ShapeDataItemCollection
    summary: |-
      <span data-ttu-id="1eedd-101">Representa o ShapeDataItemCollection de uma determinada Forma.</span><span class="sxs-lookup"><span data-stu-id="1eedd-101">Represents the ShapeDataItemCollection for a given Shape.</span></span>

      <span data-ttu-id="1eedd-102">\[[Conjunto de APIs: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="1eedd-102">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: Visio.ShapeDataItemCollection
    fullName: Visio.ShapeDataItemCollection
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: visio
    children:
      - visio.Visio.ShapeDataItemCollection.context
      - visio.Visio.ShapeDataItemCollection.getCount
      - visio.Visio.ShapeDataItemCollection.getItem
      - visio.Visio.ShapeDataItemCollection.items
      - visio.Visio.ShapeDataItemCollection.load
      - visio.Visio.ShapeDataItemCollection.load_1
      - visio.Visio.ShapeDataItemCollection.load_2
      - visio.Visio.ShapeDataItemCollection.toJSON
  - uid: visio.Visio.ShapeDataItemCollection.context
    summary: <span data-ttu-id="1eedd-103">O contexto de solicitação associado ao objeto.</span><span class="sxs-lookup"><span data-stu-id="1eedd-103">The request context associated with the object.</span></span> <span data-ttu-id="1eedd-104">Isso conecta o processo do suplemento ao processo do aplicativo host do Office.</span><span class="sxs-lookup"><span data-stu-id="1eedd-104">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: visio.Visio.ShapeDataItemCollection.getCount
    summary: |-
      <span data-ttu-id="1eedd-105">Obtém a quantidade de Itens de Dados da Forma.</span><span class="sxs-lookup"><span data-stu-id="1eedd-105">Gets the number of Shape Data Items.</span></span>

      <span data-ttu-id="1eedd-106">\[[Conjunto de APIs: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="1eedd-106">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - OfficeExtension.ClientResult<number>
        description: ''
  - uid: visio.Visio.ShapeDataItemCollection.getItem
    summary: |-
      <span data-ttu-id="1eedd-107">Obtém o ShapeDataItem usando seu nome.</span><span class="sxs-lookup"><span data-stu-id="1eedd-107">Gets the ShapeDataItem using its name.</span></span>

      <span data-ttu-id="1eedd-108">\[[Conjunto de APIs: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="1eedd-108">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: getItem(key)
    fullName: getItem(key)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(key: string): Visio.ShapeDataItem;'
      return:
        type:
          - visio.Visio.ShapeDataItem
        description: ''
      parameters:
        - id: key
          description: <span data-ttu-id="1eedd-109">A chave é o nome do ShapeDataItem a ser recuperado.</span><span class="sxs-lookup"><span data-stu-id="1eedd-109">Key is the name of the ShapeDataItem to be retrieved.</span></span>
          type:
            - string
  - uid: visio.Visio.ShapeDataItemCollection.items
    summary: <span data-ttu-id="1eedd-110">Obtém os itens filhos carregados nesta coleção.</span><span class="sxs-lookup"><span data-stu-id="1eedd-110">Gets the loaded child items in this collection.</span></span>
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Visio.ShapeDataItem[];'
      return:
        type:
          - 'Visio.ShapeDataItem[]'
  - uid: visio.Visio.ShapeDataItemCollection.load
    summary: <span data-ttu-id="1eedd-111">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="1eedd-111">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="1eedd-112">Você deve chamar "context.sync()" antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="1eedd-112">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="1eedd-113">Além dessa assinatura, este método tem as seguintes assinaturas:</span><span class="sxs-lookup"><span data-stu-id="1eedd-113">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="1eedd-114">`load(option?: string | string[]): Visio.ShapeDataItemCollection`-Where Option é uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="1eedd-114">`load(option?: string | string[]): Visio.ShapeDataItemCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="1eedd-115">`load(option?: { select?: string; expand?: string; }): Visio.ShapeDataItemCollection`-Onde Option. Select é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades a serem carregadas, e Options. Expand é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades de navegação a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="1eedd-115">`load(option?: { select?: string; expand?: string; }): Visio.ShapeDataItemCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="1eedd-116">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.ShapeDataItemCollection`– Disponível somente nos tipos de coleção.</span><span class="sxs-lookup"><span data-stu-id="1eedd-116">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.ShapeDataItemCollection` - Only available on collection types.</span></span> <span data-ttu-id="1eedd-117">É semelhante à assinatura anterior.</span><span class="sxs-lookup"><span data-stu-id="1eedd-117">It is similar to the preceding signature.</span></span> <span data-ttu-id="1eedd-118">Option. Top especifica o número máximo de itens de coleta que podem ser incluídos no resultado.</span><span class="sxs-lookup"><span data-stu-id="1eedd-118">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="1eedd-119">Option. Skip especifica o número de itens que devem ser ignorados e não incluídos no resultado.</span><span class="sxs-lookup"><span data-stu-id="1eedd-119">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="1eedd-120">Se Option. Top for especificado, o conjunto de resultados será iniciado depois de ignorar o número de itens especificado.</span><span class="sxs-lookup"><span data-stu-id="1eedd-120">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>

      #### <a name="examples"></a><span data-ttu-id="1eedd-121">Exemplos</span><span class="sxs-lookup"><span data-stu-id="1eedd-121">Examples</span></span>

      ```javascript
      Visio.run(session, function (ctx) {
          var activePage = ctx.document.getActivePage();
          var shape = activePage.shapes.getItem(0);
          var shapeDataItems = shape.shapeDataItems;
          shapeDataItems.load(["label", "value"]);
          return ctx.sync().then(function() {
              for (var i = 0; i < shapeDataItems.items.length; i++) {
                  console.log(shapeDataItems.items[i].label);
                  console.log(shapeDataItems.items[i].value);
              }
          });
      }).catch(function(error) {
          console.log("Error: " + error);
          if (error instanceof OfficeExtension.Error) {
              console.log("Debug info: " + JSON.stringify(error.debugInfo));
          }
      });
      ```
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Visio.Interfaces.ShapeDataItemCollectionLoadOptions & Visio.Interfaces.CollectionLoadOptions): Visio.ShapeDataItemCollection;'
      return:
        type:
          - visio.Visio.ShapeDataItemCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - Visio.Interfaces.ShapeDataItemCollectionLoadOptions & Visio.Interfaces.CollectionLoadOptions
  - uid: visio.Visio.ShapeDataItemCollection.load_1
    summary: <span data-ttu-id="1eedd-122">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="1eedd-122">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="1eedd-123">Você deve chamar `context.sync()` antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="1eedd-123">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Visio.ShapeDataItemCollection;'
      return:
        type:
          - visio.Visio.ShapeDataItemCollection
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="1eedd-124">Uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="1eedd-124">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: visio.Visio.ShapeDataItemCollection.load_2
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): Visio.ShapeDataItemCollection;'
      return:
        type:
          - visio.Visio.ShapeDataItemCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - office.OfficeExtension.LoadOption
  - uid: visio.Visio.ShapeDataItemCollection.toJSON
    summary: '<span data-ttu-id="1eedd-125">Substitui o método `toJSON()` JavaScript para fornecer uma saída mais útil quando um objeto API é passado para`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="1eedd-125">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="1eedd-126">.</span><span class="sxs-lookup"><span data-stu-id="1eedd-126"></span></span> <span data-ttu-id="1eedd-127">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="1eedd-127"></span></span><!-- --><span data-ttu-id="1eedd-128">, por sua vez, chama `toJSON` o método do objeto que é passado para ele.) Enquanto o objeto `Visio.ShapeDataItemCollection` original é um objeto API, o `toJSON` método retorna um objeto JavaScript simples (digitado como`Visio.Interfaces.ShapeDataItemCollectionData`</span><span class="sxs-lookup"><span data-stu-id="1eedd-128">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Visio.ShapeDataItemCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Visio.Interfaces.ShapeDataItemCollectionData`</span></span><!-- --><span data-ttu-id="1eedd-129">) que contém uma matriz de "itens" com cópias superficiais de qualquer propriedade carregada dos itens da coleção.</span><span class="sxs-lookup"><span data-stu-id="1eedd-129">) that contains an "items" array with shallow copies of any loaded properties from the collection''s items.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Visio.Interfaces.ShapeDataItemCollectionData;'
      return:
        type:
          - visio.Visio.Interfaces.ShapeDataItemCollectionData
        description: ''