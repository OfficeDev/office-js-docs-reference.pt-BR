### YamlMime:UniversalReference
items:
  - uid: visio.Visio.ShapeCollection
    summary: |-
      <span data-ttu-id="60309-101">Representa a Coleção de Formas.</span><span class="sxs-lookup"><span data-stu-id="60309-101">Represents the Shape Collection.</span></span>

      <span data-ttu-id="60309-102">\[[Conjunto de APIs: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="60309-102">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: Visio.ShapeCollection
    fullName: Visio.ShapeCollection
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: visio
    children:
      - visio.Visio.ShapeCollection.getCount
      - visio.Visio.ShapeCollection.getItem
      - visio.Visio.ShapeCollection.items
      - visio.Visio.ShapeCollection.load
      - visio.Visio.ShapeCollection.load_1
      - visio.Visio.ShapeCollection.load_2
      - visio.Visio.ShapeCollection.toJSON
  - uid: visio.Visio.ShapeCollection.getCount
    summary: |-
      <span data-ttu-id="60309-103">Obtém a quantidade de Shapes da coleção.</span><span class="sxs-lookup"><span data-stu-id="60309-103">Gets the number of Shapes in the collection.</span></span>

      <span data-ttu-id="60309-104">\[[Conjunto de APIs: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="60309-104">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - OfficeExtension.ClientResult<number>
        description: |-


          #### <a name="examples"></a><span data-ttu-id="60309-105">Exemplos</span><span class="sxs-lookup"><span data-stu-id="60309-105">Examples</span></span>

          ```javascript
          Visio.run(session, function (ctx) {
              var activePage = ctx.document.getActivePage();
              var numShapesActivePage = activePage.shapes.getCount();
              return ctx.sync().then(function () {
                  console.log("Shapes Count: " + numShapesActivePage.value);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: visio.Visio.ShapeCollection.getItem
    summary: |-
      <span data-ttu-id="60309-106">Obtém uma Forma usando sua chave (nome ou Índice).</span><span class="sxs-lookup"><span data-stu-id="60309-106">Gets a Shape using its key (name or Index).</span></span>

      <span data-ttu-id="60309-107">\[[Conjunto de APIs: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="60309-107">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: getItem(key)
    fullName: getItem(key)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(key: number | string): Visio.Shape;'
      return:
        type:
          - Visio.Shape
        description: ''
      parameters:
        - id: key
          description: <span data-ttu-id="60309-108">A chave é o Nome ou Índice do Hiperlink a ser recuperado.</span><span class="sxs-lookup"><span data-stu-id="60309-108">Key is the Name or Index of the shape to be retrieved.</span></span>
          type:
            - number | string
  - uid: visio.Visio.ShapeCollection.items
    summary: <span data-ttu-id="60309-109">Obtém os itens filhos carregados nesta coleção.</span><span class="sxs-lookup"><span data-stu-id="60309-109">Gets the loaded child items in this collection.</span></span>
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Visio.Shape[];'
      return:
        type:
          - 'Visio.Shape[]'
  - uid: visio.Visio.ShapeCollection.load
    summary: <span data-ttu-id="60309-110">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="60309-110">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="60309-111">Você deve chamar "context.sync()" antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="60309-111">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="60309-112">Além dessa assinatura, este método tem as seguintes assinaturas:</span><span class="sxs-lookup"><span data-stu-id="60309-112">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="60309-113">`load(option?: string | string[]): Visio.ShapeCollection`-Where Option é uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="60309-113">`load(option?: string | string[]): Visio.ShapeCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="60309-114">`load(option?: { select?: string; expand?: string; }): Visio.ShapeCollection`-Onde Option. Select é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades a serem carregadas, e Options. Expand é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades de navegação a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="60309-114">`load(option?: { select?: string; expand?: string; }): Visio.ShapeCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="60309-115">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.ShapeCollection`– Disponível somente nos tipos de coleção.</span><span class="sxs-lookup"><span data-stu-id="60309-115">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.ShapeCollection` - Only available on collection types.</span></span> <span data-ttu-id="60309-116">É semelhante à assinatura anterior.</span><span class="sxs-lookup"><span data-stu-id="60309-116">It is similar to the preceding signature.</span></span> <span data-ttu-id="60309-117">Option. Top especifica o número máximo de itens de coleta que podem ser incluídos no resultado.</span><span class="sxs-lookup"><span data-stu-id="60309-117">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="60309-118">Option. Skip especifica o número de itens que devem ser ignorados e não incluídos no resultado.</span><span class="sxs-lookup"><span data-stu-id="60309-118">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="60309-119">Se Option. Top for especificado, o conjunto de resultados será iniciado depois de ignorar o número de itens especificado.</span><span class="sxs-lookup"><span data-stu-id="60309-119">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Visio.Interfaces.ShapeCollectionLoadOptions & Visio.Interfaces.CollectionLoadOptions): Visio.ShapeCollection;'
      return:
        type:
          - Visio.ShapeCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - Visio.Interfaces.ShapeCollectionLoadOptions & Visio.Interfaces.CollectionLoadOptions
  - uid: visio.Visio.ShapeCollection.load_1
    summary: <span data-ttu-id="60309-120">Coloca um comando na fila para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="60309-120">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="60309-121">Você deve chamar `context.sync()` antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="60309-121">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Visio.ShapeCollection;'
      return:
        type:
          - Visio.ShapeCollection
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="60309-122">Uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades a serem carregadas.</span><span class="sxs-lookup"><span data-stu-id="60309-122">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: visio.Visio.ShapeCollection.load_2
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): Visio.ShapeCollection;'
      return:
        type:
          - Visio.ShapeCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - office.OfficeExtension.LoadOption
  - uid: visio.Visio.ShapeCollection.toJSON
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Visio.Interfaces.ShapeCollectionData;'
      return:
        type:
          - Visio.Interfaces.ShapeCollectionData
        description: ''