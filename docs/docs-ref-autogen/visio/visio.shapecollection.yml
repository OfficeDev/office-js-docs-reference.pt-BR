### YamlMime:UniversalReference
ms.openlocfilehash: 54a5c10a2ae2490d5efb31dcecbfe9a176ca2007
ms.sourcegitcommit: d356f1545c328d4b59ce814fcab8191e4231f1dc
ms.translationtype: MT
ms.contentlocale: pt-BR
ms.lasthandoff: 02/13/2019
ms.locfileid: "29972879"
items:
- uid: visio.Visio.ShapeCollection
  summary: >-
    <span data-ttu-id="d3eaa-101">Representa a Coleção de Formas.</span><span class="sxs-lookup"><span data-stu-id="d3eaa-101">Represents the Shape Collection.</span></span>


    <span data-ttu-id="d3eaa-102">\[[Conjunto de APIs: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="d3eaa-102">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: Visio.ShapeCollection
  fullName: Visio.ShapeCollection
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: visio
  children:
  - visio.Visio.ShapeCollection.getCount
  - visio.Visio.ShapeCollection.getItem
  - visio.Visio.ShapeCollection.items
  - visio.Visio.ShapeCollection.load
  - visio.Visio.ShapeCollection.load_1
  - visio.Visio.ShapeCollection.load_2
  - visio.Visio.ShapeCollection.toJSON
- uid: visio.Visio.ShapeCollection.getCount
  summary: >-
    <span data-ttu-id="d3eaa-103">Obtém a quantidade de Shapes da coleção.</span><span class="sxs-lookup"><span data-stu-id="d3eaa-103">Gets the number of Shapes in the collection.</span></span>


    <span data-ttu-id="d3eaa-104">\[[Conjunto de APIs: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="d3eaa-104">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: getCount()
  fullName: getCount()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getCount(): OfficeExtension.ClientResult<number>;'
    return:
      type:
      - OfficeExtension.ClientResult<number>
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"d3eaa-105\">Exemplos</span><span class=\"sxs-lookup\"><span data-stu-id=\"d3eaa-105\">Examples</span></span>\n\n```javascript\nVisio.run(session, function (ctx) {\n    var activePage = ctx.document.getActivePage();\n    var numShapesActivePage = activePage.shapes.getCount();\n    return ctx.sync().then(function () {\n        console.log(\"Shapes Count: \" + numShapesActivePage.value);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: visio.Visio.ShapeCollection.getItem
  summary: >-
    <span data-ttu-id="d3eaa-106">Obtém uma Forma usando sua chave (nome ou Índice).</span><span class="sxs-lookup"><span data-stu-id="d3eaa-106">Gets a Shape using its key (name or Index).</span></span>


    <span data-ttu-id="d3eaa-107">\[[Conjunto de APIs: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="d3eaa-107">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: getItem(key)
  fullName: getItem(key)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItem(key: number | string): Visio.Shape;'
    return:
      type:
      - visio.Visio.Shape
      description: ''
    parameters:
    - id: key
      description: <span data-ttu-id="d3eaa-108">A chave é o Nome ou Índice do Hiperlink a ser recuperado.</span><span class="sxs-lookup"><span data-stu-id="d3eaa-108">Key is the Name or Index of the shape to be retrieved.</span></span>
      type:
      - number | string
- uid: visio.Visio.ShapeCollection.items
  summary: <span data-ttu-id="d3eaa-109">Obtém o filho carregado itens nesta coleção.</span><span class="sxs-lookup"><span data-stu-id="d3eaa-109">Gets the loaded child items in this collection.</span></span>
  name: items
  fullName: items
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly items: Visio.Shape[];'
    return:
      type:
      - Visio.Shape[]
- uid: visio.Visio.ShapeCollection.load
  summary: <span data-ttu-id="d3eaa-110">Filas de backup de um comando para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="d3eaa-110">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="d3eaa-111">Você deve chamar "context.sync()" antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="d3eaa-111">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="d3eaa-112">Além dessa assinatura, esse método tem as seguintes assinaturas:</span><span class="sxs-lookup"><span data-stu-id="d3eaa-112">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="d3eaa-113">`load(option?: string | string[]): Visio.ShapeCollection`-Onde opção é uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades de carga.</span><span class="sxs-lookup"><span data-stu-id="d3eaa-113">`load(option?: string | string[]): Visio.ShapeCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="d3eaa-114">`load(option?: { select?: string; expand?: string; }): Visio.ShapeCollection`-Onde option.select é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades para carregar e options.expand é uma cadeia de caracteres delimitada por vírgula que especifica as propriedades de navegação para carregar.</span><span class="sxs-lookup"><span data-stu-id="d3eaa-114">`load(option?: { select?: string; expand?: string; }): Visio.ShapeCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="d3eaa-115">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.ShapeCollection`-Só está disponível em tipos de coleção.</span><span class="sxs-lookup"><span data-stu-id="d3eaa-115">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.ShapeCollection` - Only available on collection types.</span></span> <span data-ttu-id="d3eaa-116">Ele é semelhante à assinatura anterior.</span><span class="sxs-lookup"><span data-stu-id="d3eaa-116">It is similar to the preceding signature.</span></span> <span data-ttu-id="d3eaa-117">Option.Top Especifica o número máximo de itens que podem ser incluídos no resultado da coleção.</span><span class="sxs-lookup"><span data-stu-id="d3eaa-117">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="d3eaa-118">Option.Skip Especifica o número de itens que devem ser ignorados e não são incluídos no resultado.</span><span class="sxs-lookup"><span data-stu-id="d3eaa-118">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="d3eaa-119">Se option.top for especificado, o conjunto de resultados será iniciado depois de ignorar o número de itens especificado.</span><span class="sxs-lookup"><span data-stu-id="d3eaa-119">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Visio.Interfaces.ShapeCollectionLoadOptions & Visio.Interfaces.CollectionLoadOptions): Visio.ShapeCollection;'
    return:
      type:
      - visio.Visio.ShapeCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - Visio.Interfaces.ShapeCollectionLoadOptions & Visio.Interfaces.CollectionLoadOptions
- uid: visio.Visio.ShapeCollection.load_1
  summary: <span data-ttu-id="d3eaa-120">Filas de backup de um comando para carregar as propriedades especificadas do objeto.</span><span class="sxs-lookup"><span data-stu-id="d3eaa-120">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="d3eaa-121">Você deve chamar `context.sync()` antes de ler as propriedades.</span><span class="sxs-lookup"><span data-stu-id="d3eaa-121">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Visio.ShapeCollection;'
    return:
      type:
      - visio.Visio.ShapeCollection
      description: ''
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="d3eaa-122">Uma cadeia de caracteres delimitada por vírgula ou uma matriz de cadeias de caracteres que especificam as propriedades de carga.</span><span class="sxs-lookup"><span data-stu-id="d3eaa-122">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: visio.Visio.ShapeCollection.load_2
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: OfficeExtension.LoadOption): Visio.ShapeCollection;'
    return:
      type:
      - visio.Visio.ShapeCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - office.OfficeExtension.LoadOption
- uid: visio.Visio.ShapeCollection.toJSON
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Visio.Interfaces.ShapeCollectionData;'
    return:
      type:
      - visio.Visio.Interfaces.ShapeCollectionData
      description: ''
