### YamlMime:TSType
name: PowerPoint.SlideCollection
uid: powerpoint!PowerPoint.SlideCollection:class
package: powerpoint!
fullName: PowerPoint.SlideCollection
summary: >-
  Representa a coleção de slides na apresentação.


  \[[Conjunto de API: PowerPointApi 1.2](/office/dev/add-ins/reference/requirement-sets/powerpoint-api-requirement-sets)\]
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
- name: context
  uid: powerpoint!PowerPoint.SlideCollection#context:member
  package: powerpoint!
  fullName: context
  summary: O contexto de solicitação associado ao objeto. Isso conecta o processo do complemento ao processo do aplicativo host do Office.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'context: RequestContext;'
    return:
      type: <xref uid="powerpoint!PowerPoint.RequestContext:class" />
- name: items
  uid: powerpoint!PowerPoint.SlideCollection#items:member
  package: powerpoint!
  fullName: items
  summary: Obtém os itens filhos carregados nesta coleção.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly items: PowerPoint.Slide[];'
    return:
      type: <xref uid="powerpoint!PowerPoint.Slide:class" />[]
methods:
- name: add(options)
  uid: powerpoint!PowerPoint.SlideCollection#add:member(1)
  package: powerpoint!
  fullName: add(options)
  summary: >-
    Adiciona um novo slide no final da coleção.


    \[[Conjunto de API: PowerPointApi BETA (SOMENTE VISUALIZAÇÃO)](/office/dev/add-ins/reference/requirement-sets/powerpoint-api-requirement-sets)\]
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'add(options?: PowerPoint.AddSlideOptions): void;'
    parameters:
    - id: options
      description: As opções que definem o tema do novo slide.
      type: <xref uid="powerpoint!PowerPoint.AddSlideOptions:interface" />
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>Exemplos\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/powerpoint/preview-apis/add-slides.yaml\nconst chosenMaster = $(\"#master-id\").val() as string;\nconst chosenLayout = $(\"#layout-id\").val() as string;\n\nawait PowerPoint.run(async function(context) {\n  context.presentation.slides.add({\n    slideMasterId: chosenMaster,\n    layoutId: chosenLayout\n  });\n  await context.sync();\n});\n```"
- name: getCount()
  uid: powerpoint!PowerPoint.SlideCollection#getCount:member(1)
  package: powerpoint!
  fullName: getCount()
  summary: >-
    Obtém o número de slides na coleção.


    \[[Conjunto de API: PowerPointApi 1.2](/office/dev/add-ins/reference/requirement-sets/powerpoint-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getCount(): OfficeExtension.ClientResult<number>;'
    return:
      type: <xref uid="office!OfficeExtension.ClientResult:class" />&lt;number&gt;
      description: O número de slides na coleção.
- name: getItem(key)
  uid: powerpoint!PowerPoint.SlideCollection#getItem:member(1)
  package: powerpoint!
  fullName: getItem(key)
  summary: >-
    Obtém um slide usando sua ID exclusiva.


    \[[Conjunto de API: PowerPointApi 1.2](/office/dev/add-ins/reference/requirement-sets/powerpoint-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getItem(key: string): PowerPoint.Slide;'
    parameters:
    - id: key
      description: A ID do slide.
      type: string
    return:
      type: <xref uid="powerpoint!PowerPoint.Slide:class" />
      description: O slide com a ID exclusiva. Se esse slide não existir, será lançado um erro.
- name: getItemAt(index)
  uid: powerpoint!PowerPoint.SlideCollection#getItemAt:member(1)
  package: powerpoint!
  fullName: getItemAt(index)
  summary: >-
    Obtém um slide usando seu índice baseado em zero na coleção. Os slides são armazenados na mesma ordem que são mostrados na apresentação.


    \[[Conjunto de API: PowerPointApi 1.2](/office/dev/add-ins/reference/requirement-sets/powerpoint-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getItemAt(index: number): PowerPoint.Slide;'
    parameters:
    - id: index
      description: O índice do slide na coleção.
      type: number
    return:
      type: <xref uid="powerpoint!PowerPoint.Slide:class" />
      description: O slide no índice determinado. Um erro será lançado se o índice estiver fora do intervalo.
- name: getItemOrNullObject(id)
  uid: powerpoint!PowerPoint.SlideCollection#getItemOrNullObject:member(1)
  package: powerpoint!
  fullName: getItemOrNullObject(id)
  summary: >-
    Obtém um slide usando sua ID exclusiva. Se esse slide não existir, um objeto com uma `isNullObject` propriedade definida como true será retornado. Para obter mais informações, [consulte *OrNullObject methods and properties](https://docs.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties)<!-- -->.


    \[[Conjunto de API: PowerPointApi 1.2](/office/dev/add-ins/reference/requirement-sets/powerpoint-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getItemOrNullObject(id: string): PowerPoint.Slide;'
    parameters:
    - id: id
      description: A ID do slide.
      type: string
    return:
      type: <xref uid="powerpoint!PowerPoint.Slide:class" />
      description: O slide com a ID exclusiva.
- name: load(options)
  uid: powerpoint!PowerPoint.SlideCollection#load:member(1)
  package: powerpoint!
  fullName: load(options)
  summary: Coloca um comando na fila para carregar as propriedades especificadas do objeto. Você deve chamar `context.sync()` antes de ler as propriedades.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(options?: PowerPoint.Interfaces.SlideCollectionLoadOptions & PowerPoint.Interfaces.CollectionLoadOptions): PowerPoint.SlideCollection;'
    parameters:
    - id: options
      description: Fornece opções para quais propriedades do objeto deve ser carregado.
      type: <xref uid="powerpoint!PowerPoint.Interfaces.SlideCollectionLoadOptions:interface" /> & <xref uid="powerpoint!PowerPoint.Interfaces.CollectionLoadOptions:interface" />
    return:
      type: <xref uid="powerpoint!PowerPoint.SlideCollection:class" />
      description: ''
- name: load(propertyNames)
  uid: powerpoint!PowerPoint.SlideCollection#load:member(2)
  package: powerpoint!
  fullName: load(propertyNames)
  summary: Coloca um comando na fila para carregar as propriedades especificadas do objeto. Você deve chamar `context.sync()` antes de ler as propriedades.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): PowerPoint.SlideCollection;'
    parameters:
    - id: propertyNames
      description: Uma cadeia de caracteres delimitada por vírgulas ou uma matriz de cadeias de caracteres que especificam as propriedades a ser carregadas.
      type: string | string[]
    return:
      type: <xref uid="powerpoint!PowerPoint.SlideCollection:class" />
      description: ''
- name: load(propertyNamesAndPaths)
  uid: powerpoint!PowerPoint.SlideCollection#load:member(3)
  package: powerpoint!
  fullName: load(propertyNamesAndPaths)
  summary: Coloca um comando na fila para carregar as propriedades especificadas do objeto. Você deve chamar `context.sync()` antes de ler as propriedades.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNamesAndPaths?: OfficeExtension.LoadOption): PowerPoint.SlideCollection;'
    parameters:
    - id: propertyNamesAndPaths
      description: '`propertyNamesAndPaths.select` é uma cadeia de caracteres delimitada por vírgulas que especifica as propriedades a ser carregadas e é uma cadeia de caracteres delimitada por vírgulas que especifica as propriedades de navegação a `propertyNamesAndPaths.expand` ser carregadas.'
      type: <xref uid="office!OfficeExtension.LoadOption:interface" />
    return:
      type: <xref uid="powerpoint!PowerPoint.SlideCollection:class" />
      description: ''
- name: toJSON()
  uid: powerpoint!PowerPoint.SlideCollection#toJSON:member(1)
  package: powerpoint!
  fullName: toJSON()
  summary: Substitui o método JavaScript `toJSON()` para fornecer uma saída mais útil quando um objeto API é passado para `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, por sua vez, chama `toJSON` o método do objeto que é passado a ele.) Enquanto o objeto original `PowerPoint.SlideCollection` é um objeto API, o método retorna `toJSON` um objeto JavaScript simples (digitado como `PowerPoint.Interfaces.SlideCollectionData`<!-- -->) que contém uma matriz "items" com cópias rasas de quaisquer propriedades carregadas dos itens da coleção.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'toJSON(): PowerPoint.Interfaces.SlideCollectionData;'
    return:
      type: <xref uid="powerpoint!PowerPoint.Interfaces.SlideCollectionData:interface" />
      description: ''
extends: <xref uid="office!OfficeExtension.ClientObject:class" />
metadata:
  ms.openlocfilehash: 4577a34c2b2858fdd385b86722b7bf3886ad9c3c
  ms.sourcegitcommit: 7a78c85d4a5378180c50442becb98dd816065c5c
  ms.translationtype: MT
  ms.contentlocale: pt-BR
  ms.lasthandoff: 03/10/2021
  ms.locfileid: "50607596"
